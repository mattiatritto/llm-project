{
    "0": "SELECT MAX(CAST((frpm.Free Meal Count (K-12)) AS REAL) / CAST((frpm.Enrollment (K-12)) AS REAL)) AS max_eligible_free_rate FROM frpm WHERE frpm.County Name = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT CDSCode, Percent (%) Eligible Free (Ages 5-17) FROM frpm WHERE School Type = 'Continuation' ORDER BY Percent (%) Eligible Free (Ages 5-17) ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT Zip FROM schools WHERE County = 'Fresno County Office of Education' AND Charter = 1;\t----- bird -----\tcalifornia_schools",
    "3": "SELECT MailStreet FROM schools WHERE CDSCode = (SELECT CDSCode FROM frpm WHERE Educational_Option_Type = 'K-12' GROUP BY CDSCode ORDER BY MAX(FRPM_Count_K_12) DESC LIMIT 1);\t----- bird -----\tcalifornia_schools",
    "4": "SELECT Phone FROM schools WHERE Charter = 1 AND OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Virtual = 'F' AND satscores.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.School, s.County, s.District, s.Street, s.City, s.Zip, s.State, s.Phone, s.Website, s.LastUpdate FROM (frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.NumTstTakr > 500) JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM ( SELECT f.CDSCode, COUNT(*) AS NumTstTakr FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE s.AvgScrMath > 1500 GROUP BY f.CDSCode ORDER BY NumTstTakr DESC LIMIT 1 ) AS subquery JOIN schools s ON subquery.CDSCode = s.CDSCode;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT COUNT(s.NumTstTakr) AS num_sat_test_takers FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.Percent(%) Eligible FRPM (K-12) = ( SELECT MAX(f2.Percent(%) Eligible FRPM (K-12)) FROM frpm f2 );\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT frpm.CDSCode) FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 560 AND frpm.CDSCode = (SELECT CDSCode FROM schools WHERE Charter = 1);\t----- bird -----\tcalifornia_schools",
    "10": "SELECT f.FRPM_Count_Ages_5_17 FROM ( SELECT cds, AVG(AvgScrRead) AS avg_read_score FROM satscores WHERE rtype = 'R' GROUP BY cds ORDER BY avg_read_score DESC LIMIT 1 ) AS highest_read_score JOIN frpm AS f ON highest_read_score.cds = f.CDSCode WHERE f.High_Grade = '12'\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM frpm WHERE (Enrollment (K-12) + Enrollment (Ages 5-17)) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(frpm.Percent (%) Eligible Free (Ages 5-17)) AS highest_eligible_free_rate FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite > 0.3 * satscores.NumTstTakr;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE (satscores.NumGE1500 / satscores.NumTstTakr) DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT NCESSchool, Enrollment (Ages 5-17) FROM schools ORDER BY Enrollment (Ages 5-17) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT dname, AVG(AvgScrRead) AS avg_reading_score FROM satscores WHERE StatusType = 'Active' GROUP BY dname ORDER BY avg_reading_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT f.CDSCode, AVG(s.AvgScrWrite) AS avg_write_score FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE s.AvgScrWrite > 499 GROUP BY f.CDSCode ORDER BY avg_write_score DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.District Type = 'Directly Funded' AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM schools s JOIN (SELECT cds, AVG(AvgScrMath) AS avg_math_score FROM satscores GROUP BY cds) t ON s.CDSCode = t.cds ORDER BY t.avg_math_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND LowGrade = 9 AND HighGrade = 12;\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND \"Free Meal Count (K-12)\" > 500 AND \"Free Meal Count (K-12)\" < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, COUNT(ss.NumTstTakr) AS num_test_takers FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE s.County = 'Contra Costa' GROUP BY s.CDSCode ORDER BY num_test_takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "and\t----- bird -----\tcalifornia_schools",
    "24": "SELECT frpm.SchoolName FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.Percent (%) Eligible Free (K-12) > 0.1 AND satscores.NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.FundingType FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE f.County = 'Riverside' AND ss.AvgScrMath > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.School, CONCAT(s.Street, ', ', s.City, ', ', s.State, ', ', s.Zip) AS FullAddress FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE frpm.CountyName = 'Monterey' AND frpm.High Grade = '12' AND frpm.Free Meal Count (Ages 5-17) > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.Phone, AVG(ss.AvgScrWrite) AS avg_write_score FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01' GROUP BY s.School, s.Phone HAVING COUNT(DISTINCT ss.rtype) > 0;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.School, s.DOC, s.DOCType, (f.Enrollment_K_12 - f.Enrollment_Ages_5_17) AS Enrollment_Difference FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.FundingType = 'Locally Funded' GROUP BY s.School, s.DOC, s.DOCType HAVING (f.Enrollment_K_12 - f.Enrollment_Ages_5_17) > (SELECT AVG(f.Enrollment_K_12 - f.Enrollment_Ages_5_17) FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.FundingType = 'Locally Funded')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MAX(OpenDate) AS max_open_date FROM schools WHERE StatusType = 'K-12' AND enroll12 = (SELECT MAX(enroll12) FROM schools WHERE StatusType = 'K-12');\t----- bird -----\tcalifornia_schools",
    "30": "SELECT schools.City, SUM(frpm.Enrollment (K-12)) AS total_enrollment FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.Low Grade <= 12 AND frpm.High Grade >= 1 GROUP BY schools.City ORDER BY total_enrollment ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT f.CDSCode, f.Enrollment (K-12), f.Free Meal Count (K-12), (f.Free Meal Count (K-12) / f.Enrollment (K-12)) AS EligibleFreeRate FROM frpm f ORDER BY f.Enrollment (K-12) DESC LIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT s.School, (f.FRPM_Count_K_12 / f.Enrollment_K_12) AS eligible_free_reduced_meal_rate FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.EdOpsCode = '66' GROUP BY s.School ORDER BY eligible_free_reduced_meal_rate DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT schools.Website, schools.School FROM schools JOIN (SELECT CDSCode FROM frpm WHERE FreeMealCount (Ages 5-17) BETWEEN 1900 AND 2000) AS filtered_frpm ON schools.CDSCode = filtered_frpm.CDSCode\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (f.FreeMealCount(Ages5-17) / f.Enrollment(Ages5-17)) AS free_rate FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.AdmFirstName1 = 'Kacey' AND s.AdmLastName1 = 'Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.CharterSchool(Y/N) = 1 AND f.Enrollment(K-12) = (SELECT MIN(f2.Enrollment(K-12)) FROM frpm f2 WHERE f2.CharterSchool(Y/N) = 1)\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.sname, schools.AdmFName1, schools.AdmLName1, schools.AdmEmail1 FROM (SELECT sname, COUNT(*) AS student_count FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE satscores.AvgScrMath >= 1500 GROUP BY sname ORDER BY student_count DESC LIMIT 1) AS subquery JOIN schools ON subquery.sname = schools.sname;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds ORDER BY (ss.NumGE1500::real / ss.NumTstTakr::real) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT schools.Website FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Los Angeles' AND satscores.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(s.NumTstTakr) FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND s.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT schools.Phone FROM schools INNER JOIN (SELECT cds, AVG(AvgScrRead) AS avg_read_score FROM satscores WHERE District = 'Fresno Unified' GROUP BY cds ORDER BY avg_read_score LIMIT 1) AS lowest_read_score ON schools.CDSCode = lowest_read_score.cds;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School FROM ( SELECT f.County, AVG(f.AvgScrRead) AS avg_reading_score FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Virtual = 'F' GROUP BY f.County ORDER BY avg_reading_score DESC LIMIT 5 ) AS top_counties JOIN schools s ON top_counties.County = s.County AND s.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.EducationalOptionType, s.SchoolName FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode ORDER BY AVG(ss.AvgScrMath) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT s.County, AVG(ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite) / 3 AS avg_score FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode HAVING avg_score = (SELECT MIN(avg_score) FROM (SELECT s.CDSCode, AVG(ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite) / 3 AS avg_score FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode) AS subquery) ORDER BY avg_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT AVG(s.AvgScrWrite) AS avg_writing_score FROM satscores s JOIN ( SELECT cds, COUNT(*) AS num_test_takers FROM satscores WHERE (AvgScrRead + AvgScrMath + AvgScrWrite) >= 1500 GROUP BY cds ORDER BY num_test_takers DESC LIMIT 1 ) t ON s.cds = t.cds WHERE s.cds = t.cds;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.School, AVG(ss.AvgScrWrite) AS avg_writing_score FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE s.AdmLName1 = 'Ulrich' GROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT School, SUM(enroll12) AS total_enroll12 FROM schools WHERE DOC = 31 GROUP BY School ORDER BY total_enroll12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT MONTH(OpenDate) AS Month, AVG(COUNT(*)) AS AvgSchools FROM schools WHERE County = 'Alameda' AND DOC = 52 AND YEAR(OpenDate) = 1980 GROUP BY Month;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(CASE WHEN \"District Type\" = 'Unified School District' THEN 1 END) AS unif_schools, COUNT(CASE WHEN \"District Type\" = 'Elementary School District' THEN 1 END) AS elem_schools, COUNT(CASE WHEN \"District Type\" = 'Unified School District' THEN 1 END) / COUNT(CASE WHEN \"District Type\" = 'Elementary School District' THEN 1 END) AS ratio FROM \"frpm\" WHERE \"County Name\" = 'Orange County' AND \"District Type\" IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.County, s.School, s.ClosedDate FROM schools s WHERE s.Closed = 1 GROUP BY s.County ORDER BY s.ClosedDate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT sname, MailStreet FROM (SELECT sname, AvgScrMath, ROW_NUMBER() OVER (ORDER BY AvgScrMath DESC) as rn FROM satscores) WHERE rn = 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT f.School, s.MailStreet FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE s.rtype = 'R' GROUP BY f.CDSCode ORDER BY AVG(s.AvgScrRead) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM (SELECT * FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE (AvgScrRead + AvgScrMath + AvgScrWrite) >= 1500 AND MailCity = 'Lakeport')\t----- bird -----\tcalifornia_schools",
    "53": "SELECT SUM(s.NumTstTakr) FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.MailCity = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT CDSCode, MailZip, AdmFName1, AdmLName1, AdmEmail1 FROM schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(DISTINCT CASE WHEN \"County\" = 'Colusa' THEN \"CDSCode\" END) AS colusa_count, COUNT(DISTINCT CASE WHEN \"County\" = 'Humboldt' THEN \"CDSCode\" END) AS humboldt_count, COUNT(DISTINCT CASE WHEN \"County\" = 'Colusa' THEN \"CDSCode\" END) / COUNT(DISTINCT CASE WHEN \"County\" = 'Humboldt' THEN \"CDSCode\" END) AS ratio FROM schools WHERE \"MailState\" = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE MailState = 'California' AND StatusType = 'Active' AND City = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext FROM schools s JOIN ( SELECT f.CDSCode, AVG(ss.AvgScrWrite) AS AvgWriteScore FROM frpm f JOIN satscores ss ON f.CDSCode = ss.cds GROUP BY f.CDSCode ORDER BY AvgWriteScore DESC LIMIT 1 OFFSET 332 ) sub ON s.CDSCode = sub.CDSCode;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext FROM schools WHERE Zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT schools.Website FROM schools WHERE (schools.AdmFName1 = 'Mike' AND schools.AdmLName1 = 'Larson') OR (schools.AdmFName2 = 'Dante' AND schools.AdmLName2 = 'Alvarez')\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1 AND County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND City = 'Hickman' AND DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND County = 'Los Angeles' AND (Free Meal Count (K-12) * 100.0 / Enrollment (K-12)) < 0.18;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.School, s.City, CONCAT(a.AdmFName1,'', a.AdmLName1) AS Admin1, CONCAT(a.AdmFName2,'', a.AdmLName2) AS Admin2, CONCAT(a.AdmFName3,'', a.AdmLName3) AS Admin3 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Charter = 1 AND f.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE MailCity = 'Hickman' AND CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN FundingType = 'Local' THEN 1 END) / COUNT(*)) * 100 AS ratio FROM schools WHERE County = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT CDSCode) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "It is not possible to generate a valid SQLite statement to answer this question with the given schema.\t----- bird -----\tcalifornia_schools",
    "68": "SELECT COUNT(*) AS closure_count, County FROM schools WHERE OpenDate < '1990-01-01' AND SOC = 11 AND ClosedDate IS NOT NULL GROUP BY County ORDER BY closure_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT NCESDist FROM schools WHERE SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM frpm WHERE \"County Name\" = 'Alpine' AND (\"2013-14 CALPADS Fall 1 Certification Status\" = 1 OR \"2013-14 CALPADS Fall 1 Certification Status\" = 0);\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DistrictCode FROM schools WHERE City = 'Fresno' AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT frpm.Enrollment (Ages 5-17) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.School = 'State Special School' AND schools.City = 'Fremont' AND frpm.Academic Year = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT \"FRPM Count (Ages 5-17)\" FROM \"frpm\" WHERE \"School Name\" = 'Youth Authority School' AND \"MailStreet\" = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT LowGrade FROM schools WHERE NCESDist = '0613360' AND EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT schools.SchoolName FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.CountyCode = 37 AND frpm.EducationalOptionType = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.County = 'Merced' AND f.Educational Option Type = 'Lunch Provision 2' AND f.Low Grade = '9' AND f.High Grade = '12' AND s.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.SchoolName, f.LowGrade, f.HighGrade, s.Percent_Eligible_FRPM_Ages_5_17 FROM schools AS s JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND f.LowGrade = 'K' AND f.HighGrade = '9'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT grade_span, COUNT(*) AS count FROM (SELECT CONCAT(Low_Grade, '-', High_Grade) AS grade_span FROM schools WHERE City = 'Adelanto') GROUP BY grade_span ORDER BY count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT County, COUNT(*) AS school_count FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') GROUP BY County ORDER BY school_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT CDSCode, Latitude FROM schools ORDER BY Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT City, MIN(LowGrade) AS LowestGrade FROM schools WHERE State = 'CA' ORDER BY Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT CDSCode, MAX(Longitude) AS max_longitude FROM schools GROUP BY CDSCode;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT s.City) AS num_cities, s.City, COUNT(s.CDSCode) AS num_schools FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Magnet = 1 AND f.LowGrade = 'K' AND f.HighGrade = '8' AND f.NSLP_Provision_Status = 'Multiple Provision Types' GROUP BY s.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT District, AdmFName1, COUNT(*) AS popularity FROM schools GROUP BY District, AdmFName1 ORDER BY popularity DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT DistrictCode, (FreeMealCount(K-12) / Enrollment(K-12)) * 100 AS Percent_Eligible_Free_K_12 FROM frpm;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT f.AdmLName3, f.District, f.County, s.School FROM schools f JOIN frpm s ON f.CDSCode = s.CDSCode WHERE f.CharterNum = '40'\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54);\t----- bird -----\tcalifornia_schools",
    "88": "SELECT COALESCE(s.AdmEmail1, s.AdmEmail2, s.AdmEmail3) AS admin_email FROM ( SELECT f.CDSCode, COUNT(s.NumTstTakr) AS num_test_takers FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE s.AvgScrRead >= 1500 AND s.AvgScrMath >= 1500 AND s.AvgScrWrite >= 1500 GROUP BY f.CDSCode ORDER BY num_test_takers DESC LIMIT 1 ) AS subquery JOIN schools s ON subquery.CDSCode = s.CDSCode;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM district d JOIN account a ON d.district_id = a.district_id WHERE d.A2 = 'Prague' AND a.account_id IN (SELECT account_id FROM loan);\t----- bird -----\tfinancial",
    "91": "SELECT AVG(CASE WHEN \"A13\" = 'unemployed' THEN 100 ELSE 0 END) - AVG(CASE WHEN \"A12\" = 'unemployed' THEN 100 ELSE 0 END) AS difference FROM district WHERE \"A12\" IS NOT NULL AND \"A13\" IS NOT NULL;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district.district_id) FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F' AND district.A11 BETWEEN 6000 AND 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A3 = 'North Bohemia') AND A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND d.A11 = (SELECT MIN(A11) FROM district)\t----- bird -----\tfinancial",
    "95": "-- Step 1: Join the 'client' and 'district' tables to get the average salary (A11) for each client -- Step 2: Join the result with the 'account' table to get the account numbers -- Step 3: Find the minimum birth_date to identify the youngest client -- Step 4: Filter the results to only include the youngest client with the highest average salary SELECT a.account_id FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND d.A11 = (SELECT MAX(A11) FROM ( SELECT c.district_id, AVG(c.salary) AS A11 FROM client c JOIN district d ON c.district_id = d.district_id GROUP BY c.district_id ))\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'POPLATEK TYDNE' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT client_id FROM client JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'POPLATEK PO OBRATU' AND disp.type = 'Disponent';\t----- bird -----\tfinancial",
    "98": "SELECT account_id, frequency FROM account JOIN loan ON account.account_id = loan.account_id WHERE YEAR(date) = 1997 AND status = 'approved' GROUP BY account_id ORDER BY MIN(amount) ASC LIMIT 1; SELECT frequency FROM account JOIN loan ON account.account_id = loan.account_id WHERE YEAR(date) = 1997 AND status = 'approved' GROUP BY account_id ORDER BY MIN(amount) ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT account_id, MAX(amount) AS max_amount FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration > 12 AND YEAR(date) = 1993 GROUP BY account_id HAVING max_amount = (SELECT MAX(amount) FROM ( SELECT account_id, MAX(amount) AS max_amount FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration > 12 AND YEAR(date) = 1993 GROUP BY account_id ));\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND birth_date < '1950-01-01' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Sokolov');\t----- bird -----\tfinancial",
    "101": "SELECT account_id, MIN(date) AS earliest_date FROM trans WHERE YEAR(date) = 1995 GROUP BY account_id HAVING COUNT(*) > 1;\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE date < '1997-01-01' AND balance > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM card WHERE issued = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT MIN(date) FROM account WHERE \"amount\" = 840 AND \"k_symbol\" = 'USD' AND \"date\" = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25' AND status = 'approved';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) FROM trans JOIN client ON trans.account = client.client_id JOIN card ON client.client_id = card.client_id WHERE STRFTIME('%Y-%m-%d', card.issued) = '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT gender FROM client WHERE district_id = (SELECT district_id FROM district ORDER BY A11 DESC LIMIT 1) AND client_id = (SELECT client_id FROM disp ORDER BY birth_date ASC LIMIT 1);\t----- bird -----\tfinancial",
    "108": "SELECT * FROM ( SELECT account_id FROM account WHERE district_id = ( SELECT district_id FROM client WHERE client_id = ( SELECT client_id FROM loan WHERE amount = (SELECT MAX(amount) FROM loan) ) ) ) AS subquery ORDER BY date LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE name = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT disp_id FROM trans WHERE type = 'debit' AND amount = 5100 AND date = '1998-09-02' AND operation = 'transfer';\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND YEAR(date) = 1996;\t----- bird -----\tfinancial",
    "112": "SELECT district_id FROM client WHERE gender = 'F' AND birth_date = '1976-01-29' AND district_id = (SELECT district_id FROM account WHERE client_id = (SELECT client_id FROM client WHERE gender = 'F' AND birth_date = '1976-01-29'));\t----- bird -----\tfinancial",
    "113": "SELECT birth_date FROM client WHERE client_id IN (SELECT account_id FROM loan WHERE amount = 98832 AND date = '1996-01-03');\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague') ORDER BY client_id ASC LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN gender = 'M' THEN 1 END) / COUNT(*)) * 100 AS male_percentage FROM client WHERE district_id = (SELECT district_id FROM district WHERE A4 = (SELECT MAX(A4) FROM district WHERE A2 = 'South Bohemia'));\t----- bird -----\tfinancial",
    "116": "SELECT ( ( (SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ) AND date = '1998-12-27') ) / (SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ) AND date = '1998-12-27') ) * 100 AS increase_rate;\t----- bird -----\tfinancial",
    "117": "SELECT 100.0 * SUM(CASE WHEN \"status\" = 'A' THEN \"amount\" ELSE 0 END) / SUM(\"amount\") AS percentage_fully_paid FROM loan;\t----- bird -----\tfinancial",
    "118": "SELECT (COUNT(*) FILTER (WHERE amount < 100000 AND status = 'C')) * 100.0 / COUNT(*) AS percentage FROM loan;\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.district_name, d.district_region FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE YEAR(t.date) = 1993 AND t.date > a.date GROUP BY a.account_id, d.district_name, d.district_region;\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, a.frequency FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 LIKE 'east Bohemia%' AND a.date BETWEEN '1995-01-01' AND '2000-12-31' GROUP BY a.account_id, a.frequency;\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Prachatice');\t----- bird -----\tfinancial",
    "122": "SELECT district_id FROM loan WHERE loan_id = 4990; SELECT A2 FROM district WHERE district_id = (SELECT district_id FROM loan WHERE loan_id = 4990); SELECT A3 FROM district WHERE district_id = (SELECT district_id FROM loan WHERE loan_id = 4990);\t----- bird -----\tfinancial",
    "123": "SELECT a.account_id, d.district_id, d.A2 FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan.loan_id, district.A2 AS district, district.A11 AS average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE loan.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT a.district_id, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_increment_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE l.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT (COUNT(*) FILTER (WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin')) / COUNT(*)) * 100 AS percentage FROM account WHERE date = '1993-01-01';\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(*) AS female_count FROM account JOIN client ON account.district_id = client.district_id WHERE client.gender = 'F' GROUP BY district_id ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT A2, SUM(amount) AS total_withdrawals FROM trans WHERE type = 'VYDAJ' AND date LIKE '1996-01%' GROUP BY A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(*) FROM account JOIN district ON account.district_id = district.district_id LEFT JOIN card ON account.account_id = card.account_id WHERE district.A3 = 'South Bohemia' AND card.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT district_id, SUM(amount) AS total_active_loan FROM loan WHERE status = 'C' GROUP BY district_id ORDER BY total_active_loan DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) FROM loan JOIN client ON loan.account_id = client.district_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT d.district_name, d.branch_location, MAX(d.A13) AS max_unemployment_rate FROM ( SELECT district_id, A13 FROM district WHERE YEAR(date) = 1996 ) AS filtered_districts JOIN district d ON filtered_districts.district_id = d.district_id GROUP BY d.district_name, d.branch_location;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A16 = (SELECT MAX(A16) FROM district))\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT account_id) FROM trans WHERE type = 'VYBER KARTOU' AND frequency = 'POPLATEK MESICNE' AND balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan WHERE amount >= 250000 AND status = 'approved' AND date BETWEEN '1995-01-01' AND '1997-12-31' AND frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(*) FROM account WHERE frequency = 'C' AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT district_id, COUNT(*) AS crimes_count FROM account WHERE YEAR(date) = 1995 GROUP BY district_id ORDER BY crimes_count DESC LIMIT 1 OFFSET 1;\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER' AND type = 'high-level';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT district_id, SUM(amount) AS total_transactions FROM trans WHERE STRFTIME('%Y', date) = '1997' AND amount > 10000 GROUP BY district_id HAVING total_transactions > 0;\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT account_id FROM order WHERE k_symbol = 'SIPO' AND bank_to = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM account JOIN disp ON account.account_id = disp.account_id JOIN card ON disp.card_id = card.card_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT EXTRACT(MONTH FROM date) AS month, AVG(amount) AS avg_amount FROM trans WHERE type = 'VYBER KARTOU' AND date LIKE '2021-%' GROUP BY month;\t----- bird -----\tfinancial",
    "145": "SELECT account_id FROM trans WHERE type = 'VYBER KARTOU' AND date LIKE '1998-%' GROUP BY account_id HAVING SUM(amount) < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date LIKE '1998-%')\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT a.account_id, c.client_id, c.gender FROM account a JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F' AND t.type = 'credit' AND l.status = 'active' GROUP BY a.account_id, c.client_id, c.gender HAVING COUNT(DISTINCT t.type) > 1 AND COUNT(DISTINCT l.loan_id) > 0;\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A3 ='south Bohemia');\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Tabor') AND frequency = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT account.type FROM account LEFT JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON district.district_id = loan.district_id WHERE loan.district_id IS NULL AND district.A11 BETWEEN 8000 AND 9000;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account_id) FROM trans WHERE bank = 'AB' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'North Bohemia');\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account JOIN trans ON account.account_id = trans.account_id WHERE type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(district.A15) FROM district INNER JOIN account ON district.district_id = account.district_id WHERE district.A15 > 4000 AND YEAR(account.date) >= 1997;\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM account WHERE type = 'OWNER' AND EXISTS (SELECT 1 FROM card WHERE card.account_id = account.account_id AND card.type = 'classic');\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha');\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(*) FILTER (WHERE type = 'Gold' AND issued < '1998-01-01')) * 100.0 / COUNT(*) FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT client_id, MAX(amount) AS max_loan_amount FROM loan GROUP BY client_id ORDER BY max_loan_amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532);\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id IN (SELECT account_id FROM order WHERE order_id = 33333);\t----- bird -----\tfinancial",
    "159": "SELECT trans.trans_id, trans.date, trans.type, trans.operation, trans.amount, trans.balance, trans.k_symbol, trans.bank, trans.account, client.gender, client.birth_date FROM trans JOIN client ON trans.client_id = client.client_id WHERE client.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND account_id IN (SELECT account_id FROM loan WHERE amount < 200000);\t----- bird -----\tfinancial",
    "161": "SELECT type FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE disp.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = 3541);\t----- bird -----\tfinancial",
    "163": "SELECT district_id, COUNT(*) AS num_accounts FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district_id ORDER BY num_accounts DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client_id FROM order WHERE order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account, k_symbol, bank, account FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE district_name = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.card_id = card.card_id WHERE card.type = 'junior' AND date > '1996-12-31' GROUP BY client_id;\t----- bird -----\tfinancial",
    "168": "SELECT (COUNT(*) FILTER (WHERE gender = 'F')) * 100.0 / COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000);\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(CASE WHEN YEAR(date) = 1997 THEN amount ELSE 0 END) - SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN YEAR(date) = 1996 THEN amount ELSE 0 END) AS growth_rate FROM loan JOIN client ON loan.account_id = client.client_id WHERE client.gender = 'M' AND YEAR(loan.date) IN (1996, 1997);\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-12-31';\t----- bird -----\tfinancial",
    "171": "SELECT (SUM(CASE WHEN A3 = 'East Bohemia' THEN A16 ELSE 0 END) - SUM(CASE WHEN A3 = 'North Bohemia' THEN A16 ELSE 0 END)) AS difference FROM district WHERE A16 IS NOT NULL AND A16!= '' AND A16!= '0' AND A16!= 'NULL' AND A16!= 'NaN' AND A16!= 'N/A' AND A16!= 'n/a' AND A16!= 'N/A' AND A16!= 'n/a' AND A16!= 'NaN' AND A16!= 'NULL' AND A16!= '' AND A16!= '0' AND STRFTIME('%Y', date) = '1996';\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT disp.disp_id) AS disponent_dispositions, COUNT(DISTINCT account.account_id) AS owner_dispositions FROM disp JOIN account ON disp.account_id = account.account_id WHERE account.account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "-- Step 1: Identify the table and columns needed to answer the first part of the question -- The 'account' table contains the 'account_id' and 'frequency' columns, which can be used to determine how often account number 3 requests an account statement. -- Step 2: Filter the 'account' table to only include rows where 'account_id' is 3. -- Step 3: Group the filtered results by 'frequency' to count the number of times each frequency appears. -- Step 4: Select the 'frequency' with the highest count (i.e., the most frequent request) using the MAX function. -- Step 5: Format the output to display the frequency as 'How often does account number 3 request an account statement to be released?'. SELECT MAX(frequency) AS 'How often does account number 3 request an account statement to be released?' FROM account WHERE account_id = 3 GROUP BY frequency; -- Step 1: Identify the table and columns needed to answer the second part of the question -- The 'trans' table contains the 'trans_id', 'account_id', 'operation', and 'amount' columns, which can be used to determine the aim of debiting 3539 in total. -- Step 2: Filter the 'trans' table to only include rows where 'account_id' is 3 and 'operation' is 'debit'. -- Step 3: Sum the 'amount' column to find the total debit amount. -- Step 4: Format the output to display the total debit amount as 'What was the aim of debiting 3539 in total?'. SELECT SUM(amount) AS 'What was the aim of debiting 3539 in total?' FROM trans WHERE account_id = 3 AND operation = 'debit';\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = (SELECT client_id FROM disp WHERE account_id = 130);\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS debt_amount, status FROM loan WHERE account_id IN (SELECT client_id FROM client WHERE client_id = 992)\t----- bird -----\tfinancial",
    "177": "SELECT SUM(amount) AS total_amount, gender FROM client INNER JOIN account ON client.district_id = account.district_id WHERE client.client_id = 4 AND trans_id = 851;\t----- bird -----\tfinancial",
    "178": "SELECT type FROM card WHERE client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE client_id = 617 AND YEAR(date) = 1998;\t----- bird -----\tfinancial",
    "180": "SELECT client_id FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'East Bohemia');\t----- bird -----\tfinancial",
    "181": "SELECT client_id FROM client WHERE gender = 'F' ORDER BY amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND client_id IN (SELECT client_id FROM trans WHERE amount > 4000 AND type = 'home');\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE district_name = 'Beroun') AND date > '1996-12-31';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ca ON d.card_id = ca.card_id WHERE c.gender = 'F' AND ca.type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT 100.0 * COUNT(CASE WHEN gender = 'F' THEN 1 END) / COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(CASE WHEN gender = 'M' THEN 1 END) / COUNT(*)) * 100 AS percentage FROM client c JOIN trans t ON c.client_id = t.client_id WHERE t.type = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN account a ON c.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type ='statement' AND t.frequency = 'POPLATEK TYDNE' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT account_id, MIN(amount) AS min_amount FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration > 24 AND YEAR(date) < 1997 GROUP BY account_id HAVING COUNT(loan_id) = 1;\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id FROM client c JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, AVG(a.amount) ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client WHERE birth_date = '1920-01-01' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan WHERE duration = 24 AND status = 'PRE-PAYMENT' AND EXISTS (SELECT 1 FROM account WHERE account.account_id = loan.account_id AND EXISTS (SELECT 1 FROM trans WHERE trans.account_id = account.account_id AND trans.frequency = 'POPLATEK TYDNE'));\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) FROM loan WHERE status = 'C' AND k_symbol = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT district_id FROM client WHERE client_id IN (SELECT account_id FROM account WHERE account_id IN (SELECT account_id FROM loan UNION SELECT account_id FROM order));\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, FLOOR(DATEDIFF(CURDATE(), c.birth_date) / 365) AS age FROM client c JOIN disp d ON c.client_id = d.client_id WHERE d.type = 'OWNER' AND c.gender = 'M' AND c.gender = 'F';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(*) AS popularity FROM bond GROUP BY bond_type;\t----- bird -----\ttoxicology",
    "196": "SELECT m.molecule_id, COUNT(a.atom_id) AS chlorine_atoms_count FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND a.element = 'cl' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(oxygen_count) FROM (SELECT COUNT(*) AS oxygen_count FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' GROUP BY atom.molecule_id) AS subquery;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(bond_count) FROM (SELECT COUNT(atom_id) AS bond_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND bond.bond_type = '-' GROUP BY molecule.molecule_id)\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom WHERE element = 'na' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "200": "SELECT molecule_id FROM bond WHERE bond_type = '#' INTERSECT SELECT molecule_id FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT DIVIDE(SUM(CASE WHEN element = 'c' THEN 1 ELSE 0 END), COUNT(*)) AS carbon_percentage FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '=' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'double-bond molecules');\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM \"molecule\" WHERE \"molecule_id\" BETWEEN 'TR000' AND 'TR099' AND \"label\" = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT DISTINCT m.molecule_id FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '=');\t----- bird -----\ttoxicology",
    "208": "SELECT MAX(COUNT(label)) AS max_popularity FROM atom WHERE element = 'h' GROUP BY label;\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM connected AS c1 JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id WHERE a1.element = 'cl' OR a2.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT connected.atom_id, connected.atom_id2 FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT atom.atom_id, atom2.atom_id AS atom_id2, bond.bond_id FROM connected JOIN atom AS atom ON connected.atom_id = atom.atom_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-'\t----- bird -----\ttoxicology",
    "212": "SELECT element, MIN(COUNT(*)) AS min_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM connected AS c1 JOIN bond AS b ON c1.bond_id = b.bond_id WHERE c1.atom_id = 'TR004_8' AND c1.atom_id2 = 'TR004_20' OR c1.atom_id = 'TR004_20' AND c1.atom_id2 = 'TR004_8';\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT molecule_id FROM atom WHERE element ='sn' AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label IN ('+', '-'));\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE atom.element IN ('i','s') AND bond.bond_type = '-' GROUP BY atom.molecule_id;\t----- bird -----\ttoxicology",
    "216": "SELECT atom_id, atom_id2 FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT atom_id FROM connected WHERE atom_id IN (SELECT atom_id FROM molecule WHERE molecule_id = 'TR181') OR atom_id2 IN (SELECT atom_id FROM molecule WHERE molecule_id = 'TR181');\t----- bird -----\ttoxicology",
    "218": "SELECT (COUNT(DISTINCT CASE WHEN element!= 'f' THEN atom_id END) * 100.0 / COUNT(DISTINCT atom_id)) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND element!= 'f';\t----- bird -----\ttoxicology",
    "219": "SELECT 100.0 * COUNT(DISTINCT m.molecule_id) / COUNT(DISTINCT c.molecule_id) AS percentage FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' AND b.bond_type = '#' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT atom_id FROM connected WHERE bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT m.label, COUNT(b.bond_id) AS double_bond_count FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type ='='GROUP BY m.molecule_id ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT ROUND(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id), 5) * 100 AS percent FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT (COUNT(CASE WHEN label = '+' THEN 1 END) * 100.0 / COUNT(*)) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT ROUND(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) / COUNT(atom_id) * 100, 4) AS hydrogen_percentage FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM bond WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT element FROM atom WHERE molecule_id = 'TR060' UNION SELECT label FROM molecule WHERE molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT bond_type FROM (SELECT bond_type, COUNT(*) AS bond_count FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id = 'TR010' GROUP BY bond_type) AS subquery ORDER BY bond_count DESC LIMIT 1; SELECT label FROM molecule WHERE molecule_id = 'TR010';\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, COUNT(DISTINCT a.atom_id) AS atom_count FROM atom a JOIN bond b ON a.atom_id = b.atom_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id2 = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '-' AND m.label = '-' GROUP BY m.molecule_id ORDER BY atom_count DESC, m.molecule_id LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id = 'TR006' GROUP BY bond_type ORDER BY bond_type LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT bond_type, atom_id, atom_id2 FROM bond WHERE bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT molecule_id FROM atom WHERE SUBSTR(atom_id, 7, 2) BETWEEN '21' AND '25' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "243": "SELECT bond_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('p', 'n') GROUP BY bond_id HAVING COUNT(DISTINCT atom.element) = 2;\t----- bird -----\ttoxicology",
    "244": "SELECT m.molecule_id, COUNT(b.bond_id) AS double_bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON c.atom_id = m.molecule_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id ORDER BY double_bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) FROM (SELECT COUNT(bond_id) AS bond_count FROM atom WHERE element = 'i' GROUP BY atom_id) AS subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT bond_type, bond_id FROM bond WHERE atom_id = SUBSTR(atom_id, 7, 2) + 0 = 45;\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom LEFT JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE connected.atom_id IS NULL AND connected.atom_id2 IS NULL;\t----- bird -----\ttoxicology",
    "248": "SELECT atom_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND molecule_id = 'TR041';\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT molecule_id, COUNT(*) AS double_bond_count FROM connected AS c JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON c.atom_id = m.molecule_id WHERE m.label = '+' AND b.bond_type ='='GROUP BY molecule_id ORDER BY double_bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element, COUNT(*) AS element_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element ORDER BY element_count ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT atom_id2 FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE element = 'pb')\t----- bird -----\ttoxicology",
    "253": "SELECT bond_type FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT element1, element2, COUNT(*) AS popularity FROM ( SELECT atom1.element AS element1, atom2.element AS element2 FROM atom AS atom1 JOIN connected AS connection ON atom1.atom_id = connection.atom_id JOIN atom AS atom2 ON connection.atom_id2 = atom2.atom_id JOIN bond AS bond ON connection.bond_id = bond.bond_id WHERE atom1.molecule_id = atom2.molecule_id GROUP BY atom1.element, atom2.element ) AS combinations GROUP BY element1, element2 ORDER BY popularity DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND(SUM(CASE WHEN bond.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(bond.bond_id), 5) AS proportion_carcinogenic_single_bonds FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM \"atom\" WHERE \"element\" IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM atom WHERE element ='s';\t----- bird -----\ttoxicology",
    "258": "SELECT bond_type FROM atom WHERE element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '#' AND (atom.element = 'p' OR atom.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT c.bond_id FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id WHERE m.label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT molecule_id FROM molecule WHERE label = '-' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') AND molecule_id NOT IN (SELECT molecule_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-'))\t----- bird -----\ttoxicology",
    "263": "SELECT (COUNT(a.atom_id) * 100.0 / (SELECT COUNT(DISTINCT c.atom_id) FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-')) AS percent FROM atom a JOIN connected conn ON a.atom_id = conn.atom_id WHERE a.element = 'cl' AND EXISTS (SELECT 1 FROM bond b WHERE b.bond_id = conn.bond_id AND b.bond_type = '-');\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT molecule_id, GROUP_CONCAT(bond_type) AS bond_types FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id BETWEEN 'TR000' AND 'TR050' GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "268": "SELECT element FROM atom WHERE bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) FROM bond WHERE element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT MAX(label) FROM molecule WHERE element = 'ca';\t----- bird -----\ttoxicology",
    "271": "SELECT bond_id, element FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_id = 'TR001_1_8' AND (atom.element = 'cl' OR atom.element = 'c') GROUP BY bond_id, element;\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'c' AND b.bond_type = '#' AND m.label = '-' GROUP BY m.molecule_id LIMIT 2;\t----- bird -----\ttoxicology",
    "273": "SELECT DIVIDE(SUM(chlorine_count), COUNT(DISTINCT molecule_id)) AS percentage FROM (SELECT molecule_id, COUNT(*) AS chlorine_count FROM atom WHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM connected JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE molecule.label = '+') GROUP BY molecule_id) AS carcinogenic_molecules;\t----- bird -----\ttoxicology",
    "274": "SELECT * FROM toxicology WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type ='= ';\t----- bird -----\ttoxicology",
    "276": "SELECT DISTINCT a1.atom_id, a2.atom_id2 FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#' GROUP BY a1.molecule_id;\t----- bird -----\ttoxicology",
    "277": "SELECT bond_type FROM bond WHERE bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type ='single' AND m.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_10_11' AND molecule_id IN (SELECT molecule_id FROM connected WHERE bond_id = 'TR001_10_11');\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' ORDER BY CASE WHEN m.label = '+' THEN 1 ELSE 2 END, b.bond_id;\t----- bird -----\ttoxicology",
    "281": "SELECT m.label, a.element, COUNT(a.element) AS tally FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE m.label = '+' AND substr(a.atom_id, 7, 1) = '4' GROUP BY m.label, a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT m.label, DIVIDE(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END), COUNT(*)) AS ratio FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.molecule_id = 'TR006' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "283": "SELECT molecule_id FROM molecule WHERE label = '+' AND EXISTS (SELECT 1 FROM atom WHERE element = 'ca');\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT a1.element, a2.element FROM connected AS c1 JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id AND c1.atom_id2 = c2.atom_id JOIN atom AS a2 ON c2.atom_id2 = a2.atom_id JOIN bond ON c1.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT (COUNT(*) FILTER (WHERE bond_type = '#')) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM atom) FROM bond;\t----- bird -----\ttoxicology",
    "287": "SELECT (SUM(CASE WHEN bond_type ='='THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percent FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id = 'TR047' AND atom.molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT molecule_id FROM atom WHERE atom_id = 'TR001_1'; SELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM atom WHERE atom_id = 'TR001_1');\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR151' INTERSECT SELECT 'cl', 'br', 'f', 'i'\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE \"label\" = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE element = 'c' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE substr(molecule_id, 3, 3) >= 10 AND substr(molecule_id, 3, 3) <= 50);\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT bond_id FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type ='='AND label = '+' GROUP BY bond_id HAVING COUNT(*) > 0;\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM atom WHERE element = 'h' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'TR000_1' AND bond.bond_id = 'TR000_1_2' LIMIT 1;\t----- bird -----\ttoxicology",
    "297": "SELECT molecule_id FROM atom WHERE element = 'c' EXCEPT SELECT molecule_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'carcinogenic')\t----- bird -----\ttoxicology",
    "298": "SELECT (COUNT(DISTINCT molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage FROM atom WHERE element = 'h' AND molecule_id IN (SELECT molecule_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type ='single' OR bond_type = 'double' OR bond_type = 'triple') AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2 WHERE connected.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*) AS double_bonds, label FROM molecule WHERE molecule_id =? UNION ALL SELECT 0 AS double_bonds, label FROM molecule WHERE molecule_id =?;\t----- bird -----\ttoxicology",
    "304": "SELECT a.molecule_id, a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+'\t----- bird -----\ttoxicology",
    "305": "SELECT c.atom_id, c.atom_id2, b.bond_id, m.label FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT molecule_id, GROUP_CONCAT(element SEPARATOR ', ') AS elements FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#' GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "307": "SELECT a1.element, a2.element FROM connected AS c1 JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id AND c2.atom_id2 = a2.atom_id WHERE c1.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT bond_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "309": "-- Step 1: Identify the molecule_id for TR346 SELECT molecule_id FROM molecule WHERE label = 'TR346'; -- Step 2: List the atom_id that belongs to the TR346 molecule SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR346'); -- Step 3: Count the number of unique bond_type that can be created by the TR346 molecule SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR346'); -- Final SQL statement SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR346') UNION SELECT COUNT(DISTINCT bond_type) FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR346');\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS double_bonded_molecules, COUNT(DISTINCT CASE WHEN m.label = '+' THEN m.molecule_id END) AS carcinogenic_double_bonded_molecules FROM \"bond\" b JOIN \"molecule\" m ON b.molecule_id = m.molecule_id WHERE b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN connected c ON m.molecule_id = c.molecule_id WHERE m.molecule_id NOT IN (SELECT molecule_id FROM atom WHERE element ='s') AND c.bond_id NOT IN (SELECT bond_id FROM bond WHERE bond_type ='= ');\t----- bird -----\ttoxicology",
    "312": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT molecule_id FROM atom WHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "316": "SELECT molecule_id FROM atom WHERE element = 'c' EXCEPT SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(*) / (SELECT COUNT(*) FROM molecule WHERE label = '+')) * 100 AS percentage FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE label = '+' AND element = 'cl';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4');\t----- bird -----\ttoxicology",
    "320": "SELECT bond_type FROM connected WHERE atom_id = 'TR000_1' AND atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT molecule_id FROM connected WHERE atom_id = 'TR000_2' INTERSECT SELECT molecule_id FROM connected WHERE atom_id2 = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT (COUNT(*) FILTER (WHERE bond_type = '-') * 100.0 / (SELECT COUNT(DISTINCT atom_id) FROM atom)) AS percentage FROM bond;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(*) FROM ( SELECT molecule_id FROM molecule WHERE label = '+' JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE element = 'n' )\t----- bird -----\ttoxicology",
    "326": "SELECT molecule_id FROM atom WHERE element ='s' AND bond_type ='='GROUP BY molecule_id HAVING COUNT(*) > 1;\t----- bird -----\ttoxicology",
    "327": "SELECT molecule_id FROM molecule WHERE label = '-' AND molecule_id IN ( SELECT molecule_id FROM atom GROUP BY molecule_id HAVING COUNT(atom_id) > 5 );\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '=' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024'))\t----- bird -----\ttoxicology",
    "329": "SELECT molecule_id, COUNT(atom_id) AS atom_count FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+') GROUP BY molecule_id ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'h' AND b.bond_type = '#')) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.bond_id = b.bond_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id2 = c.atom_id WHERE a.element = 'h' AND b.bond_type = '#' AND m.label = '+'\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(DISTINCT molecule_id) FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label!= '-' LIMIT 1;\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT molecule_id) FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type ='='AND atom.element = 'o';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE c.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR012' AND bond.bond_type ='= ';\t----- bird -----\ttoxicology",
    "339": "SELECT atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE element = 'o' AND label = '+' GROUP BY atom_id HAVING COUNT(DISTINCT bond_id) > 0;\t----- bird -----\ttoxicology",
    "340": "SELECT cards.name FROM cards WHERE (cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL)\t----- bird -----\tcard_games",
    "341": "SELECT c.id, c.name, c.borderColor FROM cards c LEFT JOIN foreign_data fd ON c.uuid = fd.uuid LEFT JOIN legalities l ON c.uuid = l.uuid LEFT JOIN sets s ON c.setCode = s.code WHERE c.borderColor IS NULL AND c.cardKingdomFoilId IS NULL AND c.cardKingdomId IS NOT NULL AND l.status = 'legal' AND s.isFoilOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0;\t----- bird -----\tcard_games",
    "342": "SELECT c.name FROM cards c WHERE c.faceConvertedManaCost > (SELECT MAX(faceConvertedManaCost) FROM cards);\t----- bird -----\tcard_games",
    "343": "SELECT DISTINCT c.name FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.frameVersion = '2015' AND c.edhrecRank < 100;\t----- bird -----\tcard_games",
    "344": "SELECT cards.name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity ='mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.power = '*' OR cards.power IS NULL AND legalities.format = 'commander' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text AS ruling_text, CASE WHEN c.hasContentWarning = 1 THEN 'Yes' ELSE 'No' END AS has_missing_or_degraded_properties FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "348": "SELECT r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, COUNT(r.uuid) AS ruling_count FROM cards c JOIN rulings r ON c.uuid = r.uuid GROUP BY c.name, c.artist ORDER BY ruling_count DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT setCode FROM sets WHERE name = 'annul' AND number = '29' AND isForeignOnly = 1;\t----- bird -----\tcard_games",
    "351": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (COUNT(*) FILTER (WHERE language = 'Chinese Simplified')) * 100.0 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "353": "SELECT s.name, st.translation AS italian_translation, s.totalSetSize AS total_cards FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT \"type\") FROM cards WHERE \"artist\" = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT \"borderColor\" FROM cards WHERE \"name\" = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor's Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT setCode FROM cards WHERE name = 'Angel of Mercy' LIMIT 1; SELECT language FROM set_translations WHERE setCode = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy' LIMIT 1);\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities WHERE status ='restricted' AND isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities WHERE status ='restricted' AND isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE artist IS NOT NULL AND artist!= '';\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(id) FILTER (WHERE borderColor = 'borderless') * 100.0 / COUNT(id)) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(DISTINCT cards.uuid) FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE cards.isReprint = 1 AND set_translations.language = 'German';\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(cards.id) FILTER (WHERE cards.isStorySpotlight = 1 AND cards.language = 'French')) * 100.0 / COUNT(cards.id) FILTER (WHERE cards.isStorySpotlight = 1) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = 99;\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype!= 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT c1.id FROM cards c1 INNER JOIN cards c2 ON c1.uuid = c2.uuid AND c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL WHERE c2.cardKingdomFoilId IS NULL;\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT artist FROM cards WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.name FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'legal' AND c.availability = 'paper' AND c.language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE banned = 1 AND borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT foreign_data.uuid, foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy' GROUP BY foreign_data.uuid, foreign_data.language;\t----- bird -----\tcard_games",
    "385": "SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality');\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = 'future' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT c.colors FROM cards c JOIN sets s ON c.uuid = s.code WHERE s.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT t.language, c.name FROM cards c JOIN set_translations st ON c.uuid = st.setCode JOIN sets s ON st.setCode = s.code WHERE s.code = '10E' AND c.convertedManaCost = 5 AND st.translation IS NOT NULL GROUP BY t.language, c.name;\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT c.colors, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN sets s ON c.setCode = s.code WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language!= 'English'\t----- bird -----\tcard_games",
    "392": "SELECT name, rulings.date FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'uncommon' ORDER BY rulings.date ASC LIMIT 3;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomFoilId IS NULL OR cardKingdomFoilId = '') AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability ='mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability ='mtgo,paper';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT sets.code FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'es';\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(c.id) FILTER (WHERE c.frameEffects = 'legendary' AND c.isOnlineOnly = 1) / COUNT(c.id)) * 100 AS percentage FROM cards c;\t----- bird -----\tcard_games",
    "402": "SELECT id, (COUNT(*) / (SELECT COUNT(*) FROM cards)) * 100 AS percentage FROM cards WHERE isStorylight = 1 AND isTextless = 0 GROUP BY id;\t----- bird -----\tcard_games",
    "403": "SELECT c.name, (COUNT(f.uuid) / (SELECT COUNT(*) FROM cards)) * 100 AS percentage_spanish FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Spanish' GROUP BY c.name;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT setCode FROM sets WHERE baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM sets WHERE block = 'Commander' AND language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "406": "SELECT cards.id, cards.name FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types LIKE '%Creature%' AND legalities.status = 'legal' GROUP BY cards.id ORDER BY cards.id;\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT \"subtypes\" FROM cards WHERE \"language\" = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND rulings.text LIKE '%This is a triggered mana ability.%' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT cards.id FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON legalities.uuid = sets.uuid WHERE cards.artist = 'Erica Yang' AND sets.code = 'PAUP' AND legalities.status = 'legal' AND sets.isOnlineOnly = 0;\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE \"text\" LIKE '%Das perfekte Gegenmittel zu einer dichten Formation%'\t----- bird -----\tcard_games",
    "412": "SELECT t1.name FROM cards AS t1 INNER JOIN set_translations AS t2 ON t1.uuid = t2.setCode WHERE t2.language = 'French' AND t1.type = 'Creature' AND t1.layout = 'normal' AND t1.borderColor = 'black' AND t1.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'rare' AND rulings.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT set_translations.language FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE format = 'commander' AND status = 'legal')) AS percentage FROM cards c WHERE c.format = 'commander' AND c.status = 'legal' AND c.hasContentWarning = 0;\t----- bird -----\tcard_games",
    "416": "SELECT DIVIDE(COUNT(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 END), COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END)) * 100 AS percentage FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE language = 'French' AND (power IS NULL OR power = '*');\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese')) AS percentage FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese' AND s.type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT availability FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 OR isReprint = 1 OR isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT c.name, c.power FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN foreign_data fd ON c.uuid = fd.uuid JOIN rulings r ON c.uuid = r.uuid WHERE c.power IS NULL OR c.power = '*' AND s.promoTypes = 'arenaleague' AND l.status = 'legal' GROUP BY c.name ORDER BY c.name LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT t1.language FROM foreign_data AS t1 INNER JOIN cards AS t2 ON t1.uuid = t2.uuid WHERE t2.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT id, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(*)) * 100 AS proportion FROM cards;\t----- bird -----\tcard_games",
    "425": "SELECT DISTINCT c.number FROM cards c WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND c.otherFaceIds IS NULL;\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, st.translation FROM sets s INNER JOIN set_translations st ON s.code = st.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT s.type AS expansion_type, st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'it' AND s.block = 'Shadowmoor' ORDER BY s.name LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT sets.id FROM sets INNER JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE sets.isForeignOnly = 1 AND foreign_data.language = 'Japanese' LIMIT 1;\t----- bird -----\tcard_games",
    "432": "SELECT code FROM sets WHERE language = 'Russian' GROUP BY code ORDER BY MAX(baseSetSize) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT s.name AS set_name, COUNT(c.id) AS online_only_chinese_cards, (SELECT COUNT(*) FROM cards WHERE setCode = st.setCode) AS total_cards, (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setCode = st.setCode)) AS percentage FROM cards c JOIN set_translations st ON c.uuid = st.uuid JOIN sets s ON st.setCode = s.code WHERE c.language = 'Chinese (Simplified)' AND c.isOnlineOnly = 1 GROUP BY s.name;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets WHERE mtgoCode IS NULL AND EXISTS (SELECT 1 FROM set_translations WHERE set_translations.setCode = sets.code AND set_translations.language = 'Japanese')\t----- bird -----\tcard_games",
    "435": "SELECT id FROM cards WHERE borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT COUNT(id) AS count, id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT cards.name FROM cards WHERE cards.borderColor = 'black' AND cards.isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174';\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT setCode FROM sets WHERE name = 'A Pedra Fellwar' LIMIT 1;\t----- bird -----\tcard_games",
    "441": "SELECT code FROM sets WHERE releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage') LIMIT 1;\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT t1.name, t1.type FROM cards AS t1 JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t2.watermark = 'boros'\t----- bird -----\tcard_games",
    "445": "SELECT f.language, f.flavorText, c.type FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(*) FILTER (WHERE convertedManaCost = 10)) * 100.0 / COUNT(*) FROM cards WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT sets.code FROM sets WHERE sets.type = 'expansion' AND sets.type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT t1.name, t1.type FROM cards AS t1 JOIN foreign_data AS t2 ON t1.uuid = t2.uuid WHERE t2.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT t1.language, t2.type FROM cards AS t1 JOIN set_translations AS t2 ON t1.uuid = t2.setCode WHERE t1.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT \"convertedManaCost\" FROM cards WHERE \"name\" = 'Ancestor`s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power = '*' OR power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c INNER JOIN legalities l ON c.uuid = l.uuid WHERE c.isPromo = 1 AND c.side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT DISTINCT purchaseUrls FROM cards WHERE promotionalType = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT MAX(convertedManaCost) FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name FROM (SELECT name, convertedManaCost FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3)\t----- bird -----\tcard_games",
    "462": "SELECT setCode FROM sets WHERE name = 'Ancestor''s Chosen' LIMIT 1; SELECT translation FROM set_translations WHERE setCode = (SELECT setCode FROM sets WHERE name = 'Ancestor''s Chosen' LIMIT 1) AND language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT set_translations.language) FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.uuid WHERE cards.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT name FROM cards WHERE setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.uuid = (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen') AND language = 'Korean') AS has_korean_version;\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.name = 'Adam Rex' AND cards.setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT baseSetSize FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT mtgoCode FROM cards WHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE code = (SELECT code FROM cards WHERE name = 'Ancestor''s Chosen');\t----- bird -----\tcard_games",
    "471": "SELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets WHERE block = 'Ice Age' AND setCode IN (SELECT setCode FROM set_translations WHERE language = 'Italian' AND translation IS NOT NULL);\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie' AND isForeignOnly = 1;\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian' AND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND setCode = 'coldsnap';\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE setCode = 'Coldsnap' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM cards WHERE setCode = 'coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE number = 4 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap') AND convertedManaCost > 5 AND (power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "481": "SELECT set_translations.language FROM set_translations JOIN cards ON set_translations.setCode = cards.code WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT set_translations.translation FROM set_translations JOIN cards ON set_translations.setCode = cards.code WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT c.name, st.translation AS italian_text_ruling FROM cards c JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Coldsnap' AND st.language = 'Italian' GROUP BY c.id ORDER BY c.name;\t----- bird -----\tcard_games",
    "484": "SELECT c.name AS italian_name, MAX(c.convertedManaCost) AS highest_converted_mana_cost FROM cards c JOIN set_translations st ON c.uuid = st.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.setCode = 'coldsnap' AND st.language = 'Italian' GROUP BY c.uuid HAVING highest_converted_mana_cost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'coldsnap')\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (COUNT(*) FILTER (WHERE convertedManaCost = 7)) * 100.0 / COUNT(*) FROM cards JOIN sets ON cards.uuid = sets.code WHERE sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (COUNT(*) FILTER (WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL)) * 100.0 / COUNT(*) FROM cards WHERE setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT sets.mcmName FROM sets WHERE sets.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT expansion_type FROM sets WHERE code = 'fvlo';\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text, c.hasContentWarning FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec'\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN ( SELECT uuid FROM cards WHERE name = 'Evacuation' ) c ON s.code = c.uuid;\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM sets WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT type FROM sets WHERE name = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT setCode FROM sets WHERE name = 'Tendo Ice Bridge' LIMIT 1; SELECT translation FROM set_translations WHERE setCode = (SELECT setCode FROM sets WHERE name = 'Tendo Ice Bridge' LIMIT 1) AND language = 'French';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT set_translations.translation) FROM set_translations INNER JOIN cards ON set_translations.uuid = cards.uuid WHERE cards.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT setCode FROM cards WHERE name = 'Fellwar Stone' LIMIT 1; SELECT translation FROM set_translations WHERE setCode = (SELECT setCode FROM cards WHERE name = 'Fellwar Stone' LIMIT 1) AND language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE setCode = 'Journey into Nyx Hero''s Path';\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.type FROM cards AS c JOIN sets ON c.setCode = sets.code WHERE c.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE convertedManaCost = 3 AND setCode = (SELECT code FROM sets WHERE name = 'World Championship Decks 2004');\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE language = 'Chinese Simplified' AND setCode = (SELECT code FROM sets WHERE name = 'Mirrodin');\t----- bird -----\tcard_games",
    "506": "SELECT (DIVIDE(SUM(isNonFoilOnly), COUNT(*)) * 100) AS percentage FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.language = 'Japanese' GROUP BY cards.setCode;\t----- bird -----\tcard_games",
    "507": "SELECT (COUNT(CASE WHEN isOnlineOnly = 1 THEN 1 END) / COUNT(*)) * 100 AS percentage FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT c.availability FROM cards c INNER JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Aleksi Briclot' AND c.isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT artist, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE faceName IS NULL GROUP BY artist ORDER BY max_converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets WHERE sets.type = 'commander' ORDER BY sets.totalSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.manaCost FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'duel' ORDER BY c.manaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(t1.originalReleaseDate), t1.format FROM cards t1 JOIN legalities t2 ON t1.uuid = t2.uuid WHERE t1.rarity ='mythic' AND t2.status = 'legal' AND t1.format IS NOT NULL GROUP BY t1.format;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.artist = 'Volkan Ba\u01f5a' AND foreign_data.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types LIKE '%Enchantment%' AND name = 'Abundance' AND status = 'Legal' AND format = 'All';\t----- bird -----\tcard_games",
    "518": "SELECT l.format, c.name FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE l.status = 'Banned' GROUP BY l.format ORDER BY COUNT(l.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT setCode FROM sets WHERE name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT c.artist, s.name AS format FROM cards c JOIN sets s ON c.setCode = s.code GROUP BY c.artist ORDER BY COUNT(c.id) ASC LIMIT 1;\t----- bird -----\tcard_games",
    "521": "SELECT status FROM cards WHERE frameVersion = '1997' AND artist = 'D. Alexander Gregory' AND (format = 'legacy' OR type = 'Wizards of the Coast') AND (hasContentWarning = 1 OR flavorText LIKE '%Wizards of the Coast%') GROUP BY status HAVING COUNT(*) > 0;\t----- bird -----\tcard_games",
    "522": "SELECT name, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE edhrecRank = 1 AND status = 'Banned';\t----- bird -----\tcard_games",
    "523": "SELECT YEAR(releaseDate) AS year, AVG(COUNT(*)) AS avg_sets_per_year, MAX(language) AS common_language FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY year;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE BorderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'oldschool' AND (legalities.status = 'banned' OR legalities.status ='restricted')\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE foreign_data.name = 'Kev Walker' AND set_translations.language = 'English' AND sets.type = 'Core Set' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT c.name, l.format FROM cards c JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s LEFT JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Korean' AND st.language!= 'Japanese' GROUP BY s.name HAVING COUNT(st.language) = 1;\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersion, name FROM cards WHERE artist = 'Allen Williams' UNION SELECT DISTINCT frameVersion, name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT MAX(Reputation) FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon');\t----- bird -----\tcodebase_community",
    "532": "SELECT DISTINCT UserDisplayName FROM users WHERE year(CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UserId IN (SELECT UserId FROM users WHERE UpVotes > 100) AND DownVotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Views > 10 AND users.CreationDate > '2013-01-01'\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT posts.Title FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY posts.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN ( SELECT PostId, MAX(FavoriteCount) AS MaxFavoriteCount FROM posts GROUP BY PostId ) AS MostValuablePosts ON posts.Id = MostValuablePosts.PostId WHERE MostValuablePosts.MaxFavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts );\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CommentCount) FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation' LIMIT 1;\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT OwnerDisplayName FROM posts WHERE ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) AND Score >= 19;\t----- bird -----\tcodebase_community",
    "548": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "549": "SELECT ExcerptPostId FROM tags WHERE TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(Count) FROM tags) LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserDisplayName = 'csgillespie' AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM users INNER JOIN (SELECT UserId, COUNT(badges.Id) AS Count FROM badges GROUP BY UserId ORDER BY Count DESC LIMIT 1) AS subquery ON users.Id = subquery.UserId;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(Score) FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(Count(Id)) / AVG(Count(DisplayName)) AS average_badges FROM ( SELECT UserId, COUNT(Id) AS Count_Id, COUNT(DisplayName) AS Count_DisplayName FROM users WHERE Views > 200 GROUP BY UserId ) AS subquery\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(p.Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE Score > 5)) AS percentage FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5 AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(CreationDate) FROM votes GROUP BY CreationDate HAVING COUNT(Id) = (SELECT MAX(vote_count) FROM (SELECT COUNT(Id) AS vote_count FROM votes GROUP BY CreationDate) AS subquery);\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT posts.Title FROM posts JOIN comments ON posts.Id = comments.PostId WHERE comments.Score = (SELECT MAX(Score) FROM comments)\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(comments.Id) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT posts.FavoriteCount FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE comments.UserId = 3025 AND comments.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ParentId = 107829 GROUP BY c.PostId HAVING COUNT(c.Text) = 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'well-finished' ELSE 'not well-finished' END AS post_status, c.CreationDate FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.UserId = 23853 AND p.CreationDate = '2013-07-12 09:08:18.0' LIMIT 1;\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041);\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT users.DisplayName FROM users, votes WHERE votes.UserId = users.Id AND votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data visualization%');\t----- bird -----\tcodebase_community",
    "570": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'DatEpicCoderGuyWhoPrograms');\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT posts.Id) AS post_count, COUNT(DISTINCT votes.Id) AS vote_count FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id INNER JOIN votes ON posts.Id = votes.PostId WHERE users.Id = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT \"ViewCount\" FROM \"posts\" WHERE \"Title\" = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'SilentGhost');\t----- bird -----\tcodebase_community",
    "576": "SELECT DISTINCT UserDisplayName FROM comments WHERE Text LIKE '%thank you user93%';\t----- bird -----\tcodebase_community",
    "577": "SELECT Text FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'A Lion');\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Understanding what Dassault iSight is doing';\t----- bird -----\tcodebase_community",
    "579": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE Title = 'How does gentle boosting differ from AdaBoost?');\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Necromancer';\t----- bird -----\tcodebase_community",
    "581": "SELECT \"OwnerDisplayName\" FROM \"posts\" WHERE \"Title\" = 'Open source tools for visualizing multi-dimensional data' LIMIT 1;\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId = (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa');\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(posts.Score) AS total_score, users.WebsiteUrl FROM posts JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c INNER JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND c.PostId = p.Id AND c.UserId!= p.OwnerUserId;\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%';\t----- bird -----\tcodebase_community",
    "586": "SELECT users.DisplayName, votes.PostId FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%variance%' AND votes.BountyAmount = 50 GROUP BY users.DisplayName, votes.PostId HAVING COUNT(votes.Id) > 0;\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS AverageViewCount FROM posts p JOIN tags t ON p.Id = t.PostId JOIN comments c ON p.Id = c.PostId WHERE t.TagName = 'humor' GROUP BY p.Id;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT users.Id, MIN(users.Views) AS lowest_views FROM users GROUP BY users.Id;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Supporter' AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name IN (SELECT Name FROM badges GROUP BY Name HAVING COUNT(Name) > 5);\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name IN ('Teachers', 'Supporter') AND users.Location = 'New York'\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT users.Id, users.DisplayName FROM users JOIN postHistory ON users.Id = postHistory.UserId GROUP BY users.Id, users.DisplayName HAVING COUNT(postHistory.Id) = 1 AND users.Views >= 1000;\t----- bird -----\tcodebase_community",
    "596": "SELECT users.Id, users.DisplayName, COUNT(comments.Id) AS CommentCount FROM users JOIN comments ON users.Id = comments.UserId GROUP BY users.Id, users.DisplayName ORDER BY CommentCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Teacher' AND users.Location = 'India';\t----- bird -----\tcodebase_community",
    "598": "SELECT (COUNT(CASE WHEN Year(Date) = 2010 THEN 1 END) / COUNT(*)) * 100 - (COUNT(CASE WHEN Year(Date) = 2011 THEN 1 END) / COUNT(*)) * 100 AS percentage_difference FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT \"UserId\" FROM \"comments\" WHERE \"PostId\" = 3720;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.PostId, p.Title, ph.ViewCount AS popularity FROM postLinks pl JOIN posts p ON pl.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId WHERE pl.RelatedPostId = 61217 UNION SELECT 61217 AS PostId, NULL AS Title, 61217 AS popularity;\t----- bird -----\tcodebase_community",
    "601": "SELECT postHistory.Score, postLinks.LinkTypeId FROM postHistory JOIN postLinks ON postHistory.PostId = postLinks.PostId WHERE postHistory.PostId = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT posts.Id, users.Id FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND YEAR(CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes.UpVotes) AS avg_up_votes, AVG(users.Age) AS avg_user_age FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN posts ON users.Id = posts.OwnerUserId GROUP BY users.Id HAVING COUNT(posts.Id) > 10;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT Name FROM badges WHERE UserId = (SELECT Max(Id) FROM users);\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.CreationDate = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "612": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Pierre');\t----- bird -----\tcodebase_community",
    "613": "SELECT DISTINCT \"Date\" FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT UserId) / (SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Teacher')) * 100 AS percentage FROM badges WHERE Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT u.Id) * 100.0 / (SELECT COUNT(DISTINCT v.UserId) FROM votes v JOIN badges b ON v.UserId = b.UserId WHERE b.Name = 'Organizer')) AS percentage FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.UserId = b.UserId WHERE u.Age BETWEEN 13 AND 18 AND b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT MAX(Score) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE CreationDate = '2010-07-19 19:19:56.0');\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT Age FROM users WHERE Location = 'Vienna, Austria' AND Id IN (SELECT UserId FROM badges);\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND Id IN (SELECT UserId FROM badges WHERE Name = 'Supporter');\t----- bird -----\tcodebase_community",
    "620": "SELECT posts.OwnerUserId, SUM(posts.ViewCount) AS total_views FROM posts WHERE posts.CreationDate = '2010-07-19 19:39:08.0' GROUP BY posts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "621": "SELECT Name FROM badges WHERE UserId IN (SELECT UserId FROM users ORDER BY Reputation ASC LIMIT 1)\t----- bird -----\tcodebase_community",
    "622": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Sharpie');\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users WHERE Age > 65 AND DisplayName IN (SELECT DisplayName FROM badges WHERE Name = 'Supporter');\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT users.DisplayName, MAX(users.Views) AS max_views FROM users GROUP BY users.DisplayName;\t----- bird -----\tcodebase_community",
    "629": "SELECT (COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2010)) / (COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2011)) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT TagName FROM tags WHERE ExcerptPostId IN (SELECT Id FROM users WHERE DisplayName = 'John Salvatier');\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id, COUNT(a.Id) AS answer_count FROM posts p INNER JOIN answers a ON p.Id = a.PostId WHERE p.OwnerDisplayName ='slashnick' GROUP BY p.Id ORDER BY answer_count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(SUM(posts.ViewCount)) AS max_popularity FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY posts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Matt Parker' HAVING Score > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserDisplayName = 'Neil McGuigan';\t----- bird -----\tcodebase_community",
    "637": "SELECT tags.TagName FROM tags JOIN posts ON tags.PostId = posts.Id WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') AND posts.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(p.PostId) FILTER (WHERE t.TagName = 'r')) * 100.0 / COUNT(p.PostId) AS percentage FROM posts p JOIN tags t ON p.PostId = t.PostId WHERE p.OwnerUserId = 1;\t----- bird -----\tcodebase_community",
    "640": "SELECT (SUM(CASE WHEN DisplayName = 'Mornington' THEN ViewCount ELSE 0 END) - SUM(CASE WHEN DisplayName = 'Amos' THEN ViewCount ELSE 0 END)) AS view_count_difference FROM posts JOIN users ON posts.OwnerUserId = users.Id;\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND year(Date) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE STRFTIME('%Y-%m-%d', CreationDate) = '2010-07-21';\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age FROM users INNER JOIN (SELECT MAX(Views) AS max_views FROM posts GROUP BY posts.OwnerUserId) AS max_views_subquery ON users.Id = max_views_subquery.OwnerUserId;\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Id = (SELECT Id FROM posts WHERE Title = 'Detecting a given face in a database of facial images');\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND YEAR(b.Date) = 2011 GROUP BY b.Name;\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM users JOIN (SELECT Id FROM posts WHERE FavoriteCount > 150) AS filtered_posts ON users.Id = filtered_posts.Id;\t----- bird -----\tcodebase_community",
    "649": "SELECT MAX(LastEditDate) AS last_edit_date, COUNT(*) AS post_history_counts FROM postHistory WHERE Text LIKE '%What is the best introductory Bayesian statistics textbook%';\t----- bird -----\tcodebase_community",
    "650": "SELECT u.Id, u.LastAccessDate, u.Location FROM users u INNER JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'outliers' GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "651": "SELECT posts.Title FROM posts WHERE posts.Title LIKE '%How to tell if something happened in a data set which monitors a value over time%';\t----- bird -----\tcodebase_community",
    "652": "SELECT p.PostId, b.Name FROM posts p INNER JOIN badges b ON p.OwnerUserId = b.UserId WHERE p.CreationDate >= '2013-01-01' AND p.CreationDate < '2014-01-01' OR b.Date >= '2013-01-01' AND b.Date < '2014-01-01' AND p.OwnerDisplayName = 'Samuel';\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts WHERE Id = (SELECT MAX(Id) FROM posts);\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location FROM users JOIN tags ON users.Id = tags.ExcerptPostId WHERE tags.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT postLinks.RelatedPostId, postLinks.LinkTypeId FROM postLinks WHERE postLinks.PostId = ( SELECT Id FROM posts WHERE Title = 'What are principal component scores?' );\t----- bird -----\tcodebase_community",
    "656": "SELECT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN postHistory ON posts.Id = postHistory.PostId JOIN votes ON posts.Id = votes.PostId WHERE postHistory.Comment = 'parent' AND votes.VoteTypeId = 2 GROUP BY posts.Id HAVING MAX(votes.Score) = (SELECT MAX(votes.Score) FROM votes WHERE votes.PostId = posts.Id)\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM votes v JOIN users u ON v.UserId = u.Id WHERE v.VoteTypeId = 8 GROUP BY v.UserId HAVING MAX(v.BountyAmount) = v.BountyAmount ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT t.Id) FROM tags t JOIN posts p ON t.Id = p.Id GROUP BY t.Id HAVING COUNT(p.Id) BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts WHERE FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT MAX(Age) FROM (SELECT Age FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)) AS subquery;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE YEAR(posts.CreationDate) = 2011 AND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Age) AS youngest_age FROM users;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(Score) FROM posts WHERE STRFTIME('%Y-%m-%d', CreationDate) = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(COUNT(*)) FROM (SELECT EXTRACT(MONTH FROM CreationDate) AS month, EXTRACT(YEAR FROM CreationDate) AS year FROM postLinks JOIN posts ON postLinks.PostId = posts.Id WHERE YEAR(posts.CreationDate) = 2010 AND posts.AnswerCount <= 2 GROUP BY month, year) AS monthly_links;\t----- bird -----\tcodebase_community",
    "666": "SELECT posts.Id FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.UserId = 1465 GROUP BY posts.Id ORDER BY MAX(posts.FavoriteCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT posts.Title FROM posts JOIN postLinks ON posts.Id = postLinks.PostId WHERE postLinks.CreationDate = (SELECT MIN(CreationDate) FROM postLinks) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT users.DisplayName FROM users JOIN ( SELECT UserId, COUNT(Name) AS badge_count FROM badges GROUP BY UserId ORDER BY badge_count DESC LIMIT 1 ) AS badge_counts ON users.Id = badge_counts.UserId;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(Age) AS youngest_age, MIN(CreaionDate) AS first_post_date FROM users JOIN posts ON users.Id = posts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "671": "SELECT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Autobiographer' GROUP BY users.Id ORDER BY MIN(votes.CreationDate) LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Location = 'United Kingdom' GROUP BY users.Id HAVING SUM(posts.FavoriteCount) >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT MAX(Age) AS max_age, AVG(PostId) AS avg_posts_voted FROM (SELECT Age, PostId, ROW_NUMBER() OVER (ORDER BY Age DESC) AS rn FROM votes JOIN users ON votes.UserId = users.Id) WHERE rn = 1;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'Jay Stevens' AND YEAR(CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT MAX(Score) AS max_score FROM posts;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) FROM posts WHERE OwnerDisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.ViewCount > 20000 AND YEAR(posts.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.OwnerDisplayName FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(DISTINCT posts.Id) * 100.0 / (SELECT COUNT(DISTINCT Id) FROM posts)) AS percentage FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Reputation > 1000 AND YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(Id) FILTER (WHERE Age BETWEEN 13 AND 18) * 100.0 / COUNT(Id)) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT posts.ViewCount AS total_views, users.DisplayName AS last_poster FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Computer Game Datasets' ORDER BY posts.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT LastEditorDisplayName, Location FROM users WHERE Id = (SELECT MAX(OwnerUserId) FROM posts WHERE Id = 183);\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, MAX(b.Date) AS LatestBadgeDate FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Emmett' GROUP BY b.Name ORDER BY LatestBadgeDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT users.Id) AS adult_users_with_over_5000_upvotes FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Age BETWEEN 19 AND 65 AND votes.VoteTypeId = 2 GROUP BY users.Id HAVING SUM(votes.BountyAmount) > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MAX(DATEDIFF(j.CreationDate, b.Date)) AS max_time_to_badge FROM users j JOIN badges b ON j.Id = b.UserId WHERE j.DisplayName = 'Zolomon' GROUP BY b.Id;\t----- bird -----\tcodebase_community",
    "693": "-- Step 1: Identify the user with the latest created user account SELECT Id, CreationDate FROM users ORDER BY CreationDate DESC LIMIT 1; -- Step 2: Use the user ID from Step 1 to find the number of posts and comments SELECT COUNT(*) AS post_count, COUNT(*) AS comment_count FROM posts WHERE OwnerUserId = ( SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1 ); -- Step 3: Combine the results from Step 1 and Step 2 SELECT (SELECT Id, CreationDate FROM users ORDER BY CreationDate DESC LIMIT 1) AS latest_user, (SELECT COUNT(*) AS post_count, COUNT(*) AS comment_count FROM posts WHERE OwnerUserId = ( SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1 )) AS user_stats;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.UserDisplayName FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE EXISTS (SELECT 1 FROM tags WHERE tags.PostId = posts.Id AND tags.TagName = 'careers');\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.Id) AS comment_count, COUNT(DISTINCT ph.Id) AS answer_count FROM posts p JOIN comments c ON p.Id = c.PostId JOIN postHistory ph ON p.Id = ph.PostId WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT MAX(Reputation) FROM users))) AS percentage FROM posts WHERE OwnerUserId = (SELECT MAX(Reputation) FROM users) AND Score > 50;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE \"Count\" <= 20 AND \"Id\" < 15;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%linear regression%');\t----- bird -----\tcodebase_community",
    "707": "SELECT p.Title, c.Text, MAX(c.Score) AS MaxScore FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.Id = c.PostHistoryTypeId JOIN badges b ON p.OwnerUserId = b.Id JOIN votes v ON p.Id = v.PostId WHERE p.ViewCount BETWEEN 100 AND 150 GROUP BY p.Id HAVING MAX(c.Score) = (SELECT MAX(Score) FROM comments WHERE PostHistoryTypeId = ph.Id)\t----- bird -----\tcodebase_community",
    "708": "SELECT comments.CreationDate, users.Age FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Text LIKE '%http://%' OR comments.Text LIKE '%https://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT posts.Id) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Score = 0 AND users.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT v.UserId, SUM(v.VoteTypeId = 2) AS UpVotes FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.Text = 'R is also lazy evaluated.' GROUP BY v.UserId HAVING UpVotes > 0;\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT DISTINCT users.DisplayName FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 1 AND 5 AND comments.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT c.UserId) * 100.0 / (SELECT COUNT(DISTINCT c2.UserId) FROM comments c2 WHERE c2.Score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.UpVotes = 0 AND c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_id IN (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength');\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Super Strength') AND height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT superhero_name FROM superhero WHERE id IN ( SELECT hero_id FROM hero_power GROUP BY hero_id HAVING COUNT(power_id) > 15 )\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM colour JOIN superhero ON colour.id = superhero.skin_colour_id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN alignment ON superhero.eye_colour_id = alignment.id JOIN colour ON alignment.id = colour.id WHERE colour.colour = 'Blue' AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "726": "SELECT superhero_name, height_cm FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ORDER BY height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT a.colour, COUNT(s.id) AS popularity FROM superhero s JOIN alignment a ON s.eye_colour_id = a.id WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY a.colour ORDER BY popularity DESC LIMIT 10;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "730": "SELECT superhero_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Super Strength'));\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics');\t----- bird -----\tsuperhero",
    "732": "SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute_name = 'Speed' AND attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "734": "SELECT publisher_name FROM superhero WHERE superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "736": "SELECT superhero_name, MIN(attribute_value) AS dumbest_intelligence FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Intelligence' GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "737": "SELECT race FROM superhero WHERE superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_name = 'Durability' AND attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id WHERE power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN attribute ON superhero.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT superhero_name, COUNT(power_id) AS power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(*) FILTER (WHERE alignment = 'Bad') * 100.0 / COUNT(*)) AS percentage, COUNT(*) AS count_marvel FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment = 'Bad' AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT superhero.id, AVG(hero_attribute.attribute_value) AS average_attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id GROUP BY superhero.id;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT eye_colour.colour FROM eye_colour JOIN superhero ON eye_colour.id = superhero.eye_colour_id WHERE superhero.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_id IN (SELECT id FROM superhero WHERE superhero_name = 'Deathlok');\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.gender_id = (SELECT id FROM alignment WHERE alignment.alignment = 'Male') AND superhero.publisher_id = (SELECT id FROM alignment WHERE alignment.alignment = 'Independent');\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour')\t----- bird -----\tsuperhero",
    "754": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM alignment WHERE alignment = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race FROM superhero WHERE weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT t2.colour FROM superhero AS t1 INNER JOIN colour AS t2 ON t1.hair_colour_id = t2.id WHERE t1.height_cm = 185 AND t1.race = 'human'\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "760": "SELECT COUNT(superhero.id) * 100.0 / ( SELECT COUNT(superhero.id) FROM superhero WHERE superhero.height_cm BETWEEN 150 AND 180 ) FROM superhero WHERE superhero.publisher_id = 13;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.gender = 'Male' AND weight_kg > (SELECT 0.79 * AVG(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT power_name, COUNT(*) AS power_count FROM hero_power GROUP BY power_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name ='stealth');\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='strength' GROUP BY superhero.full_name ORDER BY MAX(hero_attribute.attribute_value) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(id) FROM superhero WHERE skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "769": "SELECT superhero_name, MAX(attribute_value) AS max_durability FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' AND attribute_name = 'durability' GROUP BY superhero_name ORDER BY max_durability DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT t2.colour FROM superhero AS t1 INNER JOIN colour AS t2 ON t1.eye_colour_id = t2.id WHERE t1.superhero_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT t1.eye_colour_id, t1.hair_colour_id, t1.skin_colour_id FROM superhero AS t1 JOIN gender AS t2 ON t1.gender_id = t2.id JOIN publisher AS t3 ON t1.publisher_id = t3.id WHERE t2.gender = 'Female' AND t3.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "773": "SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.hair_colour_id = superhero.eye_colour_id AND superhero.eye_colour_id = superhero.skin_colour_id GROUP BY superhero.superhero_name, publisher.publisher_name HAVING COUNT(*) > 1;\t----- bird -----\tsuperhero",
    "774": "SELECT race FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT DIVIDE(COUNT(colour.id) WHERE colour = 'Blue', COUNT(superhero.id) WHERE gender = 'Female') * 100 AS percentage FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id WHERE gender = 'Female';\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender FROM superhero WHERE superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power WHERE hero_id IN (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id IN (SELECT id FROM superhero WHERE superhero_name = 'Hunter Zolomon');\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Black') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Black');\t----- bird -----\tsuperhero",
    "783": "SELECT eye_colour_id FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM ( SELECT hero_id FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength' ) ) AS highest_strength_heroes;\t----- bird -----\tsuperhero",
    "787": "SELECT race_id, alignment_id FROM superhero WHERE superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (COUNT(gender = 'Female' WHERE publisher_name = 'Marvel Comics') * 100 / COUNT(publisher_name = 'Marvel Comics')) AS percentage FROM superhero;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg) FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) WHERE full_name = 'Emil Blonsky' - SUM(weight_kg) WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower ON hp.power_id = superpower.id WHERE sh.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT superhero_name, MAX(attribute_value) AS fastest_speed FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Speed' GROUP BY superhero_name ORDER BY fastest_speed DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, ha.attribute_value FROM hero_attribute AS ha JOIN attribute AS a ON ha.attribute_id = a.id JOIN superhero AS s ON ha.hero_id = s.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id IN (SELECT id FROM colour WHERE colour = 'Brown');\t----- bird -----\tsuperhero",
    "798": "SELECT publisher_name FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT ROUND(100.0 * COUNT(superhero.id) / (SELECT COUNT(*) FROM superhero), 2) AS percentage FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "801": "SELECT (SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) / SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END)) AS ratio FROM superhero s JOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT superhero_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT t2.colour FROM superhero AS t1 INNER JOIN colour AS t2 ON t1.eye_colour_id = t2.id WHERE t1.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_id IN (SELECT id FROM superhero WHERE full_name = 'Helen Parr');\t----- bird -----\tsuperhero",
    "808": "SELECT race FROM superhero WHERE weight_kg = 108 AND height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id = 38);\t----- bird -----\tsuperhero",
    "810": "SELECT s.race FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'race') GROUP BY s.id ORDER BY MAX(ha.attribute_value) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero JOIN alignment ON superhero.gender_id = alignment.id JOIN alignment AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN alignment AS hair_colour ON superhero.hair_colour_id = hair_colour.id JOIN alignment AS skin_colour ON superhero.skin_colour_id = skin_colour.id JOIN alignment AS race_id ON superhero.race_id = race_id.id JOIN alignment AS publisher_id ON superhero.publisher_id = publisher_id.id JOIN alignment AS alignment_id ON superhero.alignment_id = alignment_id.id JOIN superpower ON superhero.id = superpower.hero_id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT superhero_name FROM superhero INNER JOIN alignment AS eye_colour ON superhero.eye_colour_id = eye_colour.id WHERE eye_colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(ha.attribute_value) AS average_attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT t1.colour FROM colour AS t1 INNER JOIN superhero AS t2 ON t1.id = t2.skin_colour_id INNER JOIN hero_attribute AS t3 ON t2.id = t3.hero_id WHERE t3.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'female') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'good');\t----- bird -----\tsuperhero",
    "816": "SELECT superhero_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero JOIN alignment AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN alignment AS hair_colour ON superhero.hair_colour_id = hair_colour.id JOIN alignment AS gender ON superhero.gender_id = gender.id JOIN alignment AS skin_colour ON superhero.skin_colour_id = skin_colour.id JOIN alignment AS race_alignment ON superhero.race_id = race_alignment.id JOIN colour AS eye_colour_colour ON eye_colour.alignment = eye_colour_colour.colour JOIN colour AS hair_colour_colour ON hair_colour.alignment = hair_colour_colour.colour JOIN colour AS skin_colour_colour ON skin_colour.alignment = skin_colour_colour.colour JOIN race AS race_colour ON race_alignment.id = race_colour.id WHERE eye_colour_colour.colour = 'blue' AND gender.gender ='male' AND race_colour.race = race.race;\t----- bird -----\tsuperhero",
    "818": "SELECT (SUM(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) / COUNT(*)) * 100.0 AS percentage_female FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT COUNT(CASE WHEN T1.eye_colour_id = 7 THEN 1 END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN 1 END) AS difference FROM superhero T1 LEFT JOIN alignment T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "820": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Hulk' AND a.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name FROM superhero AS sh JOIN hero_power AS hp ON sh.id = hp.hero_id JOIN superpower ON hp.power_id = superpower.id WHERE sh.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'Green') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "824": "SELECT DISTINCT superhero_name FROM superheroes INNER JOIN hero_power ON superheroes.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero_name;\t----- bird -----\tsuperhero",
    "825": "SELECT gender FROM superhero WHERE id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Phoenix Force'));\t----- bird -----\tsuperhero",
    "826": "SELECT MAX(weight_kg) AS heaviest_weight FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) FROM superhero WHERE race <> 'Human' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "828": "SELECT s.superhero_name, MAX(ha.attribute_value) AS max_speed FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_name = 'Speed' GROUP BY s.superhero_id ORDER BY max_speed DESC LIMIT 10;\t----- bird -----\tsuperhero",
    "829": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics' EXCEPT SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "830": "SELECT attribute_name, MIN(attribute_value) AS weakest_attribute FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Black Panther' GROUP BY attribute_name;\t----- bird -----\tsuperhero",
    "831": "SELECT eye_colour.colour FROM colour JOIN alignment AS eye_colour ON colour.id = eye_colour.eye_colour_id JOIN superhero ON eye_colour.id = superhero.eye_colour_id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT MAX(height_cm) AS tallest_superhero_height FROM superhero;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT ROUND(100.0 * SUM(CASE WHEN gender = 'Female' AND publisher_name = 'George Lucas' THEN 1 ELSE 0 END) / COUNT(*), 2) AS percentage FROM superhero;\t----- bird -----\tsuperhero",
    "835": "SELECT 100.0 * COUNT(CASE WHEN alignment = 'Good' AND publisher_name = 'Marvel Comics' THEN 1 END) / COUNT(*) FROM superhero;\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT superhero.id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id GROUP BY superhero.id ORDER BY MIN(hero_attribute.attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT superhero.full_name FROM superhero JOIN alignment AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN alignment AS weight ON superhero.weight_kg < 100 AND superhero.id = weight.id WHERE eye_colour.alignment = 'brown'\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race FROM superhero WHERE id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1;\t----- bird -----\tsuperhero",
    "843": "SELECT superhero.id FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT t2.colour FROM superhero AS t1 INNER JOIN colour AS t2 ON t1.eye_colour_id = t2.id WHERE t1.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id IN (SELECT id FROM superhero WHERE height_cm > (SELECT 0.8 * AVG(height_cm) FROM superhero));\t----- bird -----\tsuperhero",
    "846": "SELECT DISTINCT drivers.driverRef FROM drivers JOIN qualifying ON drivers.driverRef = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId WHERE races.raceId = 20 AND qualifying.q1 IS NULL\t----- bird -----\tformula_1",
    "847": "SELECT d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.raceId = lt.raceId AND lt.position = 1 JOIN qualifying q ON r.raceId = q.raceId AND q.position = 2 AND q.q2 IS NOT NULL WHERE r.raceId = 19 GROUP BY d.driverId ORDER BY MIN(q.q2) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT YEAR(date) FROM races WHERE location LIKE '%Shanghai%';\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT name FROM circuits WHERE circuitRef IN (SELECT constructorRef FROM constructors WHERE name = 'Renault');\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND location NOT IN ('Asia', 'Europe');\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.name, races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT T2.country FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 1 AND T1.raceId = 24;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');\t----- bird -----\tformula_1",
    "860": "SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.q2 = '0:01:40' AND q.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT drivers.number FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN qualifying ON lapTimes.raceId = qualifying.raceId AND qualifying.position = lapTimes.position WHERE qualifying.q3 LIKE '%:54%' AND lapTimes.raceId = 903 GROUP BY drivers.driverId HAVING COUNT(DISTINCT lapTimes.lap) > 1;\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NOT NULL AND positionText!= 'Retired' AND positionText!= 'DNF';\t----- bird -----\tformula_1",
    "863": "SELECT year FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901);\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29');\t----- bird -----\tformula_1",
    "865": "SELECT MAX(drivers.dob) AS oldest_dob FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.raceId = 592 AND results.time IS NOT NULL;\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE lapTimes.time LIKE '0:01:27%' AND races.raceId = 161;\t----- bird -----\tformula_1",
    "867": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 933 AND r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 933);\t----- bird -----\tformula_1",
    "868": "SELECT location FROM circuits WHERE circuitRef = (SELECT circuitRef FROM races WHERE name = 'Malaysian Grand Prix') AND lat IS NOT NULL AND lng IS NOT NULL;\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructors JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId = (SELECT raceId FROM races WHERE round = 9 ORDER BY points DESC LIMIT 1) ORDER BY constructorResults.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT t1.forename, t1.surname, t2.q1 FROM drivers AS t1 INNER JOIN qualifying AS t2 ON t1.driverId = t2.driverId WHERE t1.driverRef = 'lucas-di-grassi' AND t2.raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.q2 = '0:01:15' AND q.raceId = 347 LIMIT 1;\t----- bird -----\tformula_1",
    "872": "SELECT drivers.code FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN qualifying ON results.raceId = qualifying.raceId AND qualifying.position = 1 WHERE results.raceId = 45 AND qualifying.q3 LIKE '1:33%' AND drivers.code IS NOT NULL;\t----- bird -----\tformula_1",
    "873": "SELECT time FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren') AND raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = (SELECT raceId FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006) AND T1.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901);\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE date = '2015-11-29') AND positionText!= 'Finished';\t----- bird -----\tformula_1",
    "877": "SELECT MIN(dob) AS youngest_dob, d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 872 AND r.time IS NOT NULL;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 348 ORDER BY r.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM drivers, results WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results) AND results.driverId = drivers.driverId;\t----- bird -----\tformula_1",
    "880": "SELECT (SUBTRACT(fastestLapSpeed(raceId = 853), fastestLapSpeed(raceId = 854)) * 100 / fastestLapSpeed(raceId = 853)) AS percentage FROM results WHERE driverId IN ( SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' ) AND raceId IN (853, 854);\t----- bird -----\tformula_1",
    "881": "SELECT driverId, COUNT(driverId) AS total_drivers, COUNT(DISTINCT raceId) AS total_races, COUNT(DISTINCT raceId) * 100.0 / COUNT(driverId) AS completion_rate FROM results WHERE date = '1983-07-16' GROUP BY driverId ORDER BY completion_rate DESC;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005 ORDER BY name DESC;\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE year = (SELECT MIN(year) FROM seasons) AND month = (SELECT MIN(month) FROM races WHERE year = (SELECT MIN(year) FROM seasons));\t----- bird -----\tformula_1",
    "885": "SELECT r.name, r.date FROM races r JOIN ( SELECT MAX(round) AS max_round FROM races WHERE year = 1999 ) m ON r.round = m.max_round WHERE r.year = 1999;\t----- bird -----\tformula_1",
    "886": "SELECT year, COUNT(raceId) AS race_count FROM races GROUP BY year ORDER BY race_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE year = 2017 AND raceId NOT IN (SELECT raceId FROM races WHERE year = 2000);\t----- bird -----\tformula_1",
    "888": "SELECT name, location FROM circuits WHERE circuitRef = (SELECT circuitRef FROM races WHERE year = (SELECT MIN(year) FROM seasons) AND circuitId = circuits.circuitId)\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) FROM seasons WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Brands Hatch');\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId IN (SELECT raceId FROM races WHERE year = 2010 AND name = 'Singapore Grand Prix') ORDER BY r.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname, MAX(results.points) AS max_points FROM drivers JOIN results ON drivers.driverId = results.driverId GROUP BY drivers.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, rs.points FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId WHERE r.name = '2017 Chinese Grand Prix' ORDER BY rs.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT MIN(lapTimes.milliseconds) AS best_lap_time, drivers.forename, drivers.surname, races.name FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId GROUP BY lapTimes.raceId, drivers.driverId ORDER BY best_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Malaysian Grand Prix' AND year = 2009) AND driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(raceId) FILTER (WHERE position <> 1 AND surname = 'Hamilton' AND year >= 2010)) * 100.0 / COUNT(raceId) WHERE surname = 'Hamilton' AND year >= 2010 FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId;\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, MAX(driverStandings.wins) AS most_wins, MAX(driverStandings.points) AS max_points FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.driverId, drivers.forename, drivers.surname;\t----- bird -----\tformula_1",
    "898": "SELECT drivers.forename, drivers.surname, YEAR(CURRENT_TIMESTAMP) - drivers.dob AS age FROM drivers WHERE drivers.nationality = 'Japanese' ORDER BY age ASC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT circuitId, COUNT(*) AS race_count FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE year(date) BETWEEN 1990 AND 2000 GROUP BY circuitId HAVING race_count = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location FROM circuits INNER JOIN (SELECT raceId FROM races WHERE year = 2006) AS races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA'\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId JOIN constructors ON results.constructorId = constructors.constructorId JOIN qualifying ON results.raceId = qualifying.raceId AND qualifying.driverId = drivers.driverId JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId JOIN pitStops ON results.raceId = pitStops.raceId AND results.driverId = pitStops.driverId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND lapTimes.position < 20 GROUP BY races.name HAVING COUNT(DISTINCT lapTimes.position) > 0;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(DISTINCT r.raceId) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId JOIN circuits ci ON r.circuitId = ci.circuitId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND ci.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "904": "SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher';\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine') AND year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT races.name, results.points FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, races.date, races.country FROM races INNER JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT races.name, seasons.year, circuits.location FROM races JOIN seasons ON races.year = seasons.year JOIN circuits ON races.circuitId = circuits.circuitId JOIN ( SELECT raceId, COUNT(*) AS laps FROM lapTimes GROUP BY raceId ORDER BY laps DESC LIMIT 1 ) AS mostLaps ON races.raceId = mostLaps.raceId WHERE races.raceId = mostLaps.raceId;\t----- bird -----\tformula_1",
    "909": "SELECT (COUNT(CASE WHEN races.country = 'Germany' THEN 1 END) / COUNT(*)) * 100 AS percentage FROM races WHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT MAX(lat) FROM circuits WHERE circuitName IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring');\t----- bird -----\tformula_1",
    "912": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT nationality, MIN(dob) AS oldest_dob FROM drivers GROUP BY nationality ORDER BY oldest_dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT \"driverRef\" FROM drivers WHERE \"forename\" = 'Lewis' AND \"surname\" = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuitId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT YEAR(date) AS year FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit');\t----- bird -----\tformula_1",
    "921": "SELECT races.name, races.date, races.time FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT time FROM races WHERE name = 'Abu Dhabi Grand Prix 2010' AND year = 2010;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Italy');\t----- bird -----\tformula_1",
    "924": "SELECT DISTINCT STRFTIME('%Y-%m-%d', date) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Barcelona-Catalunya');\t----- bird -----\tformula_1",
    "925": "SELECT circuits.url FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND results.position = 1 AND races.year = 2007;\t----- bird -----\tformula_1",
    "929": "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT races.name, MIN(results.rank) AS highest_rank FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' GROUP BY races.name ORDER BY highest_rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009) AND statusId = (SELECT statusId FROM status WHERE status = 'Fastest Lap');\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT YEAR(date) AS year FROM races WHERE driverId IN (SELECT driverId FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'));\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix') AND year = 2008;\t----- bird -----\tformula_1",
    "934": "SELECT driver.forename, driver.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Australian' AND races.year = 1989 AND results.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT resultId, time, milliseconds FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2008) AND position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, r.url FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId JOIN seasons s ON ra.year = s.year WHERE s.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.position = 1\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT driverId) FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'UN') AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008);\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Chinese') AND positionText = 'Finished' AND statusId = (SELECT statusId FROM status WHERE status = 'Finished');\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(STRFTIME('%s', fastestLapTime)) AS average_fastest_lap_time FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(DISTINCT driverId) AS drivers_completing_laps, COUNT(DISTINCT raceId) AS total_races FROM results WHERE year = 2008 AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix') AND time IS NOT NULL\t----- bird -----\tformula_1",
    "944": "To find the champion and the last driver who finished the race in the 2008 Australian Grand Prix, we first need to identify the relevant records in the'results' table. The champion is the driver with the most points in the'results' table for the 2008 Australian Grand Prix. The last driver is the one with the highest 'position' value (i.e., the last place) for the same race. Once we have identified these two drivers, we can calculate the difference in their finishing times and express it as a percentage of the champion's finishing time. Here's the step-by-step SQL query: 1. Identify the champion: ``` SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ``` 2. Identify the last driver: ``` SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) ORDER BY position ASC LIMIT 1 ``` 3. Combine the champion and last driver's finishing times: ``` SELECT (SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) WHERE max_points = ( SELECT MAX(points) FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) ) )) AS champion_time, (SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) ORDER BY position ASC LIMIT 1 ) )) AS last_driver_time ``` 4. Calculate the percentage difference: ``` SELECT ( ( ( ( SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) WHERE max_points = ( SELECT MAX(points) FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) ) ) ) - ( SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) ORDER BY position ASC LIMIT 1 ) ) ) ) / ( SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) WHERE max_points = ( SELECT MAX(points) FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) GROUP BY driverId ) ) ) ) ) * 100 AS percentage_difference FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 Australian Grand Prix' ) ``` [SQL] SELECT ( ( ( ( SELECT time FROM results WHERE driverId = ( SELECT driverId FROM ( SELECT driverId, MAX(points) AS max_points FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = '2008 A\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide, Australia';\t----- bird -----\tformula_1",
    "946": "SELECT circuitRef, lat, lng FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-12-31';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(cr.points) FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.name, MAX(cr.points) AS max_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId GROUP BY c.name ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT DISTINCT c.name FROM constructors c LEFT JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT constructorId) FROM constructorResults WHERE points = 0 AND constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'Japanese') AND raceId IN (SELECT raceId FROM races WHERE round = 2);\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT constructorId FROM constructorStandings WHERE position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN results r ON c.constructorId = r.constructorId JOIN lapTimes lt ON r.driverId = lt.driverId WHERE c.nationality = 'French' AND lt.lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(DISTINCT driverId) FILTER (WHERE time IS NOT NULL) * 100.0 / COUNT(DISTINCT driverId)) AS completion_percentage FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.nationality = 'Japanese' AND results.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "955": "SELECT EXTRACT(YEAR FROM r.date) AS year, AVG(STRFTIME('%s', r.time) - STRFTIME('%s', SUBSTR(r.time, 1, 2) * 60 * 60 + SUBSTR(r.time, 4, 2) * 60 + SUBSTR(r.time, 7, 2))) AS avg_time_seconds FROM results r JOIN races ra ON r.raceId = ra.raceId WHERE r.position = 1 AND ra.year < 1975 GROUP BY year;\t----- bird -----\tformula_1",
    "956": "SELECT DISTINCT forename, surname FROM drivers WHERE year(dob) > 1975 AND position = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT driverId) FROM results WHERE positionText = 'DNF' AND nationality = 'Italian';\t----- bird -----\tformula_1",
    "958": "SELECT drivers.forename, drivers.surname FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLap = (SELECT MAX(fastestLap) FROM results);\t----- bird -----\tformula_1",
    "959": "SELECT MAX(fastestLap) AS fastest_lap_number FROM results WHERE year = 2009 AND statusId = (SELECT statusId FROM status WHERE status = 'Champion');\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "961": "SELECT r.name, s.year FROM races r JOIN seasons s ON r.year = s.year JOIN results res ON r.raceId = res.raceId JOIN lapTimes lt ON res.driverId = lt.driverId JOIN drivers d ON lt.driverId = d.driverId GROUP BY r.name, s.year ORDER BY MIN(lt.milliseconds) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(driverId) * 100.0 / (SELECT COUNT(driverId) FROM drivers WHERE year BETWEEN 2000 AND 2005)) AS percentage FROM drivers WHERE year < 1985 AND laps > 50 AND raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005);\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.raceId = lt.raceId JOIN circuits c ON lt.circuitId = c.circuitId JOIN constructors co ON d.constructorId = co.constructorId WHERE d.nationality = 'French' AND r.time < '02:00.00' AND co.nationality = 'French';\t----- bird -----\tformula_1",
    "964": "SELECT DISTINCT code FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT driverId, code FROM drivers ORDER BY year(dob) ASC LIMIT 3; SELECT COUNT(*) FROM drivers WHERE nationality = 'Netherlands';\t----- bird -----\tformula_1",
    "968": "SELECT \"driverRef\" FROM drivers WHERE \"forename\" = 'Robert' AND \"surname\" = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND year(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, d.dob, MIN(lt.time) AS earliest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE d.nationality = 'German' AND d.dob BETWEEN 1980 AND 1990 AND c.nationality = 'German' GROUP BY d.driverId ORDER BY earliest_lap_time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT drivers.driverRef FROM drivers WHERE drivers.nationality = 'German' ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT driverId, code FROM drivers WHERE year(dob) = 1971 AND fastestLapTime IS NOT NULL GROUP BY driverId, code;\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, d.dob, d.nationality, MAX(lt.time) AS latest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' GROUP BY d.driverId ORDER BY latest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT seasons.year, results.fastestLapTime FROM results INNER JOIN seasons ON results.raceId = seasons.year GROUP BY seasons.year ORDER BY results.fastestLapTime DESC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT MIN(time) AS lowest_speed_lap_time, seasons.year FROM results JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year GROUP BY seasons.year ORDER BY lowest_speed_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT driverId, MIN(time) AS fastest_first_lap_time FROM results JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE lapTimes.lap = 1 GROUP BY driverId ORDER BY fastest_first_lap_time DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(circuitId) FROM circuits WHERE country = 'Austria';\t----- bird -----\tformula_1",
    "979": "SELECT races.name, COUNT(DISTINCT results.driverId) AS finishers_count FROM races JOIN results ON races.raceId = results.raceId GROUP BY races.name ORDER BY finishers_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT DISTINCT d.driverRef, d.nationality, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 23 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT EXTRACT(YEAR FROM MIN(races.date)) AS youngest_driver_first_qualifying_year FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId WHERE drivers.dob = (SELECT MIN(drivers.dob) FROM drivers);\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT driverId) FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Puncture') AND nationality = 'American';\t----- bird -----\tformula_1",
    "983": "SELECT c.name, MAX(cr.points) AS max_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN results r ON cr.raceId = r.raceId WHERE c.nationality = 'Italian' GROUP BY c.name ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.url FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId GROUP BY c.url ORDER BY SUM(cs.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, MAX(lt.time) AS slowest_3rd_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'French Grand Prix' GROUP BY d.driverId, d.forename, d.surname ORDER BY slowest_3rd_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name, MIN(lt.milliseconds) AS fastest_1st_lap_time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId GROUP BY r.name ORDER BY fastest_1st_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2006 AND name = 'United States') AND position < 11;\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename, drivers.surname, AVG(pitStops.duration) AS avg_duration FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'German' AND 1980 < year(drivers.dob) AND year(drivers.dob) < 1986 GROUP BY drivers.driverId ORDER BY avg_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId WHERE c.name = 'Canadian Grand Prix' AND r.position = 1 AND r.year = 2008\t----- bird -----\tformula_1",
    "990": "SELECT constructorRef FROM results JOIN constructorResults ON results.constructorId = constructorResults.constructorId JOIN races ON constructorResults.raceId = races.raceId WHERE races.name = '2009 Singapore Grand Prix' AND results.position = 1 GROUP BY constructorRef ORDER BY MAX(results.time) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND year(dob) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT drivers.forename, drivers.surname, drivers.dob FROM drivers INNER JOIN constructors ON drivers.constructorId = constructors.constructorId WHERE constructors.nationality = 'German' AND drivers.nationality = 'German' AND year(drivers.dob) BETWEEN 1971 AND 1985 ORDER BY drivers.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT name, country, lat, lng FROM circuits WHERE name = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId JOIN circuits circ ON r.circuitId = circ.circuitId WHERE circ.name = 'Monaco' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.constructorId, c.name, c.nationality ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId IN (SELECT raceId FROM races WHERE name = 'Turkish Grand Prix');\t----- bird -----\tformula_1",
    "996": "SELECT AVG(COUNT(*)) FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY EXTRACT(YEAR FROM date);\t----- bird -----\tformula_1",
    "997": "SELECT MAX(nationality) AS majority_citizenship FROM drivers;\t----- bird -----\tformula_1",
    "998": "SELECT COUNT(DISTINCT r.driverId) AS victories, SUM(rs.points) AS points FROM results rs JOIN races r ON rs.raceId = r.raceId JOIN constructorResults cr ON rs.constructorId = cr.constructorId JOIN drivers d ON rs.driverId = d.driverId WHERE rs.position = 1 GROUP BY r.driverId HAVING points = (SELECT SUM(points) FROM constructorResults WHERE constructorId = (SELECT constructorId FROM rs WHERE rs.position = 1)) ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "999": "SELECT r.name, MIN(rt.fastestLapTime) AS fastestLapSpeed FROM races r JOIN results rt ON r.raceId = rt.raceId JOIN lapTimes lt ON rt.raceId = lt.raceId AND rt.driverId = lt.driverId WHERE lt.position = 1 GROUP BY r.name ORDER BY fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.name, circuits.location, circuits.country FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN qualifying q ON r.raceId = q.raceId JOIN circuits c ON q.circuitId = c.circuitId WHERE r.position = 1 AND q.position = 3 AND c.name = 'Marina Bay Street Circuit' AND r.year = 2008 GROUP BY d.driverId LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d1.forename, d1.surname, d1.nationality, r.name AS first_race FROM drivers d1 JOIN drivers d2 ON d1.driverId = d2.driverId JOIN races r ON d2.driverId = r.driverId WHERE d1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d1.driverId ORDER BY d1.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "1003": "SELECT MAX(accidents) AS highest_accidents FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND statusId = 3;\t----- bird -----\tformula_1",
    "1004": "SELECT MIN(dob), CONCAT(forename,'', surname) AS full_name, SUM(wins) AS total_wins FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY full_name ORDER BY MIN(dob) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(milliseconds) FROM pitStops;\t----- bird -----\tformula_1",
    "1006": "SELECT MIN(time) AS fastest_lap_time FROM lapTimes WHERE time IS NOT NULL;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(milliseconds) AS longest_time FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE raceId = (SELECT raceId FROM races WHERE name = '2011 Australian Grand Prix') AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1",
    "1009": "SELECT t1.driverId, t1.milliseconds AS time_spent_at_pit_stop FROM pitStops AS t1 JOIN races AS t2 ON t1.raceId = t2.raceId WHERE t2.year = 2011 AND t2.name = 'Australian Grand Prix' GROUP BY t1.driverId;\t----- bird -----\tformula_1",
    "1010": "SELECT r.name AS race_name, MAX(lt.time) AS lap_record FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' GROUP BY r.raceId ORDER BY lap_record DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname, MIN(lt.time) AS shortest_lap_time FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId JOIN circuits c ON ra.circuitId = c.circuitId WHERE c.name = 'Monaco' AND r.position = 1 GROUP BY d.driverId ORDER BY shortest_lap_time ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT t1.position FROM lapTimes AS t1 INNER JOIN results AS t2 ON t1.raceId = t2.raceId WHERE t2.driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND t1.milliseconds = (SELECT MIN(time) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'))\t----- bird -----\tformula_1",
    "1013": "SELECT MIN(time) AS lap_record FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Austrian Grand Prix');\t----- bird -----\tformula_1",
    "1014": "SELECT c.circuitId, c.name, MIN(lt.time) AS lap_record FROM circuits c JOIN lapTimes lt ON c.circuitId = lt.raceId WHERE c.country = 'Italy' GROUP BY c.circuitId, c.name\t----- bird -----\tformula_1",
    "1015": "SELECT raceId FROM lapTimes WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix') AND milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix'))\t----- bird -----\tformula_1",
    "1016": "SELECT t1.time FROM lapTimes t1 INNER JOIN races t2 ON t1.raceId = t2.raceId WHERE t2.name = 'Austrian Grand Prix' AND t1.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = t2.raceId) AND t1.driverId IN (SELECT driverId FROM results WHERE raceId = t2.raceId AND position = 1);\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.location, circuits.lat, circuits.lng FROM circuits JOIN results ON circuits.circuitId = results.raceId JOIN lapTimes ON results.driverId = lapTimes.driverId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE results.fastestLapTime = '1:29.488' AND lapTimes.position = 1 AND lapTimes.lap = ( SELECT MIN(lap) FROM lapTimes WHERE results.driverId = lapTimes.driverId AND results.fastestLap = 1 );\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId IN (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lt.milliseconds) AS avg_lap_time_ms FROM circuits c JOIN lapTimes lt ON c.circuitId = lt.circuitId JOIN races r ON lt.raceId = r.raceId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT MAX(overall_rating) FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT p.player_name, MAX(p.height) AS max_height FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id GROUP BY p.player_api_id ORDER BY max_height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT MIN(potential) AS lowest_potential, player_api_id FROM Player_Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id, MAX(crossing) AS max_crossing FROM Player_Attributes GROUP BY player_api_id ORDER BY max_crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM Match m JOIN League l ON m.league_id = l.id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id, COUNT(*) AS lost_matches FROM Match WHERE home_team_lost = (SUBTRACT(home_team_goal, away_team_goal) < 0) AND season = '2015/2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT p.player_name, COUNT(pa.penalties) AS penalty_count FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.penalties > 0 GROUP BY p.player_name ORDER BY penalty_count DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.season = '2009/2010' AND T1.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND T1.away_team_goal > T1.home_team_goal GROUP BY T2.team_long_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT team_api_id, team_fifa_api_id, buildUpPlaySpeed FROM (SELECT team_api_id, team_fifa_api_id, buildUpPlaySpeed, ROW_NUMBER() OVER (ORDER BY buildUpPlaySpeed DESC) as rn FROM Team_Attributes) WHERE rn <= 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name, COUNT(*) AS draw_count FROM Match m JOIN League l ON m.league_id = l.id WHERE m.season = '2016' AND m.home_team_goal = m.away_team_goal GROUP BY l.id ORDER BY draw_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT player_name, player_api_id, player_fifa_api_id, (DATETIME() - birthday) AS age, sprint_speed FROM Player_Attributes WHERE sprint_speed >= 97 AND YEAR(date) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT L.name, MAX(match_count) AS max_matches FROM ( SELECT league_id, COUNT(league_id) AS match_count FROM Match GROUP BY league_id ) AS match_counts JOIN League L ON match_counts.league_id = L.id;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date,1,4) = '2010' AND overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010') GROUP BY player_api_id ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT DISTINCT team_long_name FROM Team_Attributes JOIN Player_Attributes ON Team_Attributes.team_api_id = Player_Attributes.team_api_id WHERE buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL) AND strftime('%Y', date) = '2012';\t----- bird -----\teuropean_football_2",
    "1037": "SELECT ROUND(100.0 * SUM(CASE WHEN preferred_foot = 'left' AND YEAR(birthday) BETWEEN '1987' AND '1992' THEN 1 ELSE 0 END) / COUNT(player_fifa_api_id), 2) AS percentage_left_foot_born_1987_1992 FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM Match m JOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id JOIN League l ON t.team_fifa_api_id = l.id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS average_heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY average_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlayDribblingClass = 'Normal' AND Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-12-31 23:59:59' AND Team_Attributes.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE Team_Attributes.date >= '2014-01-01 00:00:00' AND Team_Attributes.date <= '2014-12-31 23:59:59') ORDER BY Team_Attributes.chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM Player_Attributes WHERE \"player_name\" = 'Franco Zennaro';\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlayPositioningClass FROM Team WHERE team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT \"Player_Attributes\".\"header_accuracy\" FROM \"Player_Attributes\" INNER JOIN \"Player\" ON \"Player_Attributes\".\"player_api_id\" = \"Player\".\"player_api_id\" WHERE \"Player\".\"player_name\" = 'Francois Affolter' AND \"Player_Attributes\".\"date\" = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Gabriel Tamas' AND strftime('%Y', date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM League WHERE name = 'Scotland Premier League');\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM (SELECT player_api_id, preferred_foot FROM Player_Attributes ORDER BY STRFTIME('%Y', birthday) ASC LIMIT 1) WHERE player_api_id = preferred_foot;\t----- bird -----\teuropean_football_2",
    "1051": "SELECT * FROM Player_Attributes WHERE potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT \"defensive_work_rate\" FROM Player_Attributes WHERE \"player_name\" = 'David Wilson';\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE id = (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes));\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League WHERE League.country_id = (SELECT id FROM Country WHERE Country.name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(pa.finishing) AS highest_avg_finishing_rate FROM Player_Attributes AS pa JOIN Player AS p ON pa.player_api_id = p.player_api_id WHERE p.height IN ( SELECT MIN(height) AS shortest_height FROM Player UNION SELECT MAX(height) AS tallest_height FROM Player );\t----- bird -----\teuropean_football_2",
    "1059": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT \"potential\" FROM Player_Attributes WHERE \"player_name\" = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT DISTINCT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player JOIN Player_Attributes t2 ON Player.player_api_id = t2.player_api_id WHERE strftime('%Y', Player.birthday) >= '2010' AND strftime('%Y', Player.birthday) <= '2015' AND Player.height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height, player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT country_id FROM League WHERE name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT team_short_name FROM Match WHERE home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name, overall_rating, potential, (shot_power + agility + reactions + balance + jumping) AS balance_score FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE potential = 61 ORDER BY balance_score DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control), AVG(ball_control)) FROM Player_Attributes WHERE player_name = 'Abdou Diallo' OR player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT (SELECT birthday FROM Player WHERE player_api_id = (SELECT get_player_api_id('Aaron Lennon'))) AS Aaron_birthday, (SELECT birthday FROM Player WHERE player_api_id = (SELECT get_player_api_id('Abdelaziz Barrada'))) AS Abdelaziz_birthday\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id ORDER BY tallest_player_height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT country_id FROM League WHERE name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT name FROM League WHERE country_id IN (SELECT id FROM Country WHERE name = 'Germany');\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name, MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes GROUP BY player_name;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player.birthday) < '1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS best_crossing FROM Player_Attributes WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone');\t----- bird -----\teuropean_football_2",
    "1086": "SELECT \"heading_accuracy\" FROM Player_Attributes WHERE \"player_name\" = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volleys > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE country_id IN (SELECT id FROM Country WHERE name = 'Belgium') AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(long_passing) AS long_passing_score FROM (SELECT long_passing FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY STRFTIME('%Y', birthday) ASC LIMIT 1)) AS oldest_player;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND SUBSTR(date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(name) FROM League WHERE season = '2008/2009' GROUP BY season;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SUBTRACT(overall_rating, (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian');\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) FROM Player_Attributes WHERE player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(Team_Attributes.chanceCreationPassing) AS max_chance_creation_passing, Team_Attributes.chanceCreationPassingClass FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team.team_long_name = 'Ajax' GROUP BY Team_Attributes.chanceCreationPassingClass ORDER BY max_chance_creation_passing DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) FROM Player_Attributes WHERE player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date LIKE '2016-06-23%' GROUP BY Player.player_name ORDER BY MAX(Player.birthday) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT \"attacking_work_rate\" FROM Player_Attributes WHERE \"player_name\" = 'Francesco Migliore' AND \"date\" LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT \"defensive_work_rate\" FROM Player_Attributes WHERE \"player_name\" = 'Kevin Berigaud' AND \"date\" = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM (SELECT date, crossing FROM Player_Attributes WHERE player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1) WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT \"buildUpPlaySpeedClass\" FROM \"Team_Attributes\" WHERE \"team_long_name\" = 'Willem II' AND \"date\" = '2011-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT \"buildUpPlayDribblingClass\" FROM \"Team_Attributes\" WHERE \"team_short_name\" = 'LEI' AND \"date\" = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT \"buildUpPlayPassingClass\" FROM \"Team_Attributes\" WHERE \"team_long_name\" = 'FC Lorient' AND \"date\" LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT \"chance_creation_passing_class\" FROM \"Team_Attributes\" WHERE \"team_long_name\" = 'PEC Zwolle' AND \"date\" = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT \"chance_creation_crossing_class\" FROM \"Team_Attributes\" WHERE \"team_long_name\" = 'Hull City' AND \"date\" = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT \"defenceAggressionClass\" FROM \"Team_Attributes\" WHERE \"team_long_name\" = 'Hannover 96' AND \"date\" LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (SUBTRACT(overall_rating, (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')) / overall_rating) * 100 AS percentage FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday) > '34 years'\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(*) FROM Player_Attributes WHERE player_name = 'Aaron Lennon' AND home_player_X1 = 1 OR home_player_X2 = 1 OR home_player_X3 = 1 OR home_player_X4 = 1 OR home_player_X5 = 1 OR home_player_X6 = 1 OR home_player_X7 = 1 OR home_player_X8 = 1 OR home_player_X9 = 1 OR home_player_10 = 1 OR home_player_11 = 1;\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) + SUM(away_player_X1) + SUM(away_player_X2) + SUM(away_player_X3) + SUM(away_player_X4) + SUM(away_player_X5) + SUM(away_player_X6) + SUM(away_player_X7) + SUM(away_player_X8) + SUM(away_player_X9) + SUM(away_player_X10) + SUM(away_player_X11) AS total_goals FROM Match JOIN Player ON Match.away_player_X1 = Player.player_api_id WHERE Player.player_name IN ('Daan Smith', 'Filipe Ferreira') GROUP BY Player.player_api_id;\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) AS total_goals FROM Player_Attributes JOIN Match ON Player_Attributes.player_api_id = Match.home_player_X1 WHERE SUBSTR(birthday, 1, 4) - SUBSTR(CURRENT_TIMESTAMP, 1, 4) < 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name, MAX(potential) AS highest_potential FROM Player_Attributes GROUP BY player_name;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT DISTINCT player_name FROM Player_Attributes WHERE attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT MAX(SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'), STRFTIME('%s', birthday))) AS max_age, player_name FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE finishing = 1 GROUP BY player_name ORDER BY max_age DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Player.player_name FROM Player JOIN Country ON Player.country_id = Country.id WHERE Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT P.country_id, C.name AS country_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id JOIN Country C ON P.country_id = C.id WHERE PA.vision > 89 GROUP BY P.country_id, C.name;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT c.name, MAX(pa.weight) AS heaviest_avg_weight FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id JOIN Country c ON p.country_id = c.id GROUP BY c.name ORDER BY heaviest_avg_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT DISTINCT t.team_short_name FROM Team t JOIN Player_Attributes pa ON t.team_api_id = pa.team_api_id WHERE pa.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) FROM Player WHERE Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT DISTINCT player_name FROM Player_Attributes WHERE height > 180 ORDER BY player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT (jumping AND id = 6) - (jumping AND id = 23) AS jumping_difference FROM Player_Attributes WHERE id IN (6, 23);\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(*) FILTER (WHERE strength > 80 AND stamina > 80)) * 100.0 / COUNT(*) FROM (SELECT pa1.player_api_id, pa1.strength, pa1.stamina FROM Player_Attributes pa1 INNER JOIN Player_Attributes pa2 ON pa1.player_api_id = pa2.player_api_id) WHERE pa1.strength > 80 AND pa1.stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT country_id FROM League WHERE name = 'Ekstraklasa' AND country_id IN (SELECT id FROM Country WHERE name = 'Poland');\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM Match WHERE date = '2008-09-24' AND country_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team WHERE team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A') AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) FROM Match WHERE league_id IN (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT p.player_name, pa.finishing, pa.curve FROM ( SELECT player_api_id, MAX(weight) AS max_weight FROM Player GROUP BY player_api_id HAVING max_weight IS NOT NULL ) AS heaviest_player JOIN Player_Attributes AS pa ON heaviest_player.player_api_id = pa.player_api_id JOIN Player AS p ON pa.player_api_id = p.player_api_id ORDER BY heaviest_player.max_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS games_count FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id GROUP BY T2.team_long_name ORDER BY MAX(T1.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(*) FILTER (WHERE height < 180 AND overall_rating > 70) * 100.0 / COUNT(*)) AS percentage FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT (COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '+' THEN 1 END) / COUNT(CASE WHEN Patient.SEX = 'M' THEN 1 END)) * 100 AS inpatient_percentage, (COUNT(CASE WHEN Patient.SEX = 'M' AND Patient.Admission = '-' THEN 1 END) / COUNT(CASE WHEN Patient.SEX = 'M' THEN 1 END)) * 100 AS outpatient_percentage, ABS(inpatient_percentage - outpatient_percentage) AS deviation FROM Patient WHERE Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT (COUNT(*) FILTER (WHERE year(Birthday) > '1930' AND SEX = 'F')) * 100.0 / COUNT(*) FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT 100.0 * COUNT(CASE WHEN Admission = '+' THEN 1 END) / COUNT(*) AS inpatient_percentage FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940;\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (COUNT(CASE WHEN Admission = '-' THEN 1 END) / COUNT(CASE WHEN Admission = '+' THEN 1 END)) AS outpatient_to_inpatient_ratio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Patient WHERE ID = 30609; SELECT Date FROM Laboratory WHERE ID IN (SELECT Examination_ID FROM Examination WHERE Patient_ID = 30609);\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT \"SEX\", \"Birthday\" FROM \"Patient\" WHERE \"ID\" = 163109; SELECT \"Examination Date\", \"Symptoms\" FROM \"Examination\" WHERE \"ID\" = (SELECT \"ID\" FROM \"Patient\" WHERE \"ID\" = 163109);\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE year(Patient.Birthday) = '1937' AND Laboratory.T-CHO >= '250';\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(*) FILTER (WHERE TP < '6.0' OR TP > '8.5')) * 100.0 / COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.TP IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL_IgG) FROM Examination WHERE Admission = '+' AND SUBTRACT(year(current_timestamp), year(Birthday)) >= 50;\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'F' AND YEAR(p.Birthday) = 1997 AND p.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(SUBTRACT(YEAR(First_Date), YEAR(Birthday))) AS youngest_age FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Thrombosis = 1 AND Examination Date BETWEEN '1997-01-01' AND '1997-12-31' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) AS age_gap FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TG >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Symptoms, Diagnosis FROM (SELECT Symptoms, Diagnosis, Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID ORDER BY Birthday ASC LIMIT 1) WHERE Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT MONTH(Laboratory.Date) AS Month, AVG(COUNT(Patient.ID)) AS Average_Patients FROM Patient INNER JOIN Examination ON Patient.ID = Examination.Patient_ID INNER JOIN Laboratory ON Examination.ID = Laboratory.Examination_ID WHERE YEAR(Laboratory.Date) = 1998 AND Patient.SEX = 'M' GROUP BY Month;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Examination.Examination Date) AS Oldest_Examination_Date, (SUBTRACT(year(Patient.Birthday), year(Patient.First Date))) AS Age_At_Arrival FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS ratio FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.PatientID WHERE (Laboratory.UA <= 8.0 AND Patient.SEX = 'M') OR (Laboratory.UA <= 6.5 AND Patient.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient LEFT JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1 AND Examination.ID IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE underage(Patient.Birthday) = 1 AND year(Examination.Examination Date) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM ( SELECT Patient.* FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.T-BIL >= 2.0 ) AS Subquery;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS count FROM Examination WHERE Examination Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT('1999', year(Birthday))) AS average_age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SUBTRACT('1991-10-01', day(Laboratory.Date)) <= 30 AND SUBTRACT('1991-10-01', day(Laboratory.Date)) >= 1 AND Patient.Admission = 'Yes';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT SUBTRACT(year(Examination.Examination_Date), year(Patient.Birthday)) AS Age, Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT \"aCL IgM\" FROM \"Examination\" WHERE \"ID\" = 3605340 AND \"Examination Date\" = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT \"Laboratory\".\"T-CHO\" FROM \"Laboratory\" INNER JOIN \"Examination\" ON \"Laboratory\".\"ID\" = \"Examination\".\"ID\" WHERE \"Examination\".\"ID\" = 2927464 AND \"Examination\".\"Examination Date\" = '1995-9-4'\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY ID LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT Laboratory.aCL_IgM FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.Examination_Date = '1994-02-19' AND Laboratory.Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE Date = '1992-06-12' AND GOT = 9);\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT(year(Laboratory.Date), year(Patient.Birthday)) FROM Patient, Laboratory WHERE Laboratory.ID = (SELECT ID FROM Laboratory WHERE UA = '8.4' AND Date = '1991-10-21') AND Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First Date = '1991-06-13' AND Examination.Diagnosis = 'SJS' AND Laboratory.Date BETWEEN '1995-01-01' AND '1995-12-31';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT original_diagnose FROM Patient WHERE ID = (SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination_Date = '1997-01-27' AND Examination.Diagnosis = 'SLE');\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination WHERE Patient_ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-03-01') AND Examination_Date = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN Date like '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN Date like '1981-12-%' THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN Date like '1981-11-%' THEN `T-CHO` ELSE 0 END) * 100 AS decrease_rate FROM Laboratory WHERE ID IN (SELECT ID FROM Patient WHERE Birthday = '1959-02-18');\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Behcet' AND YEAR(Examination.Description) BETWEEN 1997 AND 1997 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT Patient.ID, COUNT(*) AS patient_count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND YEAR(Patient.Birthday) = 1964 AND Patient.Admission = '+' GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA = 'S' AND aCL IgM > (SELECT AVG(aCL IgM) FROM Examination) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT 100.0 * COUNT(DISTINCT e.ID) / COUNT(DISTINCT p.ID) AS percentage FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.UA <= 6.5 AND l.U_PRO > 0 AND l.U_PRO < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT 100.0 * COUNT(CASE WHEN p.SEX = 'M' AND YEAR(p.FIRST_DATE) = 1981 AND e.Diagnosis = 'BEHCET' THEN 1 END) / COUNT(CASE WHEN p.SEX = 'M' AND YEAR(p.FIRST_DATE) = 1981 THEN 1 END) AS percentage FROM Patient p JOIN Examination e ON p.ID = e.ID;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Examination Date = '1991-10' AND Laboratory.T-BIL < 2.0 AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31' AND ID NOT IN (SELECT ID FROM Examination WHERE ANA Pattern = 'P');\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM (SELECT * FROM Examination WHERE Diagnosis = 'PSS' AND EXISTS (SELECT 1 FROM Laboratory WHERE Examination.ID = Laboratory.ID AND CRP > 2 AND CRE = 1 AND LDH = 123)) JOIN Patient ON Examination.ID = Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(Laboratory.ALB) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT e.Description AS first_medical_info_date, p.Diagnosis AS disease FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.ID = 48473 LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Examination.Examination Date) = '1997' AND (Laboratory.TP > 6 OR Laboratory.TP < 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (COUNT(CASE WHEN \"Symptoms\" LIKE '%thrombocytopenia%' AND \"Diagnosis\" LIKE '%SLE%' THEN 1 END) * 100.0 / COUNT(CASE WHEN \"Symptoms\" LIKE '%thrombocytopenia%' THEN 1 END)) AS proportion FROM \"Examination\";\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT calculation FROM (SELECT (COUNT(*) FILTER (WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F')) * 100.0 / COUNT(*) FILTER (WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA')) AS subquery;\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Examination.ID IN ( SELECT ID FROM Examination WHERE Examination Date BETWEEN '1995-01-01' AND '1997-12-31' ) AND Diagnosis = 'Behcet' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) FROM Examination WHERE `ID` = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT L.UA FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.ID = 57266 AND (L.UA > 8.0 AND P.SEX = 'M' OR L.UA > 6.5 AND P.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Examination.Examination Date FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 48473 AND Examination.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE year(Laboratory.Date) = 1994 AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT >= 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GPT > 60 ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH BETWEEN 600 AND 800;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT p.ID, CASE WHEN p.Admission = '+' THEN 'Inpatient' ELSE 'Outpatient' END AS Admission_Status FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.ALP < 300 GROUP BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday = '1982-04-01' AND l.ALP < 300;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT L.TP - 8.5 AS deviation FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND L.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT * FROM Patient WHERE SEX = 'M' AND ALB < 3.5 OR ALB > 5.5 ORDER BY Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis, Laboratory.ALB, CASE WHEN Laboratory.ALB BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS Albumin_Status FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1982-01-01' AND Patient.Birthday LIKE '1982-%';\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT 100.0 * COUNT(CASE WHEN P.SEX = 'F' AND (L.UA > 8.0 OR (L.UA > 6.5 AND P.SEX = 'F')) THEN 1 END) / COUNT(*) AS percentage FROM Patient P JOIN Laboratory L ON P.ID = L.ID;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) AS average_UA_index FROM (SELECT UA, ID FROM Laboratory WHERE UA < CASE WHEN SEX = 'M' THEN 8.0 ELSE 6.5 END) GROUP BY ID HAVING AVG(UA) < CASE WHEN SEX = 'M' THEN 8.0 ELSE 6.5 END;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient, Examination, Laboratory WHERE Laboratory.ID = Examination.ID AND Laboratory.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'RA' AND Examination.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END)) AS result FROM Patient p JOIN Examination e ON p.ID = e.Patient_ID WHERE e.CRE >= 1.5;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Laboratory.T_BIL FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T_BIL = (SELECT MAX(T_BIL) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, COUNT(Examination.ID) AS total_patients FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T_BIL >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.T_CHO FROM (SELECT ID, MIN(Birthday) AS min_birthday FROM Patient) AS OLDEST_PATIENT JOIN Patient P ON OLDEST_PATIENT.ID = P.ID JOIN Laboratory L ON P.ID = L.ID WHERE L.T_CHO = (SELECT MAX(T_CHO) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(DATEDIFF(year, birthday, NOW())) AS average_age FROM Patient WHERE sex = 'M' AND T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Examination.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.TG > 300;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG >= 200 AND (SUBSTR('1900-01-01', 1, 4) - SUBSTR(Patient.Birthday, 1, 4)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT \"Patient\".\"ID\" FROM \"Patient\" INNER JOIN \"Laboratory\" ON \"Patient\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Laboratory\".\"CPK\" < 250 AND \"Patient\".\"Admission\" = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND year(Patient.Birthday) BETWEEN '1936' AND '1956' AND Examination.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, EXTRACT(YEAR FROM AGE(Patient.Birthday)) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GLU >= 180 AND Examination.T_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Laboratory.GLU FROM Patient, Examination, Laboratory WHERE Patient.ID = Examination.ID AND Laboratory.ID = Examination.ID AND year(Patient.Description) = 1991 AND Laboratory.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.WBC < 3.5 OR Laboratory.WBC > 9.0 GROUP BY Patient.SEX ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, Patient.Description, EXTRACT(YEAR FROM AGE(Patient.Birthday)) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RBC < 3.5 AND Examination.Diagnosis IS NOT NULL GROUP BY Patient.ID, Patient.Description, EXTRACT(YEAR FROM AGE(Patient.Birthday));\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis, Laboratory.RBC, Laboratory.GOT, Laboratory.GPT, Laboratory.LDH, Laboratory.ALP, Laboratory.TP, Laboratory.ALB, Laboratory.UA, Laboratory.UN, Laboratory.CRE, Laboratory.T-BIL, Laboratory.T-CHO, Laboratory.TG, Laboratory.CPK, Laboratory.GLU, Laboratory.WBC, Laboratory.HGB, Laboratory.HCT, Laboratory.PLT, Laboratory.PT, Laboratory.APTT, Laboratory.FG, Laboratory.PIC, Laboratory.TAT, Laboratory.TAT2, Laboratory.U-PRO, Laboratory.IGG, Laboratory.IGA, Laboratory.IGM, Laboratory.CRP, Laboratory.RA, Laboratory.RF, Laboratory.C3, Laboratory.C4, Laboratory.RNP, Laboratory.SM, Laboratory.SC170, Laboratory.SSA, Laboratory.SSB, Laboratory.CENTROMEA, Laboratory.DNA, Laboratory.DNA-II FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) >= 50 AND (Laboratory.RBC <= 3.5 OR Laboratory.RBC >= 6.0) AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient, Examination WHERE Patient.ID = Examination.ID AND Examination.Admission = '-' AND Examination.HGB < 10;\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT P.ID, SUBTRACT(year(current_timestamp), year(P.Birthday)) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID GROUP BY P.ID HAVING COUNT(L.ID) > 2 AND HCT >= 52;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(CASE WHEN PLT < 100 THEN 1 END) AS lower_than_normal, COUNT(CASE WHEN PLT > 400 THEN 1 END) AS higher_than_normal FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = '1984' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT (COUNT(CASE WHEN sex = 'F' AND age > 55 AND pt >= 14 THEN 1 END) * 100.0 / COUNT(CASE WHEN age > 55 AND pt >= 14 THEN 1 END)) AS percentage FROM Patient p JOIN Examination e ON p.ID = e.PatientID JOIN Laboratory l ON e.ID = l.ExaminationID WHERE pt >= 14;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID IN (SELECT ID FROM Laboratory WHERE PT < 14) AND Patient.First Date > '1992-12-31';\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(*) FROM Examination WHERE APTT > 45 AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.WBC > 3.5 AND Laboratory.WBC < 9.0 AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday > '1980-01-01' AND l.FG < 150 OR l.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Diagnosis FROM Examination WHERE U_PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U_PRO BETWEEN 0 AND 30 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination WHERE IGG > 900 AND IGG < 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Patient.Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.IGA BETWEEN 80 AND 500 ORDER BY Examination.IGA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE IGA > 80 AND IGA < 500 AND YEAR(First Date) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT MAX(COUNT(Examination.Diagnosis)) AS most_common_disease FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.aCL_IgM <= 40 OR Examination.aCL_IgM >= 400 GROUP BY Examination.Diagnosis HAVING COUNT(Examination.Diagnosis) > 0;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE CRP = '+' AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE > 1.5 AND Patient.ID NOT IN ( SELECT ID FROM Patient WHERE SUBTRACT((YEAR(CURDATE()), YEAR(Birthday)), 70) < 0 );\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RA = '-' AND e.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Diagnosis FROM Patient, Examination WHERE Patient.Birthday > '1985-01-01' AND Examination.RA IN ('-', '+-') AND Patient.ID = Examination.ID;\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.RF = 'normal' AND Patient.Age > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RF < 20 AND l.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.C3 > 35 AND e.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination WHERE Hematoclit NOT BETWEEN 29 AND 52) AND Patient.Hematoclit NOT BETWEEN 29 AND 52;\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Thrombosis = 1 AND e.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RNP = '-' OR Examination.RNP = '-,-' AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RNP NOT IN ('-', '+-') GROUP BY P.Birthday ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient WHERE \"Anti-SM\" = 'normal' AND \"Thrombosis\" = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL_IgM = 'abnormal' AND Examination.anti_SM NOT IN ('negative', '0') ORDER BY Patient.Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Examination.ID FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Examination_Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.SC170 IN ('negative', '0') AND p.SEX = 'F' AND p.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.SSA = '-';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.SSA NOT IN ('negative', '0') GROUP BY Patient.ID ORDER BY Patient.ID ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL_IgG = 0 AND Examination.aCL_IgM = 0 AND Examination.aCL_IgA = 0 AND Examination.ANA = 0 AND Examination.ANA_Pattern = '-' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE anti_SSB IN ('negative', '0') AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID) AS male_patients FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CENTROMEA IN ('-', '+-') AND SSB IN ('-', '+-') AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Examination.Diagnosis FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.DNA >= 8;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM (SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.DNA < 8 AND Examination.Description IS NULL) AS Subquery;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.IGG BETWEEN 900 AND 2000 AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(CASE WHEN GOT >= 60 AND Diagnosis = 'SLE' THEN 1 END) * 1.0 / COUNT(CASE WHEN GOT >= 60 THEN 1 END)) AS percentage FROM Laboratory;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) FROM Patient WHERE GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.Birthday, MAX(Laboratory.GPT) AS max_gpt FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GPT < 60 GROUP BY Patient.Birthday ORDER BY max_gpt DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(First_Date) FROM (SELECT Patient.ID, Patient.First_Date FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Laboratory.LDH < 500 ORDER BY Laboratory.LDH DESC LIMIT 1) AS Subquery;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(\"Patient\".\"First Date\") AS latest_patient_date, \"Laboratory\".\"LDH\" AS abnormal_LDH FROM \"Patient\" JOIN \"Examination\" ON \"Patient\".\"ID\" = \"Examination\".\"ID\" JOIN \"Laboratory\" ON \"Examination\".\"ID\" = \"Laboratory\".\"ID\" WHERE \"Laboratory\".\"LDH\" >= 500 GROUP BY \"Patient\".\"ID\" ORDER BY latest_patient_date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Examination WHERE ALP >= 300 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP < 300 AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Diagnosis FROM Examination WHERE aCL_IgG < 6.0 OR aCL_IgM < 6.0 OR aCL_IgA < 6.0 OR TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SJS' AND TP > 6.0 AND TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT e.Examination_Date FROM Examination e JOIN ( SELECT l.Patient_ID, MAX(l.ALB) AS Max_ALB FROM Laboratory l WHERE l.ALB BETWEEN 3.5 AND 5.5 GROUP BY l.Patient_ID ) f ON e.ID = f.Patient_ID ORDER BY f.Max_ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 AND Laboratory.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT aCL_IgG, aCL_IgM, aCL_IgA FROM ( SELECT P.ID, L.aCL_IgG, L.aCL_IgM, L.aCL_IgA FROM Patient P JOIN Laboratory L ON P.ID = L.PatientID WHERE P.SEX = 'F' AND L.UA > 6.50 GROUP BY P.ID, L.aCL_IgG, L.aCL_IgM, L.aCL_IgA HAVING MAX(L.UA) ) AS Subquery;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(Laboratory.ANA) AS highest_ANA_concentration FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE < 1.5 AND Examination.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Examination WHERE T_BIL >= 2.0 AND ANA_Pattern LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT a.aCL_IgM FROM Examination a JOIN Patient p ON a.ID = p.ID WHERE a.T_BIL = (SELECT MAX(Laboratory.T_BIL) FROM Laboratory WHERE Laboratory.T_BIL < 2.0);\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination WHERE T_CHO >= 250 AND KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination WHERE T_CHO < 250 AND ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Examination WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis, MAX(Laboratory.TG) AS highest_normal_TG FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG < 200 GROUP BY Patient.Diagnosis ORDER BY highest_normal_TG DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT DISTINCT Examination.ID FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 0 AND Examination.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Examination WHERE CPK < 250 AND (KCT = '+' OR RVVT = '+' OR LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Birthday) FROM Patient WHERE GLU > 180;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Examination WHERE GLU < 180 AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Admission = '+' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RBC < 3.5 OR Examination.RBC > 6.0 AND Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient WHERE PLT BETWEEN 100 AND 400 AND Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Patient.Description, Laboratory.PLT FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT) AS average_prothrombin_time FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Examination WHERE Thrombosis IN (1, 2) AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Angela' AND last_name = 'Sanders');\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Engineering');\t----- bird -----\tstudent_club",
    "1314": "SELECT DISTINCT CONCAT(first_name,'', last_name) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE department = 'Art and Design');\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT member.phone FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer')\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium' AND member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event = 'Women\\'s Soccer');\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name, COUNT(a.link_to_event) AS attendance_count FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event GROUP BY e.event_name ORDER BY attendance_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1320": "SELECT event_name FROM attendance JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE YEAR(event.event_date) = 2019 AND member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND event_id IN ( SELECT event_id FROM attendance GROUP BY event_id HAVING COUNT(member_id) > 10 );\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event WHERE COUNT(attendance.link_to_member) > 20 AND type!= 'fundraiser' GROUP BY event_name;\t----- bird -----\tstudent_club",
    "1324": "SELECT DIVIDE(COUNT(DISTINCT event_name), COUNT(event_id)) AS average_attendance FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) FROM expense WHERE link_to_member IN (SELECT member_id FROM member) AND link_to_event IN (SELECT event_id FROM event);\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE link_to_major = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT member.first_name, member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Laugh Out Loud';\t----- bird -----\tstudent_club",
    "1328": "SELECT last_name FROM member WHERE link_to_major = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT t1.county FROM zip_code AS t1 INNER JOIN member AS t2 ON t1.zip_code = t2.zip WHERE t2.first_name = 'Sherri' AND t2.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Tyler' AND last_name = 'Hewitt');\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE member_id IN (SELECT member_id FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(cost) FROM expense WHERE category = 'Food' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Meeting');\t----- bird -----\tstudent_club",
    "1333": "SELECT t1.city, t1.state FROM zip_code AS t1 INNER JOIN member AS t2 ON t1.zip_code = t2.zip WHERE t2.position = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT CONCAT(first_name,'', last_name) AS full_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE short_state = 'IL';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(cost) FROM expense WHERE category = 'Advertisement' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Meeting');\t----- bird -----\tstudent_club",
    "1336": "SELECT department FROM major WHERE major_id IN ( SELECT link_to_major FROM member WHERE first_name = 'Pierce' AND last_name = 'Guidi' );\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE event_status = 'approved' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Speaker');\t----- bird -----\tstudent_club",
    "1338": "SELECT expense_description, approved FROM expense WHERE link_to_event = 'October Meeting' AND event_date = '2019-10-08' AND approved = 'True';\t----- bird -----\tstudent_club",
    "1339": "SELECT AVG(e.cost) AS average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id JOIN event ev ON e.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND ev.event_date LIKE '____-09%' OR ev.event_date LIKE '____-10%';\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(b.spent) AS total_spent_2019 FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE YEAR(e.event_date) = 2019 UNION SELECT SUM(b.spent) AS total_spent_2020 FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE YEAR(e.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Poster')) AND link_to_budget IN (SELECT budget_id FROM budget WHERE event_status = '2019-09-04');\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT t2.county FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.first_name = 'Adela' AND t1.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_status = 'exceeded' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Meeting');\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE event_status = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT event_status FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Brent' AND last_name = 'Thomason');\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT t1.type FROM zip_code AS t1 INNER JOIN member AS t2 ON t1.zip_code = t2.zip WHERE t2.first_name = 'Christof' AND t2.last_name = 'Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1355": "SELECT t2.state FROM member AS t1 INNER JOIN zip_code AS t2 ON t1.zip = t2.zip_code WHERE t1.first_name = 'Sacha' AND t1.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT department FROM major WHERE major_name = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT date_received FROM income WHERE source = 'Dues' AND link_to_member = (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton');\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'Dues' ORDER BY i.received_date ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM ( SELECT CASE WHEN SUM(CASE WHEN \"event_name\" = 'Yearly Kickoff' THEN \"amount\" ELSE 0 END) > SUM(CASE WHEN \"event_name\" = 'October Meeting' THEN \"amount\" ELSE 0 END) THEN 1 ELSE 0 END AS comparison FROM \"budget\" WHERE \"category\" = 'Advertisement' GROUP BY \"event_name\" ) AS subquery;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(CASE WHEN category = 'Parking' THEN amount ELSE 0 END) / SUM(amount)) * 100 FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'November Speaker')\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT city FROM zip_code WHERE zip = (SELECT zip FROM member WHERE first_name = 'Amy' AND last_name = 'Firth');\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description, cost FROM expense WHERE link_to_budget = (SELECT budget_id FROM budget ORDER BY remaining ASC LIMIT 1)\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT member_id FROM attendance WHERE link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college, COUNT(member.member_id) AS popularity FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT event_id, MAX(amount) AS highest_budget FROM budget GROUP BY event_id;\t----- bird -----\tstudent_club",
    "1370": "SELECT expense_description FROM expense WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer');\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE link_to_member = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE short_state = 'MD');\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT event_id) FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE phone = '954-555-6240');\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name, last_name FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education');\t----- bird -----\tstudent_club",
    "1376": "SELECT event_name, MAX(DIVIDE(spent, amount)) AS highest_spend_to_budget_ratio FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE status = 'Closed' GROUP BY event_name ORDER BY highest_spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT member_id, first_name, last_name FROM member m JOIN (SELECT link_to_event, COUNT(link_to_event) AS event_count FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_event) > 7) a ON m.member_id = a.link_to_event;\t----- bird -----\tstudent_club",
    "1382": "SELECT member.first_name, member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Interior Design' AND event.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(income_id) FROM income WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour');\t----- bird -----\tstudent_club",
    "1385": "SELECT member_id, first_name, last_name FROM member WHERE income.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff');\t----- bird -----\tstudent_club",
    "1387": "SELECT member_id FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff' AND member.position = 'budget manager';\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name, member.last_name, income.source, MAX(income.amount) AS highest_income FROM member JOIN income ON member.member_id = income.link_to_member GROUP BY member.first_name, member.last_name, income.source ORDER BY highest_income DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1389": "SELECT event_id, MIN(cost) AS lowest_cost FROM expense GROUP BY event_id;\t----- bird -----\tstudent_club",
    "1390": "SELECT (SUM(cost) FILTER (WHERE event_name = 'Yearly Kickoff') / SUM(cost)) * 100 AS percentage FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff');\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) AS finance_count, SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS physics_count FROM major; SELECT (finance_count::float / NULLIF(physics_count, 0)) AS ratio FROM (SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) AS finance_count, SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS physics_count FROM major) AS subquery;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, MAX(amount) AS max_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY max_amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching');\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT att.link_to_member) AS attendees FROM attendance att JOIN event e ON att.link_to_event = e.event_id WHERE e.event_name = 'Community Theater' AND YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(DISTINCT event_id) FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Luisa' AND last_name = 'Guidi'); SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE first_name = 'Luisa' AND last_name = 'Guidi');\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM event WHERE link_to_event = (SELECT link_to_event FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1);\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean') AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer');\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(event_id)) AS community_service_percentage FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_event = (SELECT event_id FROM event WHERE event_name = 'September Speaker');\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name FROM event WHERE status = 'Closed' ORDER BY remaining DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(expense.cost) AS total_value, expense.type FROM expense INNER JOIN event ON expense.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.approved = 'yes' GROUP BY expense.type;\t----- bird -----\tstudent_club",
    "1405": "-- Step 1: Identify the event_id for 'April Speaker' SELECT event_id FROM event WHERE event_name = 'April Speaker'; -- Step 2: Calculate the total amount budgeted for 'April Speaker' SELECT SUM(amount) AS total_budget FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker'); -- Step 3: List all budgeted categories for 'April Speaker' in ascending order based on their amount budgeted SELECT category, SUM(amount) AS total_budget FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') GROUP BY category ORDER BY total_budget ASC;\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(amount) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT event_id, MAX(amount) AS max_amount FROM budget WHERE category = 'Advertisement' GROUP BY event_id ORDER BY max_amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id ='rec4BLdZHS2Blfp4v' GROUP BY member.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison');\t----- bird -----\tstudent_club",
    "1412": "SELECT expense_description FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT member_id, zip FROM member m JOIN (SELECT link_to_member, expense_id, cost FROM expense WHERE cost < 50) e ON m.member_id = e.link_to_member;\t----- bird -----\tstudent_club",
    "1414": "SELECT major_name FROM member WHERE first_name = 'Phillip' AND last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT position FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business');\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE major_name = 'Business' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT event_name, type FROM event WHERE remaining > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_date = '2020-03-24T12:00:00');\t----- bird -----\tstudent_club",
    "1420": "SELECT major_name FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "1421": "SELECT (COUNT(CASE WHEN position = 'Member' AND major_name = 'Business' THEN 1 END) * 100.0 / COUNT(member_id)) AS percentage FROM member JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'Business';\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT DISTINCT member.last_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT budget.category FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN member ON event.event_id = member.link_to_member JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE event.location = 'MU 215' AND event.type = 'Guest Speaker' AND budget.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT city, state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE link_to_major = 'Electrical and Computer Engineering Department';\t----- bird -----\tstudent_club",
    "1429": "SELECT event_name FROM event WHERE type = 'Social' AND location = '900 E. Washington St.' AND position = 'Vice President';\t----- bird -----\tstudent_club",
    "1430": "SELECT member.last_name, member.position FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10' LIMIT 1;\t----- bird -----\tstudent_club",
    "1431": "SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\\'s Soccer' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1432": "SELECT (COUNT(CASE WHEN income.amount = 50 AND member.t_shirt_size = 'Medium' AND member.position = 'Member' THEN 1 END) * 100.0 / COUNT(DISTINCT member.member_id)) AS percentage FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE member.t_shirt_size = 'Medium' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT country FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico' AND city = 'San Juan Municipio';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT event_id FROM attendance JOIN expense ON attendance.link_to_event = expense.link_to_event WHERE cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT DISTINCT member.member_id, member.first_name, member.last_name, event.event_id, event.event_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19' GROUP BY member.member_id, member.first_name, member.last_name, event.event_id, event.event_name\t----- bird -----\tstudent_club",
    "1438": "SELECT major.college FROM major JOIN link_to_major ON major.major_id = link_to_major.link_to_major JOIN member ON link_to_major.member_id = member.member_id WHERE member.first_name = 'Katy' AND link_to_major.major_id ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Business') AND zip = (SELECT zip_code FROM zip_code WHERE college = 'College of Agriculture and Applied Sciences');\t----- bird -----\tstudent_club",
    "1440": "SELECT email FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'education' AND college = 'College of Education & Human Services');\t----- bird -----\tstudent_club",
    "1442": "SELECT 100 * SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) / COUNT(event_id) AS percentage_over_budget FROM budget;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31' GROUP BY event_id, location, status;\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description, AVG(cost) AS avg_cost FROM expense GROUP BY expense_description HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(*) FILTER (WHERE type = 'PO Box') * 100.0 / COUNT(*)) AS po_box_percentage FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT event_name, location FROM event WHERE remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM event JOIN expense ON event.event_id = expense.link_to_event WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.city, e.country FROM event e JOIN ( SELECT link_to_event FROM income GROUP BY link_to_event HAVING COUNT(*) > 50 ) i ON e.event_id = i.link_to_event;\t----- bird -----\tstudent_club",
    "1451": "SELECT member_id, MAX(cost) AS max_expense FROM expense WHERE event_id IN ( SELECT event_id FROM expense GROUP BY event_id HAVING COUNT(event_id) > 1 ) GROUP BY member_id ORDER BY max_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(e.cost) AS average_amount_paid FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position!= 'Member';\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE cost < (SELECT AVG(cost) FROM expense WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT 100 * SUM(cost) / COUNT(event_id) FROM expense WHERE event_type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT budget_id, MAX(cost) AS max_expense FROM expense WHERE expense_description LIKE '%water%' OR expense_description LIKE '%chips%' OR expense_description LIKE '%cookies%' GROUP BY budget_id\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY total_spent DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.last_name, m.phone FROM member m JOIN (SELECT e.link_to_member, AVG(e.cost) AS avg_cost FROM expense e GROUP BY e.link_to_member) AS subquery ON m.member_id = subquery.link_to_member WHERE m.cost > subquery.avg_cost;\t----- bird -----\tstudent_club",
    "1458": "SELECT (COUNT(CASE WHEN zip = 07002 THEN 1 END) * 100.0 / (SELECT COUNT(*) FROM member)) - (COUNT(CASE WHEN zip = 05001 THEN 1 END) * 100.0 / (SELECT COUNT(*) FROM member)) AS difference_in_percentage FROM member WHERE zip IN (07002, 05001);\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major WHERE major_id = (SELECT link_to_major FROM member WHERE member_id = 'Garrett Gerke');\t----- bird -----\tstudent_club",
    "1460": "SELECT member.first_name, member.last_name, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description LIKE '%water%' OR expense.expense_description LIKE '%veggie tray%' OR expense.expense_description LIKE '%supplies%';\t----- bird -----\tstudent_club",
    "1461": "SELECT last_name FROM member WHERE link_to_major = 'Elementary Education' AND phone IS NOT NULL;\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget WHERE link_to_event = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT budget_id, category FROM expense WHERE expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, m.college FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT city FROM zip_code WHERE zip = (SELECT zip FROM member WHERE first_name = 'Garrett' AND last_name = 'Gerke');\t----- bird -----\tstudent_club",
    "1469": "SELECT first_name, last_name, position FROM member WHERE city = 'Lincolnton' AND state = 'North Carolina' AND zip = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT GasStationID) FROM transactions_1k WHERE Country = 'CZE' AND ProductID IN (SELECT ProductID FROM products WHERE Description LIKE '%Premium%');\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT c.CustomerID, MIN(ym.Consumption) AS MinConsumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date BETWEEN '201201' AND '201212' AND c.Segment = 'LAM' GROUP BY c.CustomerID ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) AS average_monthly_consumption FROM (SELECT Consumption FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')) GROUP BY CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE c.Currency = 'CZK' AND YEAR(y.Date) = 2011 GROUP BY c.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Segment = 'KAM' AND Consumption < 30000 AND Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "1476": "-- Step 1: Join the yearmonth table with the customers table on CustomerID -- Step 2: Filter the data for the year 2012 -- Step 3: Group the data by Currency (CZK and EUR) -- Step 4: Calculate the total consumption for each group -- Step 5: Subtract the total consumption of EUR-paying customers from the total consumption of CZK-paying customers SELECT SUM(ym.Consumption) AS total_consumption_czk, SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS total_consumption_eur FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date BETWEEN '201201' AND '201212' GROUP BY c.Currency HAVING c.Currency IN ('CZK', 'EUR')\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT YEAR(Date) AS Year, SUM(Consumption) AS Total_Gas_Use_EUR FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY Year ORDER BY Total_Gas_Use_EUR DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment, MIN(Consumption) AS MinConsumption FROM yearmonth GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT YEAR(Date) AS year, SUM(Consumption) AS total_consumption FROM yearmonth GROUP BY year ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MONTH(SUBSTR(Date, 1, 4) || '-' || SUBSTR(Date, 5, 2)) AS month, MAX(Consumption) AS max_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND SUBSTR(Date, 1, 4) BETWEEN '201301' AND '201312' GROUP BY month ORDER BY max_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH least_consumers AS ( SELECT c.Segment, c.CustomerID, AVG(ym.Consumption) AS annual_avg_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date LIKE '2013%' AND c.Segment IN ('SME', 'LAM', 'KAM') GROUP BY c.Segment, c.CustomerID ORDER BY annual_avg_consumption ASC LIMIT 1 ), sme_consumption AS ( SELECT annual_avg_consumption FROM least_consumers WHERE Segment = 'SME' ), lam_consumption AS ( SELECT annual_avg_consumption FROM least_consumers WHERE Segment = 'LAM' ), kam_consumption AS ( SELECT annual_avg_consumption FROM least_consumers WHERE Segment = 'KAM' ) SELECT (sme_consumption.annual_avg_consumption - lam_consumption.annual_avg_consumption) AS sme_minus_lam, (lam_consumption.annual_avg_consumption - kam_consumption.annual_avg_consumption) AS lam_minus_kam, (kam_consumption.annual_avg_consumption - sme_consumption.annual_avg_consumption) AS kam_minus_sme\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT c.Segment, MAX(Percentage_Increase) AS Max_Percentage_Increase, MIN(Percentage_Increase) AS Min_Percentage_Increase FROM ( SELECT y.CustomerID, y.Date, (y.Consumption - COALESCE(p.Consumption, 0)) AS Increase_or_Decrease, ((y.Consumption - COALESCE(p.Consumption, 0)) / y.Consumption) * 100 AS Percentage_Increase FROM yearmonth y LEFT JOIN ( SELECT CustomerID, Date, SUM(Consumption) AS Consumption FROM yearmonth WHERE STRFTIME('%Y', Date) IN ('2012', '2013') GROUP BY CustomerID, Date ) p ON y.CustomerID = p.CustomerID AND STRFTIME('%Y', y.Date) = '2013' ) AS subquery JOIN customers c ON subquery.CustomerID = c.CustomerID WHERE STRFTIME('%Y', subquery.Date) IN ('2012', '2013') GROUP BY c.Segment\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount' EXCEPT SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount';\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT (SUM(Consumption) FROM yearmonth WHERE CustomerID = 7 AND Date = '201304') - (SUM(Consumption) FROM yearmonth WHERE CustomerID = 5 AND Date = '201304') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK' UNION SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, c.Segment, c.Currency, SUM(ym.Consumption) AS TotalConsumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '201310%' GROUP BY c.CustomerID, c.Segment, c.Currency ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.Segment, SUM(y.Consumption) AS Total_Consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID GROUP BY c.Segment ORDER BY Total_Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM') AND Date = '201305';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT (COUNT(*) FILTER (WHERE \"Consumption\" > 46.73)) * 100.0 / COUNT(*) FROM \"yearmonth\" WHERE \"Segment\" = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "-- Step 1: Identify the relevant tables and columns -- We need to join the \"gasstations\" and \"customers\" tables to get the country and segment information. -- We also need to join the \"transactions_1k\" table to get the price information. -- The \"value for money\" gas stations are those with a price lower than the average price for their segment. -- Step 2: Calculate the average price for each segment -- We use a subquery to calculate the average price for each segment. -- This subquery will be used in the WHERE clause to filter the gas stations. -- Step 3: Join the tables and filter the gas stations -- We join the \"gasstations\", \"customers\", and \"transactions_1k\" tables. -- We filter the gas stations to only include those with a price lower than the average price for their segment. -- Step 4: Group by country and count the number of \"value for money\" gas stations -- We group the results by country and count the number of gas stations in each group. -- Step 5: Order the results by the count in descending order -- We order the results by the count in descending order to get the country with the most \"value for money\" gas stations first. -- Final SQL statement SELECT g.Country, COUNT(g.GasStationID) AS num_value_for_money_gas_stations FROM gasstations g JOIN customers c ON g.CustomerID = c.CustomerID JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Price < ( SELECT AVG(t2.Price) FROM transactions_1k t2 WHERE t2.Segment = g.Segment ) GROUP BY g.Country ORDER BY num_value_for_money_gas_stations DESC;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (COUNT(CASE WHEN Currency = 'Euro' THEN 1 END) * 100.0 / COUNT(*)) AS Percentage_of_KAM_customers_using_Euro FROM customers WHERE Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT 100.0 * COUNT(CASE WHEN \"Consumption\" > 528.3 THEN 1 END) / COUNT(*) AS percentage FROM yearmonth WHERE STRFTIME('%Y%m', \"Date\") = '201202';\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(DISTINCT CASE WHEN g.Country = 'Slovakia' THEN g.GasStationID END) / COUNT(DISTINCT g.GasStationID)) * 100 AS percentage_of_premium_gas_stations FROM gasstations g WHERE g.Country = 'Slovakia'\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT CustomerID, MAX(Consumption) AS max_consumption FROM yearmonth WHERE STRFTIME('%Y%m', Date) = '201309' GROUP BY CustomerID ORDER BY max_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, MIN(ym.Consumption) AS MinConsumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '201309' GROUP BY c.Segment ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID, MIN(ym.Consumption) AS MinConsumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '201206' AND c.Segment = 'SME' GROUP BY c.CustomerID ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) FROM yearmonth WHERE STRFTIME('%Y', Date) = '2012' AND STRFTIME('%m', Date) = '01';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) FROM yearmonth WHERE Currency = 'euro' GROUP BY CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT Description FROM products WHERE ProductID IN (SELECT ProductID FROM transactions_1k WHERE Date LIKE '201309%');\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE STRFTIME('%Y%m', transactions_1k.Date) = '201306';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT ChainID FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Price = 0.84;\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description FROM products p JOIN transactions_1k t ON p.ProductID = t.ProductID WHERE t.Price * 0.85 = t.Amount -- Assuming 1 euro = 0.85 USD\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(Price) FROM transactions_1k WHERE STRFTIME('%Y-%m', Date) = '2012-01';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Currency = 'EUR' AND Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT products.Description FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT \"Time\" FROM transactions_1k WHERE \"GasStationID\" IN (SELECT \"GasStationID\" FROM gasstations WHERE \"ChainID\" = 11);\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k WHERE Price > 1000 AND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) AS avg_total_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT c.CustomerID, SUM(t.Amount) AS TotalSpent FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE STRFTIME('%Y/%m/%d', t.Date) = '2012/8/25' GROUP BY c.CustomerID ORDER BY TotalSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT Country, MIN(Date) AS FirstPaidCustomerDate FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE STRFTIME('%Y/%m/%d', Date) = '2012/8/25' GROUP BY Country ORDER BY FirstPaidCustomerDate LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT t1.Currency FROM customers AS t1 JOIN transactions_1k AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date = '2012-08-24' AND t2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT Segment FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE \"Price\" = 21 AND HOUR(\"Time\") < 13 AND \"Date\" = '2012-08-26';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers ORDER BY CustomerID ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT y.Date, SUM(y.Consumption) AS Total_Expense FROM yearmonth y JOIN transactions_1k t ON y.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Amount = 124.05 GROUP BY y.Date HAVING y.Date LIKE '2012-01%' ORDER BY y.Date DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT Currency FROM customers WHERE CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date LIKE '201306%' AND Consumption = (SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '201306%'));\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT 100.0 * COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(*) AS percentage FROM customers WHERE Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (t2.Consumption - t3.Consumption) / t2.Consumption AS decrease_rate FROM customers AS t1 JOIN yearmonth AS t2 ON t1.CustomerID = t2.CustomerID JOIN yearmonth AS t3 ON t1.CustomerID = t3.CustomerID WHERE t1.CustomerID = ( SELECT t1.CustomerID FROM transactions_1k AS t1 JOIN customers AS t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date = '2012-08-25' AND t1.Amount = 634.8 ) AND t2.Date = '2012-08-24' AND t3.Date = '2013-08-24';\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT g.Country, SUM(t.Amount * t.Price) AS TotalRevenue FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID GROUP BY g.Country ORDER BY TotalRevenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (COUNT(CASE WHEN g.Segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) AS premium_percentage FROM gasstations g WHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "-- Step 1: Identify the relevant tables and columns -- The 'transactions_1k' table contains the necessary information about transactions, including the 'CustomerID' and 'Amount' columns. -- The 'yearmonth' table contains the 'CustomerID' and 'Date' columns, which can be used to filter transactions by date. -- Step 2: Filter transactions by customer ID and date -- We need to find transactions for customer \"38508\" in January 2012. -- The 'Date' column in the 'yearmonth' table is formatted as 'YYYYMM', so we can filter for '201201'. -- Step 3: Join the 'transactions_1k' and 'yearmonth' tables -- To get the total amount spent by the customer in January 2012, we need to join the 'transactions_1k' and 'yearmonth' tables on the 'CustomerID' column. -- Step 4: Calculate the total amount spent -- We can use the SUM() function to calculate the total amount spent by the customer in January 2012. -- Final SQL statement SELECT SUM(t.Amount) AS total_spent FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE t.CustomerID = 38508 AND ym.Date = '201201';\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description, SUM(t.Consumption) AS Total_Consumption FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY Total_Consumption DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.Segment, c.Currency, SUM(t.Amount) AS TotalSpent, AVG(t.Price) AS AveragePricePerItem FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID GROUP BY t.CustomerID, c.Segment, c.Currency ORDER BY TotalSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country, MAX(t.Price) AS max_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE p.ProductID = 2 GROUP BY g.Country ORDER BY max_price DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT ym.Consumption FROM yearmonth ym JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID JOIN products p ON t1k.ProductID = p.ProductID WHERE p.ProductID = 5 AND t1k.Price / t1k.Amount > 29.00 AND ym.Date = '201208'\t----- bird -----\tdebit_card_specializing"
}