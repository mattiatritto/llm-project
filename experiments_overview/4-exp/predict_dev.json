{
    "0": "SELECT MAX(FRPM_Percent_Eligible_Free_K12) AS highest_eligible_free_rate FROM schools WHERE CDSCode IN ( SELECT CDSCode FROM satscores WHERE rtype = 'SAT' AND dname = 'Alameda County' );\t----- bird -----\tcalifornia_schools",
    "1": "SELECT s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17), (s.FreeMealCount (Ages 5-17) / s.Enrollment (Ages 5-17)) AS eligible_free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Continuation' AND s.District = 'Continuation' GROUP BY s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17) ORDER BY eligible_free_rate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT s.Zip FROM schools s JOIN fprm f ON s.CDSCode = f.CDSCode WHERE f.Charter = 1 AND f.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2013-14' AND f.CountyCode = 'K-12' ORDER BY f.FRPMCount(K-12) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.OpenDate > '2000-01-01' AND sc.rtype = 'Charter School';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath > 400 AND sch.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 'Yes' OR s.GSserved = 'Yes');\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.phone FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.NumGE1500 > 0 ORDER BY s.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.cds, SUM(s.NumTstTakr) AS total_sat_test_takers FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.DistrictType = 'Public' AND sch.SchoolType = 'Elementary' GROUP BY s.cds ORDER BY total_sat_test_takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath > 560 AND sch.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.SchoolName, s.Enrollment(Ages 5-17), s.FRPMCount(Ages 5-17) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE sc.rtype = 'SAT' AND sc.sname = 'Reading' ORDER BY sc.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT s.CDSCode FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode GROUP BY s.CDSCode HAVING SUM(f.Enrollment (K-12) + f.Enrollment (Ages 5-17)) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT s.CDSCode, s.EligibleFreeRate FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.ExcellenceRate > 0.3 GROUP BY s.CDSCode ORDER BY s.EligibleFreeRate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) / s.NumTstTakr AS excellence_rate ORDER BY excellence_rate DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.CDSCode, s.NCESSchool, s.Enrollment (Ages 5-17) AS popularity FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode, s.NCESSchool ORDER BY popularity DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.CDSCode, s.sname, AVG(s.AvgScrRead) AS avg_reading_score FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.StatusType = 'Active' GROUP BY s.CDSCode, s.sname ORDER BY avg_reading_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools WHERE Alameda ='merged' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.CharterNumber FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrWrite > 499 ORDER BY s.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools WHERE CDSCode = 'FRESNO' AND Charter = 0 AND NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) AND sch.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE Amador = 'Amador' AND Low_Grade = '9' AND High_Grade = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Los Angeles' AND satscores.rtype = 'K-12' AND (satscores.NumTstTakr * satscores.AvgScrRead + satscores.NumTstTakr * satscores.AvgScrMath + satscores.NumTstTakr * satscores.AvgScrWrite) > 500 AND (satscores.NumTstTakr * satscores.AvgScrRead + satscores.NumTstTakr * satscores.AvgScrMath + satscores.NumTstTakr * satscores.AvgScrWrite) < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, s.enroll12 AS test_takers_count FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Contra Costa' ORDER BY test_takers_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.CDSCode, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN ( SELECT CDSCode, (Enrollment (K-12) - Enrollment (Ages 5-17)) AS diff FROM frpm GROUP BY CDSCode HAVING SUM(diff) > 30 ) diff_schools ON s.CDSCode = diff_schools.CDSCode WHERE diff_schools.diff > 30;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.SchoolName, s.NumTstTakr, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.AvgScrMath >= 1500 AND sc.AvgScrWrite >= 1500 AND (sc.NumTstTakr * 100) / s.enroll12 > 10\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.CDSCode, s.FundingType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.District = 'Riverside' AND sc.AvgScrMath > 400 GROUP BY s.CDSCode HAVING SUM(sc.AvgScrMath) / COUNT(s.CDSCode) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.CDSCode, s.Street, s.City, s.State, s.Zip, s.Phone, s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'High School' AND s.State = 'Monterey' AND sc.dname = 'Ages 15-17' AND sc.NumTstTakr > 800 GROUP BY s.CDSCode, s.Street, s.City, s.State, s.Zip, s.Phone, s.Website HAVING COUNT(sc.cds) > 1;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.School, s.AvgScrWrite, s.CommunicationNumber FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OpenDate >= '1991-01-01' AND s.ClosedDate <= '2000-12-31';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.CDSCode, s.DOCType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.FundingType = 'Locally Funded' AND sc.rtype = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.enroll12 > sc.enroll17 GROUP BY s.CDSCode, s.DOCType HAVING AVG(s.Enrollment (K-12) - s.Enrollment (Ages 5-17)) > ( SELECT AVG(diff) FROM ( SELECT s.CDSCode, (s.Enrollment (K-12) - s.Enrollment (Ages 5-17)) AS diff FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.FundingType = 'Locally Funded' AND sc.rtype = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' GROUP BY s.CDSCode ) AS subquery )\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MAX(OpenDate) AS max_enrollment_open_date FROM schools WHERE SchoolType = 'First-through-twelfth-grade' AND Charter = 0 AND ClosedDate IS NULL ORDER BY Enrollment (K-12) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City, s.Zip, s.Enrollment (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'K-12' ORDER BY s.Enrollment (K-12) ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "[SQL] SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'School District' ORDER BY s.Enrollment (K-12) DESC LIMIT 10; SELECT CDSCode, Enrollment (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12) FROM ( SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12), ROW_NUMBER() OVER (ORDER BY s.Enrollment (K-12) DESC) AS rn FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'School District' ) sub WHERE rn <= 10; SELECT CDSCode, Enrollment (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12) FROM ( SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12), ROW_NUMBER() OVER (ORDER BY s.Enrollment (K-12) DESC) AS rn FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'School District' ) sub WHERE rn IN (10, 9, 8, 7, 6, 5, 4, 3, 2, 1); SELECT CDSCode, Enrollment (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12) FROM ( SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12), ROW_NUMBER() OVER (ORDER BY s.Enrollment (K-12) DESC) AS rn FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'School District' ) sub WHERE rn IN (10, 9, 8, 7, 6, 5, 4, 3, 2, 1); SELECT CDSCode, Enrollment (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12) FROM ( SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12), ROW_NUMBER() OVER (ORDER BY s.Enrollment (K-12) DESC) AS rn FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'School District' ) sub WHERE rn IN (10, 9, 8, 7, 6, 5, 4, 3, 2, 1); SELECT CDSCode, Enrollment (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12) FROM ( SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) El\t----- bird -----\tcalifornia_schools",
    "32": "[SQL] SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'Free & Reduced Price Meal' AND sc.sname = 'Free or Reduced Price Meal' AND sc.dname = 'K-12' AND sc.cname = 'Enrollment' AND sc.NumTstTakr = 'Total' AND sc.AvgScrRead = 'Average Reading' AND sc.AvgScrMath = 'Average Mathematics' AND sc.AvgScrWrite = 'Average Writing' AND sc.NumGE1500 = 'Number of Students with Proficiency in Reading, Mathematics, and Writing' GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; [SQL] SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, (s.FreeMealCount (K-12) / s.Enrollment (K-12)) * 100 AS EligibleFRPMRate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'Free & Reduced Price Meal' AND sc.sname = 'Free or Reduced Price Meal' AND sc.dname = 'K-12' AND sc.cname = 'Enrollment' AND sc.NumTstTakr = 'Total' AND sc.AvgScrRead = 'Average Reading' AND sc.AvgScrMath = 'Average Mathematics' AND sc.AvgScrWrite = 'Average Writing' AND sc.NumGE1500 = 'Number of Students with Proficiency in Reading, Mathematics, and Writing' GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; [SQL] SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, (s.FreeMealCount (K-12) / s.Enrollment (K-12)) * 100 AS EligibleFRPMRate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'Free & Reduced Price Meal' AND sc.sname = 'Free or Reduced Price Meal' AND sc.dname = 'K-12' AND sc.cname = 'Enrollment' AND sc.NumTstTakr = 'Total' AND sc.AvgScrRead = 'Average Reading' AND sc.AvgScrMath = 'Average Mathematics' AND sc.AvgScrWrite = 'Average Writing' AND sc.NumGE1500 = 'Number of Students with Proficiency in Reading, Mathematics, and Writing' GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; [SQL] SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, (s.FreeMealCount (K-12) / s.Enrollment (K-12)) * 100 AS EligibleFRPMRate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'Free & Reduced Price Meal' AND sc.sname = 'Free or Reduced Price Meal' AND sc.dname = 'K-12' AND sc.cname = 'Enrollment' AND sc.NumTstTakr = 'Total' AND sc.AvgScrRead = 'Average Reading' AND sc.AvgScrMath = 'Average Mathematics' AND sc.AvgScrWrite = '\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.website, s.school_name FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.enroll12 BETWEEN 1900 AND 2000 AND s.Zip LIKE '%5-17%';\t----- bird -----\tcalifornia_schools",
    "34": "SELECT s.Enrollment (Ages 5-17) AS total_enrollment, s.Free_Meal_Count (Ages 5-17) AS total_free_meals, s.Free_Meal_Count (Ages 5-17) / s.Enrollment (Ages 5-17) AS free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.School = 'Kacey Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.CharterSchool = 1 AND f.Enrollment (K-12) = (SELECT MIN(Enrollment (K-12)) FROM frpm) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 150 AND sc.AvgScrMath >= 150 AND sc.AvgScrWrite >= 150 AND sc.NumGE1500 >= 1 GROUP BY s.CDSCode ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, EXTRACT(YEAR FROM test_date) as academic_year, NumGE1500 / NumTstTakr as excellence_rate FROM satscores WHERE rtype = 'SAT' GROUP BY CDSCode, academic_year ) e ON s.CDSCode = e.CDSCode ORDER BY e.excellence_rate ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Los Angeles County' AND sc.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.NCESDist = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, AVG(AvgScrRead) AS avg_reading_score FROM satscores GROUP BY CDSCode ORDER BY avg_reading_score ASC LIMIT 1 ) subq ON s.CDSCode = subq.CDSCode WHERE s.District = 'Fresno Unified';\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School, s.AvgScrRead FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Virtual = 'F' AND s.County = ( SELECT COUNTY FROM frpm ORDER BY sc.AvgScrRead DESC LIMIT 5 ) ORDER BY s.AvgScrRead DESC;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.sType FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) AND sch.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(s.AvgScrMath) AS avg_math_score FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode JOIN frpm f ON sc.CDSCode = f.CDSCode WHERE (s.AvgScrMath + s.AvgScrRead + s.AvgScrWrite) = (SELECT MAX(AvgScrMath + AvgScrRead + AvgScrWrite) FROM satscores) ORDER BY avg_math_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.city, AVG(s.AvgScrWrite) AS avg_writing_score FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE (s.NumTstTakr * s.AvgScrRead) >= 1500 GROUP BY s.city ORDER BY avg_writing_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.CDSCode, AVG(s.AvgScrWrite) AS avg_writing_score FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active' AND s.Charter = 0 AND s.AdmFName1 = 'Ricci Ulrich' GROUP BY s.CDSCode ORDER BY avg_writing_score DESC;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Enrollment (K-12) AS total_enroll, FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'SAT' AND sc.dname = 'California State Standards Test' AND s.Grades 1 through 12 = 12 GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School ORDER BY total_enroll DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(DISTINCT schools.CDSCode) AS monthly_avg_schools_opened FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.NCESDist = '52' AND schools.County = 'Alameda' AND YEAR(schools.OpenDate) = 1980 GROUP BY MONTH(schools.OpenDate);\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(DISTINCT s.CDSCode) AS merged_unified_count, COUNT(DISTINCT s.CDSCode) AS merged_elementary_count FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.NCESDist = '54' AND sch.County = 'Orange County' AND (sch.DOC = 52 OR sch.DOC = 54) GROUP BY sch.CDSCode;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.CDSCode, s.SchoolName, s.ClosedDate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.CDSCode, s.SchoolName ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.school_name, s.street FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'AvgScrMath' ORDER BY sc.AvgScrMath DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.Street, s.School, s.AvgScrRead FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds ORDER BY sc.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 >= 1500 AND schools.City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(NumTstTakr) AS total_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT s.CDSCode, s.Zip FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.CharterNum = 'Avetik Atoian' AND sc.rtype = 'SAT' AND sc.sname = 'Reading' AND sc.dname = 'California' AND sc.cname = 'Statewide' AND sc.enroll12 > 0 AND sc.NumTstTakr > 0 AND sc.AvgScrRead > 0 AND sc.AvgScrMath > 0 AND sc.AvgScrWrite > 0 AND sc.NumGE1500 > 0 AND s.StatusType = 'Active' AND s.OpenDate <= '2022-12-31' AND s.ClosedDate >= '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(DISTINCT schools.CDSCode) AS colusa_count, COUNT(DISTINCT schools.CDSCode) AS humboldt_count, (colusa_count / humboldt_count) AS ratio FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.State = 'California' AND schools.MailState = 'California';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND (State = 'CA' AND City = 'San Joaquin') AND (Zip LIKE '9%');\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrWrite = (SELECT 333RD_ROW_AVG_WRITING_SCORE FROM ( SELECT DISTINCT AvgScrWrite FROM satscores ORDER BY AvgScrWrite DESC LIMIT 332 ) AS subquery)\t----- bird -----\tcalifornia_schools",
    "58": "SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s.website FROM schools s JOIN edops e ON s.EdOpsCode = e.EdOpsCode WHERE e.AdminName IN ('Mike Larson', 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT s.website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.DistrictType = 'Charter' AND f.SchoolType = 'Charter' AND f.EducationalOptionType = 'Partially Virtual' AND f.County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.City = 'Hickman' AND s.DOC = 52 AND s.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Charter = 0 AND f.AcademicYear = '2013-14' AND f.Percent(%) Eligible Free (K-12) < 0.0018;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND sc.CharterNum = '00D2' AND s.School = ( SELECT CDSCode FROM schools WHERE Charter = 1 AND School = s.School ) AND s.City = ( SELECT City FROM schools WHERE CDSCode = s.CDSCode AND Charter = 1 ) GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN satscores.rtype = 'Locally Funded' AND satscores.cds IN (SELECT CDSCode FROM frpm WHERE County = 'Santa Clara')) * 100.0 / COUNT(DISTINCT satscores.rtype)) AS ratio_percentage FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode;\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Stanislaus' AND sc.rtype = 'Directly Funded' AND sc.OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(charter) FROM schools WHERE city = 'San Francisco' AND YEAR(OpenDate) = 1989 AND StatusType = 'Closed';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT s.County, COUNT(s.CDS) AS closure_count FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'Closed' AND YEAR(sc.dname) BETWEEN 1980 AND 1989 AND s.SOC = 11 GROUP BY s.County ORDER BY closure_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'State Special Schools' AND s.SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active' AND s.ClosedDate IS NULL AND s.County = 'Alpine';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT s.CDSCode FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Magnet = 0 AND s.City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(enroll12) FROM schools WHERE CDSCode = 'Fremont' AND State = 'Special' AND EdOpsCode = 'SSS' AND academic_year = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT s.enroll12 FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Street = 'PO Box 1040' AND sc.School = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.LowGrade FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.NCESDist = '0613360' AND s.EdOpsCode = 'SPECON' AND sc.rtype = 'SAT' AND sc.sname = 'District Special Education Consortia School';\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.school_name, s.educational_level FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.FRPM_Count_K_12 > 0 AND f.County_Code = '37' AND sc.rtype = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.EducationalOptionType = 'Lunch Provision 2' AND f.LowGrade = '9' AND f.HighGrade = '12' AND f.County = 'Merced' AND s.SchoolType = 'High School' AND s.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.SchoolName, s.Enrollment(Ages 5-17), s.FRPMCount(Ages 5-17), (s.FRPMCount(Ages 5-17) / s.Enrollment(Ages 5-17) * 100) AS PercentEligibleFRPM FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.CountyName = 'Los Angeles' AND f.DistrictType = 'Public' AND f.SchoolType = 'Elementary' AND f.DistrictName = 'Los Angeles Unified School District';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT s.StatusType, COUNT(s.CDSCode) AS count FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.City = 'Adelanto' GROUP BY s.StatusType ORDER BY count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT s.County, COUNT(s.School) AS schools_offering_virtual FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE (s.County = 'San Diego' OR s.County = 'Santa Barbara') AND s.Virtual = 1 GROUP BY s.County ORDER BY schools_offering_virtual DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.latitude = (SELECT MAX(latitude) FROM schools) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.City, s.LowestGrade, s.SchoolName FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MIN(Latitude) AS MinLatitude FROM schools WHERE state = 'CA' GROUP BY CDSCode ) min_lat ON s.CDSCode = min_lat.CDSCode WHERE s.Latitude = min_lat.MinLatitude ORDER BY s.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT s.CountyName, s.DistrictName, s.SchoolName, s.LowGrade, s.HighGrade FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Longitude = (SELECT MAX(Longitude) FROM schools) ORDER BY s.Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT s.City, COUNT(s.School) AS SchoolCount FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2022-2023' AND f.GradeSpan = 'K-8' AND s.Magnet = 1 AND f.NSLPProvisionStatus = 'Multiple Provision Types' GROUP BY s.City\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, AdmLName1, AdmEmail1, District FROM schools WHERE Charter = 1 AND AdmEmail1 IS NOT NULL GROUP BY AdmFName1, AdmLName1, AdmEmail1 ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.DistrictCode, (s.FreeMealCount / s.Enrollment / 100) AS PercentEligibleFree FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.School, s.Charter FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.CharterNum = '40' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'San Bernardino' AND f.District = 'City Unified' AND f.AcademicYear BETWEEN '2009-01-01' AND '2010-12-31' AND f.SchoolType IN ('Intermediate/Middle Schools', 'Unified Schools') AND sc.rtype = 'Public' AND s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND s.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 > 0 ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A3 = 'POPLATEK PO OBRATU' ) AND frequency = 'issuance after transaction';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Prague' AND EXISTS ( SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.status = 'eligible' );\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'North Bohemia');\t----- bird -----\tfinancial",
    "94": "SELECT c.account_id, AVG(d.A11) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' GROUP BY c.account_id ORDER BY AVG(d.A11) ASC LIMIT 1; SELECT MAX(AVG(d.A11)) AS highest_avg_salary_gap FROM ( SELECT c.account_id, AVG(d.A11) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' GROUP BY c.account_id ORDER BY AVG(d.A11) ASC LIMIT 1 ) AS subquery;\t----- bird -----\tfinancial",
    "95": "SELECT c.account_id, AVG(d.A11) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id GROUP BY c.account_id ORDER BY avg_salary DESC, c.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON client.account_id = loan.account_id WHERE loan.status = 'weekly issuance' AND client.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT client_id FROM client WHERE gender ='male' AND birth_date BETWEEN '1980-01-01' AND '1985-12-31';\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id, a.district_id, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE YEAR(l.date) = 1997 GROUP BY a.account_id, a.district_id HAVING COUNT(DISTINCT l.loan_id) = 1 ORDER BY lowest_approved_amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, a.frequency, a.date, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date >= '1993-01-01' GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING MAX(l.amount) = (SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id AND l2.duration > 12 AND a.date >= '1993-01-01');\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'Sokolov' AND c.gender = 'F' AND c.birth_date < '1950-01-01';\t----- bird -----\tfinancial",
    "101": "SELECT a.account_id, a.district_id, a.date FROM account AS a JOIN trans AS t ON a.account_id = t.account_id WHERE t.date = (SELECT MIN(t2.date) FROM trans AS t2 WHERE t2.date BETWEEN '1995-01-01' AND '1995-12-31') AND a.district_id = (SELECT district_id FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = a.account_id));\t----- bird -----\tfinancial",
    "102": "SELECT a.account_id, a.district_id, a.frequency, a.date, SUM(t.amount) AS total_amount FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.date < '1997-01-01' AND t.amount > 3000 GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING total_amount > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.card_id = card.card_id WHERE card.issued = '1994-03-03' AND card.type = 'card';\t----- bird -----\tfinancial",
    "104": "SELECT MAX(date) - INTERVAL '1 year' AS account_opening_date FROM trans WHERE amount = 840 AND date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction FROM trans WHERE account_id = (SELECT client_id FROM client WHERE birth_date = '1996-10-21');\t----- bird -----\tfinancial",
    "107": "SELECT c.gender, d.A11 FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND a.A11 = (SELECT MAX(A11) FROM account);\t----- bird -----\tfinancial",
    "108": "SELECT t.trans_id, t.amount FROM trans t JOIN account ac ON t.account_id = ac.account_id WHERE ac.client_id = ( SELECT c.client_id FROM client c ORDER BY l.amount DESC LIMIT 1 );\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT disp_id FROM client WHERE district_id = (SELECT district_id FROM account WHERE date = '1998-09-02') AND client_id = (SELECT client_id FROM trans WHERE amount = 5100 AND date = '1998-09-02');\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "112": "SELECT d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client c JOIN trans t ON c.client_id = t.account_id JOIN loan l ON t.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT c.account_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'Prague' ORDER BY c.client_id LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT d.district_id, d.A3, COUNT(c.client_id) AS male_clients, COUNT(c.client_id) * 100.0 / COUNT(DISTINCT c.client_id) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.A3 ='south Bohemia' GROUP BY d.district_id, d.A3 ORDER BY male_percentage DESC LIMIT 1;\t----- bird -----\tfinancial",
    "116": "SELECT c.client_id, a.account_id, t.date, t.balance, (t.balance - l.balance) / l.balance * 100 AS increase_rate FROM client c JOIN account a ON c.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id JOIN trans t ON a.account_id = t.account_id WHERE t.date BETWEEN '1993-03-22' AND '1998-12-27' AND l.date = '1993-07-05' AND l.status = 'approved' AND c.client_id = ( SELECT client_id FROM loan ORDER BY date LIMIT 1 );\t----- bird -----\tfinancial",
    "117": "SELECT SUM(amount) AS total_fully_paid_loans, COUNT(DISTINCT account_id) AS total_accounts FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT (SUM(CASE WHEN loan_amount < 100000 AND status = 'C' THEN amount ELSE 0 END) / SUM(amount)) * 100 FROM account\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2, d.A3 FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date >= '1993-01-01' AND d.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.district_id = c.district_id WHERE a.district_id = (SELECT district_id FROM district WHERE A2 = 'east Bohemia') AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM district d JOIN account ac ON d.district_id = ac.district_id WHERE ac.account_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT a.account_id, d.district_name, r.region_name FROM account a JOIN district d ON a.district_id = d.district_id JOIN region r ON d.district_id = r.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT t1.loan_id, t2.district, AVG(t3.A11) AS avg_salary FROM trans t1 JOIN account t2 ON t1.account_id = t2.account_id JOIN loan t3 ON t1.account_id = t3.account_id WHERE t3.duration = 60 GROUP BY t1.loan_id, t2.district;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, d.A12 AS unemployment_rate_1995, d.A13 AS unemployment_rate_1996, (d.A13 - d.A12) / d.A12 * 100 AS unemployment_rate_increment FROM district d WHERE d.A12 IS NOT NULL AND d.A13 IS NOT NULL\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE district_id = 123) AS percentage FROM account WHERE district_id = 123 AND date BETWEEN '1993-12-01' AND '1993-12-31';\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT account_id FROM account JOIN trans ON account.account_id = trans.account_id WHERE trans.date >= DATE('now', '-1 month') AND trans.type ='statement' AND trans.operation = 'issue';\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(DISTINCT client_id) AS female_count FROM client JOIN district ON client.district_id = district.district_id WHERE gender = 'F' GROUP BY district_id ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.district_id, d.A2, SUM(t.amount) AS total_withdrawals FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ' AND MONTH(t.date) = 1 AND YEAR(t.date) = 1996 GROUP BY d.district_id, d.A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT client.client_id) FROM client WHERE client.district_id = (SELECT district_id FROM district WHERE A3 = 'South Bohemia') AND client.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.district_id, d.A3, SUM(l.amount) AS total_active_loans FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'C' GROUP BY d.district_id, d.A3 ORDER BY total_active_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loans.amount) AS average_loan_amount_by_male_borrowers FROM loans JOIN clients ON loans.account_id = clients.account_id JOIN district ON clients.district_id = district.district_id WHERE clients.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT d.district_id, d.A13 FROM district d JOIN loan l ON d.district_id = l.account_id WHERE YEAR(l.date) = 1996 ORDER BY l.A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT a.district_id, COUNT(t.account_id) AS account_count FROM account a JOIN district d ON a.district_id = d.district_id JOIN ( SELECT district_id, SUM(crimes) AS total_crimes FROM crimes WHERE YEAR(date) = 1996 GROUP BY district_id ) c ON a.district_id = c.district_id WHERE c.total_crimes = ( SELECT MAX(total_crimes) FROM ( SELECT district_id, SUM(crimes) AS total_crimes FROM crimes WHERE YEAR(date) = 1996 GROUP BY district_id ) subquery )\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'POPLATEK MESICNE' AND type = 'VYBER KARTOU' AND balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loans JOIN account ON loans.account_id = account.account_id WHERE account.district_id = ( SELECT district_id FROM client WHERE gender = 'female' AND birth_date BETWEEN '1995-01-01' AND '1997-12-31' ) AND loans.amount >= 250000 AND loans.frequency = 'POPLATEK MESICNE' AND loans.status = 'APPROVED';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'C' AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND client_id IN ( SELECT client_id FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A15 IS NOT NULL ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) );\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER' AND disp_id IN ( SELECT client_id FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A1 = 'HIGH-LEVEL' ) );\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT district_id, COUNT(*) FROM trans JOIN account ON trans.account_id = account.account_id WHERE YEAR(date) = 1997 AND amount > 10000 GROUP BY district_id;\t----- bird -----\tfinancial",
    "142": "SELECT t1.account_id, t2.k_symbol FROM account AS t1 JOIN order AS t2 ON t1.account_id = t2.account_id WHERE t2.k_symbol = 'SIPO' AND t1.district_id = (SELECT district_id FROM district WHERE district_name = 'Pisek');\t----- bird -----\tfinancial",
    "143": "SELECT a.account_id, a.district_id, c.type FROM account a JOIN card c ON a.account_id = c.account_id WHERE c.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount) AS average_credit_card_withdrawal_amount FROM account JOIN trans ON account.account_id = trans.account_id JOIN card ON trans.card_id = card.card_id WHERE card.type = 'VYBER KARTOU' AND trans.date BETWEEN '2021-01-01' AND '2021-12-31';\t----- bird -----\tfinancial",
    "145": "SELECT t1.account_id, t1.district_id, t1.frequency, t1.date FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan AS t3 ON t1.account_id = t3.account_id WHERE t2.type = 'VYBER KARTOU' AND t3.amount < (SELECT AVG(t4.amount) FROM loan AS t4 WHERE t4.date BETWEEN '1998-01-01' AND '1998-12-31') AND t1.district_id = (SELECT district_id FROM client WHERE gender = 'M' AND birth_date BETWEEN '1998-01-01' AND '1998-12-31');\t----- bird -----\tfinancial",
    "146": "SELECT c.client_id, c.gender, c.birth_date, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16 FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.account_id = l.account_id WHERE c.gender = 'F' AND c.account_id IN ( SELECT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON t.account_id = l.account_id GROUP BY a.account_id HAVING COUNT(DISTINCT l.loan_id) > 0 ) AND d.A2 IS NOT NULL AND d.A3 IS NOT NULL AND d.A4 IS NOT NULL AND d.A5 IS NOT NULL AND d.A6 IS NOT NULL AND d.A7 IS NOT NULL AND d.A8 IS NOT NULL AND d.A9 IS NOT NULL AND d.A10 IS NOT NULL AND d.A11 IS NOT NULL AND d.A12 IS NOT NULL AND d.A13 IS NOT NULL AND d.A14 IS NOT NULL AND d.A15 IS NOT NULL AND d.A16 IS NOT NULL;\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 ='south Bohemia' AND c.gender = 'F';\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id, a.district_id, a.frequency, a.date FROM account AS a JOIN client AS c ON a.district_id = c.district_id WHERE c.gender = 'F' AND c.birth_date BETWEEN '2000-01-01' AND '2005-12-31' AND a.account_type = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT account_type FROM account WHERE account_type!= 'OWNER'\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN order ON account.account_id = order.account_id JOIN disp ON trans.account_id = disp.account_id JOIN client ON account.district_id = client.district_id WHERE client.district.A3 = 'North Bohemia' AND trans.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account JOIN trans ON account.account_id = trans.account_id WHERE type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) AS avg_crimes_1995 FROM district WHERE A15 > 4000 AND A8 >= 1997 AND A9 >= 1997 AND A10 >= 1997 AND A11 >= 1997 AND A12 >= 1997 AND A13 >= 1997 AND A14 >= 1997 AND A15 >= 1997;\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic' AND account_id IN ( SELECT account_id FROM loan WHERE status = 'approved' );\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha') AND gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT ( COUNT(CASE WHEN type = 'gold' AND issued_date < '1998-01-01' THEN 1 END) / COUNT(ALL type) ) * 100 AS percent_of_gold_cards_issued_before_1998 FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT a.client_id, c.gender, d.A2, l.amount FROM client AS c JOIN district AS d ON c.district_id = d.district_id JOIN account AS a ON c.district_id = a.district_id JOIN loan AS l ON a.account_id = l.account_id ORDER BY l.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT d.A15 FROM district d JOIN account ac ON d.district_id = ac.district_id WHERE ac.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = ( SELECT account_id FROM order WHERE order_id = 33333 );\t----- bird -----\tfinancial",
    "159": "SELECT t.trans_id, t.date, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN order o ON t.account_id = o.account_id JOIN client c ON o.client_id = c.client_id JOIN disp d ON o.disp_id = d.disp_id JOIN card k ON d.card_id = k.card_id JOIN account a ON k.account_id = a.account_id WHERE c.client_id = 3356 AND t.operation = 'VYBER' AND t.type = 'cash';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'POPLATEK TYDNE' AND EXISTS ( SELECT 1 FROM loan WHERE loan_id = trans.loan_id AND amount < 200000 );\t----- bird -----\tfinancial",
    "161": "SELECT c.type FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card k ON d.card_id = k.card_id WHERE c.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT d.A3 FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE c.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, COUNT(t.account_id) AS loan_count FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id ORDER BY loan_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client_id FROM order WHERE order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card cc ON d.card_id = cc.card_id WHERE cc.type = 'junior' AND d.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(DISTINCT c.client_id) * 100.0 / COUNT(DISTINCT d.district_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A11 > 10000 AND c.gender = 'F';\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(amount_1997) - SUM(amount_1996)) / SUM(amount_1996) * 100 AS growth_rate FROM trans AS t1 JOIN account AS a1 ON t1.account_id = a1.account_id JOIN client AS c1 ON a1.district_id = c1.district_id JOIN loan AS l1 ON a1.account_id = l1.account_id WHERE c1.gender = 'M'\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(A16) AS total_crimes_1996_north_bohemia, SUM(A16) AS total_crimes_1996_east_bohemia FROM district WHERE A3 = 'North Bohemia' AND A3 = 'East Bohemia' AND A15 = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT disp.disp_id) AS owner_dispositions, COUNT(DISTINCT client.client_id) AS disponent_dispositions FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id WHERE account.account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT t.frequency, t.date FROM account AS t JOIN trans AS tr ON t.account_id = tr.account_id WHERE t.account_id = 3 AND tr.type ='request_statement';\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id JOIN trans ON account.account_id = trans.account_id WHERE trans.type = 'POPLATEK PO OBRATU' AND trans.operation = 'GENERUJE STAVKU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(loans.amount) AS total_debt FROM client JOIN account ON client.district_id = account.district_id WHERE client.client_id = 992; SELECT trans.operation FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.account_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(trans.amount) AS client_4_account_sum FROM account AS ac JOIN trans AS trans ON ac.account_id = trans.account_id WHERE ac.client_id = 4 AND trans.trans_id = 851;\t----- bird -----\tfinancial",
    "178": "SELECT c.type FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card k ON d.card_id = k.card_id WHERE c.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND YEAR(date) = 1998;\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, c.birth_date, c.district_id, l.amount FROM client c JOIN loan l ON c.client_id = l.client_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND loan_id IN ( SELECT loan_id FROM loan WHERE status = 'SIPO' AND amount > 4000 );\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON client.account_id = loan.account_id WHERE district.gender = 'F' AND loan.type = 'Junior Credit Card';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(DISTINCT client.gender) * 100.0 / COUNT(DISTINCT client.client_id) AS female_percentage FROM client JOIN account ON client.district_id = account.district_id WHERE account.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT COUNT(DISTINCT client.client_id) AS male_clients, COUNT(DISTINCT trans.trans_id) AS weekly_statements, (COUNT(DISTINCT trans.trans_id) / COUNT(DISTINCT client.client_id)) * 100 AS percentage FROM client JOIN trans ON client.client_id = trans.account_id JOIN account ON client.district_id = account.district_id WHERE client.gender = 'M' AND trans.type = 'POPLATEK TYDNE' GROUP BY client.client_id;\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'Owner' AND frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, a.district_id, a.frequency, a.date, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING MIN(l.amount) = (SELECT MIN(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id);\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id, c.gender, AVG(d.A11) AS avg_salary FROM account a JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY a.account_id, c.gender ORDER BY avg_salary ASC, a.account_id DESC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND district_id = (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loans.amount) FROM loans JOIN account ON loans.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE loans.status = 'C' AND EXISTS ( SELECT 1 FROM trans AS t JOIN order AS o ON t.account_id = o.account_id WHERE t.type = 'POPLATEK PO OBRATU' );\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND c.birth_date < '1980-01-01' AND (c.account_id IN (SELECT account_id FROM loan WHERE status = 'approved') OR c.account_id IN (SELECT account_id FROM order WHERE type = 'permanent'));\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, c.age FROM client c JOIN account a ON c.district_id = a.district_id JOIN card cr ON a.account_id = cr.account_id WHERE cr.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '-'; ) AND element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(element = 'o') AS average_oxygen_atoms FROM atom WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN m.label = '+ AND b.bond_type = '-' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic FROM atom m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON m.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule mi ON m.molecule_id = mi.molecule_id WHERE mi.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON c1.atom_id = m.molecule_id JOIN connected c2 ON c2.atom_id2 = m.molecule_id JOIN bond b ON b.bond_id = c1.bond_id AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "201": "SELECT AVG(element = 'c') * 100 AS percentage_carbon FROM atom WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(DISTINCT bond_id) AS triple_type_bonds FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' );\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": "SELECT label, COUNT(*) AS popularity FROM atom WHERE element = 'h' GROUP BY label ORDER BY popularity DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM bond WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id2 = a3.atom_id WHERE a1.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-') AND a2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-') AND a3.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "212": "SELECT e.element, MIN(c.count) AS least_numerous FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS e ON c.atom_id = e.atom_id WHERE a.molecule_id IN ( SELECT m.molecule_id FROM molecule AS m WHERE m.label = '-' ) GROUP BY e.element;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON b.bond_id = c2.bond_id WHERE (c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20') OR (c1.atom_id = 'TR004_20' AND c2.atom_block_id = 'TR004_8');\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'Sn' ) )\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a1.atom_id) AS iodine_atoms, COUNT(DISTINCT a2.atom_id) AS sulfur_atoms FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON a1.atom_id = c.atom_id AND a1.atom_id2 = c.atom_id2 JOIN atom a2 ON c.bond_id = a2.molecule_id WHERE b.bond_type = '-'; FROM atom a2 JOIN bond b ON a2.molecule_id = b.molecule_id JOIN connected c ON a2.atom_id = c.atom_id AND a2.atom_id2 = c.atom_id2 JOIN molecule m ON a2.molecule_id = m.molecule_id WHERE m.label = 'iodine' OR m.label ='sulfur';\t----- bird -----\ttoxicology",
    "216": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT AVG(percentage) * 100 AS carcinogenic_percentage_without_fluorine FROM ( SELECT m.molecule_id, m.label, COUNT(a.element = 'f') AS fluorine_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' GROUP BY m.molecule_id, m.label ) subquery WHERE fluorine_count = 0;\t----- bird -----\ttoxicology",
    "219": "SELECT AVG(percent) AS carcinogenic_percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.label = '+' AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT e.element, r.rank, d.description FROM atom AS a JOIN element AS e ON a.element = e.element_id JOIN rank AS r ON e.element_id = r.element_id JOIN description AS d ON e.element_id = d.element_id WHERE a.molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id = a3.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE a1.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT b.bond_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_2' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR000_2' WHERE c1.atom_id2 = c2.atom_id;\t----- bird -----\ttoxicology",
    "225": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT molecule_id, COUNT(CASE WHEN bond_type = '=' THEN 1 ELSE NULL END) * 100.0 / SUM(COUNT(CASE WHEN bond_type = '=' THEN 1 ELSE NULL END)) AS percent FROM connected WHERE atom_id = 'TR008' GROUP BY molecule_id LIMIT 1;\t----- bird -----\ttoxicology",
    "227": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id)) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT molecule_id, SUM(element = 'h') AS hydrogen_count, (SUM(element = 'h') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206')) * 100 AS percent FROM atom WHERE element = 'h' AND molecule_id = 'TR206' GROUP BY molecule_id\t----- bird -----\ttoxicology",
    "229": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON b.atom_id = a1.atom_id JOIN atom a2 ON b.atom_id2 = a2.atom_id WHERE b.bond_type = '-' AND EXISTS ( SELECT 1 FROM connected c3 WHERE m.molecule_id = c3.atom_id AND c3.atom_id2 = c3.atom_id2 AND c3.bond_id = b.bond_id ) AND NOT EXISTS ( SELECT 1 FROM molecule m2 WHERE m2.label = '-' AND m2.molecule_id = m.molecule_id ) GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR006' ORDER BY b.bond_type ASC, b.bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12') AND atom_id2 IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'br' AND m.label = '+';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "237": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(DISTINCT connected.atom_id) AS connections_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom b ON c.atom_id2 = b.atom_id JOIN bond b_on_c ON c.bond_id = b_on_c.bond_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT t1.molecule_id, t1.label FROM ( SELECT c.atom_id AS atom_id1, c.atom_id2 AS atom_id2, b.bond_id, COUNT(b.bond_id) AS double_bonds FROM connected AS c JOIN bond AS b ON c.bond_id = b.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY c.atom_id, c.atom_id2, b.bond_id ) AS subquery JOIN molecule AS t1 ON subquery.molecule_id = t1.molecule_id ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(b.bond_id) AS average_bonds FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE atom_id NOT IN ( SELECT atom_id FROM connected );\t----- bird -----\ttoxicology",
    "248": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT atom.element FROM atom WHERE atom.molecule_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id, COUNT(b.bond_id) AS double_bonds_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.atom_id = b.atom_id WHERE m.label = '+' GROUP BY m.molecule_id ORDER BY double_bonds_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT DISTINCT element FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM connected WHERE atom_id2 IN ( SELECT atom_id2 FROM connected WHERE bond_id IN ( SELECT bond_id FROM connected WHERE atom_id = 'C' -- assuming 'C' is the atom_id of the least common element ) ) ) ) AND label = '+';\t----- bird -----\ttoxicology",
    "252": "SELECT b.molecule_id, a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id JOIN bond b ON c1.bond_id = b.bond_id WHERE a1.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (SUM(CASE WHEN bond_id IN ( SELECT bond_id FROM connected GROUP BY atom_id, atom_id2 HAVING COUNT(DISTINCT atom_id) = 1 ) ) / COUNT(DISTINCT bond_id)) * 100 FROM bond;\t----- bird -----\ttoxicology",
    "255": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT bond_id)) AS carcinogenic_proportion FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT SUM(CASE WHEN element IN ('c', 'h') THEN 1 ELSE 0 END) AS total_carbon_hydrogen_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id1 AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id = ( SELECT atom_id FROM atom WHERE element ='s' );\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) AS num_elements FROM atom WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "260": "SELECT SUM(a.atom_count) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#3' AND (a.element = 'p' OR a.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT m.molecule_id FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "263": "SELECT m.label, AVG(CASE WHEN b.bond_type = '-' THEN e.element = 'cl' ELSE 0 END) * 100.0 AS percent_chlorine FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom e ON b.molecule_id = e.molecule_id GROUP BY m.label;\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id = 'TR000'; UNION ALL SELECT label FROM molecule WHERE molecule_id = 'TR001'; UNION ALL SELECT label FROM molecule WHERE molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "265": "SELECT m.molecule_id FROM molecule m WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT m.label, COUNT(c.molecule_id) AS total_carcinogenic_molecules FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE m.label = '+' AND a.molecule_id BETWEEN 'TR000' AND 'TR030' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "267": "SELECT m.label, b.bond_type FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id LIKE 'TR%00' AND m.molecule_id LIKE 'TR%50';\t----- bird -----\ttoxicology",
    "268": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_10_11' LIMIT 1;\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) AS iodine_bond_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'ca' ) AND atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'ca' )\t----- bird -----\ttoxicology",
    "271": "SELECT b.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE b.bond_id = 'TR001_1_8' AND a1.element = 'cl' AND a2.element = 'c';\t----- bird -----\ttoxicology",
    "272": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom m ON c.atom_id = m.atom_id WHERE a.element = 'c' AND b.bond_type = '#3' AND m.label = '-';\t----- bird -----\ttoxicology",
    "273": "SELECT AVG(percentage) AS chlorine_percentage_in_carcinogenic_molecules FROM ( SELECT b.molecule_id, a.element, COUNT(b.molecule_id) AS element_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' GROUP BY b.molecule_id, a.element ) subquery WHERE a.element = 'cl';\t----- bird -----\ttoxicology",
    "274": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT \"molecule_id\" FROM \"bond\" WHERE \"bond_type\" ='= ';\t----- bird -----\ttoxicology",
    "276": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.atom_id = b.atom_id1 JOIN bond b2 ON a2.atom_id = b2.atom_id2 JOIN connected c ON b.bond_id = c.bond_id JOIN connected c2 ON b2.bond_id = c2.bond_id WHERE b.bond_type = '#3' AND c.atom_id = a1.atom_id AND c2.atom_id = a2.atom_id AND c.molecule_id = c2.molecule_id AND b.molecule_id = c.molecule_id AND b2.molecule_id = c2.molecule_id;\t----- bird -----\ttoxicology",
    "277": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT label FROM connected WHERE bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT m.label, COUNT(DISTINCT a.element) AS carcinogenic_elements FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.label = '+' AND a.atom_id2 = (SELECT atom_id FROM atom WHERE atom_id LIKE '0000004%');\t----- bird -----\ttoxicology",
    "282": "SELECT ratio, label FROM ( SELECT molecule_id, COUNT(element = 'h') AS hydrogen_count, (COUNT(element = 'h')::FLOAT / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006')) AS ratio FROM atom WHERE molecule_id = 'TR006' GROUP BY molecule_id ) subquery WHERE label IN ('+', '-');\t----- bird -----\ttoxicology",
    "283": "SELECT label FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_10_11' LIMIT 1;\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule) AS triple_bond_percentage FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT molecule_id, COUNT(CASE WHEN bond_type ='='THEN 1 END) * 100.0 / SUM(COUNT(CASE WHEN bond_type ='='THEN 1 END)) AS percent FROM connected WHERE atom_id = 'TR047' GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'TR' AND a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = ( SELECT molecule_id FROM connected WHERE atom_id = 'TR151' AND atom_id2 = 'TR151' );\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR010' OR m.label = 'TR020' OR m.label = 'TR030' OR m.label = 'TR040' OR m.label = 'TR050' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN molecule AS m ON c.bond_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id JOIN molecule ml ON a2.molecule_id = ml.molecule_id WHERE m.label = '+' AND ml.label ='='AND a1.element = 'C' AND a2.element = 'C';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE a.atom_id = 'TR000_1' AND b.bond_type = 'TR000_1_2' AND d.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label!= '-';\t----- bird -----\ttoxicology",
    "298": "SELECT m.molecule_id, m.label, COUNT(CASE WHEN a.element = 'h' AND c.label = '+' THEN 1 END) AS hydrogen_carcinogenic_count, COUNT(c.label = '+') AS total_carcinogenic_count, (COUNT(CASE WHEN a.element = 'h' AND c.label = '+' THEN 1 END) * 100.0 / COUNT(c.label = '+)) AS hydrogen_percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id2 AND c.bond_id = b.bond_id JOIN bond b ON a.atom_id = b.atom_id WHERE m.label = '+' GROUP BY m.molecule_id, m.label ORDER BY hydrogen_percentage DESC;\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(DISTINCT b.bond_id) AS double_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.atom_id = 'TR006'; SELECT label FROM molecule WHERE molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o','s', 'n', 'p', 'na', 'br', 'f', 'i','sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id ='molecule_id_1' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 ='molecule_id_2' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT a.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT b.bond_id) AS chlorine_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'chlorine';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(b.bond_type) AS bond_types FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS double_bonds_count, COUNT(CASE WHEN c.label = '+' THEN 1 END) AS carcinogenic_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN connected c ON m.molecule_id = c.atom_id LEFT JOIN connected cc ON m.molecule_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id LEFT JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element!='s' AND b.bond_type!='= ';\t----- bird -----\ttoxicology",
    "312": "SELECT label FROM connected WHERE atom_id = 'TR001_2_4' AND atom_id2 = 'TR001_2_4' AND bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(DISTINCT bond_id) AS single_bonds_count FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'Cl' AND EXISTS ( SELECT 1 FROM connected c2 JOIN atom a2 ON c2.atom_id = a2.atom_id JOIN bond b2 ON c2.bond_id = b2.bond_id WHERE c2.atom_id2 = a.atom_id AND b2.bond_type ='single' );\t----- bird -----\ttoxicology",
    "316": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE c1.bond_id = c2.bond_id AND c1.atom_id < c2.atom_id AND c1.element = 'c' AND c2.element = 'c' AND m.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT AVG(percentage) AS carcinogenic_chlorine_percentage FROM ( SELECT m.molecule_id, COUNT(CASE WHEN a.element = 'Cl' AND m.label = '+' THEN 1 END) AS chlorine_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id GROUP BY m.molecule_id ) subquery\t----- bird -----\ttoxicology",
    "318": "SELECT m.molecule_id FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR001_1_7' LIMIT 1;\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) FROM connected WHERE bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id WHERE c1.atom_id = 'TR000_1' AND c2.atom_id = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE c1.atom_id = 'TR000_2' AND c2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT atom.element FROM atom WHERE atom.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT m.label, AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 100.0 AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id GROUP BY m.label;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected cc ON c.atom_id2 = cc.atom_id JOIN bond b ON cc.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element ='s' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT c.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT m.molecule_id, m.label, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id GROUP BY m.molecule_id, m.label ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT m.molecule_id, m.label, (COUNT(CASE WHEN c.atom_id = 'H' AND b.bond_type = '#' THEN 1 END) * 100.0 / SUM(CASE WHEN c.element = 'h' AND b.bond_type = '#' THEN 1 END)) AS percentage_carcinogenic_triple_bonded_hidrogen FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id GROUP BY m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN ( SELECT molecule_id FROM molecule WHERE label BETWEEN 'TR004' AND 'TR010' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(DISTINCT atom.element) AS carbon_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '-' AND a.atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element IN ('C', 'N', 'O') AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN molecule AS m1 ON b1.molecule_id = m1.molecule_id WHERE m1.label = 'TR012' AND b1.bond_type ='= ';\t----- bird -----\ttoxicology",
    "339": "SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT c.name, c.cardKingdomFoilId, c.cardKingdomId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%incredibly powerful foils%' AND c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT c.id, c.name, c.borderColor, c.cardKingdomFoilId, c.cardKingdomId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%borderless%' AND c.cardKingdomFoilId IS NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT c.name, MAX(c.faceConvertedManaCost) AS max_face_converted_mana_cost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'English' GROUP BY c.name HAVING MAX(c.faceConvertedManaCost) > 0;\t----- bird -----\tcard_games",
    "343": "SELECT c.name, c.faceConvertedManaCost, c.edhrecRank FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.frameVersion = 2015 AND l.status = 'legal' AND c.edhrecRank < 100 AND fd.language = 'English' AND s.name = 'Core Set 2015';\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.rarity, c.printings, c.status FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity ='mythic' AND l.status = 'Banned' AND fd.language = 'English' AND c.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.type = 'Artifact' AND c.side IS NULL AND c.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power = '*' AND c.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Stephen Daniel%' AND l.status = 'No Warning';\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s' );\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, CASE WHEN r.isPromo = 1 THEN 'Promotional Printing' ELSE '' END AS is_promo FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid GROUP BY c.name, c.artist ORDER BY COUNT(r.uuid) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "350": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Annul numbered 29';\t----- bird -----\tcard_games",
    "351": "SELECT c.name, c.flavorText FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT COUNT(id) * 100.0 / (SELECT COUNT(id) FROM foreign_data WHERE language = 'Chinese Simplified') AS percentage_chinese_simplified FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT s.name, SUM(ct.totalSetSize) AS total_cards FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN foreign_data fd ON t.multiverseid = fd.uuid JOIN legalities l ON s.uuid = l.uuid JOIN cards c ON l.uuid = c.uuid WHERE t.language = 'Italian' GROUP BY s.name ORDER BY total_cards DESC;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE keywords = 'infinite power';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT asciiName FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT set.language FROM foreign_data AS fd JOIN sets AS s ON fd.multiverseid = s.code WHERE s.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status ='restricted' AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE legalities.status ='restricted' AND foreign_data.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT type FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text AS rule_of_playing_card FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE name = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT ( SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' ) AS borderless_count, COUNT(*) AS total_cards * 100.0 / ( SELECT COUNT(*) FROM cards ) AS percentage FROM foreign_data\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards WHERE flavorText LIKE '%German%' AND isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.borderColor = 'borderless' AND cards.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT ( SELECT COUNT(id) FROM cards WHERE language = 'French' AND isStorySpotlight = 1 ) AS total_french_story_spotlight_cards, ( SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1 ) AS total_story_spotlight_cards, ( SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1 AND language = 'French' ) AS total_french_cards, ( ( SELECT COUNT(id) FROM cards WHERE language = 'French' AND isStorySpotlight = 1 ) / ( SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1 ) ) * 100 AS percentage_french_story_spotlight_cards;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.convertedManaCost = 0 AND fd.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "376": "SELECT c.name, c.layout FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.keywords LIKE '%flying%' GROUP BY c.name, c.layout;\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype!= 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE (c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL) AND fd.flavorText LIKE '%incredibly powerful%';\t----- bird -----\tcard_games",
    "379": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%duel deck a%'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.name, c.availability, f.flavorText FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.availability = 'paper' AND f.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE status = 'Banned' AND borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT c.uuid, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Beacon of Immortality' );\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS total_cards, legality_status FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE frameVersion = 'future' AND status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT c.name, c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'English' AND fd.name = 'Set OGW' AND fd.type = 'Flavor Text';\t----- bird -----\tcard_games",
    "388": "SELECT DISTINCT f.uuid, f.language, st.translation FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN sets s ON s.code = '10E' JOIN set_translations st ON s.code = st.setCode WHERE s.convertedManaCost = 5 AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT DISTINCT c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.id BETWEEN 1 AND 20; SELECT DISTINCT r.format FROM legalities r JOIN cards c ON r.uuid = c.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name, f.flavorText, s.name AS set_name, st.translation FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomId IS NULL OR cardKingdomFoilId IS NULL) AND isPowerful = 'False';\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE artist = 'UDON' AND availability ='mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE frames.frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.layout = 'normal' AND c.frameVersion = 2003 AND c.borderColor = 'black' AND (l.format = 'paper' OR l.format ='mtgo') AND s.isOnlineOnly = 0 AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana_cost FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' AND isOnlineOnly = 1 ) / ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' ) AS percentage\t----- bird -----\tcard_games",
    "402": "SELECT COUNT(id) AS story_spotlight_count, SUM(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS story_spotlight_without_text, (COUNT(id) - story_spotlight_without_text) AS total_cards, (story_spotlight_without_text / total_cards) * 100 AS percentage FROM cards WHERE isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT c.name, (COUNT(CASE WHEN f.language = 'Spanish' THEN 1 END) * 100.0 / COUNT(c.id)) AS percentage FROM cards c JOIN foreign_data f ON c.uuid = f.uuid GROUP BY c.name ORDER BY percentage DESC;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT language FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE foreign_data.language = 'Portuguese (Brasil)' AND sets.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT c.id, c.name, c.type, c.legal FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM cards WHERE type IS NOT NULL AND supertypes IS NOT NULL AND subtypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text = 'This is a triggered mana ability.' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Erica Yang' AND s.is_paper = true AND r.format = 'pauper';\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE asciiName = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Matthew D. Wilson' AND c.type = 'Creature' AND c.layout = 'Normal' AND c.borderColor = 'black';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN rulings ON cards.uuid = rulings.uuid WHERE rarity = 'rare' AND date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.baseSetSize = 180 AND tr.language IS NOT NULL;\t----- bird -----\tcard_games",
    "415": "SELECT ( SELECT COUNT(*) FROM foreign_data WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0 ) / ( SELECT COUNT(*) FROM foreign_data WHERE format = 'commander' AND status = 'legal' ) * 100 AS percentage\t----- bird -----\tcard_games",
    "416": "SELECT ( SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL AND fd.language = 'French' ) / ( SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL OR c.power = '*' ) * 100 AS percentage_french_cards_without_power\t----- bird -----\tcard_games",
    "417": "SELECT ( SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese' AND type = 'expansion' ) / ( SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese' ) AS percentage\t----- bird -----\tcard_games",
    "418": "SELECT asciiName FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT c.name, c.power, c.promoTypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.promoTypes = 'arenaleague' ORDER BY c.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE multiverse = 149934);\t----- bird -----\tcard_games",
    "423": "SELECT kf.id AS kingdom_foil_id, kf.name AS kingdom_foil_name, kc.id AS kingdom_card_id, kc.name AS kingdom_card_name FROM cards kf JOIN cards kc ON kf.colorIdentity = kc.colorIdentity WHERE kf.cardKingdomFoilId IS NOT NULL AND kf.cardKingdomId IS NOT NULL ORDER BY kf.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT DIVIDE( COUNT( CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE NULL END ), COUNT(*) ) * 100 FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT c.id, c.name, c.subtypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND fd.flavorText IS NULL AND s.isForeignOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0 AND s.isNonFoilOnly = 0 AND s.isFoilOnly = 0 AND s.totalSetSize > 0 GROUP BY c.id, c.name, c.subtypes HAVING COUNT(DISTINCT c.face_id) = 1;\t----- bird -----\tcard_games",
    "426": "SELECT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.multiverseid IS NULL ORDER BY s.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT flavorText.language FROM foreign_data JOIN sets ON sets.code = foreign_data.uuid WHERE sets.name = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, t.translation FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT s.language, s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'Italian' AND fd.language = 'Italian' JOIN cards c ON s.uuid = c.uuid AND c.setCode = s.code WHERE s.block = 'Shadowmoor' ORDER BY s.name ASC;\t----- bird -----\tcard_games",
    "431": "SELECT s.id, s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE s.isForeignOnly = 1 AND l.status = 'available' AND fd.language = 'Japanese' AND s.isFoilOnly = 1;\t----- bird -----\tcard_games",
    "432": "SELECT s.name AS russian_set, MAX(s.baseSetSize) AS total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.language = 'Russian' GROUP BY s.name ORDER BY total_cards DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT COUNT(DISTINCT foreign_data.uuid) AS total_cards, COUNT(DISTINCT CASE WHEN foreign_data.language = 'zh-CN' AND foreign_data.isOnlineOnly = 1 THEN foreign_data.uuid END) AS online_only_chinese_simplified_cards FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND sets.mtgoCode IS NULL AND sets.mtgoCode!= '';\t----- bird -----\tcard_games",
    "435": "SELECT c.id, c.borderColor FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%border with black%' GROUP BY c.id, c.borderColor HAVING COUNT(DISTINCT fd.language) = 1 ORDER BY c.id;\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar');\t----- bird -----\tcard_games",
    "441": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation LIKE '%07/13/2007%';\t----- bird -----\tcard_games",
    "442": "SELECT s.baseSetSize, s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND s.block LIKE '%Masques%' AND s.block LIKE '%Mirage%';\t----- bird -----\tcard_games",
    "443": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT f.flavorText, s.type FROM foreign_data f JOIN sets s ON f.uuid = s.uuid WHERE s.watermark = 'boros' LIMIT 1;\t----- bird -----\tcard_games",
    "445": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie' LIMIT 1;\t----- bird -----\tcard_games",
    "446": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE set_code = 'Abyssal Horror' AND converted_mana_cost = 10) AS percentage FROM cards WHERE set_code = 'Abyssal Horror' AND converted_mana_cost = 10;\t----- bird -----\tcard_games",
    "447": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND tr.translation = 'Commander';\t----- bird -----\tcard_games",
    "448": "SELECT f.flavorText, s.type FROM foreign_data f JOIN sets s ON f.uuid = s.uuid WHERE s.watermark = 'abzan';\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT converted_mana_cost FROM cards WHERE name = 'Ancestor's Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE cards.borderColor = 'white' AND (cards.power = '*' OR cards.power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE isPromo = 1 AND side IS NOT NULL GROUP BY c.name HAVING COUNT(DISTINCT fd.flavorText) > 1;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT p.name, pu.purchase_url FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.set_code JOIN rulings r ON c.uuid = r.uuid WHERE c.promo_types = 'bundle' AND pu.type = 'website';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND (availability LIKE '%arena,mtgo%' OR availability LIKE '%mtgo,arena%') AND isOnlineOnly = 0;\t----- bird -----\tcard_games",
    "459": "SELECT name, converted_mana_cost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.frameVersion = '2003' AND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = s.code) ORDER BY c.convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE fd.flavorText LIKE '%Italian%' AND s.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT set_translations.id) AS translation_count FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT name FROM cards WHERE set_code = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT * FROM cards WHERE name LIKE '%Ancestor''s Chosen%' AND language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND set_code = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT SUM(baseSetSize) AS total_cards FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM foreign_data WHERE flavorText = 'Simplified Chinese' AND multiverseid = ( SELECT id FROM cards WHERE name = 'Eighth Edition' );\t----- bird -----\tcard_games",
    "469": "SELECT mtgoCode FROM sets WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT \"type\" FROM \"sets\" WHERE \"name\" = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM foreign_data WHERE flavorText = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE language = 'Italian' AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE sets.name = 'Coldsnap' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name, number FROM cards WHERE setCode = 'Coldsnap' AND number = 4;\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen' AND flavorText IS NOT NULL);\t----- bird -----\tcard_games",
    "482": "SELECT flavorText FROM foreign_data WHERE language = 'German' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": "SELECT f.flavorText, r.text FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN rulings r ON l.uuid = r.uuid WHERE f.language = 'Italian' AND f.name LIKE '%Coldsnap%';\t----- bird -----\tcard_games",
    "484": "SELECT c.name, s.name AS set_name, MAX(c.convertedManaCost) AS highest_converted_mana_cost FROM cards c JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND c.language = 'Italian' GROUP BY c.name, s.name ORDER BY highest_converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE uuid = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / SUM(convertedManaCost)) * 100 FROM cards WHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN rulings.text LIKE '%incredibly powerful%' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN sets.name = 'Coldsnap' THEN 1 ELSE 0 END)) AS percentage_incredibly_powerful FROM rulings JOIN sets ON rulings.uuid = sets.uuid WHERE rulings.text LIKE '%foil is incredibly powerful%' AND sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND s.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE fd.flavorText LIKE '%Jim Pavelec%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT SUM(baseSetSize) AS total_cards FROM sets WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'French' AND fd.uuid = tr.translation WHERE s.name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT translations.language) AS translation_count FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Japanese' AND s.name = 'Fellwar Stone';\t----- bird -----\tcard_games",
    "501": "SELECT MAX(converted_mana_cost) AS highest_converted_mana_cost FROM cards WHERE set_code = 'Journey into Nyx Hero''s Path';\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT s.name AS expansion_type FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.converted_mana_cost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT flavorText FROM foreign_data WHERE language = 'Chinese Simplified' AND name = 'Mirrodin';\t----- bird -----\tcard_games",
    "506": "SELECT s.name, (SUM(t.isNonFoilOnly = 1) / SUM(t.language = 'Japanese')) * 100 FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Japanese' GROUP BY s.name;\t----- bird -----\tcard_games",
    "507": "SELECT s.name, COUNT(c.id) AS total_cards, SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_cards, (SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT c.language)) * 100 AS percentage_online_only FROM sets s JOIN foreign_data f ON s.code = f.multiverseid JOIN cards c ON f.uuid = c.uuid WHERE s.language = 'Portuguese (Brazil)' GROUP BY s.name;\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT s.code, s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE fd.flavorText LIKE '%Aleksi Briclot%' AND fd.isTextless = 1 AND s.availability LIKE '%available printing types%';\t----- bird -----\tcard_games",
    "509": "SELECT s.id, s.name, s.baseSetSize FROM sets s JOIN ( SELECT setCode, MAX(baseSetSize) AS max_base_set_size FROM sets GROUP BY setCode ) max_sets ON s.setCode = max_sets.setCode AND s.baseSetSize = max_sets.max_base_set_size;\t----- bird -----\tcard_games",
    "510": "SELECT c.name, c.artist, c.convertedManaCost FROM cards c JOIN ( SELECT name, MAX(convertedManaCost) AS max_cost FROM cards WHERE isMultiFace = 0 GROUP BY name ) max_cost_cards ON c.name = max_cost_cards.name WHERE c.isMultiFace = 0 AND c.convertedManaCost = max_cost_cards.max_cost ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effect FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND setCode IN ( SELECT code FROM sets WHERE isFoilOnly = 1 AND isForeignOnly = 0 AND isNonFoilOnly = 0 AND isOnlineOnly = 0 AND isPartialPreview = 0 );\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.type = 'commander' GROUP BY s.id;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.convertedManaCost FROM cards c JOIN ( SELECT set_code, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE format = 'duel' GROUP BY set_code ) subquery ON c.set_code = subquery.set_code AND c.convertedManaCost = subquery.max_converted_mana_cost ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, rarity, format FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' AND status = 'legal' GROUP BY rarity, format;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.type = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT s.name, c.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid JOIN cards c ON fd.uuid = c.uuid WHERE l.status = 'Banned' GROUP BY s.name, c.name ORDER BY MAX(COUNT(l.status = 'Banned')) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM foreign_data WHERE multiverseid = ( SELECT id FROM sets WHERE name = 'Battlebond' );\t----- bird -----\tcard_games",
    "520": "SELECT MIN(artist) AS illustrator_with_least_cards, MIN(sets.format) AS format_of_play FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code GROUP BY artist;\t----- bird -----\tcard_games",
    "521": "SELECT c.name, c.status, f.language, f.translation FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = '1997' AND c.artist = 'D. Alexander Gregory' AND (l.hasContentWarning = 1 OR l.format = 'legacy') AND c.isOnlineOnly = 0 AND c.isTimeshifted = 0 AND c.isPromo = 0 AND c.isReprint = 0 AND c.isReserved = 0 AND c.isStarter = 0 AND c.isStorySpotlight = 0 AND c.isTextless = 0 AND c.isOversized = 0 AND c.isFullArt = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isPartialPreview = 0 AND c.baseSetSize > 0 AND c.setCode = '1997';\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND l.format = 'EDHRec' ORDER BY c.edhrecRank ASC LIMIT 1;\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS annual_average_sets, MAX(lang.language) AS common_language FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON sets.uuid = rulings.uuid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY sets.baseSetSize;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE BorderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status IN ('banned','restricted') AND c.format = 'oldschool';\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.set_name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = fd.language WHERE tr.language NOT LIKE '%Japanese%' AND fd.type = 'Flavor Text' AND tr.translation LIKE '%Korean%';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersion AS frame_style, artist AS card_artist, name AS card_name FROM cards WHERE artist = 'Allen Williams' UNION SELECT ruling.name AS card_name, 'Banned' AS status FROM rulings WHERE text LIKE '%Banned%';\t----- bird -----\tcard_games",
    "531": "SELECT MAX(Reputation) AS max_reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "532": "SELECT users.DisplayName FROM users WHERE YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.DisplayName ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 AND u.UpVotes > 100 GROUP BY u.Id HAVING COUNT(DISTINCT v.Id) > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE views > 10 AND YEAR(votes.CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts WHERE OwnerUserId = p.OwnerUserId);\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvote has a type ID of 1 GROUP BY u.Id ORDER BY MAX(v.UpVotes) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(comments.CommentCount) FROM posts JOIN comments ON posts.Id = comments.PostId WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answers FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE ph.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT `Location` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Title` = 'Eliciting priors from experts');\t----- bird -----\tcodebase_community",
    "549": "SELECT t.TagName, u.DisplayName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE t.TagName = 'bayesian' LIMIT 1;\t----- bird -----\tcodebase_community",
    "550": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(Count) FROM tags) ORDER BY p.CreaionDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(DISTINCT \"badges\".\"Id\") AS total_badges FROM \"badges\" JOIN \"users\" ON \"badges\".\"UserId\" = \"users\".\"Id\" WHERE \"users\".\"DisplayName\" = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE DisplayName = 'csgillespie' AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(b.Views) AS average_badges FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN badges AS b ON p.Id = b.PostId WHERE u.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN users.Age > 65 THEN 1 END) / COUNT(DISTINCT posts.Id)) * 100 AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(votes.Count) AS max_votes_creation_date FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.PostTypeId = 2 -- Assuming '2' corresponds to 'Question' GROUP BY votes.CreationDate ORDER BY max_votes_creation_date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.Score = (SELECT MAX(comments.Score) FROM comments) AND u.Id = (SELECT MAX(users.Id) FROM users);\t----- bird -----\tcodebase_community",
    "562": "SELECT * FROM posts WHERE view_count = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(p.FavoriteCount) AS favorite_count_count FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Id = 3025 AND p.CreationDate = '2014/4/23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId WHERE p.ParentId = 107829 LIMIT 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT p.Title, p.ClosedDate FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN comments AS c ON p.Id = c.PostId WHERE u.Id = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(DISTINCT posts.Id) AS total_posts FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(votes.VoteTypeId) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(posts.Id) AS post_count, COUNT(votes.Id) AS vote_count FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN votes ON posts.Id = votes.PostId WHERE users.Id = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT SUM(views) AS total_views FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT c.Text FROM comments c JOIN votes v ON c.PostId = v.PostId JOIN posts p ON c.PostId = p.Id WHERE v.VoteTypeId = 17 AND p.Score = 17 AND c.UserId = v.UserId AND c.PostId = v.PostId;\t----- bird -----\tcodebase_community",
    "574": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'Accepted Answer' AND p.CreaionDate = (SELECT MAX(CreaionDate) FROM posts) AND u.WebsiteUrl LIKE '%http://stackoverflow.com%';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges AS b JOIN posts AS p ON b.Id = p.OwnerUserId WHERE p.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE u.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT comment_text FROM comments WHERE post_title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Necromancer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT v.PostId) = 1;\t----- bird -----\tcodebase_community",
    "581": "SELECT u.DisplayName AS editor FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa' AND v.CreationDate > p.CreaionDate;\t----- bird -----\tcodebase_community",
    "583": "SELECT u.DisplayName, SUM(v.Score) AS total_score FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN posts_edited pe ON p.Id = pe.PostId JOIN users ed ON pe.EditedUserId = ed.Id WHERE u.DisplayName = 'Yevgeny' GROUP BY u.DisplayName\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(bounty_amount) FROM votes WHERE post_id IN (SELECT id FROM posts WHERE title LIKE '%data%');\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount FROM posts p JOIN post_tags pt ON p.Id = pt.PostId JOIN tags t ON pt.TagId = t.Id WHERE t.TagName = 'humor' GROUP BY p.Title, c.Text\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(c.Id) AS total_comments FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.Id = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT u.Id AS user_id, MAX(u.Reputation) AS highest_reputation FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY highest_reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(Views) AS lowest_views FROM users WHERE Id = (SELECT MIN(Id) FROM users);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND YEAR(votes.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT users.Id) AS num_users_with_more_than_five_badges FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id GROUP BY users.Id HAVING COUNT(DISTINCT badges.Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.UserId JOIN locations ON users_locations.LocationId = locations.Id WHERE locations.Name = 'New York' AND (SELECT Name FROM badges WHERE Id IN (SELECT UserId FROM comments WHERE Score = 1 AND UserId IN (SELECT Id FROM users WHERE DisplayName = 'User Name'))) IN ('Teacher', 'Supporter');\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName, p.Title FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN ( SELECT PostId, COUNT(*) AS history_count FROM postHistory GROUP BY PostId HAVING COUNT(*) = 1 ) h ON p.Id = h.PostId JOIN ( SELECT UserId, COUNT(*) AS view_count FROM views GROUP BY UserId HAVING COUNT(*) >= 1000 ) v ON u.Id = v.UserId WHERE ph.RevisionGUID IS NOT NULL;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, COUNT(c.Id) AS comment_count FROM users u JOIN comments c ON u.Id = c.UserId GROUP BY u.Id ORDER BY comment_count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.UserId JOIN locations ON users_locations.LocationId = locations.Id WHERE locations.Name = 'India' AND tags.TagName = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT ( SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2010 ) AS 2010_count , ( SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2011 ) AS 2011_count , ( ( ( SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2010 ) * 100.0 ) - ( ( SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2011 ) * 100.0 ) ) AS percentage_difference\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT u.UserId) AS unique_commenters FROM postHistory ph JOIN posts p ON ph.PostId = p.Id JOIN comments c ON ph.Id = c.PostHistoryId JOIN users u ON c.UserId = u.Id WHERE p.Id = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Title, p.ViewCount FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN postLinks rl ON pl.RelatedPostId = rl.PostId WHERE rl.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT c.Score, p.PostHistoryTypeId FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId JOIN posts p ON ph.PostId = p.Id WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Id = 686 AND YEAR(posts.CreaitionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes.UpVotes) AS average_up_votes, AVG(users.Age) AS average_user_age FROM users JOIN votes ON users.Id = votes.UserId WHERE users.PostCount > 10\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges AS b JOIN comments AS c1 ON b.Id = c1.PostId JOIN comments AS c2 ON c1.PostId = c2.PostId JOIN users AS u ON c2.UserId = u.Id JOIN posts AS p ON u.Id = p.OwnerUserId WHERE p.CreaionDate = '2010-07-19 19:39:08.0' GROUP BY b.Name HAVING COUNT(DISTINCT c1.UserId) > 0 AND COUNT(DISTINCT c2.UserId) > 0;\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:25:47.0' AND u.Id = (SELECT Id FROM users WHERE DisplayName = 'John Doe');\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(posts.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b JOIN ( SELECT UserId, MAX(Reputation) AS MaxReputation FROM users GROUP BY UserId ) u ON b.UserId = u.UserId WHERE b.Name = 'Highest Reputation';\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Id, u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = '7/19/2010 7:39:08 PM' AND b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT b.UserId, b.Name, b.Date FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'Rochester, NY' GROUP BY b.UserId, b.Name, b.Date ORDER BY b.Date DESC;\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT users.Id) AS total_teachers, COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_teachers FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users)) AS percentage FROM badges AS organizer JOIN users ON organizer.UserId = users.Id WHERE organizer.Name = 'Organizer' AND users.Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments JOIN postHistory ON comments.PostId = postHistory.PostId JOIN posts ON postHistory.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE posts.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Id, u.Reputation, u.Location, u.Age FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE u.Location = 'Vienna, Austria' GROUP BY u.Id, u.Reputation, u.Location, u.Age HAVING COUNT(DISTINCT b.Name) > 0;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT u.Id, SUM(v.Views) AS total_views FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON u.Id = b.UserId WHERE b.Name = '7/19/2010 7:39:08 PM' GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "621": "SELECT u.DisplayName, b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users) AND v.VoteTypeId = 1 -- Assuming upvote badge GROUP BY u.DisplayName, b.Name ORDER BY u.Reputation DESC;\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT users.Id) AS elders_with_supporter_badge FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT users.DisplayName FROM users WHERE users.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.Id, u.DisplayName, MAX(v.Views) AS highest_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id, u.DisplayName ORDER BY highest_views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2010) AS votes_2010, COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2011) AS votes_2011 FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS v WHERE v.UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id AS post_id FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId JOIN users voter_u ON v.UserId = voter_u.Id WHERE u.DisplayName ='slashnick' GROUP BY p.Id ORDER BY MAX(v.AnswerCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(ViewCount) AS max_popularity FROM posts WHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder');\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Matt Parker' AND posts.Score > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT SUM(score) FROM comments JOIN users ON comments.UserId = users.Id JOIN posts ON comments.PostId = posts.Id WHERE users.DisplayName = 'Neil McGuigan' AND score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t.TagName, COUNT(p.Id) AS PostCount FROM posts p JOIN tags t ON p.PostId = t.ExcerptPostId WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') AND p.CommentCount = 0 GROUP BY t.TagName HAVING PostCount > 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM posts WHERE DisplayName = 'Community')) AS percentage FROM posts WHERE TagName = 'r';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) - SUM(ViewCount) FROM posts WHERE DisplayName = 'Mornington' AND DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT users.Id) AS commentator_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'commentator' AND YEAR(votes.CreationDate) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT u.DisplayName, u.Age FROM users u JOIN ( SELECT OwnerUserId FROM posts GROUP BY OwnerUserId ORDER BY SUM(Views) DESC LIMIT 1 ) sub ON u.Id = sub.OwnerUserId;\t----- bird -----\tcodebase_community",
    "644": "SELECT p.CreationDate, pu.Id AS LastEditUserId FROM posts p JOIN users pu ON p.OwnerUserId = pu.Id WHERE p.Title = 'Detecting a given face in a database of facial images' LIMIT 1;\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c1.PostId JOIN comments c2 ON p.Id = c2.PostId JOIN users u1 ON c1.UserId = u1.Id JOIN users u2 ON c2.UserId = u2.Id WHERE c1.Score > 60 AND c2.Score > 60 GROUP BY p.Id, u1.Id, u2.Id HAVING COUNT(DISTINCT c1.UserId) > 1 AND COUNT(DISTINCT c2.UserId) > 1;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND b.Date >= '2011-01-01' AND b.Date <= '2011-12-31';\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE p.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(phh.Id) AS post_history_count, MAX(phh.CreationDate) AS last_edit_date FROM postHistory AS phh JOIN posts AS p ON phh.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Id;\t----- bird -----\tcodebase_community",
    "650": "SELECT u.Id, u.DisplayName, u.Location, u.LastAccessDate FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT p.Id FROM posts p JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'outliers' ) AND v.CreationDate = ( SELECT MAX(v2.CreationDate) FROM votes v2 WHERE v2.PostId IN ( SELECT p.Id FROM posts p JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'outliers' ) )\t----- bird -----\tcodebase_community",
    "651": "SELECT p.Title FROM posts p JOIN posts_tags pt ON p.Id = pt.PostId JOIN tags t ON pt.TagId = t.Id WHERE t.TagName = 'time-series';\t----- bird -----\tcodebase_community",
    "652": "SELECT p.PostId, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount = (SELECT MAX(ViewCount) FROM posts) LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.Id = t.PostId WHERE t.TagName = 'hypothesis-testing' AND p.ExcerptPostId = u.Id\t----- bird -----\tcodebase_community",
    "655": "SELECT t.Title, t.PostHistoryTypeId, t.PostId, t.CreationDate, t.UserId FROM posts p JOIN postHistory th ON p.Id = th.PostId JOIN tags t ON th.PostHistoryTypeId = t.Id WHERE p.Title = 'What are principal component scores?' AND t.TagName = 'principal-component-scores';\t----- bird -----\tcodebase_community",
    "656": "SELECT u.DisplayName FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN votes AS v ON p.Id = v.PostId JOIN ( SELECT PostId, MAX(Score) AS Score FROM votes GROUP BY PostId ) AS max_votes ON p.Id = max_votes.PostId WHERE p.ParentId IS NOT NULL AND v.UserId = u.Id ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT p.Title, p.ViewCount FROM posts p JOIN ( SELECT PostId, MAX(ViewCount) AS max_view_count FROM posts GROUP BY PostId ) max_posts ON p.PostId = max_posts.PostId AND p.ViewCount = max_posts.max_view_count LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT tags.Id) FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE posts.PostCount BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT MAX(posts.FavoriteCount) AS owner_user_id_of_most_valuable_post FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.PostId = ( SELECT posts.PostId FROM posts JOIN postHistory ON posts.Id = postHistory.PostId JOIN postLinks ON postHistory.PostId = postLinks.PostId JOIN posts ON postHistory.PostId = posts.Id WHERE postHistory.RevisionGUID LIKE 'a%' AND postLinks.RelatedPostId IS NULL )\t----- bird -----\tcodebase_community",
    "661": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 -- Assuming upvote is represented by 1 GROUP BY u.Id, u.DisplayName ORDER BY u.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Age) AS youngest_user_id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(score) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19') AND UserId = (SELECT Id FROM users WHERE DisplayName = 'YourUsername');\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_links) FROM ( SELECT COUNT(post_links.Id) AS monthly_links, EXTRACT(MONTH FROM post_links.CreationDate) AS month FROM post_links JOIN posts ON post_links.PostId = posts.Id WHERE YEAR(posts.CreationDate) = 2010 AND posts.AnswerCount <= 2 GROUP BY month ) AS subquery;\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 GROUP BY p.Id HAVING MAX(v.Score) = (SELECT MAX(Score) FROM votes WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN posts linked_posts ON pl.RelatedPostId = linked_posts.Id WHERE pl.CreationDate = (SELECT MIN(pl2.CreationDate) FROM postLinks pl2 WHERE pl2.PostId = p.Id) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.Id ORDER BY COUNT(b.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) AS first_vote_date FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(users.CreationDate) AS youngest_first_post_date FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.PostTypeId = 1;\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' AND v.CreationDate = (SELECT MIN(CreationDate) FROM votes) AND b.Id = (SELECT MIN(Id) FROM badges);\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE u.Location = 'United Kingdom' AND v.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(votes.PostId) AS average_posts_voted_by_oldest_users FROM votes JOIN users ON votes.UserId = users.Id JOIN posts ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MAX(Age) FROM users)\t----- bird -----\tcodebase_community",
    "674": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 -- Assuming upvote is represented by 1 GROUP BY u.DisplayName ORDER BY MAX(v.UpVotes) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Reputation > 2000 AND posts.Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND YEAR(posts.CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvotes have a type id of 1 GROUP BY p.Id, p.Title ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE YEAR(ph.CreationDate) = 2011 GROUP BY u.DisplayName HAVING SUM(ph.ViewCount) > 20000;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 AND p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE YEAR(CreationDate) = 2010);\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000)) AS percentage FROM posts\t----- bird -----\tcodebase_community",
    "684": "SELECT AVG(Age) AS percentage, COUNT(Id) AS total_users FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(ViewCount) AS total_views FROM posts WHERE Text = 'Computer Game Datasets' AND OwnerUserId = ( SELECT MAX(Id) FROM users WHERE DisplayName = ( SELECT DisplayName FROM users WHERE Id = ( SELECT MAX(OwnerUserId) FROM posts WHERE Text = 'Computer Game Datasets' ) ) )\t----- bird -----\tcodebase_community",
    "686": "SELECT SUM(CASE WHEN posts.ViewCount > (SELECT AVG(ViewCount) FROM posts) THEN 1 ELSE 0 END) AS total_posts_above_average_views FROM posts WHERE posts.OwnerUserId IN (SELECT Id FROM users);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.PostId = p.Id JOIN ( SELECT Id, MAX(Score) AS max_score FROM posts GROUP BY Id ) sub ON p.Id = sub.Id AND c.PostId = sub.Id\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(posts.Id) FROM posts JOIN views ON posts.Id = views.PostId JOIN comments ON posts.Id = comments.PostId WHERE views.ViewCount > 35000 AND comments.CommentCount = 0 AND posts.OwnerUserId IN ( SELECT Id FROM users );\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Id = 183 GROUP BY u.Id ORDER BY v.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, b.Date FROM badges b JOIN ( SELECT UserId, MAX(Date) AS max_date FROM badges GROUP BY UserId ) latest_badges ON b.UserId = latest_badges.UserId WHERE b.Name = 'Emmett';\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Age BETWEEN 19 AND 65 AND votes.UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MAX(stats_badges.Date) - MIN(stats_badges.Date) AS time_to_badge FROM stats_badges JOIN users ON stats_badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon' AND stats_badges.PostId = ( SELECT MIN(PostId) FROM posts WHERE posts.OwnerUserId = users.Id );\t----- bird -----\tcodebase_community",
    "693": "SELECT u.Id, COUNT(p.Id) AS post_count, COUNT(c.Id) AS comment_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId WHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users) GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' AND p.OwnerUserId = u.Id ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(p.Id) FROM posts p JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users u JOIN users v ON u.DisplayName = v.DisplayName WHERE v.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.Id) AS comments_count, COUNT(DISTINCT a.Id) AS answers_count FROM posts p JOIN comments c ON p.Id = c.PostId JOIN posts a ON c.PostId = a.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT MAX(CreationDate) AS creation_date FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT MAX(percentage) AS max_percentage FROM ( SELECT COUNT(stats_posts.Id) AS score_count, MAX(stats_users.Reputation) AS max_reputation FROM stats_posts JOIN stats_users ON stats_posts.OwnerUserId = stats_users.Id WHERE stats_posts.Score > 50 GROUP BY stats_users.Id ) AS influential_users;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND COUNT(*) <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, v.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'Commenter' AND v.PostId IN ( SELECT p.Id FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Text = 'fine, you win :)' );\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON comments.UserId = users.Id WHERE posts.Title LIKE '%linear regression%'\t----- bird -----\tcodebase_community",
    "707": "SELECT p.Id, p.Title, c.Score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 AND c.Score = (SELECT MAX(c2.Score) FROM comments c2 WHERE c2.PostId = p.Id);\t----- bird -----\tcodebase_community",
    "708": "SELECT u.DisplayName, u.CreationDate, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostTypeId = 1 AND v.VoteTypeId = 2 -- Comment with website GROUP BY u.Id, u.DisplayName, u.CreationDate;\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT comments.PostId) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) AS total_users_40 FROM users JOIN votes ON users.Id = votes.UserId JOIN comments ON comments.PostId = posts.Id WHERE comments.Score = 0 AND users.Age >= 40\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT comments.Text FROM comments JOIN users ON comments.UserId = users.Id JOIN votes ON comments.Id = votes.PostCommentId JOIN posts ON votes.PostId = posts.Id WHERE users.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT c.UserId, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND c.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT comments.UserId) * 100.0 / (SELECT COUNT(DISTINCT comments.UserId) FROM comments WHERE comments.Score BETWEEN 5 AND 10)) AS percentage FROM comments WHERE comments.Score BETWEEN 5 AND 10 AND comments.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superpower JOIN hero_power ON hero_power.hero_id = superpower.id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superpower WHERE power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(DISTINCT sp.id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE hero_attribute.attribute_value = (SELECT colour.id FROM colour WHERE colour.colour = 'Blue');\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Blue' AND hero_attribute.attribute_value = 1 AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN colour c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Blond';\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT s.superhero_name, h.height_cm FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ORDER BY h.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT superhero.eye_colour_id, COUNT(superhero.id) AS popularity FROM superhero WHERE superhero.publisher_name = 'Marvel Comics' GROUP BY superhero.eye_colour_id ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name, s.full_name, s.gender_id, s.eye_colour_id, s.hair_colour_id, s.skin_colour_id, s.race_id, s.publisher_id, s.alignment_id FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON a.gender_id = g.id JOIN race r ON a.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON s.alignment_id = al.id WHERE p.publisher_name = 'Marvel Comics' AND s.superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Speed' GROUP BY s.publisher_id ORDER BY MIN(attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Gold' AND hero_attribute.attribute_id = (SELECT id FROM alignment WHERE attribute_name = 'eye_colour_id'); JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher_name FROM superhero WHERE superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE c.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute WHERE attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name, a.attribute_name, a.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND a.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100 AND superhero.gender_id = (SELECT id FROM alignment WHERE alignment_name = 'Female');\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name, COUNT(hp.power_id) AS power_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(DISTINCT superhero.id) AS superhero_count, SUM(CASE WHEN superhero.alignment = 'Bad' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT superhero.id) AS percentage_bad_alignment FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, SUM(publisher_name = 'DC Comics') AS dc_superheroes FROM superhero WHERE publisher_name IN ('Marvel Comics', 'DC Comics'); [SQL] SELECT (marvel_superheroes - dc_superheroes) AS difference FROM ( SELECT SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, SUM(publisher_name = 'DC Comics') AS dc_superheroes FROM superhero WHERE publisher_name IN ('Marvel Comics', 'DC Comics') );\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Male');\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.attribute_name = 'eye_colour' AND a.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE attribute_name = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'black' AND hero_attribute.attribute_value = 169 LIMIT 1;\t----- bird -----\tsuperhero",
    "758": "SELECT h.hair_colour FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'hair_colour' AND h.race_id = (SELECT id FROM race WHERE race = 'human') AND h.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT MAX(superhero.weight_kg) AS heaviest_superhero_weight FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE attribute.attribute_name = 'eye_colour';\t----- bird -----\tsuperhero",
    "760": "SELECT ( SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics' ) AS marvel_heroes_count, ( SELECT COUNT(*) FROM superhero ) AS total_heroes_count, ( SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 ) AS marvel_heroes_height_count, ( SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics' ) * 100.0 / ( SELECT COUNT(*) FROM superhero ) AS percentage\t----- bird -----\tsuperhero",
    "761": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender') AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero) AND s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender') AND s.gender_name = 'Male';\t----- bird -----\tsuperhero",
    "762": "SELECT superpower.power_name, MAX(hero_power.COUNT(power_name)) AS most_common_power FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY superpower.power_name;\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM superhero WHERE hero_power.power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='strength' GROUP BY superhero.full_name HAVING MAX(hero_attribute.attribute_value) = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name ='strength' );\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(superhero.id) AS average_superhero_id FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='skin_colour' AND attribute.colour.id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(h.attribute_value) AS most_durability FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN superpower sp ON h.power_id = sp.id JOIN hero_power hp ON s.id = hp.hero_id WHERE sp.power_name = 'durability' AND h.attribute_name = 'durability' AND s.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name ORDER BY most_durability DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.attribute_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.attribute_id JOIN colour ON ha1.attribute_value = colour.id JOIN colour ON ha2.attribute_value = colour.id WHERE superhero_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT a.colour, h.hair, e.eyes FROM superhero AS s JOIN hero_attribute AS a ON s.id = a.hero_id AND a.attribute_id = 'eye_colour_id' JOIN hero_attribute AS e ON s.id = e.hero_id AND e.attribute_id = 'hair_colour_id' JOIN hero_attribute AS h ON s.id = h.hero_id AND h.attribute_id ='skin_colour_id' WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND value = 'Female') AND s.publisher_id = (SELECT id FROM alignment WHERE attribute_name = 'Publisher' AND value = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = (SELECT c.colour FROM colour c WHERE c.id = (SELECT a.colour_id FROM attribute a WHERE a.attribute_name = 'eyes') AND c.id = (SELECT a.colour_id FROM attribute a WHERE a.attribute_name = 'hair') AND c.id = (SELECT a.colour_id FROM attribute a WHERE a.attribute_name ='skin')) JOIN superpower sp ON s.id = sp.hero_id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp2 ON hp.power_id = sp2.id WHERE sp.power_name = 'eyes' AND sp2.power_name = 'hair' AND sp2.power_name ='skin' GROUP BY s.superhero_name, p.publisher_name HAVING COUNT(DISTINCT sp.power_name) = 3;\t----- bird -----\tsuperhero",
    "774": "SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT MULTIPLY( DIVIDE( SUM( CASE WHEN colour = 'Blue' AND gender = 'Female' THEN 1 ELSE 0 END ), COUNT(gender = 'Female') ), 100 ) AS percentage FROM superhero\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT superhero.gender_id FROM superhero WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT power_id) AS num_powers FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT s.height_cm FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'eye_colour' AND a.attribute_value = 1 AND colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_eye_colour_id JOIN hero_attribute ha3 ON s.id = ha3.hero_hair_colour_id WHERE ha1.attribute_value = 1 AND ha2.attribute_value = 1 AND ha3.attribute_value = 1 AND colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "783": "SELECT h.full_name, h.eye_colour_id FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE a.colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, superhero.alignment FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(p.publisher_name = 'Marvel Comics')) * 100 AS percent FROM superhero g INNER JOIN publisher p ON g.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) - SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_id, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_id;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON hero_attribute.attribute_id = race.id WHERE race.race = 'god/eternal' AND attribute.attribute_name = 'gender' AND attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name ORDER BY MAX(h.attribute_value) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, h.attribute_value FROM superhero AS h JOIN hero_attribute AS ha ON h.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN colour c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT PERCENTAGE FROM ( SELECT SUM(superhero_name) AS total_blue_eyed_superheroes, COUNT(superhero_name) AS total_superheroes FROM superhero WHERE colour = 'Blue' ) AS subquery CROSS JOIN ( SELECT 100.0 AS percentage ) AS constant_table WHERE subquery.total_blue_eyed_superheroes IS NOT NULL;\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT MAX(height_cm) AS tallest_superhero FROM superhero;\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id AS power_id FROM superpower WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT s.full_name FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour_name FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN hero_power hp ON ha.attribute_id = hp.attribute_id JOIN superpower sp ON hp.power_id = sp.id JOIN superhero sh ON sp.power_id = sh.power_id WHERE sh.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'weight_kg' AND T2.attribute_value = 108 AND T1.id = ( SELECT T4.id FROM superhero AS T4 JOIN hero_attribute AS T5 ON T4.id = T5.hero_id JOIN attribute AS T6 ON T5.attribute_id = T6.id WHERE T6.attribute_name = 'height_cm' AND T5.attribute_value = 188 LIMIT 1 )\t----- bird -----\tsuperhero",
    "809": "SELECT publisher_name FROM superhero WHERE id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT r.race, MAX(h.attribute_value) AS max_attribute_value FROM superhero h JOIN hero_attribute h_a ON h.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id JOIN race r ON a.id = r.id WHERE h.alignment_id = (SELECT id FROM alignment WHERE name ='superhero');\t----- bird -----\tsuperhero",
    "811": "SELECT a.attribute_name, s.power_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id JOIN superpower AS p ON s.id = p.hero_id WHERE s.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT s.full_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON ha.attribute_id = c.id WHERE c.colour = 'Blue' AND ha.attribute_value = 1 GROUP BY s.full_name HAVING COUNT(DISTINCT ha.attribute_id) = 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT s.colour FROM superhero AS sh JOIN hero_attribute AS ha ON sh.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE ha.attribute_value = 100 GROUP BY s.colour;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'attribute_value' AND a.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT s.full_name, s.race.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.hair_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND s.gender_id = (SELECT id FROM gender WHERE gender ='male');\t----- bird -----\tsuperhero",
    "818": "SELECT 100.0 * COUNT(CASE WHEN gender.id = 2 AND alignment.id = 2 THEN 1 END) / COUNT(alignment.id = 2) AS percentage FROM superhero WHERE alignment.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN hero_attribute.eye_colour_id = 7 THEN 1 ELSE 0 END) AS blue_eyes, SUM(CASE WHEN hero_attribute.eye_colour_id = 1 THEN 1 ELSE 0 END) AS no_eye_colour, (SUM(CASE WHEN hero_attribute.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN hero_attribute.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.weight_kg IS NULL OR hero_attribute.weight_kg = 0;\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND superhero.superhero_name = 'Hulk';\t----- bird -----\tsuperhero",
    "821": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Green' AND hero_attribute.attribute_value = 1 AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name, h.weight_kg FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON ha.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2 ON r.race_id = al2.id JOIN alignment al3 ON p.publisher_id = al3.id JOIN alignment al4 ON h.weight_kg = al4.weight_kg WHERE p.publisher_name = 'DC Comics' GROUP BY s.superhero_name ORDER BY al4.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(h.height_cm) AS average_height FROM superhero h JOIN hero_attribute a ON h.id = a.hero_id JOIN attribute attr ON a.attribute_id = attr.id JOIN colour c ON attr.colour_id = c.id JOIN gender g ON h.gender_id = g.id JOIN race r ON h.race_id = r.id JOIN publisher p ON h.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id AND a.attribute_id = al.id AND h.eye_colour_id = al.id AND h.hair_colour_id = al.id AND h.skin_colour_id = al.id AND h.race_id = al.id AND h.publisher_id = al.id AND h.alignment_id = al.id WHERE r.race <> 'Human' AND p.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT hero_id) AS fastest_superheroes FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_name = 'Speed' AND attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, (SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics')) AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name FROM alignment AS a JOIN hero_attribute AS ha ON a.id = ha.hero_id JOIN ( SELECT hero_id, MIN(attribute_value) AS min_attribute_value FROM hero_attribute GROUP BY hero_id ) AS min_attributes ON a.id = min_attributes.hero_id AND ha.attribute_value = min_attributes.min_attribute_value WHERE a.superhero_name = 'Black Panther';\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN colour ON hero_attribute.colour_id = colour.id WHERE superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender') GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN t.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(t.publisher_name)) AS percentage FROM superhero t WHERE t.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Good' ) AS good_superheroes_count, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' ) AS total_marvel_superheroes_count, ( SELECT COUNT(*) FROM superhero WHERE alignment = 'Good' ) AS total_good_superheroes_count, ( SELECT ( ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Good' ) / ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' ) ) * 100.0 AS percentage ) AS percentage_of_good_superheroes FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id, MIN(attribute_value) AS lowest_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id GROUP BY hero_id;\t----- bird -----\tsuperhero",
    "838": "SELECT superhero_name, full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_weight_kg < 100 AND ha2.attribute_value = 2 JOIN colour AS c ON ha2.attribute_id = c.id WHERE c.colour = 'brown';\t----- bird -----\tsuperhero",
    "840": "SELECT h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race FROM superhero WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT s.id FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.attribute_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.attribute_id JOIN colour ON ha1.attribute_value = colour.id JOIN colour ON ha2.attribute_value = colour.id WHERE superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT s.power_name, s.height_cm FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.height_cm > (SELECT AVG(h2.height_cm) FROM superhero h2) * 0.8;\t----- bird -----\tsuperhero",
    "846": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 20 AND q.position = 5 ORDER BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Race number 19' AND r.round = 2 AND lt.lap = 1 AND lt.time LIKE '%best lap time%' ORDER BY lt.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT r.year FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.name FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.url LIKE '%Circuit de Barcelona-Catalunya%';\t----- bird -----\tformula_1",
    "850": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT c.name, r.name AS race_name, r.date, r.time, rs.position FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN results rs ON r.resultId = rs.resultId WHERE c.constructorRef = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.country NOT IN ('Asia', 'Europe') AND r.year = 2010;\t----- bird -----\tformula_1",
    "853": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE r.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = ( SELECT id FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' );\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE q.q2_time = '0:01:40' AND r.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT d.forename, d.surname, r.number FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.number = 903 AND r.q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT drivers.driverId) AS num_drivers_finished FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceNumber = 592 AND lt.time IS NOT NULL ORDER BY TIMESTAMP(d.dob, 'localtime') ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 161 AND lt.time LIKE 'M:SS%';\t----- bird -----\tformula_1",
    "867": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.raceId = 933 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 933) AND d.driverId = cr.driverId;\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructorResults cr JOIN races r ON cr.raceId = r.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9);\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi');\t----- bird -----\tformula_1",
    "871": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE q.q2_time = '0:01:15' AND r.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 45 AND lt.lap = 1 AND lt.time LIKE 'M:33%';\t----- bird -----\tformula_1",
    "873": "SELECT r.time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE r.raceId = 743 AND d.forename = 'Bruce' AND d.surname = 'McLaren';\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, rs.position FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN driverStandings rs ON d.driverId = rs.driverId AND r.raceId = rs.raceId WHERE r.name = 'San Marino Grand Prix' AND r.year = 2006 ORDER BY rs.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, MIN(d.dob) AS youngest_driver FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 872 GROUP BY d.driverId;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 348 ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.driverId = lt.driverId JOIN races rc ON lt.raceId = rc.raceId WHERE rc.fastestLap = lt.lap GROUP BY d.driverId HAVING MAX(lt.milliseconds) = (SELECT MAX(milliseconds) FROM lapTimes WHERE raceId = rc.raceId);\t----- bird -----\tformula_1",
    "880": "SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853) * 100 FROM results WHERE driverId = (SELECT id FROM drivers WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta');\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(DISTINCT drivers.driverId) AS completion_rate FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(races.year) AS first_singapore_grand_prix_year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) AS total_races FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT r.name FROM races r JOIN seasons s ON r.year = s.year WHERE (s.year, s.month) = (SELECT MIN(year, month) FROM seasons);\t----- bird -----\tformula_1",
    "885": "SELECT r.name, r.date FROM races r JOIN seasons s ON r.year = s.year WHERE s.year = 1999 ORDER BY r.round DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT seasons.year, COUNT(races.raceId) AS total_races FROM seasons JOIN races ON seasons.year = races.year GROUP BY seasons.year ORDER BY total_races DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.year = 2017 AND s.year <> 2000;\t----- bird -----\tformula_1",
    "888": "SELECT c.name, c.location FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year = (SELECT MIN(year) FROM races);\t----- bird -----\tformula_1",
    "889": "SELECT MAX(r.year) AS last_british_grand_prix_season FROM races r JOIN seasons s ON r.year = s.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND s.url LIKE '%British Grand Prix%';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) AS total_seasons FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname, rs.position FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId WHERE r.name = '2010 Singapore Grand Prix' ORDER BY rs.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE results.points = (SELECT MAX(points) FROM results);\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, r.points FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = '2017 Chinese Grand Prix' ORDER BY r.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT l.drivers.forename, r.races.name FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId JOIN races r ON l.raceId = r.raceId WHERE l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * COUNT(DISTINCT r.raceId) AS percentage FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.surname = 'Hamilton' AND r.year >= 2010 AND r.position > 1 GROUP BY NULL;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, c.nationality, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT d.forename, d.surname, d.dob, d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE c.nationality = 'Japanese' ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN races rr ON r.circuitId = rr.circuitId JOIN races rrr ON rr.circuitId = rrr.circuitId JOIN races rr_rr ON rr.raceId = rr_rr.raceId AND rr.raceId = rrr.raceId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url HAVING COUNT(DISTINCT r.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name, c.name AS circuit_name, r.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT r.name FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND r.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS circ ON r.circuitId = circ.circuitId WHERE circ.name = 'Sepang International Circuit' AND r.driverId = (SELECT DISTINCT driverId FROM results WHERE results.statusId = 1 AND results.raceId = r.raceId);\t----- bird -----\tformula_1",
    "904": "SELECT r.name, s.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE c.name = 'Michael Schumacher' AND res.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes l WHERE l.raceId = r.raceId AND l.driverId = d.driverId);\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine');\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS first_race, s.points AS points_recorded FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "907": "SELECT r.name, s.country FROM races r JOIN seasons s ON r.year = s.year WHERE s.year = 2017 ORDER BY r.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN seasons s ON r.year = s.year WHERE r.laps = (SELECT MAX(laps) FROM races);\t----- bird -----\tformula_1",
    "909": "SELECT 100.0 * COUNT(races.country = 'Germany' AND races.name = 'European Grand Prix') / COUNT(races.name = 'European Grand Prix') AS percentage FROM races\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE location = 'Silverstone Circuit' OR location = 'Hockenheimring' OR location = 'Hungaroring';\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT c.country FROM circuits c JOIN ( SELECT circuitId, MAX(alt) AS max_altitude FROM circuits GROUP BY circuitId ) max_altitude_circuits ON c.circuitId = max_altitude_circuits.circuitId WHERE c.alt = max_altitude_circuits.max_altitude;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT c.country FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY c.country ORDER BY MAX(d.dob) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT * FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT forename FROM drivers WHERE driverRef = 'Lewis Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = '2009 Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT r.name FROM races AS r JOIN circuits AS circ ON r.circuitId = circ.circuitId WHERE circ.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Abu Dhabi Circuit' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location LIKE '%Italy%';\t----- bird -----\tformula_1",
    "924": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT c.name, c.location, c.country, c.lat, c.lng, c.alt FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MIN(time) AS fastest_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON races.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.driverId = lt.driverId AND r.lap = lt.lap JOIN qualifying q ON d.driverId = q.driverid WHERE r.raceId = (SELECT raceId FROM races WHERE name = 'Formula_1') AND lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "928": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE e.name = 'Canadian Grand Prix' AND YEAR(r.year) = 2007 ORDER BY r.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT r.name FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name AS race_name, MIN(rank) AS lowest_rank FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' GROUP BY r.raceId HAVING lowest_rank = 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_2009_spanish_grand_prix FROM results WHERE raceId = (SELECT year FROM seasons WHERE url = 'http://www.f1live.net/2009/spanish-grand-prix');\t----- bird -----\tformula_1",
    "932": "SELECT r.year FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder AS final_rank FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT id FROM races WHERE name = 'Chinese Grand Prix');\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.name = 'Australian Grand Prix' AND r.year = 1989 AND q.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = '2008 Australian Grand Prix' AND races.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "937": "SELECT r.name, d.forename, d.surname, r.finish_time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN result rs ON r.raceId = rs.raceId AND d.driverId = rs.driverId WHERE r.year = 2008 AND r.name = 'Austrian Grand Prix' AND rs.rank = 2 ORDER BY r.finish_time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.name = 'Australian Grand Prix' AND r.year = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN races r ON d.raceId = r.raceId JOIN qualifying q ON r.raceId = q.raceId WHERE r.name = 'Australian Grand Prix' AND q.nationality = 'British';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT drivers.driverId) AS total_drivers FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN seasons ON races.year = seasons.year WHERE races.name = '2008 Chinese Grand Prix' AND races.status = 'finished';\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "942": "SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN circuits ON results.circuitId = circuits.circuitId JOIN seasons ON results.year = seasons.year JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT ( SELECT COUNT(*) FROM races WHERE year = 2008 AND circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Australian Grand Prix' ) AND time IS NOT NULL ) / ( SELECT COUNT(*) FROM races WHERE year = 2008 )\t----- bird -----\tformula_1",
    "944": "[SQL] SELECT ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.name, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT c.nationality, MAX(r.points) AS max_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE c.nationality = 'British' GROUP BY c.nationality;\t----- bird -----\tformula_1",
    "949": "SELECT c.constructorRef, c.name, rs.points FROM constructors c JOIN constructorResults rs ON c.constructorId = rs.constructorId ORDER BY rs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN races r ON c.constructorId = r.constructorId JOIN results res ON c.constructorId = res.constructorId WHERE c.nationality = 'Japanese' AND res.points = 0 AND r.raceId IN (SELECT raceId FROM races WHERE COUNT(raceId) = 2);\t----- bird -----\tformula_1",
    "952": "SELECT c.constructorRef, c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructorId) FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'French' AND lapNumber > 50;\t----- bird -----\tformula_1",
    "954": "SELECT COUNT(DISTINCT drivers.driverId) AS japanese_drivers, COUNT(races.raceId) AS total_races, (COUNT(DISTINCT drivers.driverId) / COUNT(races.raceId)) * 100 AS completion_percentage FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 AND races.time IS NOT NULL;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(CAST(rt.time AS REAL)) AS avg_time_in_seconds FROM races r JOIN results rt ON r.raceId = rt.raceId JOIN drivers d ON rt.driverId = d.driverId JOIN constructors c ON rt.constructorId = c.constructorId WHERE rt.statusId = (SELECT statusId FROM status WHERE status = 'Champion') AND r.year < 1975 GROUP BY r.year ORDER BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year > 1975 AND ds.position = 2 AND d.dob > '1975-12-31';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE drivers.nationality = 'Italian' AND qualifying.position IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE lt.time = ( SELECT MAX(time) FROM lapTimes WHERE driverId = d.driverId );\t----- bird -----\tformula_1",
    "959": "SELECT r.driverId, r.number, r.laps, r.fastestLap, r.rank FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN races e ON r.raceId = e.raceId WHERE e.year = 2009 AND r.statusId = (SELECT statusId FROM status WHERE status = 'Champion') ORDER BY r.fastestLap DESC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM results WHERE raceId = (SELECT circuitId FROM races WHERE name = 'Spanish Grand Prix') AND year = 2009;\t----- bird -----\tformula_1",
    "961": "SELECT r.name, s.year FROM races r JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%shortest actual finishing time%' AND (r.time, r.milliseconds) IN (SELECT MIN(time), MIN(milliseconds) FROM lapTimes WHERE milliseconds IS NOT NULL)\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(DISTINCT drivers.driverId) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverId) FROM drivers WHERE drivers.year BETWEEN 2000 AND 2005 AND drivers.year(dob) < 1985 AND drivers.laps > 50)) AS percentage FROM drivers WHERE drivers.year BETWEEN 1985 AND 1984 AND drivers.year(dob) < 1985 AND drivers.laps > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId WHERE lapTimes.time < '02:00:00' AND drivers.nationality = 'France';\t----- bird -----\tformula_1",
    "964": "SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT d.forename, d.surname, d.code FROM drivers d JOIN ( SELECT driverId, MAX(dob) AS youngest_dob FROM drivers GROUP BY driverId ) youngest_drivers ON d.driverId = youngest_drivers.driverId ORDER BY youngest_drivers.youngest_dob ASC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT forename, surname FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND YEAR(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, r.date, r.time FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.nationality = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND r.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId AND driverId = d.driverId) ORDER BY r.date, r.time LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT d.forename, d.surname, d.dob, d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE s.url LIKE '%Germany%' AND d.nationality = 'German' ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.year = (SELECT year FROM seasons WHERE url = 'https://example.com/season/1971') AND l.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId) AND d.dob = '1971-01-01';\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, r.milliseconds FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.circuitId = c.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId AND c.constructorId = cr.constructorId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' AND r.milliseconds = (SELECT MAX(milliseconds) FROM races WHERE raceId = r.raceId) GROUP BY d.forename, d.surname, r.name, r.date, r.time, r.milliseconds ORDER BY r.milliseconds DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT r.year FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE lt.time = (SELECT MIN(time) FROM lapTimes WHERE lapTimes.raceId = r.raceId) GROUP BY r.year ORDER BY MAX(milliseconds) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT s.year, MAX(l.time) AS lowest_speed_of_lap_time FROM races r JOIN seasons s ON r.year = s.year JOIN laps l ON r.raceId = l.raceId GROUP BY s.year ORDER BY lowest_speed_of_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT d.driverId, d.forename, d.surname, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.lap = 1 ORDER BY l.time DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM races WHERE raceId BETWEEN 50 AND 100 AND statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT c.name, c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%Austria%' GROUP BY c.name, c.location, c.lat, c.lng HAVING COUNT(DISTINCT r.raceId) = 1;\t----- bird -----\tformula_1",
    "979": "SELECT r.name, COUNT(DISTINCT r.driverId) AS finishers_count FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId GROUP BY r.name ORDER BY finishers_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.forename, d.surname, d.nationality, d.dob FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId WHERE lt.lap = 2 AND q.q2 IS NOT NULL AND r.raceId = 23 ORDER BY d.dob;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) AND r.raceId = (SELECT MIN(raceId) FROM races WHERE date >= (SELECT MIN(r.date) FROM races r));\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN seasons ON driverStandings.raceId = seasons.raceId JOIN races ON races.raceId = driverStandings.raceId JOIN status ON driverStandings.statusId = status.statusId WHERE status.status = 'Puncture' AND drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "983": "SELECT c.name AS constructor_name, r.points AS highest_points_to_date FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE c.nationality = 'Italian' GROUP BY c.name ORDER BY highest_points_to_date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.constructorRef, c.name, cr.points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId GROUP BY c.constructorId ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY d.forename, d.surname, l.time LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name AS race_name, l.time AS fastest_lap_time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE l.lap = 1 ORDER BY l.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'United States Grand Prix' AND races.year = 2006 AND drivers.forename IN ( SELECT forename FROM drivers ORDER BY rank ASC LIMIT 10 )\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverId = p.driverId JOIN races r ON p.raceId = r.raceId JOIN seasons s ON r.year = s.year WHERE d.nationality = 'Germany' AND s.url LIKE '%Germany%' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.forename, d.surname ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.name, r.date, r.time, r.milliseconds FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2008 ORDER BY r.date, r.time, r.milliseconds LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, r.url FROM races AS r JOIN constructorResults AS cr ON r.raceId = cr.raceId JOIN constructors AS c ON cr.constructorId = c.constructorId WHERE r.name = '2009 Singapore Grand Prix' GROUP BY c.constructorRef ORDER BY MAX(r.time) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE d.nationality = 'Austrian' AND q.year BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT d.forename, d.surname, 'https://de.wikipedia.org/wiki/' || d.forename || '_' || d.surname AS wikipedia_link, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE d.nationality = 'German' AND s.year BETWEEN 1971 AND 1985 ORDER BY d.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT name, location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT cr.points, cr.name, cr.nationality FROM constructors cr JOIN constructorResults cr_results ON cr.constructorId = cr_results.constructorId JOIN races r ON cr_results.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY cr.points, cr.name, cr.nationality ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId JOIN constructors ON races.constructorId = constructors.constructorId WHERE circuits.name = 'Turkish Grand Prix' AND drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "996": "SELECT YEAR(races.date) AS year, COUNT(races.raceId) AS races_per_year FROM races WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year ORDER BY year ASC;\t----- bird -----\tformula_1",
    "997": "SELECT MAX(nationality) AS majority_citizenship FROM drivers;\t----- bird -----\tformula_1",
    "998": "SELECT SUM(points) FROM results WHERE driverId = ( SELECT driverId FROM driverStandings ORDER BY position ASC LIMIT 1 OFFSET 90 );\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN constructors c ON res.constructorId = c.constructorId WHERE res.fastestLap = (SELECT MIN(fastestLapTime) FROM lapTimes WHERE lapTimes.raceId = r.raceId) GROUP BY r.name HAVING COUNT(DISTINCT d.driverId) = (SELECT COUNT(DISTINCT driverId) FROM drivers WHERE MIN(fastestLapTime) = (SELECT MIN(fastestLapTime) FROM lapTimes));\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location +'(' + circuits.country + ')' AS full_location FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.date = (SELECT MAX(date) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON lt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Marina Bay Street Circuit' AND r.round = 3 AND q.q3 = '1st' AND r.year = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename, d.surname, c.nationality, r.name FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "1003": "SELECT d.driverId, d.forename, d.surname, COUNT(CASE WHEN r.name = 'Canadian Grand Prix' AND rs.status = 3 THEN 1 END) AS accidents FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes lt ON d.driverId = lt.driverId AND r.raceId = lt.raceId JOIN results rs ON d.driverId = rs.driverId AND r.raceId = rs.raceId GROUP BY d.driverId, d.forename, d.surname ORDER BY accidents DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results rs ON r.resultId = rs.resultId WHERE r.year = (SELECT MIN(year) FROM seasons) GROUP BY d.forename, d.surname ORDER BY wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_time_spent_at_pitstop FROM pitstops WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons ORDER BY year DESC LIMIT 1)));\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(pitStops.duration) AS longest_time_pit_stop FROM races JOIN pitStops ON races.raceId = pitStops.raceId JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT id FROM races WHERE name = '2011 Australian Grand Prix');\t----- bird -----\tformula_1",
    "1009": "SELECT d.forename, p.time FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.name = '2011 Australian Grand Prix' AND d.driverId = (SELECT driverId FROM qualifying WHERE raceId = r.raceId AND driverId = d.driverId);\t----- bird -----\tformula_1",
    "1010": "SELECT MAX(time) AS lap_record FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE r.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = e.raceId AND driverId = d.driverId) ORDER BY r.position ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT r.name, c.name AS constructor_name, l.position FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE r.driverId = (SELECT driverId FROM qualifying WHERE name = 'Lewis Hamilton' AND fastestLap = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId)) AND l.lap = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "1013": "SELECT MAX(time) AS lap_record FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit');\t----- bird -----\tformula_1",
    "1014": "SELECT c.name, r.name AS race_name, l.time FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE c.location LIKE '%Italy%' GROUP BY c.circuitId, r.raceId, l.time HAVING COUNT(*) = 1 ORDER BY l.time DESC;\t----- bird -----\tformula_1",
    "1015": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' AND r.lapRecord IS NOT NULL;\t----- bird -----\tformula_1",
    "1016": "SELECT pit_stops.duration FROM races JOIN pit_stops ON races.raceId = pit_stops.raceId JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = 'Austrian Grand Prix Circuit' AND drivers.forename = 'Driver Name' AND results.position = 'Lap Record';\t----- bird -----\tformula_1",
    "1017": "SELECT c.name, c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId AND lt.driverId = r.driverId JOIN results res ON lt.driverId = res.driverId AND lt.raceId = res.raceId WHERE res.time = 1.29488 GROUP BY c.name, c.location, c.lat, c.lng HAVING MAX(res.time) = 1.29488;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pit_stops.milliseconds) FROM pit_stops JOIN drivers ON pit_stops.driverId = drivers.driverId JOIN races ON pit_stops.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) AS average_lap_time FROM lap_times JOIN races ON lap_times.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player WHERE player_name = ( SELECT player_name FROM Player ORDER BY height DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1022": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 WHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes) AND t.country_id = (SELECT id FROM Country WHERE name = 'preferred_foot_country_name');\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT pa.player_api_id, pa.overall_rating FROM Player_Attributes pa WHERE pa.attribute = 'crossing' ORDER BY pa.crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT h.team_name, COUNT(m.id) AS lost_matches FROM Team h JOIN Match m ON h.team_api_id = m.home_team_api_id WHERE m.season = '2015/2016' AND m.goal < 0 GROUP BY h.team_name ORDER BY lost_matches ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name, penalties FROM Player ORDER BY penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT t.team_long_name, m.away_team_api_id, m.season, m.away_team_goal - m.home_team_goal AS goal_difference FROM Team t JOIN Match m ON t.team_api_id = m.away_team_api_id WHERE t.country_id = (SELECT id FROM Country WHERE name = 'Scotland') AND m.league_id = (SELECT id FROM League WHERE name = 'Scotland Premier League') AND m.season = '2009/2010' GROUP BY t.team_long_name, m.away_team_api_id, m.season HAVING goal_difference > 0 ORDER BY goal_difference DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t1.team_long_name, t1.buildUpPlaySpeed FROM Team_Attributes AS t1 JOIN ( SELECT team_fifa_api_id FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4 ) AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name, MAX(m.draw_matches) AS max_draw_matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY max_draw_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT p.player_name, p.age FROM Player p JOIN Team_Attributes ta ON p.player_api_id = ta.home_player_X1 JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN League l ON t.league_id = l.id WHERE ta.buildUpPlaySpeed > 97 AND l.country_id = (SELECT id FROM Country WHERE name = 'Country_Name') AND YEAR(p.birthday) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT MAX(COUNT(league_id)) AS league_with_highest_matches_and_count FROM Match;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id, MAX(overall_rating) AS highest_rating FROM Player_Attributes WHERE substr(date,1,4) = '2010' GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT t.team_fifa_api_id FROM Team_Attributes t JOIN Team te ON t.team_fifa_api_id = te.team_fifa_api_id WHERE t.buildUpPlaySpeed > 50 AND t.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT t.team_long_name FROM Team_Attributes t JOIN ( SELECT team_fifa_api_id, AVG(buildUpPlayPassing) AS avg_build_up_play_passing FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL GROUP BY team_fifa_api_id ) subq ON t.team_fifa_api_id = subq.team_fifa_api_id WHERE strftime('%Y', t.date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL)\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage_left_foot_players FROM Player_Attributes WHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name AS league_name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name, AVG(h.heading_accuracy) AS avg_heading_accuracy FROM Player p JOIN Player_Attributes h ON p.player_api_id = h.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name, t.team_api_id, t.chance_creation_passing FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.buildUpPlayDribblingClass = 'Normal' AND ta.date >= '2014-01-01 00:00:00' AND ta.date <= '2014-12-31 23:59:59' ORDER BY t.chance_creation_passing DESC HAVING t.chance_creation_passing < (SELECT AVG(chance_creation_passing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59');\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name FROM League l JOIN Match m ON l.id = Match.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name, player_api_id FROM Player WHERE birthday LIKE '1970-10%';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT Team_Attributes.buildUpPlayPositioningClass FROM Team_Attributes JOIN Match ON Team_Attributes.match_api_id = Match.match_api_id JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id WHERE Team.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT `overall_rating` AS `header_finishing_rate` FROM `Player_Attributes` WHERE `player_api_id` = ( SELECT `player_api_id` FROM `Team_Attributes` WHERE `team_api_id` = ( SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Francois Affolter' ) AND `date` = '2014-09-18 00:00:00' );\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Gabriel Tamas' ) AND date = strftime('%Y', date) = '2011' );\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE League.name = 'Scotland Premier League' AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE m.stage = 1 AND p.birthday = (SELECT MIN(birthday) FROM Player) AND pa.date = (SELECT MIN(date) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_api_id, MAX(potential) AS highest_potential FROM Player_Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT \"defensive_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT t1.player_name, t1.birthday FROM Player AS t1 JOIN ( SELECT player_fifa_api_id FROM Player_Attributes GROUP BY player_fifa_api_id ORDER BY MAX(overall_rating) DESC LIMIT 1 ) AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League L JOIN Country C ON L.country_id = C.id WHERE C.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(AVG(finishing)) AS highest_avg_finishing_rate FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height ASC LIMIT 1 ) AND player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT \"buildUpPlayPassingClass\" FROM \"Team_Attributes\" WHERE \"team_fifa_api_id\" = (SELECT \"team_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'CLB');\t----- bird -----\teuropean_football_2",
    "1067": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player_Attributes t2 JOIN Player ON t2.player_api_id = Player.player_api_id WHERE Player.height > 170 AND strftime('%Y', t2.date) >= '2010' AND strftime('%Y', t2.date) <= '2015';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN Team_Attributes AS ta1 ON t1.team_fifa_api_id = ta1.team_fifa_api_id JOIN Team_Attributes AS ta2 ON t1.team_api_id = ta2.team_api_id WHERE m1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT pa.player_name, pa.balance FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = 61 AND pa.balance = (SELECT MAX(balance) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control) FROM (SELECT player_name FROM Player WHERE player_name IN ('Abdou Diallo', 'Aaron Appindangoye'))), 0 AS difference_of_avg_ball_control\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT MAX(birthday) AS older_player FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon') OR player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player_height FROM Player;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM Country JOIN League ON Country.id = League.country_id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS best_crossing_player FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT id FROM Team WHERE team_long_name = 'Alexis' ) ) UNION SELECT MAX(crossing) AS best_crossing_player FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT id FROM Team WHERE team_long_name = 'Ariel Borysiuk' ) ) UNION SELECT MAX(crossing) AS best_crossing_player FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT id FROM Team WHERE team_long_name = 'Arouna Kone' ) )\t----- bird -----\teuropean_football_2",
    "1086": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Ariel Borysiuk' ) );\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volley_score > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(MATCH.id) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Belgium' AND Match.season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(long_passing) AS max_long_passing_score FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id JOIN Team ON Player_Attributes.team_fifa_api_id = Team.team_fifa_api_id JOIN League ON Team.country_id = League.id WHERE Player.birthday = (SELECT MIN(birthday) FROM Player) AND Player.player_fifa_api_id = (SELECT MIN(player_fifa_api_id) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(league_name) AS league_with_most_matches FROM League WHERE season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel'), 0) * 100 AS percentage_difference FROM dual;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS average_overall_rating FROM Player_Attributes T1 WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes WHERE player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chance_creation_passing) AS highest_score, chance_creation_passing_class AS classification FROM Team_Attributes WHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE T2.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) AS average_goals_parma_away FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT t1.player_name FROM Player AS t1 JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = 77 AND t2.date LIKE '2016-06-23%' ORDER BY t1.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_name` = 'Francesco Migliore' AND `date` LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_name` = 'Kevin Berigaud' AND `date` = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT t3.buildUpPlaySpeedClass FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_fifa_ai_id JOIN Team_Attributes AS t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'Willem II' AND t1.date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT t1.buildUpPlayDribblingClass FROM Team_Attributes t1 JOIN Match m ON t1.team_fifa_api_id = m.team_fifa_api_id JOIN Team t2 ON t1.team_api_id = t2.team_api_id WHERE t2.team_short_name = 'LEI' AND m.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT t2.buildUpPlayPassingClass FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id WHERE t2.team_long_name = 'FC Lorient' AND t1.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT tc.chance_creation_passing_class FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN League l ON t.country_id = l.id WHERE t.team_long_name = 'PEC Zwolle' AND l.name = 'Netherlands' AND ta.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT t2.chance_creation_crossing_class FROM Team AS t1 JOIN Team_Attributes AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id WHERE t1.team_long_name = 'Hull City' AND t2.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT t.defence_aggression_class FROM Team_Attributes t JOIN Team te ON t.team_fifa_api_id = te.team_fifa_api_id WHERE te.team_long_name = 'Hannover 96' AND t.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (SUBTRACT(overall_rating, (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12')) * 100 FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12';\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM ( SELECT player_api_id, weight FROM Player_Attributes WHERE id IN ( SELECT id FROM ( SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id ORDER BY SUM(weight) DESC LIMIT 10 ) AS subquery ) GROUP BY player_api_id ) AS subquery_2\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN League l ON t.country_id = l.id WHERE t.country_id IN (SELECT id FROM Country WHERE name = 'United States') AND m.date >= datetime('now', 'localtime') - interval '34 years' AND p.birthday > datetime('now', 'localtime') - interval '34 years';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(home_player_1) FROM Match WHERE player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(home_team_goal) AS total_away_team_goals FROM Match WHERE home_player_1 = 'Daan Smith' OR home_player_2 = 'Filipe Ferreira';\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match JOIN Team_Attributes ON Match.home_team_api_id = Team_Attributes.team_api_id JOIN Player_Attributes ON Team_Attributes.team_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player_Attributes.birthday < DATE('now', 'localtime') - INTERVAL '30 years';\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_api_id, player_name, overall_rating FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON pa.team_api_id = t.team_api_id WHERE t.team_long_name = 'Attacking Team Name' AND pa.attacking_work_rate = 'high' AND p.home_player_X1 = pa.player_api_id GROUP BY p.player_name HAVING COUNT(DISTINCT p.home_player_X1) > 1;\t----- bird -----\teuropean_football_2",
    "1125": "SELECT MAX(finishing) AS eldest_player_with_finishing_rate_of_1 FROM Player_Attributes WHERE finishing = 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT p.player_name FROM Player p JOIN Country c ON p.player_name = c.name WHERE c.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT p.player_name, c.name AS country FROM Player p JOIN Team_Attributes ta ON p.player_api_id = ta.home_player_X1 JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN Country c ON t.team_api_id = c.id WHERE ta.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT c.name, MAX(p.weight) AS heaviest_avg_weight FROM Country c JOIN Team t ON c.id = t.country_id JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id JOIN Player_Attributes pa ON m.home_player_api_id = pa.player_api_id GROUP BY c.id ORDER BY heaviest_avg_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t.team_long_name FROM Team_Attributes t JOIN Team team ON t.team_fifa_api_id = team.team_api_id WHERE t.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT p.player_name FROM Player AS p JOIN Team_Attributes AS ta ON p.player_api_id = ta.home_player_X1 JOIN Team AS t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN League AS l ON t.country_id = l.id WHERE p.height > 180 ORDER BY p.player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Aaron%' AND birthday > '1990' AND YEAR(birthday) >= 1990;\t----- bird -----\teuropean_football_2",
    "1134": "SELECT SUBTRACT(jumping, jumping) AS difference_in_jumping FROM Player_Attributes WHERE player_api_id IN (6, 23);\t----- bird -----\teuropean_football_2",
    "1135": "SELECT pa.id FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 WHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes) AND pa.preferred_foot = 'right' ORDER BY pa.overall_rating DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage_with_strength_stamina_80 FROM Player_Attributes WHERE strength > 80 AND stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT MATCH.home_team_goal + MATCH.away_team_goal AS final_score FROM MATCH WHERE MATCH.date = '2008-09-24' AND MATCH.country_id = (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT player_name, overall_rating, sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') AND league_id = (SELECT id FROM League WHERE name = 'Serie A' AND season = '2015/2016');\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT MAX(weight) AS heaviest_weight, PA.finishing_rate, PA.curve_score FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id JOIN Team_Attributes AS TA ON P.team_api_id = TA.team_api_id JOIN Match AS M ON P.player_api_id = M.home_player_1 OR P.player_api_id = M.away_player_1 WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS games_count FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT t2.team_long_name FROM Team AS t1 JOIN Match AS m ON t1.team_api_id = m.away_team_api_id JOIN Player_Attributes AS p ON m.away_player_X1 = p.player_api_id WHERE p.away_team_goal = (SELECT MAX(away_team_goal) FROM Match) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id, overall_rating FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT PERCENTAGE FROM ( SELECT COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) AS count FROM Player_Attributes ) AS subquery\t----- bird -----\teuropean_football_2",
    "1149": "SELECT SEX, COUNT(*) AS total_patients, (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 END) * 100.0 / COUNT(*)) AS inpatient_percentage, (COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 END) * 100.0 / COUNT(*)) AS outpatient_percentage FROM Patient GROUP BY SEX ORDER BY SEX;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_born_after_1930 FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND year(Patient.Birthday) > '1930';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE YEAR(Patient.Birthday) BETWEEN 1930 AND 1940) AS inpatient_percentage FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE YEAR(Patient.Birthday) BETWEEN 1930 AND 1940 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT COUNT(CASE WHEN Admission = '+' THEN 1 END) AS outpatient_count, COUNT(CASE WHEN Admission = '-' THEN 1 END) AS inpatient_count, (outpatient_count / inpatient_count) AS ratio FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Examination WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday FROM Patient WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT p.ID, age(SUBTRACT(year(current_timestamp()), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_abnormal_total_protein FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.TP < '6.0' OR Examination.TP > '8.5' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL_IgG) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'F' AND Patient.Birthday <= DATE('now', '-365 days');\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Description = '1997' AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(SUBTRACT(FIRST_DATE, BIRTHDAY))) AS youngest_age FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 1 AND p.SEX = 'F' AND e.Examination_Date BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(age) - MIN(age) AS age_gap FROM Patient WHERE tg >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT p.Symptoms, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Birthday = (SELECT MIN(Birthday) FROM Patient) AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS average_male_patients_per_month, DATE(Laboratory.Date) AS lab_month FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY lab_month ORDER BY lab_month;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS oldest_lab_date, (year(Patient.Birthday) - year(Laboratory.Date)) AS age_at_admission FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT COUNT(CASE WHEN SEX = 'M' AND UA <= '8.0' THEN 1 END) AS male_count, COUNT(CASE WHEN SEX = 'F' AND UA <= '6.5' THEN 1 END) AS female_count FROM Examination WHERE UA <= '8.0' AND SEX = 'M' OR UA <= '6.5' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date BETWEEN '1990-01-01' AND '1993-12-31' AND Patient.SEX = 'underage';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-BIL >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT(year(Birthday), 1999)) AS average_age_1999 FROM Patient WHERE EXTRACT(MONTH FROM ExaminationDate) = 10 AND EXTRACT(YEAR FROM ExaminationDate) = 1991 AND ID IN (SELECT ID FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis, e.Examination Date, e.aCL IgG, e.aCL IgM, e.ANA, e.ANA Pattern, e.aCL IgA, e.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T-BIL, l.T-CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U-PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA-II, (SUBTRACT(year(e.Examination Date), year(p.Birthday))) AS age_at_examination, e.Diagnosis AS doctor_diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Diagnosis = 'aCL IgG Positive' GROUP BY p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis, e.Examination Date, e.aCL IgG, e.aCL IgM, e.ANA, e.ANA Pattern, e.aCL IgA, e.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T-BIL, l.T-CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U-PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA-II HAVING e.HGB = (SELECT MAX(HGB) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG, aCL_IgM, ANA, ANA_Pattern, aCL_IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T1.Total_Cholesterol FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 2927464 AND T1.Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'AORTITIS' AND Examination.ID = (SELECT MIN(ID) FROM Examination WHERE Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT aCL_IgM FROM Examination WHERE ID = ( SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' ) AND Examination_Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX, L.GOT FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Examination_Date = '1992-06-12' AND L.GOT = 9 AND (P.SEX = 'M' OR P.SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT(year(test_date), year(Birthday)) AS age_at_test FROM Examination WHERE UA = '8.4' AND Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) AS total_tests FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First Date = '1991-06-13' AND Patient.Diagnosis = 'SJS' AND Laboratory.Date BETWEEN '1995-01-01' AND '1995-12-31';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT p.SEX, p.Description, p.First_Date, d.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE e.Examination_Date = '1997-01-27' AND d.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Patient.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.Examination_Date = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 11 THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 12 THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' THEN 1 ELSE 0 END) FROM Examination WHERE SUBSTRING(Birthday, 1, 4) = '1981' AND DATE LIKE '1981-11-%' AND DATE LIKE '1981-12-%';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Diagnosis ON Examination.ID = Diagnosis.ID WHERE Diagnosis.Diagnosis = 'Behcet' AND Examination.Examination Date BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date BETWEEN '1987-07-06' AND '1996-01-31' AND e.GPT > 30 AND e.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01'; [SQL] SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE l.ANA = 'S' AND l.Thrombosis = 2 AND e.aCL IgM = MULTIPLY(AVG(`aCL IgM`), 0.2);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT 100.0 * COUNT( CASE WHEN Examination.U-PRO > 0 AND Examination.U-PRO < 30 THEN 1 WHEN Examination.UA < = 6.5 THEN 1 ELSE 0 END ) AS percentage FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.U-PRO > 0 AND Examination.U-PRO < 30;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(FIRST_DATE) = 1981)) AS percentage FROM Examination WHERE Diagnosis = 'BEHCET' AND SEX = 'M' AND YEAR(FIRST_DATE) = 1981;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Admission = '-' AND l.Date LIKE '1991-10%' AND l.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination WHERE aCL_IgG IS NOT NULL AND aCL_IgM IS NOT NULL AND ANA_Pattern!= 'P' AND SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > 2 AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.Description, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Patient WHERE YEAR(Examination.Examination_Date) = 1997 AND tp NOT BETWEEN 6 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT DIVIDE(SUM(CASE WHEN Examination.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END), SUM(CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 FROM Examination JOIN Patient ON Examination.ID = Patient.ID\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F' ) * 100 AS percentage FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE p.SEX = 'M' AND e.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND d.Diagnosis = 'Behcet';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) AS time_between_first_visit_and_evaluation FROM Patient WHERE ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F' FROM Examination WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT E.Examination_Date FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.ID = 48473 AND L.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Date = '1994-01-01' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.GPT > 60 AND e.Diagnosis LIKE '%ALT glutamic pylvic transaminase (GPT) exceed the normal range%';\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.GPT > 60 ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) AS average_ldh_normal_range FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT p.ID, (SUBTRACT(year(current_timestamp), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.LDH BETWEEN 100 AND 300 AND e.LDH > (SELECT AVG(LDH) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Admission FROM Patient WHERE ALP < 300 AND (Admission = '+') OR (Admission = '-');\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1982-04-01' LIMIT 1; [SQL] SELECT CASE WHEN Examination.ALP < 300 THEN 'Within Normal Range' ELSE 'Outside Normal Range' END FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.TP < 6.0\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT p.SEX, l.TP, (l.TP - 8.5) AS deviation FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.ALB NOT BETWEEN 3.5 AND 5.5 ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Patient.Birthday) = 1982 AND Albumin BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_high_UA FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.UA > 8.0 AND Patient.SEX = 'M' OR Laboratory.UA > 6.5 AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS average_UA_index FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE E.UA < 8.0 AND (E.SEX = 'M' OR E.UA < 6.5) AND E.Diagnosis = 'Normal Uric Acid' GROUP BY E.ID HAVING COUNT(DISTINCT E.ID) = 1 ORDER BY E.Examination_Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE d.Diagnosis = 'RA' AND UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT COUNT(DISTINCT p.ID) AS male_count, COUNT(DISTINCT f.ID) AS female_count FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON l.ID = e.ID WHERE e.CRE >= 1.5 AND p.SEX = 'M' GROUP BY p.SEX HAVING male_count > female_count;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.T-BIL = (SELECT MAX(T-BIL) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Examination.ID) AS Examination_IDs, COUNT(Examination.ID) AS Patients_Count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-BIL >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.T_CHO FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Birthday = (SELECT MIN(Birthday) FROM Patient) AND L.T_CHO = (SELECT MAX(T_CHO) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.TG > 300 GROUP BY p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG > 200 AND DATEDIFF(year, Patient.Birthday, CURRENT_TIMESTAMP) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.Birthday BETWEEN '1936' AND '1956' AND e.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT Patient.ID, Patient.SEX, age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GLU >= 180 AND Examination.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT p.ID, l.GLU FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Description = '1991' AND l.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.WBC < 3.5 OR l.WBC > 9.0 GROUP BY p.SEX, p.Birthday ORDER BY p.SEX, p.Birthday;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T_BIL, l.T_CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U_PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA_II FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= DATE('now', '-50 years') AND p.RBC <= 3.5 OR p.RBC >= 6.0;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT p.ID, p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT p.ID, p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY e.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT e.ID, e.age FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'Male' AND COUNT(l.ID) > 2 AND HCT >= 52 GROUP BY e.ID, e.age;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS average_low_HCT FROM Examination WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT < 100; SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT > 400; SELECT (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT < 100) - (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT > 400) AS difference;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Examination Date = '1984-01-01' AND Patient.Birthday < DATE('1985-01-01') AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT P.SEX, COUNT(P.ID) AS Female_Count, COUNT(CASE WHEN P.SEX = 'F' AND PT > 14 THEN 1 END) AS Female_With_Abnormal_PT, (Female_With_Abnormal_PT * 100.0 / Female_Count) AS Percentage FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE SUBTRACT(year(current_timestamp()), year(P.Birthday)) > 55 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID IN ( SELECT Examination.ID FROM Examination WHERE Examination.ExaminationDate > '1992-12-31' ) AND Examination.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND WBC > 3.5 AND WBC < 9.0 AND FG <= 150 AND FG >= 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Birthday > '1980-01-01' AND Examination.FG < 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.U_PRO BETWEEN 0 AND 30 AND e.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE aCL_IgG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.aCL IgG > 900 AND Examination.aCL IgG < 2000 AND Patient.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.aCL_IgA = (SELECT MAX(aCL_IgA) FROM Examination WHERE IGA BETWEEN 80 AND 500 AND Examination.ID = e.ID);\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgA > 80 AND Examination.aCL IgA < 500 AND Examination.First Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis, COUNT(*) AS frequency FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis ORDER BY frequency DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE CRP = '+' AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Patient WHERE creatinine_level = 'abnormal' AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.RF = 'normal' AND l.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date >= '1985-01-01' AND p.SEX = 'M' AND e.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RF < 20 AND Examination.Birthday < DATE('now', '-60 years');\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RF < 20 AND e.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Laboratory.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Hematoclit NOT BETWEEN 29 AND 52 AND e.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination WHERE ID = e.ID);\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO LIKE '%APS%' AND Laboratory.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RNP = '-' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.RNP NOT IN ('-', '+-') AND P.SEX = 'Male' -- Assuming the youngest patient is male AND P.Diagnosis = 'Youngest Patient' -- Assuming the patient's diagnosis is 'Youngest Patient' ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ANA Pattern = 'normal anti-SM' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT e.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.aCL IgG IS NOT NULL AND e.aCL IgM IS NOT NULL AND e.ANA Pattern NOT IN ('negative', '0') AND p.SEX ='male' AND p.Diagnosis LIKE '%anti-SM%' GROUP BY e.ID ORDER BY e.Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.aCL IgG = 0 AND e.ANA Pattern = 'normal' AND p.SEX = 'F' AND p.symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RA = 'normal anti-SSA' AND Laboratory.YEAR(`First Date`) < 2000;\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT MIN(First_Date) AS first_patient_date FROM Patient WHERE SSA IN ('abnormal', 'positive');\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSB' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.aCL IgG = 'normal' AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CENTROMEA IN ('-', '+') AND l.SSB IN ('-', '+') AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT p.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.CRP LIKE '%anti-DNA%' AND e.CRP IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ANA = 0 AND Examination.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient WHERE IGG BETWEEN 900 AND 2000 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (COUNT(CASE WHEN GOT > 60 AND Diagnosis = 'SLE' THEN 1 END) / COUNT(ID WHERE GOT > 60)) * 100 FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) AS youngest_birthday FROM Examination WHERE aCL IgG > 60 AND SEX = 'Unknown' AND Admission = 'Yes';\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT P.ID, P.SEX, P.Birthday, MAX(L.GPT) AS Highest_GPT_Normal_Range FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GPT < 60 GROUP BY P.ID, P.SEX, P.Birthday ORDER BY Highest_GPT_Normal_Range DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(Patient.First_Date) AS first_recorded_date FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH < 500 GROUP BY Patient.ID HAVING MAX(Laboratory.LDH) = Laboratory.LDH;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(First_Date) AS latest_patient_date FROM Patient WHERE ID IN ( SELECT ID FROM Examination ORDER BY First_Date DESC LIMIT 1 ) AND LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient WHERE abnormal_alkaliphophatase_level = 'true' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO LIKE '%total protein is lower than normal%' AND Examination.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'SJS' AND Examination.TP > 6.0 AND Examination.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT MAX(Examination.ALB) AS highest_albumin_normal_range FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.ALB > 3.5 AND Examination.ALB < 5.5 GROUP BY Examination.ID;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND (e.ALB > 3.5 AND e.ALB < 5.5) AND e.ALB BETWEEN 3.5 AND 5.5 AND e.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.aCL_IgG, e.aCL_IgM, e.aCL_IgA FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.SEX = 'F' AND e.UA > 6.50 AND e.ID IN ( SELECT ID FROM Laboratory WHERE MAX(UA) > 6.50 );\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(aCL_IgM) AS highest_aCL_IgM FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE < 1.5 AND Laboratory.ANA_Pattern = 'Highest anti-nucleus antibody concentration level';\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CRE < 1.5 AND MAX(aCL IgA) = l.aCL IgA GROUP BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-BIL > 2.0 AND Laboratory.ANA Pattern LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(aCL_IgG) AS max_aCL_IgG, MAX(aCL_IgM) AS max_aCL_IgM, MAX(ANA) AS max_ANA, MAX(ANA_Pattern) AS max_ANA_Pattern, MAX(aCL_IgA) AS max_aCL_IgA, MAX(Diagnosis) AS max_Diagnosis, MAX(KCT) AS max_KCT, MAX(RVVT) AS max_RVVT, MAX(LAC) AS max_LAC, MAX(Symptoms) AS max_Symptoms, MAX(Thrombosis) AS max_Thrombosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE MAX(`T-BIL` < 2.0) GROUP BY max_aCL_IgG, max_aCL_IgM, max_ANA, max_ANA_Pattern, max_aCL_IgA, max_Diagnosis, max_KCT, max_RVVT, max_LAC, max_Symptoms, max_Thrombosis;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-CHO >= 250 AND Laboratory.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-CHO < 250 AND Laboratory.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG < 200 GROUP BY Patient.Diagnosis ORDER BY MAX(Laboratory.TG) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 0 AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Patient WHERE CPK < 250 AND (KCT = '+' OR RVVT = '+' OR LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) AS oldest_birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GLU > 180 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient WHERE SEX = 'normal' AND GLU < 180 AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Symptoms LIKE '%normal level of white blood cells%' AND Examination.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC > 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient WHERE PLT > 100 AND PLT < 400 AND Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.PLT > 100 AND l.PLT < 400 AND e.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) AS average_prothrombin_time FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'M' AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 2 AND l.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM major WHERE major_id = (SELECT member_id FROM member WHERE full_name = 'Angela Sanders');\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT member_id) FROM member WHERE zip.type = 'College' AND major.college = 'Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendees.member_id) FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT m.phone FROM member m JOIN student_club sc ON m.link_to_major = sc.major_id JOIN event e ON sc.event_id = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.phone IS NOT NULL;\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT member_id) FROM attendance JOIN member ON attendance.link_to_member = member.member_id WHERE event_name = 'Women's Soccer' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name, MAX(a.count) AS highest_attendance FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mc ON m.link_to_major = mc.major_id WHERE mc.major_name = 'Student_Club' GROUP BY e.event_name ORDER BY highest_attendance DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT m.college FROM member AS m JOIN major AS vm ON m.link_to_major = vm.major_id WHERE m.first_name = 'Vice President' AND m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(DISTINCT e.event_id) FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND e.type = 'Student_Club' AND YEAR(e.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND member_id IN ( SELECT member_id FROM member WHERE zip = ( SELECT zip_code FROM zip_code WHERE city = 'Student_Club' ) ) AND member_count > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE a.attendance_count > 20 AND e.type!= 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance.member_id) AS average_attendance FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.type = 'Meeting' AND YEAR(event.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club events%';\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(DISTINCT member_id) FROM member WHERE link_to_major = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.link_to_major.department = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.first_name, m.last_name FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code FROM zip_code WHERE city = 'Sherri Ramsey grew up city' AND state = 'Sherri Ramsey grew up state';\t----- bird -----\tstudent_club",
    "1330": "SELECT m.college FROM major AS m JOIN event AS e ON m.major_id = e.type WHERE e.event_name = 'Tyler Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) AS funds_received FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(spent) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Student_Club' AND event.event_name = 'September Meeting' AND category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code, city, state FROM zip_code WHERE member.zip = zip_code.zip_code AND member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(spent) FROM expense WHERE expense_description LIKE '%Advertisement%' AND link_to_member IN ( SELECT member_id FROM member WHERE position = 'Student_Club' ) AND event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN event e ON m.major_id = e.type JOIN member mi ON e.link_to_member = mi.member_id WHERE mi.first_name = 'Pierce' AND mi.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT approved FROM expense WHERE link_to_event = 'October Meeting' AND event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) AS total_cost FROM expense WHERE member_id = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen');\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(spent) FROM budget WHERE event_id IN ( SELECT event_id FROM event WHERE type = 'Student_Club' ) AND YEAR(event_date) IN (2019, 2020);\t----- bird -----\tstudent_club",
    "1341": "SELECT \"location\" FROM \"event\" WHERE \"event_name\" = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS biggest_remaining_food_budget FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_name = 'fundraising' AND event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(DISTINCT major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip.city, zip.county, zip.state FROM zip_code AS zip WHERE zip.city = ( SELECT first_name FROM member WHERE member_id = 'Adela O'Gallagher' ) AND zip.county = ( SELECT department FROM major WHERE major_id = ( SELECT major_id FROM major_membership WHERE member_id = 'Adela O'Gallagher' ) )\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_amount FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'September Speaker');\t----- bird -----\tstudent_club",
    "1350": "SELECT e.event_status FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Post Cards, Posters' AND e_expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major WHERE major_id = (SELECT member_id FROM member WHERE full_name = 'Brent Thomason');\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE major_id IN ( SELECT major_id FROM major WHERE major_name = 'Business' ) AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT type FROM zip_code WHERE city = 'Christof Nielson' AND county = 'Unknown';\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip.state FROM zip_code AS zip JOIN member AS mem ON zip.zip_code = mem.zip WHERE mem.first_name = 'Sacha' AND mem.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM major AS m JOIN member AS mm ON m.major_id = mm.link_to_major WHERE mm.first_name = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM member i JOIN income j ON i.member_id = j.link_to_member WHERE j.source = 'Dues' AND i.first_name = 'Connor' AND i.last_name = 'Hilton';\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member WHERE MIN(received_date) = ( SELECT MIN(received_date) FROM income WHERE source = 'Dues' );\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND (event_name = 'Yearly Kickoff' AND spent > spent) OR (event_name = 'October Meeting' AND spent < spent);\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(budget.spent) WHERE budget.category = 'Parking' AND budget.event_id = event.event_id) / (SELECT COUNT(*) FROM event WHERE event.event_name = 'November Speaker') * 100 FROM event JOIN budget ON event.event_id = budget.link_to_event\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) AS number_of_cities FROM zip_code WHERE state = 'Virginia' AND county = 'Orange County';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code.city FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Amy' AND last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT b.category, e.expense_description, e.cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE b.remaining = (SELECT MIN(remaining) FROM budget) ORDER BY e.cost ASC;\t----- bird -----\tstudent_club",
    "1366": "SELECT m.member_id, m.first_name, m.last_name, m.email FROM member m JOIN attendance a ON m.member_id = a.link_to_member WHERE a.link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT college, COUNT(member_id) AS popularity FROM member GROUP BY college ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code JOIN major ma ON z.zip = ma.zip WHERE m.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_name, MAX(b.amount) AS highest_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description, m.first_name, m.last_name FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE member_id = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT zip) AS maryland_count FROM member WHERE state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT event.event_id) FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(DIVIDE(b.spent, b.amount)) AS highest_spend_to_budget_ratio FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_name;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT e.event_name, MAX(b.spent) AS highest_budget_spend FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget_spend DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT member_id, first_name, last_name FROM member WHERE COUNT(link_to_event) > 7 GROUP BY member_id, first_name, last_name;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.zip.type = 'zip_code' AND m.zip.city = 'Community Theater' AND m.major_id = (SELECT major_id FROM major WHERE major_name = 'Interior Design');\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income WHERE link_to_member = 'Grant Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT first_name, last_name FROM member WHERE income.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_description = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE b.category = 'budget for Yearly Kickoff' AND m.link_to_major ='major_id_of_student_managing_budget';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(i.amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name, MIN(b.cost) AS lowest_cost FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1390": "SELECT PERCENTAGE FROM ( SELECT SUM(cost) AS total_cost FROM event WHERE event_name = 'Yearly Kickoff' ) AS subquery CROSS JOIN ( SELECT SUM(cost) AS total_cost FROM event ) AS total_cost_subquery\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(major_name = 'Finance') / SUM(major_name = 'Physics') AS finance_to_physics_ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, MAX(amount) AS top_fund_source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY top_fund_source DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT m.first_name, m.email FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Student_Club' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Community Theater' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(DISTINCT attendees.member_id) AS total_events_attended FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(SUM(spent)/COUNT(spent)) AS average_food_spending FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name, MAX(b.spent) AS highest_advertisement_spend FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' GROUP BY e.event_name ORDER BY highest_advertisement_spend DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women\\'s Soccer' AND member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT b.cost FROM budget b JOIN expense e ON b.link_to_event = e.link_to_event JOIN expense_description d ON e.expense_description_id = d.expense_description_id WHERE d.expense_description = 'Posters' AND e.link_to_member = ( SELECT m.member_id FROM member m WHERE m.first_name = 'September' AND m.last_name = 'Speaker' );\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(cost) AS total_value FROM expense JOIN income ON expense.link_to_member = income.link_to_member JOIN member ON expense.link_to_member = member.member_id JOIN budget ON expense.link_to_event = budget.event_id WHERE event_name = 'October Meeting' AND approved = 'approved';\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS amount_budgeted FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'April Speaker');\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(spent) AS max_budget_amount FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT b.category, b.spent, b.remaining, b.amount, b.event_status FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.category, b.spent, b.remaining, b.amount, b.event_status ORDER BY b.amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT e.expense_description, i.amount FROM expense AS e JOIN income AS i ON e.link_to_member = i.link_to_member JOIN member AS m ON e.link_to_member = m.member_id JOIN zip_code AS z ON m.zip = z.zip_code WHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT zip.zip_code FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE expense.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT m.major_name FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m.email = 'phillip.cullen@example.com';\t----- bird -----\tstudent_club",
    "1415": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE major_id = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT e.event_name, e.type FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT event.type FROM event JOIN attendance ON event.event_id = attendance.link_to_event WHERE attendance.link_to_member ='member_id_at_mu_215';\t----- bird -----\tstudent_club",
    "1419": "SELECT budget.category FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name FROM major m JOIN member mj ON m.major_id = mj.link_to_major WHERE mj.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(position = 'Member' and major_name = 'Business') / COUNT(member_id)) * 100 FROM member;\t----- bird -----\tstudent_club",
    "1422": "SELECT event_name FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(DISTINCT major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.major.department, m.major.college FROM member m JOIN major major ON m.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT m.city, m.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.department = 'Electrical and Computer Engineering Department';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'Vice President' AND e.type = 'Social' AND e.location LIKE '%900 E. Washington St.%';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT AVG(amount) AS percentage FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1433": "SELECT zip.state FROM zip_code AS zip JOIN major AS major ON zip.zip = major.zip WHERE major.department = 'Post Office' AND major.college = 'University';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Game' AND b.event_status = 'Closed' AND e.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.zip IN ( SELECT z.zip_code FROM zip_code z JOIN major m ON z.zip = m.zip JOIN member mm ON z.zip = mm.zip WHERE mm.first_name = 'John' AND mm.last_name = 'Doe' ) AND e.status = 'paid' AND e.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.approved = 'true' AND e.event_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.first_name = 'Katy' AND mm.major_name ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND m.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.email FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN income i ON m.member_id = i.link_to_member WHERE e.cost > 20 AND i.date_received BETWEEN '2019-09-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major = 'education' AND college = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT PERCENTAGE( SUM( CASE WHEN spent < remaining THEN 1 ELSE 0 END ) AS over_budget_events, COUNT(event_id) AS total_events ) AS percentage FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE spent < remaining;\t----- bird -----\tstudent_club",
    "1443": "SELECT e.event_id, e.location, e.status FROM event e JOIN zip_code z ON e.location = z.city WHERE e.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_id, AVG(cost) AS average_cost FROM expense WHERE cost > 50 GROUP BY expense_id\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT zip, 100.0 * COUNT(*) / (SELECT COUNT(*) FROM zip_code) AS percentage_po_box FROM zip_code WHERE type = 'PO Box' GROUP BY zip\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Pizza' AND e_expense.cost > 50 AND e_expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.city, e.state, e.country FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE e.status = 'active' AND e.type = 'fundraiser' AND e.notes LIKE '%income%'; This query joins the \"event\" table with the \"zip_code\" table on the \"location\" column. It then filters for events that are active, of type 'fundraiser', and have 'income' in their notes. Finally, it selects the city, state, and country from the \"zip_code\" table for these events. Please note that the question asks for events with more than forty incomes, but the provided schema does not include a direct count of incomes in the \"event\" table. To find events with more than forty incomes, we would need additional information, such as a \"budget\" table with a count of incomes or a \"member\" table with a count of incomes per member. Since this information is not available, the query above is the best approximation based on the given schema. [SQL] SELECT e.city, e.state, e.country FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE e.status = 'active' AND e.type = 'fundraiser' AND e.notes LIKE '%income%';\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT e.event_id) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE approved = 'Yes' AND link_to_member NOT IN ( SELECT member_id FROM member );\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN ( SELECT event_id, AVG(cost) AS avg_cost FROM expense WHERE category = 'Parking' GROUP BY event_id ) sub ON e.event_id = sub.event_id WHERE e.cost < sub.avg_cost;\t----- bird -----\tstudent_club",
    "1454": "SELECT PERCENTAGE( SUM(cost) AS total_cost, COUNT(event_id) AS event_count ) FROM event WHERE type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.category, SUM(e.cost) AS total_cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_event WHERE e.expense_description LIKE '%water, chips, cookies%' GROUP BY b.category ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_nj, (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_vt FROM member WHERE position = 'Member'; [SQL] SELECT (SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_nj, (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_vt FROM member WHERE position = 'Member';\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.email = 'garrett.gerke@example.com';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_income.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT category FROM budget WHERE expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, m.position, m.college FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN event e2 ON b.link_to_event = e2.event_id WHERE e.expense_description = 'Club Meeting Expenses' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip.city FROM zip_code AS zip JOIN member AS mem ON zip.zip = mem.zip;\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT gasstations.GasStationID) FROM gasstations JOIN customers ON gasstations.Segment = customers.Segment WHERE customers.Country = 'CZE' AND gasstations.ProductID IN ( SELECT ProductID FROM products WHERE Description LIKE '%Premium%' );\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN customers.Currency = 'CZK' THEN 1 END) AS ratio_of_eur_to_czk FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT c.Segment, ym.CustomerID, ym.Consumption FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN products p ON gs.ChainID = p.ChainID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Date BETWEEN '2012-01-01' AND '2012-12-31' AND p.Description LIKE '%LAM%' ORDER BY ym.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) AS average_monthly_consumption FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' ) AND Date BETWEEN '20130101' AND '20131231';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE c.Currency = 'CZK' AND YEAR(t.Date) = 2011 AND MONTH(t.Date) BETWEEN 1 AND 12 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN customers.Currency = 'CZK' THEN transactions_1k.Amount ELSE 0 END) - SUM(CASE WHEN customers.Currency = 'EUR' THEN transactions_1k.Amount ELSE 0 END) AS difference_in_consumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT MAX(Consumption) AS max_gas_use_in_eur FROM (SELECT tm.CustomerID, tm.Date, tm.Consumption, gs.Country, p.ProductID, g.GasStationID, 1.0 * p.Price AS Amount_in_eur FROM transactions_1k tm JOIN gasstations gs ON tm.GasStationID = gs.GasStationID JOIN products p ON tm.ProductID = p.ProductID JOIN yearmonth tm ON tm.CustomerID = tm.CustomerID WHERE p.Price > 0 AND p.Price % 1 = 0 AND gs.Currency = 'EUR') subquery;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT c.Segment, MIN(t1k.Consumption) AS least_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID GROUP BY c.Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT y, MAX(c) AS max_consumption FROM yearmonth JOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE products.Description LIKE '%CZK%' GROUP BY y;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT t1.Date, MAX(t1.Consumption) AS peak_month_consumption FROM yearmonth t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND YEAR(t1.Date) = 2013 GROUP BY t1.Date ORDER BY peak_month_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT CONCAT( YEAR(yearmonth.Date), '01', '01', '01', '01' ) AS year_start, CONCAT( YEAR(yearmonth.Date), '12', '31', '31', '31' ) AS year_end, AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' GROUP BY year_start, year_end ORDER BY year_start LIMIT 1; SELECT CONCAT( YEAR(yearmonth.Date), '01', '01', '01', '01' ) AS year_start, CONCAT( YEAR(yearmonth.Date), '12', '31', '31', '31' ) AS year_end, AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' GROUP BY year_start, year_end ORDER BY year_start LIMIT 1; SELECT CONCAT( YEAR(yearmonth.Date), '01', '01', '01', '01' ) AS year_start, CONCAT( YEAR(yearmonth.Date), '12', '31', '31', '31' ) AS year_end, AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' GROUP BY year_start, year_end ORDER BY year_start LIMIT 1; WITH sme_avg_consumption AS ( SELECT AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' ), lam_avg_consumption AS ( SELECT AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' ), kam_avg_consumption AS ( SELECT AVG(yearmonth.Consumption) AS avg_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' ) SELECT (sme_avg_consumption.avg_consumption - lam_avg_consumption.avg_consumption) AS sme_lam_diff, (lam_avg_consumption.avg_consumption - kam_avg_consumption.avg_consumption) AS lam_kam_diff, (kam_avg_consumption.avg_consumption - sme_avg_consumption.avg_consumption) AS kam_sme_diff;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT s.Segment, (SUM(CASE WHEN t1.Year = 2013 AND t2.Year = 2012 THEN t1.Amount ELSE 0 END) / SUM(t2.Amount)) * 100 AS Percentage_Increase FROM customers s JOIN transactions_1k t1 ON s.CustomerID = t1.CustomerID JOIN transactions_1k t2 ON s.CustomerID = t2.CustomerID WHERE t1.Year BETWEEN 2012 AND 2013 AND t2.Year BETWEEN 2012 AND 2013 GROUP BY s.Segment ORDER BY Percentage_Increase DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Amount) FROM transactions_1k JOIN yearmonth ON transactions_1k.TransactionID = yearmonth.TransactionID WHERE yearmonth.CustomerID = 6 AND yearmonth.Date BETWEEN '20130801' AND '20131130';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT gasstations.GasStationID) - COUNT(DISTINCT gasstations.GasStationID) AS difference FROM gasstations WHERE gasstations.Country IN ('CZE', 'SVK');\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT c1.Segment, c1.Currency, t1.Date, t1.Consumption, t2.Consumption FROM customers c1 JOIN yearmonth t1 ON c1.CustomerID = t1.CustomerID JOIN yearmonth t2 ON c1.CustomerID = t2.CustomerID WHERE t1.Date = '2013-04-01' AND t2.Date = '2013-04-30' AND c1.CustomerID IN (7, 5) ORDER BY t1.Date, t2.Consumption DESC;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS num_czk_transactions, SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS num_eur_transactions FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE customers.Segment = 'SME' GROUP BY 1;\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, c.Segment, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '2013-10%' ORDER BY ym.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND Date = '2013-05-01');\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ( SUM(CASE WHEN transactions_1k.Amount > 46.73 THEN 1 ELSE 0 END) * 100.0 ) AS percentage_of_lam_customers_consumed_more_than_46.73 FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "CREATE TEMPORARY TABLE gas_station_value_for_money AS SELECT g.GasStationID, g.Country, SUM(t.Amount) AS total_amount_spent, SUM(p.Price) AS total_price_of_products FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID GROUP BY g.GasStationID, g.Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT (SUM(CASE WHEN transactions_1k.Amount = 1000 THEN 1 ELSE 0 END) * 100.0 / COUNT(transactions_1k.CustomerID)) AS percentage_euro_payments FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage FROM yearmonth WHERE DATE = '2012-02-01' AND consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT ( SUM(CASE WHEN \"gasstations\".\"Segment\" = 'Premium' THEN 1 ELSE 0 END) ) * 100.0 / ( SUM(CASE WHEN \"gasstations\".\"Segment\" IS NOT NULL THEN 1 ELSE 0 END) ) AS percentage_premium_gas_stations FROM \"gasstations\" WHERE \"gasstations\".\"Country\" = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 9 AND YEAR(t.Date) = 2013 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, MIN(t1k.Consumption) AS least_consumed FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID WHERE ym.Date = '201309' GROUP BY c.Segment;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID, MIN(t1.Amount) AS least_consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '201206' GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS highest_monthly_consumption_2012 FROM yearmonth WHERE YEAR(Date) = 2012;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) AS biggest_monthly_consumption FROM yearmonth WHERE Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM transactions_1k t JOIN yearmonth ym ON t.CustomerID = ym.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE MONTH(y.Date) = 9 AND YEAR(y.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE MONTH(transactions_1k.Date) = 6 AND YEAR(transactions_1k.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT g.ChainID, g.Country, g.Segment FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE t.Amount IN (SELECT SUM(Amount) FROM transactions_1k WHERE t.Currency = 'EUR' GROUP BY t.CustomerID) AND p.Description LIKE '%gas%' AND g.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description FROM transactions_1k AS t JOIN products AS p ON t.ProductID = p.ProductID WHERE t.Amount * p.Price = (SELECT SUM(t2.Amount * t2.Price) FROM transactions_1k AS t2 WHERE t2.ProductID = p.ProductID) AND t.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN yearmonth y ON t.TransactionID = y.TransactionID WHERE y.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT gasstations.Date, transactions_1k.Time FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date >= '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t1.Amount * t1.Price) AS average_total_price FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE c.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT c.CustomerID, c.Segment, SUM(t1k.Amount) AS total_spent FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date = '2012-08-25' GROUP BY c.CustomerID, c.Segment ORDER BY total_spent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country, g.GasStationID FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN yearmonth y ON g.GasStationID = y.CustomerID WHERE t.Date = '2012-08-25' AND t.Amount > 0 GROUP BY g.Country, g.GasStationID ORDER BY g.Country, g.GasStationID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT transactions_1k.Currency FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '2012-08-23' AND hour(yearmonth.Time) = 21;\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Amount > 0 AND Currency = 'CZK' AND Time < '13:00:00' AND Date = '2012-08-26';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT c.Segment FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date = (SELECT MIN(Date) FROM transactions_1k) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.ChainID = transactions_1k.GasStationID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' AND CustomerID = (SELECT CustomerID FROM yearmonth WHERE Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(t1.Amount) AS total_2012_aug_24, t1.Date AS transaction_date, t1.ProductID, t1.Amount FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE c.Segment = 'Segment_Name' -- Replace 'Segment_Name' with the actual segment name AND t1.Date = '2012-08-24' UNION ALL SELECT SUM(t2.Amount) AS total_jan_2012, t2.Date AS transaction_date, t2.ProductID, t2.Amount FROM transactions_1k t2 JOIN yearmonth ym ON t2.CustomerID = ym.CustomerID WHERE ym.Date = '2012-01-01' AND ym.Date < '2012-02-01' AND ym.Date > '2011-12-01';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT t1.Currency FROM customers AS t1 JOIN transactions_1k AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date LIKE '201306%' AND t2.Amount = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT gasstations.Country FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.TransactionID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Segment, p.Description FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE y.Date = '2012-08-24' AND t.Amount = 548.4 LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT customers.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT customers.CustomerID) FROM customers WHERE customers.Currency = 'EUR' AND EXTRACT(YEAR FROM yearmonth.Date) = 2012 AND EXTRACT(MONTH FROM yearmonth.Date) = 8 AND EXTRACT(DAY FROM yearmonth.Date) = 25) AS percentage_of_customers_using_eur_on_2012_8_25 FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ( SELECT SUM(consumption) FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE TransactionID = 634.8 AND Date = '2012-08-25') AND Date BETWEEN '2012-01-01' AND '2013-01-01' ) / ( SELECT SUM(consumption) FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE TransactionID = 634.8 AND Date = '2012-08-25') ) AS consumption_decrease_rate;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT g.GasStationID, g.ChainID, g.Country, SUM(t.Amount) AS TotalRevenue FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID GROUP BY g.GasStationID, g.ChainID, g.Country ORDER BY TotalRevenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN customers.Segment = 'premium' THEN 1 ELSE 0 END) / SUM(CASE WHEN customers.Segment = 'overall' THEN 1 ELSE 0 END)) * 100 FROM customers JOIN gasstations ON customers.Segment = gasstations.Segment WHERE gasstations.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount) AS total_spent_at_gas_stations FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508; SELECT SUM(transactions_1k.Amount) AS total_spent_in_january_2012 FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508 AND EXTRACT(MONTH FROM transactions_1k.Date) = 1 AND EXTRACT(YEAR FROM transactions_1k.Date) = 2012;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description AS Product_Name, SUM(transactions_1k.Amount) AS Total_Sales FROM products JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY Total_Sales DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, AVG(p.price / t.amount) AS avg_price_per_item, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Amount > 1000 GROUP BY c.CustomerID, c.Currency ORDER BY avg_price_per_item DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT gasstations.Country, yearmonth.CustomerID FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE products.ProductID = 2;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, ym.Consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN products p ON t1.ProductID = p.ProductID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t1.ProductID = 5 AND t1.Amount > 29 AND t1.Date LIKE '2012-08%' GROUP BY c.CustomerID, ym.Date;\t----- bird -----\tdebit_card_specializing"
}