{
    "0": " SELECT MAX(FRPM_Percent_Eligible) AS highest_eligible_free_rate FROM free_and_reduced_price_meals WHERE County_Name = 'Alameda County'; \t----- bird -----\tcalifornia_schools",
    "1": " SELECT     CDSCode,     (FreeMealCount(Ages5_17) / Enrollment(Ages5_17)) * 100 AS EligibleFreeRate FROM     free_and_reduced_price_meals WHERE     SchoolType = 'Continuation School' ORDER BY     EligibleFreeRate ASC LIMIT 3; \t----- bird -----\tcalifornia_schools",
    "2": " SELECT s.Zip FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.County = 'Fresno County Office of Education'; \t----- bird -----\tcalifornia_schools",
    "3": " SELECT s.street_address FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.cds = frpm.CDSCode WHERE frpm.Percent >= (SELECT MAX(Percent) FROM (SELECT Percent FROM free_and_reduced_price_meals WHERE Academic_Year = '2019-2020' AND District_Type = 'Public' AND School_Type = 'Elementary' ORDER BY FRPM_Count DESC LIMIT 1)) AND frpm.Academic_Year = '2019-2020' AND frpm.District_Type = 'Public' AND frpm.School_Type = 'Elementary'; \t----- bird -----\tcalifornia_schools",
    "4": " SELECT s.Phone FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.OpenDate > '2000-01-01' AND s.District Ownership Code = 'Charter'; \t----- bird -----\tcalifornia_schools",
    "5": " SELECT COUNT(DISTINCT s.CDSCode) FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.average_scores_in_Math > 400 AND s.Virtual = 'F'; \t----- bird -----\tcalifornia_schools",
    "6": " SELECT s.school_name, s.district_name, s.county_name FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.Number_of_Test_Takers >= 500 AND (s.Magnet = 1 OR s.Magnet = 0 AND s.Educational_Instruction_Level_Code = 'Magnet'); \t----- bird -----\tcalifornia_schools",
    "7": " SELECT s.Phone FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.Number_of_Test_Takers >= 1500 GROUP BY ss.cds ORDER BY COUNT(*) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "8": " SELECT s.enrollment (1st-12th grade), sr.Number_of_Test_Takers FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode JOIN free_and_reduced_price_meals fr ON s.CDSCode = fr.CDSCode WHERE fr.Percent (%) Eligible FRPM (K-12) = (SELECT MAX(Percent (%) Eligible FRPM (K-12)) FROM free_and_reduced_price_meals) ORDER BY s.enrollment (1st-12th grade) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "9": " SELECT COUNT(DISTINCT s.CDSCode) FROM sat_scores AS s JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.average_scores_math > 560 AND sc.Charter = 1; \t----- bird -----\tcalifornia_schools",
    "10": " SELECT sr.school_name, sr.average_reading_score FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode WHERE sr.average_reading_score = (SELECT MAX(average_reading_score) FROM sat_scores) AND s.grade_span_served.contains('5-17') SELECT sr.FRPM_count FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode WHERE s.grade_span_served.contains('5-17'); \t----- bird -----\tcalifornia_schools",
    "11": " SELECT s.CDSCode, SUM(s.Enrollment (K-12) + s.Enrollment (Ages 5-17)) AS total_enrollment FROM schools s JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode GROUP BY s.CDSCode HAVING total_enrollment > 500; \t----- bird -----\tcalifornia_schools",
    "12": " SELECT MAX(excellence_rate) AS highest_excellence_rate, MAX(eligible_free_rate) AS highest_eligible_free_rate FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE excellence_rate > 0.3 AND (age_group = '5-17' OR age_group = 'Ages 5-17') GROUP BY schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "13": " SELECT s.Phone, COUNT(s.CDS) AS num_cds FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds GROUP BY s.Phone ORDER BY num_cds DESC LIMIT 3; \t----- bird -----\tcalifornia_schools",
    "14": " SELECT s.CDSCode, s.NationalCenterForEducationalStatisticsSchoolIdentificationNumber FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode ORDER BY SUM(ss.Enrollment_1st_12th_grade) DESC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "15": " SELECT s.CDSCode, s.DistrictName, a.average_scores_reading FROM schools s JOIN sat_scores a ON s.CDSCode = a.cds WHERE s.StatusType = 'Active' ORDER BY a.average_scores_reading DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "16": " SELECT COUNT(*) FROM schools WHERE County = 'Alameda' AND Charter = 0 AND Number_of_Test_Takers < 100; \t----- bird -----\tcalifornia_schools",
    "17": " SELECT s.CDSCode, s.charter_num FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_writing > 499 ORDER BY ss.average_scores_in_writing DESC; \t----- bird -----\tcalifornia_schools",
    "18": " SELECT COUNT(*) FROM schools WHERE County = 'Fresno' AND District = 'Directly Funded' AND Number_of_Test_Takers <= 250; \t----- bird -----\tcalifornia_schools",
    "19": " SELECT s.Phone FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.average_scores_in_Math = (     SELECT MAX(average_scores_in_Math)     FROM sat_scores ) \t----- bird -----\tcalifornia_schools",
    "20": " SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND Low_Grade = '9' AND High_Grade = '12'; \t----- bird -----\tcalifornia_schools",
    "21": " SELECT COUNT(*) FROM free_and_reduced_price_meals AS frrm JOIN schools ON frrm.CDSCode = schools.CDSCode WHERE schools.County = 'Los Angeles' AND frrm.Enrollment (K-12) > 500 AND frrm.Free_Meal_Count (K-12) < 700 AND frrm.Academic_Year = '2019-2020'; \t----- bird -----\tcalifornia_schools",
    "22": " SELECT s.school_name, MAX(s.enrollment_1st_12th) AS highest_enrollment FROM schools s JOIN sat_scores ss ON s.cds = ss.cds WHERE s.county = 'Contra Costa' GROUP BY s.school_name ORDER BY highest_enrollment DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "23": " SELECT s.school, s.street_address FROM schools s JOIN free_and_reduced_price_meals frrpm ON s.CDSCode = frrpm.CDSCode WHERE frrpm.Enrollment (K-12) - frrpm.Enrollment (Ages 5-17) > 30 \t----- bird -----\tcalifornia_schools",
    "24": " SELECT s.school_name, s.district_name, s.county_name, sr.average_scores_reading, sr.average_scores_math, sr.average_scores_writing, s.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 FROM schools s JOIN sat_scores sr ON s.CDSCode = sr.cds WHERE s.Percent (%) Eligible Free (K-12) > 0.1 AND s.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 > 0; \t----- bird -----\tcalifornia_schools",
    "25": " SELECT s.CDSCode, s.DistrictName, s.FundingType FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' AND ss.average_math >= 400 GROUP BY s.CDSCode, s.DistrictName, s.FundingType HAVING COUNT(ss.cds) > 0; \t----- bird -----\tcalifornia_schools",
    "26": " SELECT     s.school_name,     CONCAT(s.street, ',', s.city, ',', s.state,'', s.zip) AS full_communication_address FROM     schools s JOIN     free_and_reduced_price_meals frrm ON     s.CDSCode = frrm.CDSCode WHERE     s.district = 'Monterey'     AND frrm.Enrollment (Ages 15-17) > 800     AND s.school_type = 'High School' ORDER BY     frrm.Enrollment (Ages 15-17) DESC; \t----- bird -----\tcalifornia_schools",
    "27": " SELECT     s.school_name,     s.average_scores_in_writing,     COALESCE(s.communication_number, 'N/A') AS communication_number FROM     schools s JOIN     sat_scores sc ON s.CDSCode = sc.cds WHERE     s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01'; \t----- bird -----\tcalifornia_schools",
    "28": " SELECT s.school_name, s.doc_type FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.FundingType = 'Locally Funded' AND (ss.Enrollment (1st-12th grade) - ss.Enrollment (Ages 5-17)) > (SELECT AVG(diff) FROM (SELECT (ss1.Enrollment (1st-12th grade) - ss1.Enrollment (Ages 5-17)) AS diff FROM sat_scores ss1 WHERE ss1.cds = s.CDSCode) AS subquery) ORDER BY s.school_name; \t----- bird -----\tcalifornia_schools",
    "29": " SELECT MAX(OpenDate) AS max_enrollment_open_date FROM schools WHERE grade_span_served.K_12 = 'T' AND enrollment_1st_12th_grade > (     SELECT MAX(enrollment_1st_12th_grade)     FROM schools );\t----- bird -----\tcalifornia_schools",
    "30": " SELECT s.city, MIN(s.enrollment) AS lowest_enrollment FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.grade_span = '1-12' GROUP BY s.city ORDER BY lowest_enrollment ASC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "31": " SELECT     s.CDSCode,     s.CountyName,     s.DistrictName,     s.SchoolName,     (s.FreeMealCount_K12 / s.Enrollment_K12) * 100 AS EligibleFreeRate FROM     schools s JOIN     free_and_reduced_price_meals frrm ON     s.CDSCode = frrm.CDSCode WHERE     s.Enrollment_K12 >= 1000 AND     s.Enrollment_K12 <= 1999 ORDER BY     s.Enrollment_K12 DESC LIMIT 10; \t----- bird -----\tcalifornia_schools",
    "32": " SELECT s.CDSCode, s.SchoolName, s.Enrollment_K_12, s.FRPM_Count_K_12, s.Percent_Eligible_FRPM_K_12 FROM schools s JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE frrm.Ownership_Code = 66 AND frrm.Academic_Year = '2021-2022' AND frrm.School_Type = 'Public' AND frrm.District_Type = 'School District' AND frrm.NSLP_Provision_Status = 'Yes' AND frrm.Enrollment_K_12 > 0 AND frrm.FRPM_Count_K_12 > 0 AND frrm.Percent_Eligible_FRPM_K_12 > 0 ORDER BY s.FRPM_Count_K_12 DESC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "33": " SELECT s.school_name, s.website FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_reading BETWEEN 1900 AND 2000 AND ss.average_scores_in_math BETWEEN 1900 AND 2000 AND ss.average_scores_in_writing BETWEEN 1900 AND 2000 AND ss.Number_of_Test_Takers >= 1000 AND ss.Enrollment_1st_12th_grade >= 500 AND ss.Enrollment_5_17th_grade >= 500 AND ss.2013_14_calpads_fall_1_certification_status = 1 \t----- bird -----\tcalifornia_schools",
    "34": " SELECT sr.Enrollment (Ages 5-17) AS total_students, sr.Free Meal Count (Ages 5-17) AS total_free_meals, sr.Percent (%) Eligible Free (Ages 5-17) AS free_rate FROM free_and_reduced_price_meals AS sr JOIN schools AS s ON sr.CDSCode = s.CDSCode WHERE s.School = 'Kacey Gibson' \t----- bird -----\tcalifornia_schools",
    "35": " SELECT s.email FROM schools s JOIN (     SELECT CDSCode, MIN(Enrollment (K-12)) AS min_enrollment     FROM free_and_reduced_price_meals     WHERE Charter School (Y/N) = 1 ) f ON s.CDSCode = f.CDSCode WHERE f.min_enrollment IS NOT NULL; \t----- bird -----\tcalifornia_schools",
    "36": " SELECT s.administrator_first_name_1, s.administrator_last_name_1, s.administrator_email_address_1 FROM schools s JOIN sat_scores sc ON s.cds = sc.cds JOIN (     SELECT cds, COUNT(*) AS num_students_sat_1500     FROM sat_scores     WHERE average_scores_sat >= 1500     GROUP BY cds ) sub ON sc.cds = sub.cds ORDER BY num_students_sat_1500 DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "37": " SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT CDSCode, EXTRACT(YEAR FROM sat_scores.OpenDate) AS year,            COUNT(*) AS num_tst_takers,            100.0 * COUNT(*) / COUNT(DISTINCT sat_scores.CDSCode) AS excellence_rate     FROM sat_scores     GROUP BY CDSCode, year ) sub ON s.CDSCode = sub.CDSCode ORDER BY sub.excellence_rate ASC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "38": " SELECT s.website FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.County = 'Los Angeles County' AND ss.Number_of_Test_Takers BETWEEN 2000 AND 3000; \t----- bird -----\tcalifornia_schools",
    "39": " SELECT AVG(Number_of_Test_Takers) FROM sat_scores JOIN schools ON sat_scores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'; \t----- bird -----\tcalifornia_schools",
    "40": " SELECT s.Phone FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE frrm.District = 'Fresno Unified' AND ss.average_scores_in_reading = (SELECT MIN(average_scores_in_reading) FROM sat_scores) AND ss.average_scores_in_math = (SELECT MAX(average_scores_in_math) FROM sat_scores) AND ss.average_scores_in_writing = (SELECT MAX(average_scores_in_writing) FROM sat_scores); \t----- bird -----\tcalifornia_schools",
    "41": " SELECT     s.School,     AVG(sr.average_reading_scores) AS avg_reading_score FROM     schools s JOIN     sat_scores sr ON s.CDSCode = sr.cds WHERE     s.Virtual = 'F'     AND s.County = (         SELECT             County         FROM             schools         ORDER BY             avg_reading_score DESC         LIMIT 1     ) GROUP BY     s.School ORDER BY     avg_reading_score DESC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "42": " SELECT s.school_name, s.district_name, s.county_name, a.average_scores_math FROM schools s JOIN sat_scores a ON s.cds = a.cds ORDER BY a.average_scores_math DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "43": " SELECT AVG(avg_scr_math) AS avg_math_score FROM sat_scores JOIN schools ON sat_scores.cds = schools.CDSCode JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode WHERE (avg_scr_math, avg_scr_read, avg_scr_write) IN (     SELECT MIN(avg_scr_math), MIN(avg_scr_read), MIN(avg_scr_write)     FROM (         SELECT avg_scr_math, avg_scr_read, avg_scr_write         FROM sat_scores         JOIN schools ON sat_scores.cds = schools.CDSCode         JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode         GROUP BY cds     ) AS subquery ) ORDER BY avg_math_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": " SELECT s.city, AVG(ss.average_scores_in_writing) AS avg_writing_score FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode JOIN (     SELECT school_name, COUNT(*) AS test_takers_score_1500     FROM sat_scores     WHERE Number_of_Test_Takers >= 1500 AND average_scores_in_reading >= 500 AND average_scores_in_math >= 500     GROUP BY school_name     ORDER BY test_takers_score_1500 DESC     LIMIT 1 ) t ON s.school_name = t.school_name WHERE ss.Number_of_Test_Takers >= 1500; \t----- bird -----\tcalifornia_schools",
    "45": " SELECT s.school, AVG(ss.average_scores_writing) AS avg_writing_score FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.administrator_first_name = 'Ricci' AND s.administrator_last_name = 'Ulrich' GROUP BY s.school; \t----- bird -----\tcalifornia_schools",
    "46": " SELECT s.StateSpecialSchools, MAX(frpm_count_k_12) AS highest_frpm_count FROM free_and_reduced_price_meals f JOIN sat_scores s ON f.CDSCode = s.cds WHERE f.AcademicYear = '2013-14' AND f.DistrictType = 'State Special Schools' AND f.SchoolType = 'K-12' GROUP BY s.StateSpecialSchools ORDER BY highest_frpm_count DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "47": " SELECT COUNT(DISTINCT schools.CDSCode) AS monthly_average_schools_opened FROM schools JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode WHERE free_and_reduced_price_meals.County = 'Alameda' AND free_and_reduced_price_meals.DistrictType = 'Elementary School District' AND YEAR(free_and_reduced_price_meals.AcademicYear) = 1980 AND MONTH(free_and_reduced_price_meals.AcademicYear) = 1; \t----- bird -----\tcalifornia_schools",
    "48": " SELECT     COUNT(DISTINCT schools.CDSCode) AS merged_unified_schools,     COUNT(DISTINCT schools.CDSCode) AS merged_elementary_schools FROM     schools JOIN     sat_scores ON schools.CDSCode = sat_scores.cds WHERE     schools.County = 'Orange County'     AND (schools.DistrictType = 'Unified School District' OR schools.DistrictType = 'Elementary School District') GROUP BY     schools.DistrictType ORDER BY     merged_unified_schools / merged_elementary_schools;\t----- bird -----\tcalifornia_schools",
    "49": " SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.County, s.School ORDER BY COUNT(*) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "50": " SELECT s.school_name, s.street_address FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds ORDER BY ss.average_scores_math DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": " SELECT s.mailing_street_address, s.school_name FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT CDSCode, AVG(average_scores_in_reading) AS avg_reading     FROM sat_scores     GROUP BY CDSCode     ORDER BY avg_reading ASC     LIMIT 1 ) subquery ON s.CDSCode = subquery.CDSCode WHERE ss.average_scores_in_reading = subquery.avg_reading; \t----- bird -----\tcalifornia_schools",
    "52": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE sat_scores.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 >= 1 AND schools.mailing_city = 'Lakeport'; \t----- bird -----\tcalifornia_schools",
    "53": " SELECT COUNT(DISTINCT \"cds\") AS total_test_takers FROM \"sat scores\" JOIN \"schools\" ON \"sat scores\".\"cds\" = \"schools\".\"CDSCode\" WHERE \"schools\".\"City\" LIKE '%Fresno%'; \t----- bird -----\tcalifornia_schools",
    "54": " SELECT s.CDSCode, s.County, s.District, s.School, m.mailing_zip FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN schools m ON s.CDSCode = m.CDSCode WHERE s.admin_name = 'Avetik Atoian'; \t----- bird -----\tcalifornia_schools",
    "55": " SELECT COUNT(DISTINCT schools.CDSCode) AS colusa_count, COUNT(DISTINCT schools.CDSCode) AS humboldt_count FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.mailing_state = 'CA' GROUP BY schools.mailing_state; \t----- bird -----\tcalifornia_schools",
    "56": " SELECT COUNT(*) FROM schools WHERE Charter = 0 AND City = 'San Joaquin' AND State = 'California'; \t----- bird -----\tcalifornia_schools",
    "57": " SELECT s.Phone, s.extension FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_writing = (SELECT AVG(average_scores_in_writing) FROM sat_scores WHERE cds = s.CDSCode ORDER BY average_scores_in_reading DESC LIMIT 333, 1) ORDER BY ss.average_scores_in_writing DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "58": " SELECT s.school_name, s.Phone, s.extension FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704'; \t----- bird -----\tcalifornia_schools",
    "59": " SELECT s.website FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.administrator_first_name1 = 'Mike' AND s.administrator_last_name1 = 'Larson' OR s.administrator_first_name2 = 'Dante' AND s.administrator_last_name2 = 'Alvarez'; \t----- bird -----\tcalifornia_schools",
    "60": " SELECT s.website FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE s.Virtual = 'P' AND s.Charter = 1 AND frpm.CountyName = 'San Joaquin'; \t----- bird -----\tcalifornia_schools",
    "61": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.City = 'Hickman' AND schools.DistrictType = 'Elementary School District' AND schools.Charter = 1; \t----- bird -----\tcalifornia_schools",
    "62": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode WHERE free_and_reduced_price_meals.County = 'Los Angeles' AND free_and_reduced_price_meals.DistrictType = 'Public' AND free_and_reduced_price_meals.Charter = 0 AND free_and_reduced_price_meals.Percent(%) Eligible Free (K-12) < 0.0018 \t----- bird -----\tcalifornia_schools",
    "63": " SELECT s.school_name, s.city FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.charter = 1 AND sc.charter_num = '00D2' LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "64": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.City = 'Hickman' AND schools.CharterNum = '00D4'; \t----- bird -----\tcalifornia_schools",
    "65": " SELECT     (COUNT(*) FILTER (WHERE type = 'locally funded') * 100.0 / COUNT(*)) AS ratio_percentage FROM     schools WHERE     county = 'Santa Clara'; \t----- bird -----\tcalifornia_schools",
    "66": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.County = 'Stanislaus' AND schools.OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND schools.FundingType = 'Directly Funded'; \t----- bird -----\tcalifornia_schools",
    "67": " SELECT SUM(charter) FROM schools WHERE city = 'San Francisco' AND YEAR(OpenDate) = 1989 AND YEAR(ClosedDate) = 1989; \t----- bird -----\tcalifornia_schools",
    "68": " SELECT s.County, COUNT(s.CDS) AS school_closures FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE sc.rtype ='school closure' AND YEAR(sc.OpenDate) BETWEEN 1980 AND 1989 AND s.DistrictOwnershipCode = 'Youth Authority Facilities (CEA)' GROUP BY s.County ORDER BY school_closures DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "69": " SELECT s.NCES_ID FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE frpm.SchoolOwnershipCode = 'State Special Schools' AND frpm.DistrictOwnershipCode = 'State'; \t----- bird -----\tcalifornia_schools",
    "70": " SELECT COUNT(DISTINCT CDSCode) FROM schools WHERE County = 'Alpine' AND StatusType = 'Active' OR StatusType = 'Closed'; \t----- bird -----\tcalifornia_schools",
    "71": " SELECT s.DistrictCode FROM schools s JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE frrm.City = 'Fresno' AND frrm.Magnet = 0; \t----- bird -----\tcalifornia_schools",
    "72": " SELECT SUM(enrollment_5_17) AS total_enrollment_5_17 FROM free_and_reduced_price_meals JOIN sat_scores ON free_and_reduced_price_meals.CDSCode = sat_scores.cds WHERE free_and_reduced_price_meals.school_name = 'State Special School' AND free_and_reduced_price_meals.district_name = 'Fremont' AND free_and_reduced_price_meals.academic_year = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": " SELECT SUM(FRPM_Count_K_12) AS free_meal_count_ages_5_17 FROM free_and_reduced_price_meals JOIN schools ON free_and_reduced_price_meals.CDSCode = schools.CDSCode WHERE schools.Street = 'PO Box 1040' AND schools.City = 'Youth Authority School' AND schools.State = 'Unknown'; \t----- bird -----\tcalifornia_schools",
    "74": " SELECT MIN(Low_Grade) AS lowest_grade FROM schools WHERE National_Center_for_Educational_Statistics_school_district_identification_number = '0613360' AND District = 'District Special Education Consortia School'; \t----- bird -----\tcalifornia_schools",
    "75": " SELECT s.school_name, e.educational_instruction_level_name FROM schools s JOIN sat_scores ss ON s.cds = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.cds = frpm.cds WHERE frpm.nslp_provision_status = 'Breakfast Provision 2' AND s.county_code = 37 AND e.educational_instruction_level_type = 'Elementary'; \t----- bird -----\tcalifornia_schools",
    "76": " SELECT s.street, s.city, s.zip FROM schools s JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE frrm.EducationalOptionType = 'Lunch Provision 2' AND frrm.LowGrade = '9' AND frrm.HighGrade = '12' AND s.County = 'Merced'; \t----- bird -----\tcalifornia_schools",
    "77": " SELECT s.CDSCode, s.SchoolName, s.Enrollment_5_17, s.FRPM_Count_5_17, (s.FRPM_Count_5_17 / s.Enrollment_5_17 * 100) AS Percent_Eligible_FRPM FROM schools s JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE s.County = 'Los Angeles' AND s.grade_span_served = 'Kindergarten to 9th grade'; \t----- bird -----\tcalifornia_schools",
    "78": " SELECT grade_span_served, COUNT(*) AS popularity FROM schools WHERE city = 'Adelanto' GROUP BY grade_span_served ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "79": " SELECT     s.County,     COUNT(s.School) AS schools_offering_virtual FROM     schools s JOIN     sat_scores sc ON s.CDSCode = sc.cds WHERE     (s.County = 'San Diego' OR s.County = 'Santa Barbara')     AND s.Virtual = 1     AND s.District Ownership Code = 'Does not offer physical building' GROUP BY     s.County ORDER BY     schools_offering_virtual DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "80": " SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds ORDER BY s.latitude DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "81": " SELECT s.school_name, s.lowest_grade FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT CDSCode, MIN(latitude) AS min_latitude, MIN(longitude) AS min_location     FROM sat_scores     WHERE state = 'CA'     GROUP BY CDSCode ) min_location ON s.CDSCode = min_location.CDSCode WHERE s.latitude = min_location.min_latitude ORDER BY s.lowest_grade ASC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "82": " SELECT s.grade_span_offered FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds ORDER BY sc.longitude DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "83": " SELECT     s.City,     COUNT(sr.School) AS Schools_Count FROM     schools s JOIN     sat_scores sr ON s.CDSCode = sr.cds WHERE     s.grade_span = 'Kindergarten to 8th grade'     AND s.Magnet = 1     AND sr.average_scores_in_Reading >= 500     AND sr.average_scores_in_Math >= 500     AND sr.average_scores_in_Writing >= 500     AND sr.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 > 0     AND sr.NSLP_Provision_Status = 'Multiple Provision Types' GROUP BY     s.City ORDER BY     Schools_Count DESC; \t----- bird -----\tcalifornia_schools",
    "84": " SELECT administrator's first name 1, administrator's last name 1, district FROM schools WHERE administrator's first name 1!= '' AND administrator's last name 1!= '' GROUP BY administrator's first name 1, administrator's last name 1 ORDER BY COUNT(*) DESC LIMIT 2; \t----- bird -----\tcalifornia_schools",
    "85": " SELECT s.DistrictCode, (s.FreeMealCount_K12 / s.Enrollment_K12 * 100) AS PercentEligibleFreeK12 FROM schools s JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE s.administrator_first_name = 'Alusine'; \t----- bird -----\tcalifornia_schools",
    "86": " SELECT s.CDSCode, s.NationalCenterForEducationalStatisticsSchoolDistrictIdentificationNumber, s.NationalCenterForEducationalStatisticsSchoolIdentificationNumber, s.StatusType, s.County, s.District, s.School, s.Street, s.streetAddress, s.City, s.Zip, s.State, s.MailStreet, s.mailingStreetAddress, s.mailingCity, s.mailingZip, s.mailingState, s.Phone, s.extension, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DistrictOwnershipCode, s.DistrictOwnershipTypeCode, s.SchoolOwnershipCode, s.SchoolOwnershipTypeCode, s.EducationOptionCode, s.EducationalOptionName, s.EducationalInstructionLevelCode, s.EducationalInstructionLevelName, s.gradeSpanOffered, s.gradeSpanServed, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.administratorFirstName1, s.administratorLastName1, s.administratorEmailAddress1, s.administratorFirstName2, s.administratorLastName2, s.administratorEmailAddress2, s.administratorFirstName3, s.administratorLastName3, s.administratorEmailAddress3 FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE sc.CharterNum = '40'; \t----- bird -----\tcalifornia_schools",
    "87": " SELECT s.email FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE s.County = 'San Bernardino' AND s.City = 'San Bernardino City Unified' AND frpm.AcademicYear BETWEEN '2009-01-01' AND '2010-12-31' AND frpm.DistrictType IN ('Public Intermediate/Middle Schools', 'Unified Schools') AND sc.rtype = 'SAT' AND sc.schoolName = 'School Name' AND sc.districtName = 'District Name' AND sc.countyName = 'County Name'; \t----- bird -----\tcalifornia_schools",
    "88": " SELECT s.school_name, a.email FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN administrators a ON s.CDSCode = a.CDSCode WHERE sc.Number_of_Test_Takers >= 1500 ORDER BY sc.Number_of_Test_Takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": " SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK PO OBRATU' AND location_of_branch IN (     SELECT location_of_branch     FROM district     WHERE district_name = 'East Bohemia' );\t----- bird -----\tfinancial",
    "90": " SELECT COUNT(DISTINCT account.account_id) FROM account JOIN disposition ON account.account_id = disposition.account_id JOIN client ON account.location_of_branch = client.location_of_branch WHERE district.district_name = 'Prague'; \t----- bird -----\tfinancial",
    "91": " SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district; \t----- bird -----\tfinancial",
    "92": " SELECT COUNT(*) FROM district WHERE ratio_of_urban_inhabitants > 6000 AND ratio_of_urban_inhabitants < 10000; \t----- bird -----\tfinancial",
    "93": " SELECT COUNT(*) FROM client JOIN district ON client.location_of_branch = district.location_of_branch WHERE client.gender = 'M' AND district.district_name = 'North Bohemia' AND district.average_salary > 8000; \t----- bird -----\tfinancial",
    "94": " SELECT     c.account_id,     c.gender,     d.A9,     d.average_salary FROM     client c JOIN     district d ON c.location_of_branch = d.location_of_branch WHERE     c.gender = 'F' ORDER BY     c.birth_date ASC,     d.average_salary DESC LIMIT 1;  SELECT     MAX(d.average_salary) - MIN(d.average_salary) AS salary_gap FROM     district d WHERE     d.region = 'Region_with_Highest_Average_Salary'; \t----- bird -----\tfinancial",
    "95": "  [SQL] SELECT a.account_id, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency, a.date, a.frequency, a.location_of_branch, a.frequency,\t----- bird -----\tfinancial",
    "96": " SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disposition ON client.client_id = disposition.client_id JOIN account ON disposition.account_id = account.account_id WHERE account.frequency = 'POPLATEK TYDNE' AND account.location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Owner'); \t----- bird -----\tfinancial",
    "97": " SELECT c.client_id, c.gender, c.birth_date, d.disposition_id FROM client c JOIN disposition d ON c.client_id = d.client_id WHERE d.type = 'Disponent'; \t----- bird -----\tfinancial",
    "98": " SELECT a.account_id, a.location_of_branch, a.approved_amount, d.weekly_issuance_statement FROM account a JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE YEAR(l.date) = 1997 AND l.status = 'approved' GROUP BY a.account_id, a.location_of_branch, a.approved_amount ORDER BY a.approved_amount ASC LIMIT 1; \t----- bird -----\tfinancial",
    "99": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date >= '1993-01-01' GROUP BY a.account_id, a.location_of_branch, a.frequency, a.date HAVING MAX(l.amount) = (SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id AND l2.duration > 12 AND a.date >= '1993-01-01'); \t----- bird -----\tfinancial",
    "100": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'Sokolov' AND c.gender = 'F' AND c.birth_date < '1950-01-01'; \t----- bird -----\tfinancial",
    "101": " SELECT a.account_id, a.date FROM account a JOIN transaction t ON a.account_id = t.account_id WHERE t.date = '1995-01-01' GROUP BY a.account_id ORDER BY a.date ASC LIMIT 1; \t----- bird -----\tfinancial",
    "102": " SELECT a.account_id, a.location_of_branch, a.date, a.frequency, a.amount FROM account a JOIN disposition d ON a.account_id = d.account_id JOIN client c ON a.location_of_branch = c.location_of_branch WHERE a.date < '1997-01-01' AND a.amount > 3000 \t----- bird -----\tfinancial",
    "103": " SELECT c.client_id FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN card t ON d.disposition_id = t.disposition_id JOIN account a ON t.account_id = a.account_id WHERE a.date = '1994-03-03'; \t----- bird -----\tfinancial",
    "104": " SELECT t.date_of_transaction, a.location_of_branch FROM transaction t JOIN account a ON t.account_id = a.account_id WHERE t.amount_of_money = 840 AND t.date_of_transaction BETWEEN '1998-10-01' AND '1998-10-31' AND a.date = (SELECT MAX(date) FROM account WHERE account_id = t.account_id); \t----- bird -----\tfinancial",
    "105": " SELECT d.location_of_branch, d.district_id FROM district d JOIN account ac ON d.location_of_branch = ac.location_of_branch WHERE ac.date = '1994-08-25' AND ac.type = 'loan'; \t----- bird -----\tfinancial",
    "106": " SELECT MAX(amount) AS biggest_transaction_amount FROM transaction JOIN client ON transaction.account_id = client.account_id JOIN card ON client.location_of_branch = card.location_of_branch WHERE card.issued = '1996-10-21'; \t----- bird -----\tfinancial",
    "107": " SELECT c.gender, a.location_of_branch, a.average_salary FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.location_of_branch = (     SELECT location_of_branch     FROM district     ORDER BY average_salary DESC     LIMIT 1 ) AND c.birth_date = (     SELECT MIN(birth_date)     FROM client     WHERE client_id = c.client_id ) GROUP BY c.client_id, a.location_of_branch, a.average_salary ORDER BY a.location_of_branch DESC, a.average_salary DESC LIMIT 1;\t----- bird -----\tfinancial",
    "108": " SELECT t.transaction_id, t.amount, t.date_of_transaction FROM transaction t JOIN account ac ON t.account_id = ac.account_id WHERE ac.account_id = (     SELECT account_id     FROM loan     ORDER BY amount DESC     LIMIT 1 ); \t----- bird -----\tfinancial",
    "109": " SELECT COUNT(DISTINCT client_id) FROM client WHERE location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 'Jesenik') AND gender = 'F'; \t----- bird -----\tfinancial",
    "110": " SELECT d.disposition_id FROM client c JOIN disposition ON c.client_id = disposition.client_id JOIN transaction t ON c.client_id = t.client_id WHERE t.amount = 5100 AND t.date LIKE '1998-09-02%' LIMIT 1; \t----- bird -----\tfinancial",
    "111": " SELECT COUNT(*) FROM account WHERE district_name = 'Litomerice' AND YEAR(date) = 1996; \t----- bird -----\tfinancial",
    "112": " SELECT d.district_name FROM client AS c JOIN district AS d ON c.location_of_branch = d.location_of_branch WHERE c.gender = 'F' AND c.birth_date = '1976-01-29'; \t----- bird -----\tfinancial",
    "113": " SELECT c.birth_date FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = 98832 AND l.date LIKE '1996/01/03%' LIMIT 1; \t----- bird -----\tfinancial",
    "114": " SELECT c.account_id FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'Prague' LIMIT 1; \t----- bird -----\tfinancial",
    "115": " SELECT     d.district_name,     c.gender,     COUNT(c.client_id) AS male_clients,     COUNT(c.client_id) * 100.0 / COUNT(DISTINCT c.client_id) AS percentage FROM     district d JOIN     client c ON d.location_of_branch = c.location_of_branch WHERE     d.region = 'A3' AND     d.number_of_inhabitants > 10000 GROUP BY     d.district_name,     c.gender ORDER BY     d.number_of_inhabitants DESC LIMIT 1; \t----- bird -----\tfinancial",
    "116": " SELECT     c.client_id,     a.account_id,     (t2.balance - t1.balance) / t1.balance * 100 AS increase_rate FROM     client c JOIN     account a ON c.location_of_branch = a.location_of_branch JOIN     transaction t1 ON a.account_id = t1.account_id AND t1.date = '1993-03-22' JOIN     transaction t2 ON a.account_id = t2.account_id AND t2.date = '1998-12-27' WHERE     d.loan_id = (SELECT MIN(loan_id) FROM loan WHERE date BETWEEN '1993-07-05' AND '1993-07-05'); \t----- bird -----\tfinancial",
    "117": " SELECT AVG(amount) * 100.0 / SUM(amount) AS percentage_fully_paid FROM loan WHERE status = 'A'; \t----- bird -----\tfinancial",
    "118": " SELECT     (SUM(CASE WHEN loan_amount < 100000 THEN 1 ELSE 0 END) * 100.0 / SUM(loan_amount)) AS percentage_of_accounts_running FROM     loan WHERE     loan_amount < 100000     AND status = 'C'; \t----- bird -----\tfinancial",
    "119": " SELECT account_id, district_name, district_region FROM account JOIN district ON account.location_of_branch = district.location_of_branch WHERE YEAR(date) = 1993 AND transaction.characterization_of_transaction LIKE '%POPLATEK PO OBRATU%'; \t----- bird -----\tfinancial",
    "120": " SELECT     a.account_id,     c.frequency FROM     account a JOIN     client c ON a.location_of_branch = c.location_of_branch WHERE     a.location_of_branch = 'east Bohemia' AND     a.date BETWEEN '1995-01-01' AND '2000-12-31' \t----- bird -----\tfinancial",
    "121": " SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.location_of_branch = d.location_of_branch WHERE d.district_name = 'Prachatice'; \t----- bird -----\tfinancial",
    "122": " SELECT d.district_name, r.region_name FROM district d JOIN district r ON d.location_of_branch = r.location_of_branch WHERE d.location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 4990);\t----- bird -----\tfinancial",
    "123": " SELECT     t.account_id,     d.district_name,     r.region_name FROM     account AS a JOIN     loan AS l ON a.account_id = l.account_id JOIN     district AS d ON a.location_of_branch = d.location_of_branch JOIN     region AS r ON d.region_name = r.region_name WHERE     l.amount > 300000; \t----- bird -----\tfinancial",
    "124": " SELECT loan.loan_id, district.district_name, district.average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.location_of_branch = district.location_of_branch WHERE loan.duration = 60; \t----- bird -----\tfinancial",
    "125": " SELECT     d.district_name,     s.state_name,     (         (             SELECT                 unemployment_rate_1996             FROM                 district AS d             WHERE                 d.location_of_branch = a.location_of_branch         ) -         (             SELECT                 unemployment_rate_1995             FROM                 district AS s             WHERE                 s.location_of_branch = a.location_of_branch         )     ) * 100 AS unemployment_rate_increment_percentage FROM     client AS a WHERE     a.client_id = loan.account_id     AND loan.status = 'D'; \t----- bird -----\tfinancial",
    "126": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE district_name = 'Decin') AS percentage_of_accounts FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Decin') AND date = '1993-01-01'; \t----- bird -----\tfinancial",
    "127": " SELECT account_id FROM account WHERE frequency ='monthly issuance';\t----- bird -----\tfinancial",
    "128": " SELECT     d.district_name,     COUNT(c.client_id) AS female_account_holders FROM     district d JOIN     client c ON d.location_of_branch = c.location_of_branch WHERE     c.gender = 'F' GROUP BY     d.district_name ORDER BY     female_account_holders DESC LIMIT 9; \t----- bird -----\tfinancial",
    "129": " SELECT district_name, SUM(amount) AS total_withdrawals FROM transaction WHERE type = 'VYDAJ' AND date LIKE '1996-01%' GROUP BY district_name ORDER BY total_withdrawals DESC LIMIT 10; \t----- bird -----\tfinancial",
    "130": " SELECT COUNT(*) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'South Bohemia') AND credit_card_id IS NULL; \t----- bird -----\tfinancial",
    "131": " SELECT d.district_name, MAX(l.amount) AS highest_active_loan FROM district d JOIN disposition ON d.location_of_branch = disposition.account_id JOIN loan l ON disposition.client_id = l.account_id WHERE l.status = 'Active' GROUP BY d.district_name ORDER BY highest_active_loan DESC LIMIT 1; \t----- bird -----\tfinancial",
    "132": " SELECT AVG(loans.amount) AS average_loan_amount_by_male_borrowers FROM loans JOIN clients ON loans.account_id = clients.account_id JOIN dispositions ON loans.disposition_id = dispositions.disposition_id WHERE clients.gender = 'M'; \t----- bird -----\tfinancial",
    "133": " SELECT d.location_of_branch, d.district_name FROM district d JOIN disposition ON d.location_of_branch = disposition.client_id JOIN loan ON loan.account_id = disposition.account_id JOIN order ON order.account_id = loan.account_id JOIN transaction ON transaction.account_id = loan.account_id WHERE YEAR(loan.date) = 1996 AND disposition.type = 'Unemployment' GROUP BY d.location_of_branch, d.district_name ORDER BY MAX(unemployment_rate) DESC LIMIT 1; \t----- bird -----\tfinancial",
    "134": " SELECT COUNT(DISTINCT account.account_id) AS total_accounts FROM account JOIN district ON account.location_of_branch = district.location_of_branch WHERE district.A16 = (SELECT MAX(A16) FROM district WHERE YEAR(district.district_name) = 1996);\t----- bird -----\tfinancial",
    "135": " SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'POPLATEK MESICNE' AND balance < 0; \t----- bird -----\tfinancial",
    "136": " SELECT COUNT(*) FROM loan WHERE account_id IN (     SELECT account_id     FROM account     WHERE location_of_branch = (         SELECT location_of_branch         FROM district         WHERE district_name = 'POPLATEK MESICNE'     )     AND date BETWEEN '1995-01-01' AND '1997-12-31'     AND amount >= 250000 ) AND status = 'APPROVED'; \t----- bird -----\tfinancial",
    "137": " SELECT COUNT(*) FROM account WHERE location_of_branch = 1 AND status = 'C'; \t----- bird -----\tfinancial",
    "138": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.A15 = (SELECT MAX(A15) FROM district WHERE d.district_name = (SELECT district_name FROM district ORDER BY no_of_committed_crimes_1995 DESC LIMIT 1)); \t----- bird -----\tfinancial",
    "139": " SELECT COUNT(*) FROM disposition WHERE type = 'OWNER'; \t----- bird -----\tfinancial",
    "140": " SELECT COUNT(*) FROM district WHERE district_name = 'Pisek'; \t----- bird -----\tfinancial",
    "141": " SELECT d.district_name, t.date_of_transaction FROM district d JOIN transaction t ON d.location_of_branch = t.account_id WHERE t.amount_of_money > 10000 AND t.date_of_transaction = '1997-01-01'; \t----- bird -----\tfinancial",
    "142": " SELECT t1.account_id, t1.account_name FROM account AS t1 JOIN order AS t2 ON t1.account_id = t2.account_id WHERE t2.characterization_of_the_payment = 'k_symbol = 'SIPO''; \t----- bird -----\tfinancial",
    "143": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'Gold District'; \t----- bird -----\tfinancial",
    "144": " SELECT AVG(t.amount) AS average_monthly_credit_card_withdrawal FROM transaction t JOIN account a ON t.account_id = a.account_id WHERE t.mode_of_transaction = 'credit card' AND a.date >= '2021-01-01' AND a.date < '2022-01-01'; \t----- bird -----\tfinancial",
    "145": " SELECT t.account_id, t.date, t.amount FROM transaction t JOIN account a ON t.account_id = a.account_id JOIN loan l ON t.account_id = l.account_id WHERE t.mode_of_transaction = 'credit card withdrawal' AND t.amount < (SELECT AVG(amount) FROM loan WHERE loan.date BETWEEN '1998-01-01' AND '1998-12-31') AND a.location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Operation = \\'VYBER KARTOU\\''); \t----- bird -----\tfinancial",
    "146": " SELECT c.client_id, c.gender, c.birth_date, c.location_of_branch, c.credit_card_id, c.type FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN card cc ON d.disposition_id = cc.disposition_id JOIN account a ON cc.account_id = a.account_id WHERE c.gender = 'F' AND c.location_of_branch IN (SELECT location_of_branch FROM district WHERE district_name = 'Some District'); \t----- bird -----\tfinancial",
    "147": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'South Bohemia' AND c.gender = 'F'; \t----- bird -----\tfinancial",
    "148": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date FROM account AS a JOIN disposition AS d ON a.account_id = d.account_id JOIN client AS c ON a.location_of_branch = c.location_of_branch WHERE c.gender = 'F' AND c.birth_date BETWEEN '1980-01-01' AND '1989-12-31' AND d.type = 'OWNER' AND a.district_name = 'Tabor'; \t----- bird -----\tfinancial",
    "149": " SELECT account_type FROM account WHERE account_type!= 'OWNER' \t----- bird -----\tfinancial",
    "150": " SELECT COUNT(DISTINCT account_id) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'North Bohemia') AND bank_of_partner = 'AB';\t----- bird -----\tfinancial",
    "151": " SELECT d.district_name FROM district d JOIN disposition ON d.location_of_branch = disposition.account_id JOIN loan ON loan.account_id = d.location_of_branch WHERE disposition.type = 'VYDAJ' AND loan.status = 'active'; \t----- bird -----\tfinancial",
    "152": " SELECT AVG(committed_crimes) FROM district WHERE number_of_inhabitants > 4000 AND region = 'A3' AND YEAR(date) = 1995 AND account_id IN (     SELECT account_id     FROM account     WHERE YEAR(date) >= 1997 );\t----- bird -----\tfinancial",
    "153": " SELECT COUNT(DISTINCT card.credit_card_id) FROM card JOIN disposition ON card.disposition_id = disposition.disposition_id JOIN client ON disposition.client_id = client.client_id JOIN account ON client.location_of_branch = account.location_of_branch WHERE account.type = 'OWNER'; \t----- bird -----\tfinancial",
    "154": " SELECT COUNT(*) FROM client WHERE gender = 'M' AND location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Hl.m. Praha'); \t----- bird -----\tfinancial",
    "155": " SELECT ( COUNT(CASE WHEN type = 'gold' AND issued_date < '1998' THEN 1 END) / COUNT(ALL type) ) * 100 AS percent_of_gold FROM card; \t----- bird -----\tfinancial",
    "156": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE c.account_id = (     SELECT account_id     FROM loan     ORDER BY amount DESC     LIMIT 1 ); \t----- bird -----\tfinancial",
    "157": " SELECT t2.no_of_committed_crimes_1995 FROM account AS t1 JOIN district AS t2 ON t1.location_of_branch = t2.location_of_branch WHERE t1.account_id = 532; \t----- bird -----\tfinancial",
    "158": " SELECT d.location_of_branch FROM district d JOIN order o ON d.location_of_branch = o.account_id WHERE o.order_id = 33333; \t----- bird -----\tfinancial",
    "159": " SELECT t1.transaction_id, t1.account_id, t1.date_of_transaction, t1.amount_of_money, t1.balance_after_transaction, t1.characterization_of_transaction, t1.bank_of_partner, t1.account_of_partner FROM transaction t1 JOIN order o ON t1.account_id = o.account_id JOIN client c ON o.account_id = c.account_id WHERE c.client_id = 3356 AND t1.mode_of_transaction = 'cash' AND t1.characterization_of_transaction = 'withdrawal'; \t----- bird -----\tfinancial",
    "160": " SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND EXISTS (     SELECT 1     FROM loan     WHERE loan.account_id = account.account_id     AND loan.amount < 200000 );\t----- bird -----\tfinancial",
    "161": " SELECT type FROM card WHERE client_id = 13539; \t----- bird -----\tfinancial",
    "162": " SELECT district_name FROM district WHERE location_of_branch = (SELECT client_id FROM client WHERE client_id = 3541);\t----- bird -----\tfinancial",
    "163": " SELECT d.district_name, COUNT(l.account_id) AS loan_count FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE l.status = 'A' GROUP BY d.district_name ORDER BY loan_count DESC LIMIT 1; \t----- bird -----\tfinancial",
    "164": " SELECT * FROM order WHERE order_id = 32423; \t----- bird -----\tfinancial",
    "165": " SELECT t.transaction_id, t.account_id, t.date_of_transaction, t.plus_minus_transaction, t.mode_of_transaction, t.amount_of_money, t.balance_after_transaction, t.characterization_of_transaction, t.bank_of_partner, t.account_of_partner FROM transaction t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE d.district_name = 'District 5'; \t----- bird -----\tfinancial",
    "166": " SELECT COUNT(*) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Jesenik'); \t----- bird -----\tfinancial",
    "167": " SELECT c.client_id FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN card cc ON d.disposition_id = cc.disposition_id WHERE cc.type = 'credit card' AND cc.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": " SELECT COUNT(DISTINCT c.client_id) * 100.0 / COUNT(DISTINCT d.client_id) FROM client AS c JOIN disposition AS d ON c.client_id = d.client_id JOIN district AS d2 ON d.location_of_branch = d2.location_of_branch WHERE d2.average_salary > 10000 AND d.gender = 'F'; \t----- bird -----\tfinancial",
    "169": " SELECT     (SUM(loan.amount) - SUM(loan.amount)) / SUM(loan.amount) * 100 AS growth_rate FROM     account AS acc JOIN     loan AS loan ON acc.account_id = loan.account_id JOIN     client AS cli ON acc.location_of_branch = cli.location_of_branch WHERE     cli.gender = 'M' AND     loan.date BETWEEN '1996-01-01' AND '1997-12-31'; \t----- bird -----\tfinancial",
    "170": " SELECT COUNT(*) FROM transaction WHERE transaction_type = 'withdrawal' AND account_id IN (     SELECT account_id     FROM disposition     WHERE type = 'credit card' ) AND date > '1995-01-01'; \t----- bird -----\tfinancial",
    "171": " SELECT SUM(committed_crimes) AS difference_in_crimes FROM district WHERE A16 = 'East Bohemia' AND A3 = 'North Bohemia' AND YEAR(date) = 1996; \t----- bird -----\tfinancial",
    "172": " SELECT COUNT(DISTINCT disposition_id) AS total_dispositions FROM disposition WHERE account_id BETWEEN 1 AND 10; \t----- bird -----\tfinancial",
    "173": " SELECT t.frequency, COUNT(t.transaction_id) AS transaction_count FROM account AS a JOIN transaction AS t ON a.account_id = t.account_id WHERE a.account_id = 3 GROUP BY t.frequency ORDER BY transaction_count DESC LIMIT 1; \t----- bird -----\tfinancial",
    "174": " SELECT birth_date FROM client WHERE client_id = 130; \t----- bird -----\tfinancial",
    "175": " SELECT COUNT(DISTINCT c.account_id) FROM account AS a JOIN disposition AS d ON a.account_id = d.account_id JOIN client AS c ON a.location_of_branch = c.location_of_branch WHERE d.type = 'POPLATEK PO OBRATU' AND c.request_for_statement = 'YES'; \t----- bird -----\tfinancial",
    "176": " SELECT c.amount_of_debt FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON l.account_id = c.account_id WHERE c.client_id = 992;  SELECT d.type FROM disposition d JOIN loan l ON l.account_id = d.account_id WHERE l.account_id = [SQL] SELECT account_id FROM transaction WHERE transaction_id = 12345; \t----- bird -----\tfinancial",
    "177": " SELECT SUM(t.amount) AS client_4_account_sum FROM account AS a JOIN transaction AS t ON a.account_id = t.account_id WHERE t.transaction_id = 851 AND a.client_id = 4;  SELECT c.gender FROM client AS c JOIN transaction AS t ON c.client_id = t.client_id WHERE t.transaction_id = 851 AND a.account_id = 4;\t----- bird -----\tfinancial",
    "178": " SELECT c.type FROM client c WHERE c.client_id = 9; \t----- bird -----\tfinancial",
    "179": " SELECT SUM(amount) FROM transaction WHERE account_id = 617 AND YEAR(date_of_transaction) = 1998; \t----- bird -----\tfinancial",
    "180": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.district_name = 'East Bohemia'; \t----- bird -----\tfinancial",
    "181": " SELECT c.client_id, c.gender, SUM(l.amount) AS total_loan FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id, c.gender ORDER BY total_loan DESC LIMIT 3; \t----- bird -----\tfinancial",
    "182": " SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND district_name = 'SIPO'; \t----- bird -----\tfinancial",
    "183": " SELECT COUNT(*) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Beroun') AND date > '1996-01-01'; \t----- bird -----\tfinancial",
    "184": " SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disposition ON client.client_id = disposition.client_id JOIN card ON disposition.disposition_id = card.disposition_id WHERE client.gender = 'F' AND card.type = 'junior credit card'; \t----- bird -----\tfinancial",
    "185": " SELECT COUNT(DISTINCT gender) * 100.0 / COUNT(*) AS female_percentage FROM client WHERE location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 'Prague_branch_account_id'); \t----- bird -----\tfinancial",
    "186": " SELECT COUNT(CASE WHEN clients.gender = 'M' AND transactions.characterization_of_transaction = 'Weekly statements' THEN 1 END) * 100.0 / COUNT(CASE WHEN transactions.characterization_of_transaction = 'Weekly statements' THEN 1 END) AS percentage_of_male_clients_requesting_weekly_statements FROM clients JOIN transactions ON clients.client_id = transactions.client_id WHERE transactions.characterization_of_transaction = 'Weekly statements'; \t----- bird -----\tfinancial",
    "187": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND c.type = 'Owner'; \t----- bird -----\tfinancial",
    "188": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' GROUP BY a.account_id, a.location_of_branch, a.frequency, a.date HAVING MIN(l.amount) = (SELECT MIN(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id); \t----- bird -----\tfinancial",
    "189": " SELECT a.account_id, c.gender, a.average_salary FROM account a JOIN client c ON a.location_of_branch = c.location_of_branch WHERE c.gender = 'F' ORDER BY c.birth_date DESC, a.average_salary ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": " SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": " SELECT COUNT(*) FROM loan WHERE duration = 24 AND frequency = 'POPLATEK TYDNE'; \t----- bird -----\tfinancial",
    "192": " SELECT AVG(loans.amount) FROM loans JOIN account ON loans.account_id = account.account_id JOIN transaction ON loans.account_id = transaction.account_id WHERE loans.status = 'C' AND transaction.characterization_of_transaction LIKE '%POPLATEK PO OBRATU%'; \t----- bird -----\tfinancial",
    "193": " SELECT c.client_id, d.district_name FROM client c JOIN disposition ON c.client_id = disposition.client_id JOIN district d ON disposition.account_id = d.location_of_branch WHERE disposition.type IN ('permanent order', 'loan application'); \t----- bird -----\tfinancial",
    "194": " SELECT c.client_id, c.birth_date, c.gender, d.type, l.amount, l.duration FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON c.client_id = l.account_id WHERE c.credit_card_id = (     SELECT credit_card_id     FROM card     WHERE type = 'gold' ) AND d.type = 'OWNER' AND l.status = 'approved'; \t----- bird -----\tfinancial",
    "195": " SELECT bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "196": " SELECT COUNT(DISTINCT a.molecule_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'cl' AND a.label = '-'; \t----- bird -----\ttoxicology",
    "197": " SELECT AVG(element = 'o') AS average_oxygen_atoms FROM atom WHERE bond_type = '-'; \t----- bird -----\ttoxicology",
    "198": " SELECT AVG(CASE WHEN m.label = '+ AND b.bond_type = '-' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic FROM atom m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON m.atom_id = c.atom_id AND c.bond_id = b.bond_id JOIN molecule mi ON m.molecule_id = mi.molecule_id WHERE mi.label = '+'; \t----- bird -----\ttoxicology",
    "199": " SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id 2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '-'; \t----- bird -----\ttoxicology",
    "200": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON b.atom_id = a1.atom_id JOIN atom a2 ON b.atom_id2 = a2.atom_id WHERE b.bond_type = '#'; \t----- bird -----\ttoxicology",
    "201": " SELECT AVG(element = 'c') * 100 AS percentage_carbon FROM atom WHERE bond_type = '='; \t----- bird -----\ttoxicology",
    "202": " SELECT COUNT(DISTINCT bond_id) AS triple_type_bonds FROM connected WHERE bond_type = '#'; \t----- bird -----\ttoxicology",
    "203": " SELECT COUNT(*) FROM atom WHERE element!= 'br'; \t----- bird -----\ttoxicology",
    "204": " SELECT COUNT(*) FROM molecule WHERE label = '+'; \t----- bird -----\ttoxicology",
    "205": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'c'; \t----- bird -----\ttoxicology",
    "206": " SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id 2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": " SELECT element FROM atom WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": " SELECT label, COUNT(*) AS popularity FROM atom WHERE element = 'h' GROUP BY label ORDER BY popularity DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "209": " SELECT bond_type FROM bond WHERE element = 'cl'; \t----- bird -----\ttoxicology",
    "210": " SELECT c.atom_id, c.atom_id_2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id_2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id_2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id_2 = a3.atom_id WHERE a1.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-') AND a2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-') AND a3.molecule_id = (SELECT molecule_id FROM molecule WHERE label = '-'); \t----- bird -----\ttoxicology",
    "212": " SELECT a.element, MIN(COUNT(a.element)) AS min_element_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' GROUP BY a.element; \t----- bird -----\ttoxicology",
    "213": " SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON b.bond_id = c2.bond_id WHERE c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20'; \t----- bird -----\ttoxicology",
    "214": " SELECT label FROM molecule WHERE molecule_id NOT IN (     SELECT atom.molecule_id     FROM atom     WHERE element = 'tin' ) AND label IN ('+', '-'); \t----- bird -----\ttoxicology",
    "215": " SELECT COUNT(DISTINCT a1.atom_id) AS iodine_atoms, COUNT(DISTINCT a2.atom_id) AS sulfur_atoms FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id = a2.atom_id WHERE b.bond_type = '-';  WITH iodine_elements AS (     SELECT atom_id     FROM atom     WHERE element = 'i' ), sulfur_elements AS (     SELECT atom_id     FROM atom     WHERE element ='s' )  SELECT COUNT(DISTINCT i.atom_id) AS iodine_atoms, COUNT(DISTINCT s.atom_id) AS sulfur_atoms FROM iodine_elements i JOIN connected c ON i.atom_id = c.atom_id JOIN sulfur_elements s ON s.atom_id = c.atom_id_2 WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "216": " SELECT c.atom_id, c.atom_id_2, b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id_2 = a2.atom_id WHERE a.element = 'C' AND a2.element = 'C' AND b.bond_type = '#'; \t----- bird -----\ttoxicology",
    "217": " SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN atom a2 ON c1.atom_id_2 = a2.atom_id JOIN bond b ON c1.bond_id = b.bond_id JOIN atom a3 ON b.molecule_id = a3.molecule_id JOIN molecule m ON a3.molecule_id = m.molecule_id WHERE m.label = 'TR181'; \t----- bird -----\ttoxicology",
    "218": " SELECT AVG(percentage) * 100 AS carcinogenic_percentage_without_fluorine FROM (     SELECT m.molecule_id, m.label, COUNT(a.element = 'f') AS fluorine_count     FROM molecule m     JOIN connected c ON m.molecule_id = c.molecule_id     JOIN atom a ON c.atom_id = a.atom_id     GROUP BY m.molecule_id, m.label     WHERE m.label = '+'     AND a.element = 'f'     UNION ALL     SELECT m.molecule_id, m.label, 0 AS fluorine_count     FROM molecule m     JOIN connected c ON m.molecule_id = c.molecule_id     JOIN atom a ON c.atom_id = a.atom_id     WHERE m.label = '+'     AND a.element!= 'f' ) subquery; \t----- bird -----\ttoxicology",
    "219": " SELECT AVG(percent) AS carcinogenic_percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.label = '+' AND bond.bond_type = '#'; \t----- bird -----\ttoxicology",
    "220": " SELECT e.element, r.rank, a.label FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id JOIN (     SELECT element, RANK() OVER (ORDER BY COUNT(*) DESC) AS rank     FROM atom     GROUP BY element ) AS r ON a.element = r.element WHERE m.label = 'TR000' ORDER BY e.element ASC LIMIT 3; \t----- bird -----\ttoxicology",
    "221": " SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE a.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6'; \t----- bird -----\ttoxicology",
    "222": " SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule; \t----- bird -----\ttoxicology",
    "223": " SELECT atom_id_1, atom_id_2 FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": " SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'atom_id2'; \t----- bird -----\ttoxicology",
    "225": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id_2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5; \t----- bird -----\ttoxicology",
    "226": " SELECT     100.0 * COUNT(CASE WHEN bond_type = '=' THEN 1 END) / COUNT(DISTINCT bond_id) AS percentage FROM     connected WHERE     atom_id = 'TR008'; \t----- bird -----\ttoxicology",
    "227": " SELECT     DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id)) AS percent FROM     molecule \t----- bird -----\ttoxicology",
    "228": " SELECT     (SELECT SUM(element = 'h') / COUNT(DISTINCT atom_id) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR206')) * 100 AS percent FROM     molecule WHERE     label = 'TR206'; \t----- bird -----\ttoxicology",
    "229": " SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000' \t----- bird -----\ttoxicology",
    "230": " SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060'; \t----- bird -----\ttoxicology",
    "231": " SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "232": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id_2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON b.atom_id = a1.atom_id JOIN atom a2 ON b.atom_id = a2.atom_id WHERE b.bond_type = '-' AND a1.element!= a2.element AND NOT EXISTS (     SELECT 1     FROM molecule     WHERE m.molecule_id = molecule.molecule_id     AND molecule.label = '-' ) ORDER BY m.label ASC LIMIT 3; \t----- bird -----\ttoxicology",
    "233": " SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR006' ORDER BY b.bond_type ASC LIMIT 2; \t----- bird -----\ttoxicology",
    "234": " SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12') AND atom_id2 IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12'); \t----- bird -----\ttoxicology",
    "235": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.atom_id = m.molecule_id WHERE a.element = 'br' AND m.label = '+'; \t----- bird -----\ttoxicology",
    "236": " SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id; \t----- bird -----\ttoxicology",
    "237": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = 'TR001_10'; \t----- bird -----\ttoxicology",
    "238": " SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#'; \t----- bird -----\ttoxicology",
    "239": " SELECT COUNT(DISTINCT connected.atom_id) AS connections_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 'TR%_19'; \t----- bird -----\ttoxicology",
    "240": " SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004'; \t----- bird -----\ttoxicology",
    "241": " SELECT COUNT(*) FROM molecule WHERE label = '-'; \t----- bird -----\ttoxicology",
    "242": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+'; \t----- bird -----\ttoxicology",
    "243": " SELECT b.bond_id, b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN connected c2 ON b.bond_id = c2.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n'; \t----- bird -----\ttoxicology",
    "244": " SELECT t1.molecule_id, t1.label FROM (     SELECT c.atom_id AS atom_id, c.atom_id_2 AS atom_id_2, b.bond_id, COUNT(b.bond_id) AS double_bonds_count     FROM connected AS c     JOIN atom AS a1 ON c.atom_id = a1.atom_id     JOIN bond AS b ON c.bond_id = b.bond_id     WHERE b.bond_type ='= '     GROUP BY c.atom_id, c.atom_id_2, b.bond_id ) AS t1 JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t2.label = 'carcinogenic' ORDER BY double_bonds_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "245": " SELECT AVG(b.bond_id) AS average_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element = 'i'; \t----- bird -----\ttoxicology",
    "246": " SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": " SELECT DISTINCT element FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM connected );\t----- bird -----\ttoxicology",
    "248": " SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": " SELECT atom.element FROM atom WHERE atom.molecule_id = 'TR144_8_19'; \t----- bird -----\ttoxicology",
    "250": " SELECT     m.molecule_id,     COUNT(b.bond_id) AS double_bonds_count FROM     molecule m JOIN     atom a ON m.molecule_id = a.molecule_id JOIN     bond b ON a.atom_id = b.atom_id WHERE     m.label = '+' GROUP BY     m.molecule_id ORDER BY     double_bonds_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "251": " SELECT DISTINCT element FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM connected     WHERE atom_id = (         SELECT atom_id         FROM connected         WHERE atom_id 2 = 'C60'     ) ) AND label = '+'; \t----- bird -----\ttoxicology",
    "252": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN atom AS a2 ON b1.atom_id_2 = a2.atom_id WHERE a2.element = 'pb';\t----- bird -----\ttoxicology",
    "253": " SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id 2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": " SELECT     (         SELECT             COUNT(DISTINCT b.element)         FROM             bond b             JOIN connected c ON b.bond_id = c.bond_id             JOIN atom a1 ON b.molecule_id = a1.molecule_id             JOIN atom a2 ON c.atom_id = a2.atom_id             JOIN molecule m ON a1.molecule_id = m.molecule_id             JOIN molecule m2 ON a2.molecule_id = m2.molecule_id         WHERE             a1.element = m.label             AND a2.element = m2.label     ) /     (         SELECT             COUNT(*)         FROM             bond     ) AS percentage_of_bonds_with_most_common_elements \t----- bird -----\ttoxicology",
    "255": " SELECT     AVG(proportion) * 100 FROM     connected WHERE     bond_type = '-'; \t----- bird -----\ttoxicology",
    "256": " SELECT SUM(CASE WHEN element IN ('c', 'h') THEN 1 ELSE 0 END) AS total_carbon_hydrogen_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id 2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id; \t----- bird -----\ttoxicology",
    "257": " SELECT atom_id2 FROM connected WHERE atom_id = (     SELECT atom_id     FROM atom     WHERE element ='s' );\t----- bird -----\ttoxicology",
    "258": " SELECT b.bond_type FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": " SELECT COUNT(DISTINCT element) AS num_elements FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM connected     WHERE bond_type = '-'; \t----- bird -----\ttoxicology",
    "260": " SELECT SUM(a.atom_count) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '#3' AND (a.element = 'p' OR a.element = 'br') \t----- bird -----\ttoxicology",
    "261": " SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id_2 = c.atom_id_2 JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+'; \t----- bird -----\ttoxicology",
    "262": " SELECT m.molecule_id FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id WHERE c.bond_id = (     SELECT b.bond_id     FROM bond b     JOIN connected c2 ON b.molecule_id = c2.molecule_id     WHERE c2.atom_id = 'atom_id_1' AND c2.atom_id_2 = 'atom_id_2' ) AND m.label = '-'; \t----- bird -----\ttoxicology",
    "263": " SELECT m.label, AVG(CASE WHEN b.bond_type = '-' THEN e.element = 'cl' ELSE 0 END) * 100.0 AS percent_chlorine FROM molecule m JOIN connected c ON m.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom e ON b.molecule_id = e.molecule_id GROUP BY m.label HAVING COUNT(DISTINCT b.bond_type) = 1; \t----- bird -----\ttoxicology",
    "264": " SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002'); \t----- bird -----\ttoxicology",
    "265": " SELECT molecule_id FROM molecule WHERE label = '-'; \t----- bird -----\ttoxicology",
    "266": " SELECT SUM(label) AS total_carcinogenic_molecules FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030'; \t----- bird -----\ttoxicology",
    "267": " SELECT m.label, b.bond_type FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.molecule_id LIKE 'TR%00' AND m.molecule_id <= 'TR050';\t----- bird -----\ttoxicology",
    "268": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_10_11' \t----- bird -----\ttoxicology",
    "269": " SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id_2 = atom.atom_id WHERE atom.element = 'i'; \t----- bird -----\ttoxicology",
    "270": " SELECT label FROM molecule WHERE element = 'ca'; \t----- bird -----\ttoxicology",
    "271": " SELECT b.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id_2 JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id_2 = a2.atom_id WHERE b.bond_id = 'TR001_1_8' AND (a1.element = 'cl' OR a2.element = 'cl') AND (a1.element = 'c' OR a2.element = 'c'); \t----- bird -----\ttoxicology",
    "272": " SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type = '#3' AND m.label = '-'; \t----- bird -----\ttoxicology",
    "273": " SELECT AVG(percentage) AS chlorine_percentage_in_carcinogenic_molecules FROM (     SELECT         m.molecule_id,         COUNT(a.element) AS element_count,         SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) AS chlorine_count     FROM         molecule m     JOIN         connected c ON m.molecule_id = c.molecule_id     JOIN         atom a ON c.atom_id = a.atom_id     WHERE         m.label = '+'     GROUP BY         m.molecule_id ) subquery \t----- bird -----\ttoxicology",
    "274": " SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id_2 JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001'; \t----- bird -----\ttoxicology",
    "275": " SELECT \"molecule id\" FROM \"molecule\" WHERE \"label\" = 'double bond'; \t----- bird -----\ttoxicology",
    "276": " SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id = a2.atom_id WHERE b.bond_type = '#'; \t----- bird -----\ttoxicology",
    "277": " SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id_2 JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": " SELECT COUNT(*) FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond.bond_type = '-' AND atom.label = '-'; \t----- bird -----\ttoxicology",
    "279": " SELECT label FROM connected WHERE bond_id = 'TR001_10_11'; \t----- bird -----\ttoxicology",
    "280": " SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '#'; \t----- bird -----\ttoxicology",
    "281": " SELECT m.label, a.element FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.label = '+' AND a.atom_id = (SELECT atom_id FROM connected WHERE atom_id = (SELECT atom_id FROM connected WHERE atom_id = (SELECT atom_id FROM connected WHERE atom_id = (SELECT atom_id FROM connected WHERE atom_id = '4')))) \t----- bird -----\ttoxicology",
    "282": " SELECT \"label\", ratio FROM (SELECT \"molecule id\", \"label\", COUNT(CASE WHEN \"element\" = 'h' THEN 1 END) AS ratio FROM \"molecule\" WHERE \"molecule id\" = 'TR006' GROUP BY \"molecule id\", \"label\") AS subquery WHERE ratio IS NOT NULL; \t----- bird -----\ttoxicology",
    "283": " SELECT label FROM molecule WHERE element = 'ca'; \t----- bird -----\ttoxicology",
    "284": " SELECT bond_type FROM bond WHERE element = 'c';\t----- bird -----\ttoxicology",
    "285": " SELECT atom.element FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON atom.atom_id = c2.atom_id_2 JOIN bond AS b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": " SELECT     100.0 * SUM(CASE WHEN bond_type = '#3' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id) FROM     atom,     bond,     connected WHERE     bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '#3'); \t----- bird -----\ttoxicology",
    "287": " SELECT     molecule_id,     COUNT(CASE WHEN bond_type ='='THEN 1 END) * 100.0 / SUM(COUNT(CASE WHEN bond_type ='='THEN 1 END)) AS percent FROM     connected WHERE     atom_id = 'TR047' GROUP BY     molecule_id; \t----- bird -----\ttoxicology",
    "288": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = 'TR001_1'; \t----- bird -----\ttoxicology",
    "289": " SELECT label FROM molecule WHERE molecule_id = 'TR151'; \t----- bird -----\ttoxicology",
    "290": " SELECT element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM connected     WHERE atom_id = 'TR151' AND atom_id_2 = 'TR151' );\t----- bird -----\ttoxicology",
    "291": " SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'; \t----- bird -----\ttoxicology",
    "292": " SELECT a1.atom_id, a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON a1.atom_id = c2.atom_id_2 JOIN bond b ON c1.bond_id = b.bond_id JOIN bond b2 ON c2.bond_id = b2.bond_id WHERE a1.molecule_id LIKE 'TR%10' AND a1.molecule_id LIKE 'TR%50' AND a1.element = 'c'; \t----- bird -----\ttoxicology",
    "293": " SELECT COUNT(DISTINCT connected.atom_id) AS total_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id_1 JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'; \t----- bird -----\ttoxicology",
    "294": " SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id JOIN molecule ml ON a2.molecule_id = ml.molecule_id WHERE m.label = '+' AND ml.label ='='AND a1.element = 'C' AND a2.element = 'C'; \t----- bird -----\ttoxicology",
    "295": " SELECT COUNT(DISTINCT connected.atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id_1 JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'h'; \t----- bird -----\ttoxicology",
    "296": " SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE a.atom_id = 'TR000_1' AND b.bond_type = 'TR000_1_2' AND d.atom_id = 'TR000_1'; \t----- bird -----\ttoxicology",
    "297": " SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type NOT IN ('C-C', 'C-O', 'C-N', 'C-S', 'C-Cl', 'C-Br', 'C-I') AND m.label!= '-'; \t----- bird -----\ttoxicology",
    "298": " SELECT     m.molecule_id,     (COUNT(CASE WHEN c.label = '+' AND a.element = 'h' THEN 1 END) / COUNT(DISTINCT m.molecule_id)) * 100.0 AS percentage FROM     molecule m JOIN     connected c ON m.molecule_id = c.atom_id JOIN     atom a ON m.molecule_id = a.molecule_id GROUP BY     m.molecule_id; \t----- bird -----\ttoxicology",
    "299": " SELECT label FROM molecule WHERE molecule_id = 'TR124'; \t----- bird -----\ttoxicology",
    "300": " SELECT a1.atom_id, a1.element FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON b.bond_id = c2.bond_id WHERE c2.molecule_id = 'TR186'; \t----- bird -----\ttoxicology",
    "301": " SELECT bond_type FROM bond WHERE molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_2_4' LIMIT 1; \t----- bird -----\ttoxicology",
    "303": " SELECT COUNT(DISTINCT b.bond_id) AS double_bonds FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id_2 JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR006';  SELECT label FROM molecule WHERE molecule_id = 'TR006'; \t----- bird -----\ttoxicology",
    "304": " SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o','s', 'n', 'p', 'na', 'br', 'f', 'i','sn', 'pb', 'te', 'ca'); \t----- bird -----\ttoxicology",
    "305": " SELECT b.bond_id, a1.atom_id, a2.atom_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id ='molecule_id_1' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id ='molecule_id_2' JOIN atom a1 ON c1.atom_id_2 = a1.atom_id JOIN atom a2 ON c2.atom_id_2 = a2.atom_id WHERE b.bond_type = '-'; \t----- bird -----\ttoxicology",
    "306": " SELECT m.label, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_type = '#'; \t----- bird -----\ttoxicology",
    "307": " SELECT a1.element FROM atom AS a1 JOIN bond AS b ON a1.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id WHERE c.atom_id = 'TR000_2' AND c.atom_id2 = 'TR000_3'; \t----- bird -----\ttoxicology",
    "308": " SELECT COUNT(DISTINCT b.bond_id) AS chlorine_bonds FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id_2 = b.atom_id WHERE a.element = 'cl'; \t----- bird -----\ttoxicology",
    "309": " SELECT a.atom_id, COUNT(b.bond_type) AS bond_types FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id; \t----- bird -----\ttoxicology",
    "310": " SELECT COUNT(DISTINCT m.molecule_id) AS double_bonds_count, COUNT(CASE WHEN b.bond_type ='='AND m.label = '+' THEN 1 END) AS carcinogenic_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type ='='AND m.label = '+'; \t----- bird -----\ttoxicology",
    "311": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element!='s' AND NOT EXISTS (     SELECT 1     FROM bond AS b     JOIN connected AS c ON b.bond_id = c.bond_id     JOIN atom AS d ON c.atom_id = d.atom_id     WHERE d.element ='s' );\t----- bird -----\ttoxicology",
    "312": " SELECT label FROM connected WHERE atom_id = 'TR001_2_4' AND atom_id2 = 'TR001_2_4' AND bond_id = 'TR001_2_4'; \t----- bird -----\ttoxicology",
    "313": " SELECT COUNT(DISTINCT a1.atom_id) FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN molecule AS m1 ON b1.molecule_id = m1.molecule_id WHERE m1.molecule_id = 'TR001'; \t----- bird -----\ttoxicology",
    "314": " SELECT COUNT(DISTINCT bond_id) AS single_bonds_count FROM connected WHERE bond_type = '-'; \t----- bird -----\ttoxicology",
    "315": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON m.molecule_id = a1.molecule_id AND a1.element = 'C' JOIN atom a2 ON c.atom_id = a2.atom_id AND a2.element = 'L' WHERE a1.molecule_id = a2.molecule_id AND a1.label = '+' AND a2.label = '+'; \t----- bird -----\ttoxicology",
    "316": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'C' AND a2.element = 'C' AND NOT EXISTS (     SELECT 1     FROM connected c2     WHERE c2.molecule_id = m.molecule_id     AND c2.atom_id = a1.atom_id     AND c2.atom_id2 = a2.atom_id     AND c2.bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'carcinogenic'     ) ) \t----- bird -----\ttoxicology",
    "317": " SELECT AVG(percentage) AS carcinogenic_chlorine_percentage FROM (     SELECT         m.molecule_id,         COUNT(CASE WHEN a.element = 'Cl' AND m.label = '+' THEN 1 END) AS carcinogenic_chlorine_count     FROM         molecule m     JOIN         atom a ON m.molecule_id = a.molecule_id     GROUP BY         m.molecule_id ) subquery; \t----- bird -----\ttoxicology",
    "318": " SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'; \t----- bird -----\ttoxicology",
    "319": " SELECT COUNT(DISTINCT element) FROM connected WHERE bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": " SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id_2 WHERE c1.atom_id = 'TR000_1' AND c2.atom_id = 'TR000_2'; \t----- bird -----\ttoxicology",
    "321": " SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = 'TR000_2' JOIN connected c2 ON c2.atom_id_2 = 'TR000_4' JOIN atom a ON a.atom_id = c1.atom_id JOIN atom a2 ON a2.atom_id = c2.atom_id_2 JOIN bond b ON b.bond_id = c1.bond_id JOIN bond b2 ON b2.bond_id = c2.bond_id WHERE a.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id; \t----- bird -----\ttoxicology",
    "322": " SELECT atom.element FROM atom WHERE atom.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": " SELECT label FROM molecule WHERE molecule_id = 'TR000'; \t----- bird -----\ttoxicology",
    "324": " SELECT m.molecule_id, AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 100.0 AS percentage     FROM molecule m     JOIN bond b ON m.molecule_id = b.molecule_id     GROUP BY m.molecule_id; \t----- bird -----\ttoxicology",
    "325": " SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON c.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE m.label = '+' AND b.element = 'n'; \t----- bird -----\ttoxicology",
    "326": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE m.label ='sulphur' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "327": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT a1.atom_id) > 5 AND COUNT(DISTINCT a2.atom_id) > 5; \t----- bird -----\ttoxicology",
    "328": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '='; \t----- bird -----\ttoxicology",
    "329": " SELECT m.molecule_id, m.label, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id GROUP BY m.molecule_id, m.label ORDER BY atom_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "330": " SELECT AVG(percentage) FROM (     SELECT         m.molecule_id,         COUNT(CASE WHEN c.label = '+' AND m.element = 'h' AND b.bond_type = '#' THEN 1 END) AS carcinogenic_count,         COUNT(c.atom_id) AS total_atoms     FROM         molecule m     JOIN         connected c ON m.molecule_id = c.atom_id     JOIN         bond b ON c.bond_id = b.bond_id     WHERE         b.bond_type = '#'     GROUP BY         m.molecule_id ) subquery \t----- bird -----\ttoxicology",
    "331": " SELECT COUNT(DISTINCT label) AS carcinogenic_molecules FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": " SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-'; \t----- bird -----\ttoxicology",
    "333": " SELECT COUNT(DISTINCT atom.atom_id) AS carbon_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR008'; \t----- bird -----\ttoxicology",
    "334": " SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = 'TR004_7' JOIN molecule AS m ON c.bond_id = m.molecule_id WHERE m.label = '-' AND a.molecule_id = m.molecule_id; \t----- bird -----\ttoxicology",
    "335": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": " SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON c1.atom_id = molecule.molecule_id JOIN connected AS c2 ON c2.atom_id_2 = c1.atom_id JOIN bond AS b ON b.bond_id = c1.bond_id WHERE b.bond_type = '#'; \t----- bird -----\ttoxicology",
    "337": " SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN molecule AS m1 ON b1.molecule_id = m1.molecule_id WHERE m1.label = 'TR012' AND b1.bond_type ='= ';\t----- bird -----\ttoxicology",
    "339": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id WHERE m.label = '+' AND a1.element = 'o'; \t----- bird -----\ttoxicology",
    "340": " SELECT c.name, c.cardKingdomFoilId, c.cardKingdomId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%incredibly powerful foils%' AND c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL; \t----- bird -----\tcard_games",
    "341": " SELECT c.unique_id_number, c.name, c.availability FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%borderless%' AND c.card_kingdom_id IS NULL AND c.card_kingdom_foil_id IS NULL; \t----- bird -----\tcard_games",
    "342": " SELECT name, MAX(faceConvertedManaCost) AS max_face_converted_mana_cost FROM cards WHERE faceConvertedManaCost > 0 GROUP BY name ORDER BY max_face_converted_mana_cost DESC; \t----- bird -----\tcard_games",
    "343": " SELECT c.name, c.face_converted_mana_cost, c.rec_rank_in_edh FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE s.frame_version = 2015 AND c.rec_rank_in_edh < 100 AND f.language = 'English' AND l.status = 'Legal'; \t----- bird -----\tcard_games",
    "344": " SELECT c.name, c.rarity, c.format, c.status FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity ='mythic' AND l.status = 'Banned' AND f.language = 'English' AND c.format = 'gladiator'; \t----- bird -----\tcard_games",
    "345": " SELECT l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.type = 'Artifact' AND c.side IS NULL AND c.format = 'vintage';\t----- bird -----\tcard_games",
    "346": " SELECT c.unique_id_number, c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power = '*' AND c.format = 'commander' AND l.status = 'Legal'; \t----- bird -----\tcard_games",
    "347": " SELECT c.unique_id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN ruling r ON c.uuid = r.uuid WHERE fd.flavor_text LIKE '%Stephen Daniel%' AND l.has_content_warning = 1 AND r.uuid IS NOT NULL; \t----- bird -----\tcard_games",
    "348": " SELECT * FROM ruling WHERE uuid = '74s'; \t----- bird -----\tcard_games",
    "349": " SELECT c.name, c.artist, CASE WHEN r.isPromo = 1 THEN 'Promotional Printing' ELSE '' END AS is_promotional FROM cards c JOIN ruling r ON c.uuid = r.uuid GROUP BY c.name, c.artist ORDER BY COUNT(r.uuid) DESC LIMIT 1; \t----- bird -----\tcard_games",
    "350": " SELECT f.language, f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Annul numbered 29'; \t----- bird -----\tcard_games",
    "351": " SELECT c.name, c.flavor_text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Japanese'; \t----- bird -----\tcard_games",
    "352": " SELECT SUM(id) / (SELECT COUNT(id) FROM foreign_data WHERE language = 'Chinese Simplified') * 100 AS percentage_chinese_simplified FROM foreign_data WHERE language = 'Chinese Simplified'; \t----- bird -----\tcard_games",
    "353": " SELECT s.name, SUM(ct.totalSetSize) AS total_cards FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.multiverseid = fd.uuid WHERE tr.language = 'Italian' GROUP BY s.name ORDER BY total_cards DESC; \t----- bird -----\tcard_games",
    "354": " SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": " SELECT keywords FROM cards WHERE name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "356": " SELECT COUNT(*) FROM cards WHERE keywords = 'infinite power'; \t----- bird -----\tcard_games",
    "357": " SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": " SELECT \"border Color\" FROM \"cards\" WHERE \"name\" = 'Ancestor''s Chosen'; \t----- bird -----\tcard_games",
    "359": " SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "360": " SELECT DISTINCT set.language FROM foreign_data AS fd JOIN set_translations AS st ON fd.uuid = st.set_code JOIN sets AS s ON st.set_code = s.code WHERE s.name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "361": " SELECT COUNT(*) FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status ='restricted' AND cards.is_textless = 0; \t----- bird -----\tcard_games",
    "362": " SELECT ruling.text FROM ruling WHERE ruling.uuid = (     SELECT cards.uuid     FROM cards     WHERE cards.name = 'Condemn' );\t----- bird -----\tcard_games",
    "363": " SELECT COUNT(*) FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE legalities.status ='restricted' AND foreign_data.isStarter = 1; \t----- bird -----\tcard_games",
    "364": " SELECT status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": " SELECT \"type\" FROM \"cards\" WHERE \"name\" = 'Benalish Knight'; \t----- bird -----\tcard_games",
    "366": " SELECT ruling.text AS rule_of_playing_card FROM ruling WHERE ruling.uuid = (     SELECT cards.uuid     FROM cards     WHERE cards.name = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": " SELECT DISTINCT artist FROM cards WHERE flavor_text LIKE '%Phyrexian%'; \t----- bird -----\tcard_games",
    "368": " SELECT \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t\tWHERE \t\t\tborderColor = 'borderless' \t) AS borderless_count, \tCOUNT(*) AS total_cards \t* 100.0 / \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t) AS percentage FROM \tforeign_data \t----- bird -----\tcard_games",
    "369": " SELECT COUNT(*) FROM foreign_data WHERE flavor_text LIKE '%German%' AND is_reprint = 1; \t----- bird -----\tcard_games",
    "370": " SELECT COUNT(*) FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.border_color = 'borderless' AND cards.language = 'Russian'; \t----- bird -----\tcard_games",
    "371": " SELECT \t( \t\tCOUNT(CASE \t\t\tWHEN foreign_data.language = 'French' AND foreign_data.is_story_spotlight = 1 \t\t\tTHEN 1 \t\t\tELSE 0 \t\tEND) \t\t/ \t\tCOUNT(CASE \t\t\tWHEN foreign_data.is_story_spotlight = 1 \t\t\tTHEN 1 \t\t\tELSE 0 \t\tEND) \t) * 100 AS percentage_french_story_spotlight FROM \tforeign_data \t----- bird -----\tcard_games",
    "372": " SELECT COUNT(*) FROM cards WHERE toughness = '99'; \t----- bird -----\tcard_games",
    "373": " SELECT name FROM cards WHERE artist = 'Aaron Boyd'; \t----- bird -----\tcard_games",
    "374": " SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo'; \t----- bird -----\tcard_games",
    "375": " SELECT c.unique_id_number, c.converted_mana_cost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text = 'Converted Mana Cost: 0' AND c.converted_mana_cost = 0; \t----- bird -----\tcard_games",
    "376": " SELECT c.name, c.layout FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%flying%' AND c.keywords LIKE '%flying%'; \t----- bird -----\tcard_games",
    "377": " SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype!= 'Angel'; \t----- bird -----\tcard_games",
    "378": " SELECT c.unique_id_number, c.card_kingdom_foil_id, c.card_kingdom_id FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%incredibly powerful%' AND (c.card_kingdom_foil_id IS NOT NULL OR c.card_kingdom_id IS NOT NULL) GROUP BY c.unique_id_number, c.card_kingdom_foil_id, c.card_kingdom_id HAVING COUNT(DISTINCT f.language) > 1; \t----- bird -----\tcard_games",
    "379": " SELECT c.unique_id_number, c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%duel deck a%' \t----- bird -----\tcard_games",
    "380": " SELECT rec_rank FROM cards WHERE frame_version = '2015'; \t----- bird -----\tcard_games",
    "381": " SELECT DISTINCT artist FROM cards WHERE language = 'Chinese Simplified'; \t----- bird -----\tcard_games",
    "382": " SELECT c.name, c.availability, f.flavor_text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.availability = 'paper' AND f.language = 'Japanese'; \t----- bird -----\tcard_games",
    "383": " SELECT COUNT(*) FROM cards WHERE status = 'Banned' AND borderColor = 'white';\t----- bird -----\tcard_games",
    "384": " SELECT f.uuid, f.language FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.format = 'legacy'; \t----- bird -----\tcard_games",
    "385": " SELECT text FROM ruling WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality');\t----- bird -----\tcard_games",
    "386": " SELECT COUNT(*) AS total_cards, legality_status FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE frame_version = 'future' AND status = 'legal'; \t----- bird -----\tcard_games",
    "387": " SELECT c.name, c.color_identity FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'English' AND f.name = 'OGW';\t----- bird -----\tcard_games",
    "388": " SELECT DISTINCT f.uuid, s.language, st.translation FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN sets s ON l.uuid = s.uuid JOIN set_translations st ON s.code = st.set_code WHERE s.code = '10E' AND l.status = 'legal' AND st.translation LIKE '%converted mana of 5%'; \t----- bird -----\tcard_games",
    "389": " SELECT c.name, r.date FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf'; \t----- bird -----\tcard_games",
    "390": " SELECT c.color_identity, s.format FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN sets s ON f.set_code = s.code WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": " SELECT c.name, c.colors, f.language, f.flavor_text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.original_type = 'Artifact' AND c.colors = 'B' AND f.language IS NOT NULL; \t----- bird -----\tcard_games",
    "392": " SELECT c.name, r.date FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC; \t----- bird -----\tcard_games",
    "393": " SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomId IS NULL OR cardKingdomFoilId IS NOT NULL) AND rarity = 'Non-Powerful'; \t----- bird -----\tcard_games",
    "394": " SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL); \t----- bird -----\tcard_games",
    "395": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE foreign_data.flavor_text LIKE '%UDON%' AND legalities.status = 'available in mtgo' AND cards.hand = -1; \t----- bird -----\tcard_games",
    "396": " SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1; \t----- bird -----\tcard_games",
    "397": " SELECT converted_mana_cost FROM cards WHERE layout = 'normal' AND frame_version = 2003 AND borderColor = 'black' AND (availability ='mtgo,paper' OR availability = 'paper') \t----- bird -----\tcard_games",
    "398": " SELECT SUM(converted_mana_cost) AS total_unconverted_mana_cost FROM cards WHERE artist = 'Rob Alexander'; \t----- bird -----\tcard_games",
    "399": " SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'Spanish'; \t----- bird -----\tcard_games",
    "401": " SELECT \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t\tWHERE \t\t\tframeEffects = 'legendary' \t\t\tAND isOnlineOnly = 1 \t) / \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t\tWHERE \t\t\tframeEffects = 'legendary' \t) AS percentage FROM \tforeign_data \t----- bird -----\tcard_games",
    "402": " SELECT     COUNT(id) AS story_spotlight_count,     COUNT(id) AS textless_count,     (COUNT(id) AS story_spotlight_count * 100.0 / COUNT(id) AS textless_count) AS percentage FROM     cards WHERE     isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": " SELECT f.name, (COUNT(c.uuid) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE f.language = 'Spanish' GROUP BY f.name ORDER BY f.name; \t----- bird -----\tcard_games",
    "404": " SELECT DISTINCT language FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.base_set_size = 309; \t----- bird -----\tcard_games",
    "405": " SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.set_code JOIN foreign_data ON sets.id = foreign_data.uuid WHERE foreign_data.language = 'Portuguese (Brasil)' AND sets.block = 'Commander'; \t----- bird -----\tcard_games",
    "406": " SELECT c.unique_id_number, c.artist, c.ascii_Name, c.availability, c.border_Color, c.card_Kingdom_Foil_Id, c.card_Kingdom_Id, c.color_Identity, c.color_Indicator, c.colors, c.converted_Mana_Cost, c.duel_Deck, c.rec_Rank_in_edh, c.face_Converted_Mana_Cost, c.face_Name, c.flavor_Name, c.flavor_Text, c.frame_Effects, c.frame_Version, c.hand, c.has_Alternative_Deck_Limit, c.has_Content_Warning, c.has_Foil, c.has_Non_Foil, c.is_Alternative, c.is_Full_Art, c.is_Online_Only, c.is_Oversized, c.is_Promotion, c.is_Reprint, c.is_Reserved, c.is_Starter, c.is_Story_Spotlight, c.is_Text_less, c.is_Time_shifted, c.keywords, c.layout, c.leadership_Skills, c.life, c.loyalty, c.mana_Cost, c.mcmId, c.mcmMetaId, c.mtgArenaId, c.mtgjsonV4Id, c.mtgoFoilId, c.mtgoId, c.multiverseId, c.name, c.number, c.original_Release_Date, c.original_Text, c.original_Type, c.other_Face_Ids, c.power, c.printings, c.promo_Types, c.purchase_Urls, c.rarity, c.scryfallId, c.scryfallIllustrationId, c.scryfallOracleId, c.Set_Code, c.side, c.subtypes, c.super_types, c.tcg_player_ProductId, c.text, c.toughness, c.type, c.types, c.uuid, c.variations, c.watermark FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": " SELECT DISTINCT type FROM cards WHERE subtypes IS NOT NULL AND supertypes IS NOT NULL AND language = 'German'; \t----- bird -----\tcard_games",
    "408": " SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*'; \t----- bird -----\tcard_games",
    "409": " SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text = 'This is a triggered mana ability.' AND side IS NULL; \t----- bird -----\tcard_games",
    "410": " SELECT c.unique_id_number FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.artist = 'Erica Yang' AND s.is_paper = 1 AND l.status = 'pauper'; \t----- bird -----\tcard_games",
    "411": " SELECT artist FROM cards WHERE ascii_Name = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": " SELECT f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Matthew D. Wilson' AND c.type = 'Creature' AND c.layout = 'Normal' AND c.border_color = 'black'; \t----- bird -----\tcard_games",
    "413": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN ruling ON cards.uuid = ruling.uuid WHERE ruling.text LIKE '%01/02/2007%' AND ruling.rarity = 'rare'; \t----- bird -----\tcard_games",
    "414": " SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.name = 'Ravnica' AND tr.language IS NOT NULL; \t----- bird -----\tcard_games",
    "415": " SELECT \t( \t\tCOUNT(CASE \t\t\tWHEN hasContentWarning = 0 AND format = 'commander' AND Status = 'legal' THEN 1 \t\t\tELSE 0 \t\tEND) / COUNT(*) \t) * 100 AS percentage FROM cards \t----- bird -----\tcard_games",
    "416": " SELECT \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t\tWHERE \t\t\tpower IS NULL AND \t\t\tlanguage = 'French' \t) / \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tcards \t\tWHERE \t\t\tpower IS NULL OR power = '*' \t) AS percentage \t----- bird -----\tcard_games",
    "417": " SELECT \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tforeign_data \t\tWHERE \t\t\tlanguage = 'Japanese' \t\tAND \t\t\ttype = 'expansion' \t) / \t( \t\tSELECT \t\t\tCOUNT(*) \t\tFROM \t\t\tforeign_data \t\tWHERE \t\t\tlanguage = 'Japanese' \t) AS percentage \t----- bird -----\tcard_games",
    "418": " SELECT \"availability\" FROM \"cards\" WHERE \"artist\" = 'Daren Bader'; \t----- bird -----\tcard_games",
    "419": " SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000; \t----- bird -----\tcard_games",
    "420": " SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1; \t----- bird -----\tcard_games",
    "421": " SELECT c.name, c.power, c.promoTypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.promoTypes = 'arenaleague' ORDER BY c.name ASC LIMIT 3; \t----- bird -----\tcard_games",
    "422": " SELECT f.language FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.multiverse = 149934;\t----- bird -----\tcard_games",
    "423": " SELECT c1.uuid, c1.cardKingdomFoilId, c1.cardKingdomId, c1.name, c1.flavorText, c1.language, c2.name, c2.flavorText, c2.language FROM cards c1 JOIN foreign_data f ON c1.uuid = f.uuid JOIN cards c2 ON c2.uuid = f.uuid WHERE c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL ORDER BY c1.cardKingdomFoilId ASC LIMIT 3; \t----- bird -----\tcard_games",
    "424": " SELECT \tDIVIDE( \t\tCOUNT( \t\t\tCASE \t\t\t\tWHEN isTextless = 1 AND layout = 'normal' THEN 1 \t\t\t\tELSE NULL \t\t\tEND \t\t), \t\tCOUNT(*) \t) * 100 FROM \tcards \t----- bird -----\tcard_games",
    "425": " SELECT c.unique_id_number, c.name, c.subtypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND fd.flavor_text IS NULL AND s.is_foil_only = 0 AND s.is_foreign_only = 0 AND s.is_non_foil_only = 0 AND s.is_online_only = 0 AND s.is_partial_preview = 0 AND s.total_set_size > 0 GROUP BY c.unique_id_number, c.name, c.subtypes HAVING COUNT(DISTINCT c.face_converted_mana_cost) = 1; \t----- bird -----\tcard_games",
    "426": " SELECT s.name FROM sets s WHERE s.mtgoCode IS NULL OR s.mtgoCode = '' ORDER BY s.name ASC LIMIT 3; \t----- bird -----\tcard_games",
    "427": " SELECT DISTINCT language FROM foreign_data WHERE uuid IN (     SELECT cards.uuid     FROM cards     JOIN sets ON cards.set_code = sets.code     WHERE sets.name = 'Archenemy' AND sets.code = 'ARC' );\t----- bird -----\tcard_games",
    "428": " SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.set_code WHERE s.id = 5; \t----- bird -----\tcard_games",
    "429": " SELECT s.language, s.type FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.id = 206; \t----- bird -----\tcard_games",
    "430": " SELECT s.id, s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'Italian' AND fd.language = 'Italian' JOIN cards c ON s.id = c.set_id AND tr.language = 'Italian' AND fd.language = 'Italian' WHERE s.block = 'Shadowmoor' ORDER BY s.name ASC; \t----- bird -----\tcard_games",
    "431": " SELECT s.id, s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE s.isForeignOnly = 1 AND l.status = 'available' AND fd.language = 'Japanese' AND s.isFoilOnly = 1 AND s.name LIKE '%outside the US%'; \t----- bird -----\tcard_games",
    "432": " SELECT s.name AS russian_set, MAX(s.baseSetSize) AS total_cards FROM sets s JOIN foreign_data f ON s.uuid = f.uuid WHERE f.language = 'Russian' GROUP BY s.name ORDER BY total_cards DESC LIMIT 1; \t----- bird -----\tcard_games",
    "433": " SELECT COUNT(DISTINCT foreign_data.uuid) AS total_cards, COUNT(DISTINCT CASE WHEN foreign_data.language = 'zh-CN' AND foreign_data.isOnlineOnly = 1 THEN foreign_data.uuid END) AS online_only_chinese_simplified_cards FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid; \t----- bird -----\tcard_games",
    "434": " SELECT COUNT(DISTINCT sets.id) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND sets.mtgoCode IS NULL OR sets.mtgoCode = ''; \t----- bird -----\tcard_games",
    "435": " SELECT c.unique_id_number, c.border_color FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%border with black%' GROUP BY c.unique_id_number, c.border_color HAVING COUNT(DISTINCT f.language) = 1; \t----- bird -----\tcard_games",
    "436": " SELECT c.unique_id_number, c.frame_effects FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%extendedart%' GROUP BY c.unique_id_number, c.frame_effects HAVING COUNT(DISTINCT f.language) > 0 \t----- bird -----\tcard_games",
    "437": " SELECT * FROM cards WHERE color_identity = 'black' AND has_full_artwork = 1; \t----- bird -----\tcard_games",
    "438": " SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.id = 174; \t----- bird -----\tcard_games",
    "439": " SELECT name FROM sets WHERE code = 'ALL'; \t----- bird -----\tcard_games",
    "440": " SELECT flavor_text FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar');\t----- bird -----\tcard_games",
    "441": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.translation = '2007-07-13'; \t----- bird -----\tcard_games",
    "442": " SELECT s.base_set_size, s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND s.block IN ('Masques', 'Mirage'); \t----- bird -----\tcard_games",
    "443": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.translation = 'expansion'; \t----- bird -----\tcard_games",
    "444": " SELECT f.flavor_text, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'boros' LIMIT 1; \t----- bird -----\tcard_games",
    "445": " SELECT f.language, f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie' LIMIT 1; \t----- bird -----\tcard_games",
    "446": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE Set_Code = 'Abyssal Horror' AND convertedManaCost = 10) AS percentage FROM cards WHERE Set_Code = 'Abyssal Horror' AND convertedManaCost = 10; \t----- bird -----\tcard_games",
    "447": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND tr.translation = 'Expansion Commander'; \t----- bird -----\tcard_games",
    "448": " SELECT f.flavor_text, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'abzan' LIMIT 1; \t----- bird -----\tcard_games",
    "449": " SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius'; \t----- bird -----\tcard_games",
    "450": " SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": " SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": " SELECT name FROM cards WHERE is_textless = 0; \t----- bird -----\tcard_games",
    "453": " SELECT converted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "454": " SELECT COUNT(*) FROM cards WHERE border_color = 'white' AND power IS NULL OR power = '*'; \t----- bird -----\tcard_games",
    "455": " SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE isPromo = 1 AND side IS NOT NULL GROUP BY c.name HAVING COUNT(DISTINCT fd.flavor_text) > 1; \t----- bird -----\tcard_games",
    "456": " SELECT subtypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer'; \t----- bird -----\tcard_games",
    "457": " SELECT p.name, pu.purchase_url FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.set_code JOIN ruling r ON c.uuid = r.uuid WHERE l.status = 'bundle' AND pu.type = 'website'; \t----- bird -----\tcard_games",
    "458": " SELECT COUNT(DISTINCT artist) FROM cards WHERE border_color = 'black' AND (availability LIKE '%arena,mtgo%' OR availability LIKE '%mtgo,arena%') AND color_identity = 'black'; \t----- bird -----\tcard_games",
    "459": " SELECT name, converted_mana_cost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY converted_mana_cost DESC LIMIT 1; \t----- bird -----\tcard_games",
    "460": " SELECT artist FROM cards WHERE flavor_name = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": " SELECT name, converted_mana_cost FROM cards WHERE frame_version = '2003' ORDER BY converted_mana_cost DESC LIMIT 3; \t----- bird -----\tcard_games",
    "462": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'Italian' AND fd.name = 'Ancestor''s Chosen'; \t----- bird -----\tcard_games",
    "463": " SELECT COUNT(DISTINCT set_translations.id) AS translation_count FROM sets JOIN set_translations ON sets.code = set_translations.set_code WHERE sets.name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "464": " SELECT DISTINCT name FROM cards WHERE SetCode = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "465": " SELECT * FROM cards WHERE name LIKE '%Ancestor\\'s Chosen%' AND language = 'Korean'; \t----- bird -----\tcard_games",
    "466": " SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND Set_Code = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "467": " SELECT SUM(baseSetSize) AS total_cards_in_base_set FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": " SELECT translation FROM set_translations WHERE set_code = 'Eighth Edition' AND language = 'Chinese Simplified'; \t----- bird -----\tcard_games",
    "469": " SELECT mtgoCode FROM cards WHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL; \t----- bird -----\tcard_games",
    "470": " SELECT releaseDate FROM sets WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "471": " SELECT \"type\" FROM \"sets\" WHERE \"name\" = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "472": " SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.set_code WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL; \t----- bird -----\tcard_games",
    "473": " SELECT isForeignOnly FROM foreign_data WHERE flavor_text = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": " SELECT COUNT(*) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE foreign_data.language = 'Italian' AND foreign_data.translation IS NOT NULL AND sets.baseSetSize < 100; \t----- bird -----\tcard_games",
    "475": " SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND borderColor = 'black'; \t----- bird -----\tcard_games",
    "476": " SELECT c.name, c.converted_mana_cost FROM cards c JOIN (     SELECT set_code, MAX(converted_mana_cost) AS max_converted_mana_cost     FROM card_set_costs     WHERE set_name = 'Coldsnap'     GROUP BY set_code ) subquery ON c.set_code = subquery.set_code WHERE c.set_code = subquery.set_code AND c.converted_mana_cost = subquery.max_converted_mana_cost; \t----- bird -----\tcard_games",
    "477": " SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy');\t----- bird -----\tcard_games",
    "478": " SELECT name FROM cards WHERE number = 4 AND Set_Code = 'Coldsnap'; \t----- bird -----\tcard_games",
    "479": " SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND power = '*' AND name = 'Coldsnap';\t----- bird -----\tcard_games",
    "480": " SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen'; \t----- bird -----\tcard_games",
    "481": " SELECT DISTINCT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Ancestor\\'s Chosen'); \t----- bird -----\tcard_games",
    "482": " SELECT \"flavor Text\" FROM \"foreign data\" WHERE \"language\" = 'German' AND \"name\" = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": " SELECT ruling.text FROM ruling JOIN cards ON ruling.uuid = cards.uuid JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.set_code WHERE sets.name = 'Coldsnap' AND foreign_data.language = 'Italian'; \t----- bird -----\tcard_games",
    "484": " SELECT f.flavor_text, c.converted_mana_cost FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.set_code = 'Coldsnap' AND f.language = 'Italian' ORDER BY c.converted_mana_cost DESC LIMIT 1; \t----- bird -----\tcard_games",
    "485": " SELECT date FROM ruling WHERE uuid = 'Reminisce';\t----- bird -----\tcard_games",
    "486": " SELECT     (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / SUM(convertedManaCost)) * 100 FROM     cards WHERE     name = 'Coldsnap'; \t----- bird -----\tcard_games",
    "487": " SELECT     (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN name = 'Coldsnap' THEN 1 ELSE 0 END)) AS percentage_incredibly_powerful FROM     cards \t----- bird -----\tcard_games",
    "488": " SELECT code FROM sets WHERE release_date = '2017-07-14'; \t----- bird -----\tcard_games",
    "489": " SELECT keyruneCode FROM sets WHERE code = 'PKHC'; \t----- bird -----\tcard_games",
    "490": " SELECT magic_the_gathering_online_code FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND s.release_date = '2017-06-09'; \t----- bird -----\tcard_games",
    "492": " SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'From the Vault: Lore'; \t----- bird -----\tcard_games",
    "493": " SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized'; \t----- bird -----\tcard_games",
    "494": " SELECT c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE fd.flavor_text LIKE '%Jim Pavelec%' AND l.status = 'Legal'; \t----- bird -----\tcard_games",
    "495": " SELECT s.releaseDate FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid WHERE s.name = 'Evacuation'; \t----- bird -----\tcard_games",
    "496": " SELECT COUNT(*) FROM cards WHERE sets.name = 'Rinascita di Alara'; \t----- bird -----\tcard_games",
    "497": " SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'Huiti\u00e8me \u00e9dition'; \t----- bird -----\tcard_games",
    "498": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'French' AND fd.uuid = tr.translation WHERE s.name = 'Tendo Ice Bridge'; \t----- bird -----\tcard_games",
    "499": " SELECT COUNT(DISTINCT translations.language) AS translation_count FROM set_translations JOIN sets ON set_translations.set_code = sets.code WHERE sets.name = 'Tenth Edition'; \t----- bird -----\tcard_games",
    "500": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'Japanese' AND s.name = 'Fellwar Stone'; \t----- bird -----\tcard_games",
    "501": " SELECT MAX(converted_mana_cost) AS highest_converted_mana_cost FROM cards WHERE name = 'Journey into Nyx Hero's Path'; \t----- bird -----\tcard_games",
    "502": " SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo'; \t----- bird -----\tcard_games",
    "503": " SELECT s.name AS expansion_type FROM sets s JOIN foreign_data f ON s.uuid = f.uuid WHERE f.name = 'Samite Pilgrim'; \t----- bird -----\tcard_games",
    "504": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.converted_mana_cost = 3; \t----- bird -----\tcard_games",
    "505": " SELECT flavor_text FROM foreign_data WHERE name = 'Mirrodin' AND language = 'Chinese Simplified'; \t----- bird -----\tcard_games",
    "506": " SELECT     s.name,     (SUM(isNonFoilOnly = 1) / SUM(language = 'Japanese')) * 100 FROM     cards c JOIN     foreign_data f ON c.uuid = f.uuid JOIN     sets s ON c.set_code = s.code WHERE     f.language = 'Japanese' GROUP BY     s.name; \t----- bird -----\tcard_games",
    "507": " SELECT     s.name,     COUNT(c.uuid) AS total_cards,     SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_cards,     (SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(c.uuid)) * 100 AS percentage_online_only FROM     sets s JOIN     foreign_data f ON s.code = f.multiverseid JOIN     cards c ON f.uuid = c.uuid WHERE     s.language = 'Portuguese (Brazil)' GROUP BY     s.name; \t----- bird -----\tcard_games",
    "508": " SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1; \t----- bird -----\tcard_games",
    "509": " SELECT s.id, s.name, s.baseSetSize FROM sets s JOIN (     SELECT set_code, MAX(baseSetSize) AS max_baseSetSize     FROM sets     GROUP BY set_code ) max_sets ON s.code = max_sets.set_code AND s.baseSetSize = max_sets.max_baseSetSize ORDER BY s.baseSetSize DESC LIMIT 1; \t----- bird -----\tcard_games",
    "510": " SELECT c.name, c.artist, c.converted_mana_cost FROM cards c JOIN (     SELECT artist, MAX(converted_mana_cost) AS max_cost     FROM cards     WHERE is_multiface IS NULL     GROUP BY artist ) max_cost_artist ON c.artist = max_cost_artist.artist WHERE c.is_multiface IS NULL ORDER BY c.converted_mana_cost DESC LIMIT 1; \t----- bird -----\tcard_games",
    "511": " SELECT MAX(frameEffects) AS most_common_frame_effect FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL \t----- bird -----\tcard_games",
    "512": " SELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "  [SQL] SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data f ON s.uuid = f.uuid WHERE s.expansionType = 'Commander' GROUP BY s.id HAVING s.isForeignOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0 AND f.language IN ('English', 'French', 'Spanish', 'German', 'Italian', 'Japanese', 'Korean', 'Chinese (Simplified)', 'Chinese (Traditional)', 'Russian', 'Polish', 'Dutch', 'Swedish', 'Norwegian', 'Danish', 'Finnish', 'Greek', 'Hebrew', 'Arabic', 'Hindi', 'Bengali', 'Punjabi', 'Ukrainian', 'Turkish', 'Czech', 'Hungarian', 'Slovak', 'Polish', 'Slovenian', 'Croatian', 'Serbian', 'Bulgarian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian', 'Montenegrin', 'Serbian', 'Albanian', 'Macedonian', 'Bulgarian', 'Greek', 'Romanian', 'Bosnian\t----- bird -----\tcard_games",
    "514": " SELECT c.name, c.converted_mana_cost FROM cards c JOIN (     SELECT card_id, MAX(converted_mana_cost) AS max_cost     FROM cards     WHERE format = 'duel'     GROUP BY card_id ) subquery ON c.id = subquery.card_id ORDER BY c.converted_mana_cost DESC LIMIT 10; \t----- bird -----\tcard_games",
    "515": " SELECT MIN(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' AND status = 'legal'; \t----- bird -----\tcard_games",
    "516": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French'; \t----- bird -----\tcard_games",
    "517": " SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND status = 'Legal';\t----- bird -----\tcard_games",
    "518": " SELECT play_format, flavor_text FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE status = 'Banned' GROUP BY play_format ORDER BY MAX(COUNT(*)) DESC LIMIT 1; \t----- bird -----\tcard_games",
    "519": " SELECT language FROM foreign_data WHERE name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": " SELECT MIN(artist) AS illustrator_with_least_cards, format_of_play FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid GROUP BY format_of_play; \t----- bird -----\tcard_games",
    "521": " SELECT c.status, f.format, l.hasContentWarning, w.status FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.set_code JOIN ruling r ON c.uuid = r.uuid WHERE c.frame_style = '1997' AND f.name = 'Legacy' AND l.has_content_warning = 1 AND s.name = 'Wizards of the Coast' AND st.translation = '1997'; \t----- bird -----\tcard_games",
    "522": " SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND c.edhrecRank = 1; \t----- bird -----\tcard_games",
    "523": " SELECT AVG(sets.total_set_size) AS annual_average_sets FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE sets.release_date BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY sets.release_date; \t----- bird -----\tcard_games",
    "524": " SELECT DISTINCT artist FROM cards WHERE BorderColor = 'black' AND availability = 'arena'; \t----- bird -----\tcard_games",
    "525": " SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status IN ('banned','restricted') AND c.format = 'oldschool'; \t----- bird -----\tcard_games",
    "526": " SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": " SELECT ruling.text, ruling.date FROM ruling JOIN cards ON ruling.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY ruling.date DESC; \t----- bird -----\tcard_games",
    "528": " SELECT DISTINCT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'; \t----- bird -----\tcard_games",
    "529": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = fd.language WHERE tr.language NOT LIKE '%Japanese%' AND fd.language = 'Korean'; \t----- bird -----\tcard_games",
    "530": " SELECT DISTINCT f.frame_style FROM frames f JOIN cards c ON f.card_id = c.id WHERE c.artist = 'Allen Williams' UNION SELECT DISTINCT r.uuid FROM rulings r WHERE r.status = 'Banned'; \t----- bird -----\tcard_games",
    "531": " SELECT MAX(Reputation) AS max_reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'; \t----- bird -----\tcodebase_community",
    "532": " SELECT users.DisplayName FROM users WHERE YEAR(users.CreationDate) = 2011; \t----- bird -----\tcodebase_community",
    "533": " SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY Views DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "535": " SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.User_Id WHERE v.Vote_Type_Id = 1 AND u.Upvotes > 100 GROUP BY u.Id HAVING COUNT(DISTINCT v.Id) > 1; \t----- bird -----\tcodebase_community",
    "536": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id WHERE views > 10 AND YEAR(votes.Creation_Date) > 2013; \t----- bird -----\tcodebase_community",
    "537": " SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.DisplayName = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "538": " SELECT p.Title FROM posts AS p JOIN users AS u ON p.Owner_UserId = u.Id WHERE u.DisplayName = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "539": " SELECT DisplayName FROM users WHERE Id = (SELECT Owner_User_Id FROM posts WHERE Title = 'Eliciting priors from experts'); \t----- bird -----\tcodebase_community",
    "540": " SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts WHERE OwnerUserId = p.OwnerUserId); \t----- bird -----\tcodebase_community",
    "541": " SELECT u.Display_Name FROM users u JOIN posts p ON u.Id = p.Owner_User_Id JOIN (     SELECT Post_Id, MAX(Favorite_Count) AS Max_Favorite_Count     FROM posts     GROUP BY Post_Id ) max_favorites ON p.Id = max_favorites.Post_Id WHERE p.Favorite_Count = max_favorites.Max_Favorite_Count; \t----- bird -----\tcodebase_community",
    "542": " SELECT SUM(CommentCount) FROM posts WHERE OwnerUserIds IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie'); \t----- bird -----\tcodebase_community",
    "543": " SELECT MAX(AnswerCount) AS max_answers FROM posts WHERE OwnerUserIds IN (SELECT Id FROM users WHERE DisplayName = 'csgillespie'); \t----- bird -----\tcodebase_community",
    "544": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.Vote_Type_Id = 1 AND v.Creation_Date = (SELECT MAX(Creation_Date) FROM votes WHERE Post_Id = p.Id) AND v.User_Id = (SELECT Id FROM users WHERE Last_Editor_UserId = p.Id); \t----- bird -----\tcodebase_community",
    "545": " SELECT COUNT(*) FROM posts WHERE OwnerUserIds.DisplayName = 'csgillespie' AND ParentId IS NULL; \t----- bird -----\tcodebase_community",
    "546": " SELECT u.Display_Name FROM users u JOIN posts p ON u.Id = p.Owner_User_Id JOIN post_history ph ON p.Id = ph.Post_Id WHERE ph.Closed_Date IS NOT NULL; \t----- bird -----\tcodebase_community",
    "547": " SELECT COUNT(*) FROM posts JOIN users ON posts.Owner_User_Id = users.Id WHERE users.Age > 65 AND posts.Score >= 20; \t----- bird -----\tcodebase_community",
    "548": " SELECT users.Location FROM users WHERE users.Id = (     SELECT OwnerUserId     FROM posts     WHERE Title = 'Eliciting priors from experts' );\t----- bird -----\tcodebase_community",
    "549": " SELECT t.body FROM posts AS p JOIN tags AS t ON p.Id = t.PostId WHERE t.TagName = 'bayesian' LIMIT 1; \t----- bird -----\tcodebase_community",
    "550": " SELECT p.Title, p.Body FROM posts p JOIN tags t ON p.Id = t.PostId WHERE t.Count = (SELECT MAX(Count) FROM tags) ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "551": " SELECT COUNT(DISTINCT User_Id) AS total_badges FROM badges WHERE DisplayName = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "552": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": " SELECT COUNT(*) FROM badges WHERE DisplayName = 'csgillespie' AND YEAR(Date) = 2011; \t----- bird -----\tcodebase_community",
    "554": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.Post_Id = b.Id GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "555": " SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.DisplayName = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "556": " SELECT AVG(b.Id) AS average_badges FROM users AS u JOIN votes AS v ON u.Id = v.User_Id JOIN posts AS p ON v.Post_Id = p.Id JOIN badges AS b ON p.Id = b.Post_Id WHERE u.Views > 200; \t----- bird -----\tcodebase_community",
    "557": " SELECT     (COUNT(CASE WHEN users.Age > 65 THEN 1 END) / COUNT(DISTINCT posts.Id)) * 100 AS percentage FROM     posts JOIN     users ON posts.Owner_User_Id = users.Id WHERE     posts.Score > 5; \t----- bird -----\tcodebase_community",
    "558": " SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": " SELECT MAX(votes.Count) AS max_creation_date_of_votes FROM votes WHERE votes.PostId IN (SELECT Id FROM posts WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE users.DisplayName = 'John Doe')); \t----- bird -----\tcodebase_community",
    "560": " SELECT COUNT(*) FROM badges WHERE Name = 'Revival'; \t----- bird -----\tcodebase_community",
    "561": " SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.Score = (SELECT MAX(Score) FROM comments WHERE c.PostId = p.Id) AND u.Id = (SELECT UserId FROM users WHERE DisplayName = 'Highest Score Comment Author'); \t----- bird -----\tcodebase_community",
    "562": " SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.View_Count = 1910; \t----- bird -----\tcodebase_community",
    "563": " SELECT COUNT(fav_count) AS favorite_count_count FROM posts JOIN users ON posts.Owner_UserId = users.Id JOIN votes ON posts.Id = votes.Post_Id WHERE users.Id = 3025 AND votes.Vote_Type_Id = 1 AND votes.Creation_Date = '2014-04-23 20:29:39';\t----- bird -----\tcodebase_community",
    "564": " SELECT c.Text FROM comments c JOIN post_history ph ON c.Id = ph.Id JOIN posts p ON ph.PostId = p.Id WHERE p.ParentId = 107829; \t----- bird -----\tcodebase_community",
    "565": " SELECT p.Title, p.CreationDate, p.ClosedDate FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.UserId = 23853 AND p.CreationDate = '2013-07-12 09:08:18.0'; \t----- bird -----\tcodebase_community",
    "566": " SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": " SELECT COUNT(DISTINCT posts.Id) AS total_posts FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.User_Id WHERE v.Id = 6347; \t----- bird -----\tcodebase_community",
    "569": " SELECT SUM(votes.VoteType) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'; \t----- bird -----\tcodebase_community",
    "570": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms'; \t----- bird -----\tcodebase_community",
    "571": " SELECT COUNT(posts.Id) AS post_count, COUNT(votes.Id) AS vote_count FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN votes ON posts.Id = votes.PostId WHERE users.Id = 24 \t----- bird -----\tcodebase_community",
    "572": " SELECT SUM(views) AS total_views FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": " SELECT c.Text FROM comments c JOIN votes v ON c.Id = v.PostId WHERE v.Score = 17; \t----- bird -----\tcodebase_community",
    "574": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN (     SELECT ph.PostId     FROM post_history ph     JOIN posts p ON ph.PostId = p.Id     WHERE p.Title = 'http://stackoverflow.com' ) \t----- bird -----\tcodebase_community",
    "575": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.DisplayName = 'SilentGhost'; \t----- bird -----\tcodebase_community",
    "576": " SELECT u.DisplayName FROM comments c JOIN users u ON c.User Id = u.Id WHERE c.Text = 'thank you user93!'; \t----- bird -----\tcodebase_community",
    "577": " SELECT c.Text FROM comments c JOIN users u ON c.User_Id = u.Id JOIN posts p ON c.Post_Id = p.Id WHERE u.DisplayName = 'A Lion'; \t----- bird -----\tcodebase_community",
    "578": " SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1; \t----- bird -----\tcodebase_community",
    "579": " SELECT comment_text FROM comments WHERE post_title = 'How does gentle boosting differ from AdaBoost?'; \t----- bird -----\tcodebase_community",
    "580": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'Necromancer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT v.Id) >= 10; \t----- bird -----\tcodebase_community",
    "581": " SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserIds WHERE p.Title = 'Open source tools for visualizing multi-dimensional data'; \t----- bird -----\tcodebase_community",
    "582": " SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa' AND v.CreationDate > p.CreationDate; \t----- bird -----\tcodebase_community",
    "583": " SELECT u.Display_Name, SUM(v.Score) AS total_score FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id JOIN posts_edited pe ON p.Id = pe.Post_Id JOIN users ed ON pe.Editor_Id = ed.Id WHERE u.Display_Name = 'Yevgeny' GROUP BY u.Display_Name \t----- bird -----\tcodebase_community",
    "584": " SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": " SELECT SUM(bounty_amount) FROM votes WHERE post_id IN (SELECT id FROM posts WHERE title LIKE '%data%'); \t----- bird -----\tcodebase_community",
    "586": " SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.VoteTypeId = 5 AND v.BountyAmount = 50; \t----- bird -----\tcodebase_community",
    "587": " SELECT     p.Title,     c.Text AS Comment,     AVG(p.ViewCount) AS AverageViewCount FROM     posts p JOIN     post_tags pt ON p.Id = pt.PostId JOIN     tags t ON pt.TagId = t.Id WHERE     t.TagName = 'humor' GROUP BY     p.Title,     c.Text; \t----- bird -----\tcodebase_community",
    "588": " SELECT COUNT(c.Id) AS total_comments FROM comments c JOIN users u ON c.User_Id = u.Id WHERE u.Id = 13; \t----- bird -----\tcodebase_community",
    "589": " SELECT u.Id AS user_id, MAX(u.Reputation) AS highest_reputation FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY highest_reputation DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "590": " SELECT MIN(views) AS lowest_views FROM users WHERE id = (SELECT MIN(user_id) FROM votes); \t----- bird -----\tcodebase_community",
    "591": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Supporter' AND YEAR(votes.Creation_Date) = 2011; \t----- bird -----\tcodebase_community",
    "592": " SELECT COUNT(DISTINCT users.Id) AS num_users_with_more_than_five_badges FROM badges JOIN comments ON badges.Id = comments.Post_Id JOIN post_history ON badges.Id = post_history.Post_Id JOIN post_links ON badges.Id = post_links.Post_Id JOIN posts ON badges.Id = posts.Owner_User_Id JOIN tags ON badges.Id = tags.Excerpt_Post_Id JOIN users ON badges.UserId = users.Id; \t----- bird -----\tcodebase_community",
    "593": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.UserId JOIN locations ON users_locations.LocationId = locations.Id WHERE locations.Name = 'New York' AND (badges.Name = 'Supporter' OR badges.Name = 'Teachers') \t----- bird -----\tcodebase_community",
    "594": " SELECT u.Id, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserIds WHERE p.Id = 1; \t----- bird -----\tcodebase_community",
    "595": " SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN post_history ph ON p.Id = ph.PostId JOIN (     SELECT PostId, COUNT(*) AS history_count     FROM post_history     GROUP BY PostId     HAVING COUNT(*) = 1 ) h ON p.Id = h.PostId JOIN (     SELECT UserId, COUNT(*) AS view_count     FROM views     GROUP BY UserId     HAVING COUNT(*) >= 1000 ) v ON u.Id = v.UserId WHERE ph.RevisionGUID IS NOT NULL; \t----- bird -----\tcodebase_community",
    "596": " SELECT u.Id, u.DisplayName, COUNT(c.Id) AS comment_count FROM users u JOIN comments c ON u.Id = c.User_Id GROUP BY u.Id, u.DisplayName ORDER BY comment_count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "597": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.User_Id JOIN locations ON users_locations.Location_Id = locations.Id WHERE locations.Name = 'India' AND tags.Tag_Name = 'Teacher'; \t----- bird -----\tcodebase_community",
    "598": " SELECT     (         SELECT             COUNT(*)         FROM             badges         WHERE             Name = 'Student' AND             Year(Date) = 2010     ) AS 2010_count    ,     (         SELECT             COUNT(*)         FROM             badges         WHERE             Name = 'Student' AND             Year(Date) = 2011     ) AS 2011_count    ,     (         (             (                 SELECT                     COUNT(*)                 FROM                     badges                 WHERE                     Name = 'Student' AND                     Year(Date) = 2010             )             * 100.0         )         -         (             (                 SELECT                     COUNT(*)                 FROM                     badges                 WHERE                     Name = 'Student' AND                     Year(Date) = 2011             )             * 100.0         )     ) AS percentage_difference \t----- bird -----\tcodebase_community",
    "599": " SELECT ph.PostHistoryTypeId, COUNT(DISTINCT u.UserId) AS unique_commenters FROM post_history AS ph JOIN posts AS p ON ph.PostId = p.Id JOIN users AS u ON ph.UserId = u.Id WHERE p.Id = 3720 GROUP BY ph.PostHistoryTypeId; \t----- bird -----\tcodebase_community",
    "600": " SELECT p.Title, p.ViewCount FROM posts p JOIN post_links pl ON p.Id = pl.PostId JOIN post_links pr ON pl.RelatedPostId = pr.PostId WHERE pr.RelatedPostId = 61217 \t----- bird -----\tcodebase_community",
    "601": " SELECT c.Score, l.LinkTypeId FROM comments c JOIN post_history ph ON c.PostId = ph.PostId JOIN post_links l ON ph.PostId = l.PostId WHERE ph.PostId = 395; \t----- bird -----\tcodebase_community",
    "602": " SELECT p.Id, u.Id FROM posts p JOIN users u ON p.Owner User Id = u.Id WHERE p.Score > 60; \t----- bird -----\tcodebase_community",
    "603": " SELECT SUM(posts.favorite_count) FROM posts JOIN users ON posts.owner_user_id = users.id WHERE users.id = 686 AND YEAR(posts.creation_date) = 2011; \t----- bird -----\tcodebase_community",
    "604": " SELECT     AVG(votes.UpVotes) AS average_up_votes,     AVG(users.Age) AS average_user_age FROM     users JOIN     votes ON users.Id = votes.UserId WHERE     users.Id IN (         SELECT             Id         FROM             posts         GROUP BY             Id         HAVING             COUNT(*) > 10     ) \t----- bird -----\tcodebase_community",
    "605": " SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Announcer'; \t----- bird -----\tcodebase_community",
    "606": " SELECT b.Name FROM badges AS b JOIN comments AS c ON b.Id = c.Post_Id JOIN users AS u ON c.User_Id = u.Id WHERE c.Score = 1 AND c.Text = 'accepted answer' AND u.Creation_Date = '2010-07-19 07:39:08'; \t----- bird -----\tcodebase_community",
    "607": " SELECT COUNT(*) FROM comments WHERE score > 60; \t----- bird -----\tcodebase_community",
    "608": " SELECT c.Text FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON p.Owner_UserId = u.Id WHERE p.Creation_Date = '2010-07-19 19:25:47.0' AND u.Id = (SELECT Id FROM users WHERE Display_Name = 'John Doe'); \t----- bird -----\tcodebase_community",
    "609": " SELECT COUNT(*) FROM posts WHERE score = 10; \t----- bird -----\tcodebase_community",
    "610": " SELECT b.Name FROM badges b JOIN (     SELECT User_Id, MAX(Reputation) AS Max_Reputation     FROM users     GROUP BY User_Id ) u ON b.User_Id = u.User_Id WHERE b.Reputation = u.Max_Reputation; \t----- bird -----\tcodebase_community",
    "611": " SELECT u.Id, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE b.Name = '7/19/2010 7:39:08 PM' AND p.CreationDate = '2010-07-19 19:39:08.0'; \t----- bird -----\tcodebase_community",
    "612": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Display_Name = 'Pierre'; \t----- bird -----\tcodebase_community",
    "613": " SELECT u.Id, u.DisplayName, b.Name, b.Date FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Location = 'Rochester, NY' GROUP BY u.Id, u.DisplayName, b.Name, b.Date ORDER BY u.Id, b.Date; \t----- bird -----\tcodebase_community",
    "614": " SELECT COUNT(DISTINCT users.Id) AS total_teachers, COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_teachers FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Teacher'; \t----- bird -----\tcodebase_community",
    "615": " SELECT     (COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users)) AS percentage FROM     badges AS organizer JOIN     users ON organizer.User Id = users.Id WHERE     organizer.Name = 'Organizer'     AND users.Age BETWEEN 13 AND 18; \t----- bird -----\tcodebase_community",
    "616": " SELECT c.Score FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.Creation_Date = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": " SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON comments.UserId = users.Id WHERE posts.CreationDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": " SELECT u.Id, u.Reputation, u.Location, u.Age FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id JOIN badges b ON p.Id = b.Post_Id WHERE u.Location = 'Vienna, Austria' GROUP BY u.Id, u.Reputation, u.Location, u.Age HAVING COUNT(DISTINCT b.Name) > 0; \t----- bird -----\tcodebase_community",
    "619": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65; \t----- bird -----\tcodebase_community",
    "620": " SELECT COUNT(DISTINCT users.Id) AS views_count FROM users JOIN votes ON users.Id = votes.User_Id JOIN posts ON votes.Post_Id = posts.Id JOIN badges ON posts.Owner_User_Id = badges.Id WHERE badges.Name = '7/19/2010 7:39:08 PM' AND posts.Creation_Date = '2010-07-19 19:39:08.0'; \t----- bird -----\tcodebase_community",
    "621": " SELECT b.Name FROM badges b JOIN (     SELECT User_Id, MIN(Reputation) AS Lowest_Reputation     FROM users     GROUP BY User_Id ) lowest_reputation ON b.User_Id = lowest_reputation.User_Id WHERE b.Reputation = lowest_reputation.Lowest_Reputation; \t----- bird -----\tcodebase_community",
    "622": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.DisplayName = 'Sharpie'; \t----- bird -----\tcodebase_community",
    "623": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Supporter' AND users.Age > 65; \t----- bird -----\tcodebase_community",
    "624": " SELECT users.DisplayName FROM users WHERE users.Id = 30; \t----- bird -----\tcodebase_community",
    "625": " SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": " SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010; \t----- bird -----\tcodebase_community",
    "627": " SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65; \t----- bird -----\tcodebase_community",
    "628": " SELECT u.Id, u.DisplayName, MAX(v.Views) AS highest_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id, u.DisplayName ORDER BY highest_views DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "629": " SELECT COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2010) AS votes_2010, COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2011) AS votes_2011 FROM votes; \t----- bird -----\tcodebase_community",
    "630": " SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": " SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo'; \t----- bird -----\tcodebase_community",
    "632": " SELECT COUNT(*) FROM votes AS v WHERE v.User_Id = (SELECT Id FROM users WHERE DisplayName = 'Harlan'); \t----- bird -----\tcodebase_community",
    "633": " SELECT p.Id AS post_id FROM posts p JOIN users u ON p.Owner_UserId = u.Id JOIN votes v ON p.Id = v.Post_Id WHERE u.DisplayName ='slashnick' GROUP BY p.Id ORDER BY MAX(v.AnswerCount) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "634": " SELECT MAX(posts.view_count) AS max_popularity FROM posts JOIN users ON posts.owner_user_id = users.id WHERE users.display_name IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY posts.id; \t----- bird -----\tcodebase_community",
    "635": " SELECT COUNT(*) FROM posts JOIN users ON posts.Owner_User_Id = users.Id WHERE users.Display_Name = 'Matt Parker' AND posts.Score > 4; \t----- bird -----\tcodebase_community",
    "636": " SELECT SUM(score) FROM comments JOIN users ON comments.User_Id = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND score < 60; \t----- bird -----\tcodebase_community",
    "637": " SELECT t.TagName, COUNT(v.Id) AS TagCount FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.Id || '%' JOIN votes v ON p.Id = v.PostId WHERE p.OwnerUserId = 1 AND v.CommentCount = 0 GROUP BY t.TagName ORDER BY TagCount DESC LIMIT 5; \t----- bird -----\tcodebase_community",
    "638": " SELECT DISTINCT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Organizer'; \t----- bird -----\tcodebase_community",
    "639": " SELECT (COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM posts WHERE DisplayName = 'Community')) AS percentage FROM posts WHERE TagName = 'r'; \t----- bird -----\tcodebase_community",
    "640": " SELECT SUM(ViewCount) - SUM(ViewCount) FROM posts WHERE DisplayName = 'Mornington' AND DisplayName = 'Amos'; \t----- bird -----\tcodebase_community",
    "641": " SELECT COUNT(DISTINCT users.Id) AS commentator_count FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'commentator' AND YEAR(votes.Creation_Date) = 2014; \t----- bird -----\tcodebase_community",
    "642": " SELECT COUNT(*) FROM posts WHERE posts.CreationDate BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59'; \t----- bird -----\tcodebase_community",
    "643": " SELECT u.Display_Name, u.Age FROM users u JOIN (     SELECT Owner_User_Id     FROM posts     GROUP BY Owner_User_Id     ORDER BY SUM(Views) DESC     LIMIT 1 ) sub ON u.Id = sub.Owner_User_Id; \t----- bird -----\tcodebase_community",
    "644": " SELECT p.LastEditDate, u.Id AS LastEditUserId FROM posts p JOIN posts_users pu ON p.Id = pu.PostId JOIN users u ON pu.UserId = u.Id WHERE p.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": " SELECT COUNT(*) FROM comments WHERE User_Id = 13 AND Score < 60; \t----- bird -----\tcodebase_community",
    "646": " SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c1.PostId JOIN comments c2 ON p.Id = c2.PostId JOIN users u1 ON c1.UserId = u1.Id JOIN users u2 ON c2.UserId = u2.Id WHERE c1.Score > 60 AND c2.Score > 60 GROUP BY p.Id, u1.Id, u2.Id HAVING COUNT(DISTINCT c1.UserId) > 1 AND COUNT(DISTINCT c2.UserId) > 1; \t----- bird -----\tcodebase_community",
    "647": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Location = 'North Pole' AND b.Date >= '2011-01-01' AND b.Date <= '2011-12-31'; \t----- bird -----\tcodebase_community",
    "648": " SELECT u.Display_Name, u.Website_Url FROM users AS u JOIN posts AS p ON u.Id = p.Owner_User_Id JOIN votes AS v ON p.Id = v.Post_Id WHERE p.Favorite_Count > 150; \t----- bird -----\tcodebase_community",
    "649": " SELECT COUNT(phh.Id) AS post_history_counts, MAX(phh.CreationDate) AS last_edit_date FROM post_history AS phh JOIN posts AS p ON phh.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Id; \t----- bird -----\tcodebase_community",
    "650": " SELECT u.Id, u.Display_Name, u.Location, u.Last_Access_Date FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id JOIN badges b ON p.Owner_User_Id = b.Id WHERE b.Name = 'outliers' GROUP BY u.Id, u.Display_Name, u.Location, u.Last_Access_Date ORDER BY u.Last_Access_Date DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "651": " SELECT p.title FROM posts p JOIN post_links pl1 ON p.Id = pl1.RelatedPostId JOIN post_links pl2 ON p.Id = pl2.RelatedPostId WHERE pl1.PostId = 12345 AND pl2.PostId = 67890 AND pl1.LinkTypeId = 1 AND pl2.LinkTypeId = 2 AND pl1.RelatedPostId <> pl2.RelatedPostId AND pl1.PostId <> pl2.PostId AND pl1.PostId = (SELECT PostId FROM post_links WHERE LinkTypeId = 1 AND RelatedPostId = 12345) AND pl2.PostId = (SELECT PostId FROM post_links WHERE LinkTypeId = 2 AND RelatedPostId = 67890); \t----- bird -----\tcodebase_community",
    "652": " SELECT p.Id, b.Name FROM posts p JOIN users u ON p.OwnerUserIds = u.Id JOIN badges b ON u.Id = b.Id WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": " SELECT u.Display_Name FROM posts p JOIN users u ON p.Owner_User_Id = u.Id WHERE p.View_Count = (SELECT MAX(View_Count) FROM posts) LIMIT 1; \t----- bird -----\tcodebase_community",
    "654": " SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.TagId = t.Id WHERE t.TagName = 'hypothesis-testing' AND p.ExcerptPostId = u.Id \t----- bird -----\tcodebase_community",
    "655": " SELECT p.Title, v.LinkTypeId FROM posts p JOIN post_links pl ON p.Id = pl.PostId JOIN post_links_related prl ON pl.PostId = prl.RelatedPostId JOIN posts pr ON prl.RelatedPostId = pr.Id JOIN votes v ON pr.Id = v.AcceptedAnswerId WHERE p.Title = 'What are principal component scores?' \t----- bird -----\tcodebase_community",
    "656": " SELECT u.Display_Name FROM posts AS p JOIN users AS u ON p.Owner_User_Id = u.Id WHERE p.Parent_Id IS NOT NULL AND p.Score = (SELECT MAX(Score) FROM posts WHERE Parent_Id = p.Parent_Id) LIMIT 1; \t----- bird -----\tcodebase_community",
    "657": " SELECT u.display_name, u.website_url FROM users u JOIN votes v ON u.id = v.user_id JOIN posts p ON v.post_id = p.id WHERE v.vote_type_id = 8 AND p.creation_date >= '2022-01-01' AND p.creation_date < '2023-01-01' AND p.score > 0 GROUP BY u.id ORDER BY v.bounty_amount DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "658": " SELECT p.Title, p.ViewCount FROM posts p JOIN (     SELECT PostId, MAX(ViewCount) AS max_view_count     FROM post_history     GROUP BY PostId ) max_views ON p.PostId = max_views.PostId ORDER BY p.ViewCount DESC LIMIT 5; \t----- bird -----\tcodebase_community",
    "659": " SELECT COUNT(DISTINCT tags.Id) FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE posts.PostCount BETWEEN 5000 AND 7000; \t----- bird -----\tcodebase_community",
    "660": " SELECT MAX(posts.FavoriteCount) AS owner_user_id_of_most_valuable_post FROM posts JOIN users ON posts.OwnerUserIds = users.Id WHERE posts.PostTypeIds = 1 -- Assuming the most valuable posts are questions \t----- bird -----\tcodebase_community",
    "661": " SELECT u.Display_Name, u.Reputation FROM users u JOIN (     SELECT User_Id     FROM votes     GROUP BY User_Id     ORDER BY SUM(Vote_Type_Id) DESC     LIMIT 1 ) v ON u.Id = v.User_Id \t----- bird -----\tcodebase_community",
    "662": " SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE YEAR(posts.CreationDate) = 2011 AND votes.VoteType = 'Bounty' AND votes.BountyAmount = 50; \t----- bird -----\tcodebase_community",
    "663": " SELECT MIN(Age) AS youngest_user_id FROM users; \t----- bird -----\tcodebase_community",
    "664": " SELECT SUM(score) FROM comments WHERE post_history.creation_date = '2010-07-19'; \t----- bird -----\tcodebase_community",
    "665": " SELECT AVG(COUNT(post_links.Id)) AS average_monthly_links_2010_with_2_answers_or_less FROM post_links JOIN posts ON post_links.Post_Id = posts.Id JOIN users ON posts.Owner_User_Id = users.Id WHERE YEAR(posts.Creation_Date) = 2010 AND posts.Answer_Count <= 2 GROUP BY MONTH(posts.Creation_Date); \t----- bird -----\tcodebase_community",
    "666": " SELECT p.Id FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 GROUP BY p.Id HAVING MAX(v.FavoriteCount) = (SELECT MAX(FavoriteCount) FROM votes WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "667": " SELECT t.Title FROM posts AS p JOIN post_links AS l ON p.Id = l.PostId JOIN posts AS t ON l.RelatedPostId = t.Id WHERE l.CreationDate = (SELECT MIN(CreationDate) FROM post_links) ORDER BY p.CreationDate DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "668": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.Post_Id = b.Id GROUP BY u.Id ORDER BY COUNT(b.Name) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "669": " SELECT MIN(CreationDate) AS first_vote_date FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl'); \t----- bird -----\tcodebase_community",
    "670": " SELECT MIN(users.Age) AS youngest_user_age, MIN(posts.CreationDate) AS first_post_date FROM users JOIN posts ON users.Id = posts.OwnerUserId \t----- bird -----\tcodebase_community",
    "671": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' AND v.VoteType = 'Acquired' AND v.CreationDate = (SELECT MIN(CreationDate) FROM votes WHERE PostId = b.Id); \t----- bird -----\tcodebase_community",
    "672": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN posts ON users.Id = posts.OwnerUserIds JOIN votes ON posts.Id = votes.PostIds WHERE users.Location = 'United Kingdom' AND votes.VoteTypeId = 1 AND votes.CreationDate >= DATE('now', '-1 day') GROUP BY users.Id HAVING SUM(votes.BountyAmount) >= 4; \t----- bird -----\tcodebase_community",
    "673": " SELECT AVG(votes.PostId) AS average_posts_voted_by_oldest_users FROM votes JOIN users ON votes.User_Id = users.Id JOIN posts ON votes.Post_Id = posts.Id JOIN users AS oldest_users ON users.Age = oldest_users.Age WHERE oldest_users.Id = (SELECT Id FROM users ORDER BY Age DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "674": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.User_Id WHERE v.Vote_Type_Id = 1 GROUP BY u.Display_Name ORDER BY MAX(v.UpVotes) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "675": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN posts ON votes.Post_Id = posts.Id JOIN tags ON posts.Tag_Id = tags.Id WHERE users.Reputation > 2000 AND posts.Views > 1000; \t----- bird -----\tcodebase_community",
    "676": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.User_Id WHERE u.Age BETWEEN 19 AND 65; \t----- bird -----\tcodebase_community",
    "677": " SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserIds = users.Id WHERE users.DisplayName = 'Jay Stevens' AND YEAR(posts.CreationDate) = 2010; \t----- bird -----\tcodebase_community",
    "678": " SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "679": " SELECT p.Id, p.Title FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvote has id 1 GROUP BY p.Id, p.Title ORDER BY MAX(v.Score) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "680": " SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.Owner_User_Id = users.Id WHERE users.DisplayName = 'Stephen Turner'; \t----- bird -----\tcodebase_community",
    "681": " SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserIds JOIN post_history ph ON p.Id = ph.PostId JOIN comments c ON ph.Id = c.PostHistoryId WHERE YEAR(p.CreationDate) = 2011 GROUP BY u.Id, u.DisplayName HAVING SUM(ph.ViewCount) > 20000; \t----- bird -----\tcodebase_community",
    "682": " SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 AND p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE YEAR(CreationDate) = 2010); \t----- bird -----\tcodebase_community",
    "683": " SELECT \t(COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000)) AS percentage FROM \tposts \t----- bird -----\tcodebase_community",
    "684": " SELECT AVG(Age) as percentage FROM users WHERE Age BETWEEN 13 AND 18; \t----- bird -----\tcodebase_community",
    "685": " SELECT SUM(ViewCount) AS total_views FROM posts WHERE Text = 'Computer Game Datasets' AND OwnerUser = (     SELECT Id     FROM users     ORDER BY LastAccessDate DESC     LIMIT 1 );\t----- bird -----\tcodebase_community",
    "686": " SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.Owner_UserId = users.Id JOIN votes ON posts.Id = votes.Post_Id JOIN users ON votes.UserId = users.Id WHERE users.Views > (SELECT AVG(views) FROM users) \t----- bird -----\tcodebase_community",
    "687": " SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN (     SELECT Id, MAX(Score) AS max_score     FROM posts     GROUP BY Id ) sub ON p.Id = sub.Id AND c.Post_Id = sub.Id WHERE p.Score = sub.max_score; \t----- bird -----\tcodebase_community",
    "688": " SELECT p.Id, p.Title, p.ViewCount, p.CommentCount FROM posts p JOIN users u ON p.OwnerUserIds = u.Id JOIN votes v ON p.Id = v.PostId WHERE p.ViewCount > 35000 AND v.UserIds = u.Id AND v.VoteTypeId = 1 GROUP BY p.Id, p.Title, p.ViewCount, p.CommentCount HAVING SUM(v.VoteTypeId = 1) = 1 AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": " SELECT u.display_name, u.location FROM users u JOIN votes v ON u.id = v.user_id JOIN posts p ON v.post_id = p.id WHERE p.id = 183 GROUP BY u.id ORDER BY v.creation_date DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "690": " SELECT b.Name, b.Date FROM badges b JOIN (     SELECT User_Id, MAX(Date) AS max_date     FROM comments     WHERE User_Display_Name = 'Emmett'     GROUP BY User_Id ) c ON b.User_Id = c.User_Id JOIN posts p ON b.User_Id = p.Owner_User_Id WHERE b.Name = 'latest badge'; \t----- bird -----\tcodebase_community",
    "691": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id WHERE users.Age BETWEEN 19 AND 65 AND votes.UpVotes > 5000; \t----- bird -----\tcodebase_community",
    "692": " SELECT SUBTRACT(stats_badges.Date, users.CreationDate) AS time_to_badge, users.DisplayName FROM badges AS stats_badges JOIN users ON stats_badges.User_Id = users.Id WHERE users.DisplayName = 'Zolomon'; \t----- bird -----\tcodebase_community",
    "693": " SELECT u.Id, COUNT(p.Id) AS post_count, COUNT(c.Id) AS comment_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId WHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users) GROUP BY u.Id; \t----- bird -----\tcodebase_community",
    "694": " SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.User_Id = u.Id JOIN posts p ON c.Post_Id = p.Id WHERE p.Title = 'Analysing wind data with R' AND p.Owner_Id = u.Id ORDER BY c.Creation_Date DESC LIMIT 10; \t----- bird -----\tcodebase_community",
    "695": " SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": " SELECT COUNT(posts.Id) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": " SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon'; \t----- bird -----\tcodebase_community",
    "698": " SELECT COUNT(c.Id) AS comments, COUNT(a.Id) AS answers FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Clustering 1D data' AND u.Id = (SELECT User_Id FROM users WHERE Display_Name = 'YourUsername'); \t----- bird -----\tcodebase_community",
    "699": " SELECT MAX(CreationDate) AS creation_date FROM users WHERE DisplayName = 'IrishStat'; \t----- bird -----\tcodebase_community",
    "700": " SELECT COUNT(*) FROM posts WHERE bounty_amount > 30; \t----- bird -----\tcodebase_community",
    "701": " SELECT MAX(percentage) AS max_percentage FROM (     SELECT         COUNT(stats_posts.Id) AS score_count,         MAX(stats_users.Reputation) AS max_reputation     FROM stats_posts     JOIN stats_users ON stats_posts.OwnerUserId = stats_users.Id     WHERE stats_posts.Score > 50     GROUP BY stats_users.Id ) AS user_stats JOIN (     SELECT         COUNT(stats_posts.Id) AS total_posts     FROM stats_posts     WHERE stats_posts.Score > 50 ) AS post_count ON 1=1 \t----- bird -----\tcodebase_community",
    "702": " SELECT COUNT(*) FROM posts WHERE score < 20; \t----- bird -----\tcodebase_community",
    "703": " SELECT COUNT(*) FROM tags WHERE Id < 15 AND COUNT(*) <= 20;\t----- bird -----\tcodebase_community",
    "704": " SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample'; \t----- bird -----\tcodebase_community",
    "705": " SELECT u.Reputation, v.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'Commenter' AND c.Text = 'fine, you win :)'; \t----- bird -----\tcodebase_community",
    "706": " SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Title LIKE '%linear regression%';\t----- bird -----\tcodebase_community",
    "707": " SELECT p.Title, c.Text, c.Score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 AND c.Score = (SELECT MAX(Score) FROM comments WHERE PostId = p.Id); \t----- bird -----\tcodebase_community",
    "708": " SELECT u.Id, u.DisplayName, u.CreationDate, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN (     SELECT ph.PostId     FROM post_history ph     JOIN comments c ON ph.PostId = c.PostId     WHERE c.Text LIKE '%http://%' ); \t----- bird -----\tcodebase_community",
    "709": " SELECT COUNT(DISTINCT comments.Post_Id) AS num_posts_view_count_less_than_5 FROM comments JOIN posts ON comments.Post_Id = posts.Id WHERE comments.Score = 0 AND posts.View_Count < 5; \t----- bird -----\tcodebase_community",
    "710": " SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.Comment_Count = 1 AND c.Score = 0; \t----- bird -----\tcodebase_community",
    "711": " SELECT COUNT(DISTINCT users.Id) FROM comments JOIN users ON comments.User_Id = users.Id WHERE comments.Score = 0 AND users.Age > 40; \t----- bird -----\tcodebase_community",
    "712": " SELECT p.Id, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": " SELECT u.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": " SELECT comments.Text FROM comments JOIN users ON comments.User_Id = users.Id JOIN votes ON comments.Id = votes.Post_Id JOIN posts ON votes.Post_Id = posts.Id WHERE users.DisplayName = 'Harvey Motulsky'; \t----- bird -----\tcodebase_community",
    "715": " SELECT c.User Display Name FROM comments c JOIN users u ON c.User Id = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0; \t----- bird -----\tcodebase_community",
    "716": " SELECT     (COUNT(DISTINCT comments.User_Id) * 100.0 / (SELECT COUNT(DISTINCT comments.User_Id) FROM comments WHERE comments.Score BETWEEN 5 AND 10)) AS percentage FROM     comments WHERE     comments.Score BETWEEN 5 AND 10     AND comments.UpVotes = 0; \t----- bird -----\tcodebase_community",
    "717": " SELECT superpower.power_name FROM superpower JOIN hero_power ON hero_power.hero_id = superpower.id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = '3-D Man'; \t----- bird -----\tsuperhero",
    "718": " SELECT COUNT(*) FROM superpower WHERE power_name = 'Super Strength'; \t----- bird -----\tsuperhero",
    "719": " SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200; \t----- bird -----\tsuperhero",
    "720": " SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(sp.id) > 15; \t----- bird -----\tsuperhero",
    "721": " SELECT COUNT(*) FROM superhero WHERE hero_attribute_value = (SELECT colour.id FROM colour WHERE colour.colour = 'Blue'); \t----- bird -----\tsuperhero",
    "722": " SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.superhero_name = 'Apocalypse' AND hero_attribute.attribute_id = alignment.id AND alignment.id = (     SELECT id     FROM alignment     WHERE alignment.attribute_name ='skin colour' );\t----- bird -----\tsuperhero",
    "723": " SELECT COUNT(DISTINCT hero.id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Blue' AND hero_attribute.attribute_value = 1 AND superpower.power_name = 'Agility'; \t----- bird -----\tsuperhero",
    "724": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN colour c1 ON ha1.attribute_value = c1.id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN colour c2 ON ha2.attribute_value = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Blond'; \t----- bird -----\tsuperhero",
    "725": " SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics'; \t----- bird -----\tsuperhero",
    "726": " SELECT s.superhero_name, h.height_cm FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'height' AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ORDER BY h.height_cm DESC; \t----- bird -----\tsuperhero",
    "727": " SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron'; \t----- bird -----\tsuperhero",
    "728": " SELECT superhero.full_name, COUNT(superhero.id) AS popularity FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye colour' AND superhero.publisher_name = 'Marvel Comics' GROUP BY superhero.full_name ORDER BY popularity DESC; \t----- bird -----\tsuperhero",
    "729": " SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_name = 'Marvel Comics'; \t----- bird -----\tsuperhero",
    "730": " SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength'; \t----- bird -----\tsuperhero",
    "731": " SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics'; \t----- bird -----\tsuperhero",
    "732": " SELECT p.publisher_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Speed' GROUP BY s.publisher_id ORDER BY MIN(attribute_value) ASC LIMIT 1; \t----- bird -----\tsuperhero",
    "733": " SELECT COUNT(DISTINCT s.id) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE c.colour = 'Gold' AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'); \t----- bird -----\tsuperhero",
    "734": " SELECT publisher_name FROM superhero WHERE superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": " SELECT COUNT(*) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE c.colour = 'Blond'; \t----- bird -----\tsuperhero",
    "736": " SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute WHERE attribute_name = 'Intelligence'; \t----- bird -----\tsuperhero",
    "737": " SELECT race.race AS copycat_race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": " SELECT s.superhero_name, a.attribute_name, a.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND a.attribute_value < 50; \t----- bird -----\tsuperhero",
    "739": " SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch'; \t----- bird -----\tsuperhero",
    "740": " SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND hero_attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100; \t----- bird -----\tsuperhero",
    "741": " SELECT s.superhero_name, COUNT(hp.hero_id) AS power_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY power_count DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "742": " SELECT COUNT(*) FROM superhero WHERE race = 'Vampire'; \t----- bird -----\tsuperhero",
    "743": " SELECT COUNT(DISTINCT superhero.id) AS total_superheroes, COUNT(DISTINCT CASE WHEN hero_attributes.attribute_value = 1 THEN superhero.id END) AS bad_alignment_superheroes FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.attribute_name ='self-interest' AND alignment.id = (SELECT id FROM alignment WHERE attribute_name ='self-interest') AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'); \t----- bird -----\tsuperhero",
    "744": " SELECT SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, SUM(publisher_name = 'DC Comics') AS dc_superheroes, (SUM(publisher_name = 'Marvel Comics') - SUM(publisher_name = 'DC Comics')) AS superhero_difference FROM superhero; \t----- bird -----\tsuperhero",
    "745": " SELECT \"publisher_id\" FROM \"publisher\" WHERE \"publisher_name\" = 'Star Trek'; \t----- bird -----\tsuperhero",
    "746": " SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON hero_attribute.attribute_id = alignment.id; \t----- bird -----\tsuperhero",
    "747": " SELECT COUNT(*) FROM superhero WHERE full_name IS NULL; \t----- bird -----\tsuperhero",
    "748": " SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.id = 75; \t----- bird -----\tsuperhero",
    "749": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Deathlok'; \t----- bird -----\tsuperhero",
    "750": " SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender = 'Female'; \t----- bird -----\tsuperhero",
    "751": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.gender = 'Male'; \t----- bird -----\tsuperhero",
    "752": " SELECT s.superhero_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.attribute_name = 'eye colour' AND a.colour = 'No Colour'; \t----- bird -----\tsuperhero",
    "754": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 56; \t----- bird -----\tsuperhero",
    "755": " SELECT full_name FROM superhero WHERE race = 'Demi-God'; \t----- bird -----\tsuperhero",
    "756": " SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad'); \t----- bird -----\tsuperhero",
    "757": " SELECT s.race FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'weight_kg' AND ha.attribute_value = 169; \t----- bird -----\tsuperhero",
    "758": " SELECT h.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN colour c ON ha.attribute_id = c.id WHERE s.full_name = 'Human Superhero' AND s.race_id = (SELECT id FROM race WHERE race = 'human') AND s.height_cm = 185 AND c.colour = 'hair_colour'; \t----- bird -----\tsuperhero",
    "759": " SELECT MAX(superhero.weight_kg) AS heaviest_superhero_weight FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye colour' AND attribute.id = (SELECT id FROM colour WHERE colour = 'blue'); \t----- bird -----\tsuperhero",
    "760": " SELECT     (         SELECT             COUNT(*)         FROM             superhero         WHERE             height_cm BETWEEN 150 AND 180             AND publisher_name = 'Marvel Comics'     ) AS marvel_heroes_count,     (         SELECT             COUNT(*)         FROM             superhero     ) AS total_heroes_count,     (         SELECT             COUNT(*)         FROM             superhero         WHERE             height_cm BETWEEN 150 AND 180     ) AS marvel_heroes_height_count,     (         SELECT             COUNT(*)         FROM             superhero         WHERE             height_cm BETWEEN 150 AND 180             AND publisher_name = 'Marvel Comics'     ) * 100.0 / (         SELECT             COUNT(*)         FROM             superhero     ) AS percentage \t----- bird -----\tsuperhero",
    "761": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender') AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero) \t----- bird -----\tsuperhero",
    "762": " SELECT superpower.power_name, MAX(hero_power.COUNT(power_name)) AS max_power_count FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY superpower.power_name; \t----- bird -----\tsuperhero",
    "763": " SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1; \t----- bird -----\tsuperhero",
    "765": " SELECT COUNT(*) FROM superhero WHERE hero_power.power_name ='stealth'; \t----- bird -----\tsuperhero",
    "766": " SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='strength' GROUP BY superhero.full_name ORDER BY MAX(hero_attribute.attribute_value) DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "767": " SELECT AVG(superhero.id) AS average_superhero_id FROM superhero WHERE skin_colour_id = 1; \t----- bird -----\tsuperhero",
    "768": " SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Dark Horse Comics'; \t----- bird -----\tsuperhero",
    "769": " SELECT s.superhero_name, a.attribute_name, MAX(h.attribute_value) AS most_durability FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'durability' AND s.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name, a.attribute_name ORDER BY most_durability DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "770": " SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.hero_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.hero_id JOIN colour ON ha2.attribute_id = colour.id WHERE ha1.attribute_value = 1 AND ha2.attribute_id = (SELECT id FROM colour WHERE colour = 'blue'); \t----- bird -----\tsuperhero",
    "771": " SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight'; \t----- bird -----\tsuperhero",
    "772": " SELECT a.colour, h.colour, s.colour FROM colour a JOIN hero_attribute h ON a.id = h.attribute_id JOIN hero_attribute s ON h.attribute_id = s.attribute_id JOIN superhero h ON h.id = hero_attribute.hero_id JOIN alignment g ON hero_attribute.attribute_id = g.id WHERE g.gender = 'Female' AND g.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "773": " SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = (     SELECT c2.colour     FROM colour c2     WHERE c2.colour_id = (         SELECT a2.colour_id         FROM attribute a2         WHERE a2.attribute_name = 'eyes'         AND a2.hero_id = s.id     )     AND c2.colour_id = (         SELECT a3.colour_id         FROM attribute a3         WHERE a3.attribute_name = 'hair'         AND a3.hero_id = s.id     )     AND c2.colour_id = (         SELECT a4.colour_id         FROM attribute a4         WHERE a4.attribute_name ='skin'         AND a4.hero_id = s.id     ) ) JOIN superpower sp ON s.id = sp.hero_id JOIN hero_power hp ON s.id = hp.hero_id JOIN publisher p ON s.publisher_id = p.id GROUP BY s.superhero_name, p.publisher_name HAVING COUNT(DISTINCT hp.power_id) = (     SELECT COUNT(*)     FROM superpower sp2 ); \t----- bird -----\tsuperhero",
    "774": " SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb'; \t----- bird -----\tsuperhero",
    "775": " SELECT \tMULTIPLY( \t\tDIVIDE( \t\t\tSUM( \t\t\t\tCASE \t\t\t\t\tWHEN colour = 'Blue' AND gender = 'Female' THEN 1 \t\t\t\t\tELSE 0 \t\t\t\tEND \t\t\t), \t\t\tCOUNT(gender = 'Female') \t\t), \t\t100 \t) AS percentage FROM \tsuperhero \t----- bird -----\tsuperhero",
    "776": " SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'; \t----- bird -----\tsuperhero",
    "777": " SELECT superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": " SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation'; \t----- bird -----\tsuperhero",
    "779": " SELECT COUNT(DISTINCT power_id) AS num_powers FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo'); \t----- bird -----\tsuperhero",
    "780": " SELECT s.power_name FROM superhero AS h JOIN hero_power AS hp ON h.id = hp.hero_id JOIN superpower AS s ON hp.power_id = s.id WHERE h.full_name = 'Hunter Zolomon'; \t----- bird -----\tsuperhero",
    "781": " SELECT s.height_cm FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'eye colour' AND a.colour.colour = 'Amber'; \t----- bird -----\tsuperhero",
    "782": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN colour c ON h.attribute_id = c.id WHERE c.colour = 'Black' GROUP BY s.superhero_name HAVING COUNT(DISTINCT h.attribute_id) = 2; \t----- bird -----\tsuperhero",
    "783": " SELECT h.full_name, s.power_name FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN colour c ON ha.attribute_id = c.id JOIN superpower sp ON ha.power_id = sp.id WHERE c.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": " SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'race' AND attribute.id = (     SELECT id     FROM alignment     WHERE alignment.alignment = 'Vampire' );\t----- bird -----\tsuperhero",
    "785": " SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": " SELECT COUNT(DISTINCT hero_id) FROM hero_attribute JOIN superpower ON hero_attribute.hero_id = hero_power.hero_id JOIN hero ON hero_attribute.hero_id = hero.id WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength'); \t----- bird -----\tsuperhero",
    "787": " SELECT race.race, superhero.alignment FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.race_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": " SELECT (SUM(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(p.publisher_name = 'Marvel Comics')) * 100 AS percent FROM superhero g JOIN publisher p ON g.publisher_id = p.id; \t----- bird -----\tsuperhero",
    "789": " SELECT AVG(h.weight_kg) AS average_weight FROM superhero h JOIN hero_attribute h_a ON h.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id JOIN alignment al ON a.id = al.id WHERE al.attribute_name = 'Alien';\t----- bird -----\tsuperhero",
    "790": " SELECT SUM(weight_kg) - SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler'; \t----- bird -----\tsuperhero",
    "791": " SELECT superhero_id, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_id; \t----- bird -----\tsuperhero",
    "792": " SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination'; \t----- bird -----\tsuperhero",
    "793": " SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON attribute.id = race.id WHERE race.race = 'god/eternal' AND attribute.attribute_name = 'gender' AND hero_attribute.attribute_value = 1; \t----- bird -----\tsuperhero",
    "794": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name ORDER BY MAX(h.attribute_value) DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "795": " SELECT COUNT(*) FROM superhero WHERE alignment_id = 3; \t----- bird -----\tsuperhero",
    "796": " SELECT a.attribute_name, h.attribute_value FROM superhero AS s JOIN hero_attribute AS h ON s.id = h.hero_id JOIN attribute AS a ON h.attribute_id = a.id WHERE s.superhero_name = '3-D Man'; \t----- bird -----\tsuperhero",
    "797": " SELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_id JOIN colour AS c1 ON ha1.attribute_id = c1.id JOIN colour AS c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Brown'; \t----- bird -----\tsuperhero",
    "798": " SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'); \t----- bird -----\tsuperhero",
    "799": " SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL; \t----- bird -----\tsuperhero",
    "800": " SELECT     PERCENTAGE     FROM     (         SELECT             SUM(superhero_name) AS total_blue_eyed_superheroes,             COUNT(superhero_name) AS total_superheroes         FROM             superhero         WHERE             colour = 'Blue'     ) AS subquery     CROSS JOIN     (         SELECT             100.0 AS PERCENTAGE     ) AS percentage_table     WHERE         subquery.total_blue_eyed_superheroes IS NOT NULL; \t----- bird -----\tsuperhero",
    "801": " SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes FROM superhero; \t----- bird -----\tsuperhero",
    "802": " SELECT MAX(height_cm) AS tallest_superhero FROM superhero; \t----- bird -----\tsuperhero",
    "803": " SELECT superpower.id AS power_id FROM superpower JOIN hero_power ON hero_power.hero_id = superpower.id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": " SELECT superhero.superhero_name FROM superhero WHERE superhero.id = 294; \t----- bird -----\tsuperhero",
    "805": " SELECT s.full_name FROM superhero s WHERE s.weight_kg IS NULL OR s.weight_kg = 0; \t----- bird -----\tsuperhero",
    "806": " SELECT c.colour_name FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.full_name = 'Karen Beecher-Duncan'; \t----- bird -----\tsuperhero",
    "807": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr'; \t----- bird -----\tsuperhero",
    "808": " SELECT s.race FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id JOIN colour AS c1 ON a1.colour_id = c1.id WHERE c1.colour = 'black' \t----- bird -----\tsuperhero",
    "809": " SELECT publisher_name FROM superhero WHERE id = 38;\t----- bird -----\tsuperhero",
    "810": " SELECT r.race, MAX(sa.attribute_value) AS max_attribute_value FROM superhero AS s JOIN hero_attribute AS sa ON s.id = sa.hero_id JOIN attribute AS a ON sa.attribute_id = a.id JOIN race AS r ON a.id = r.id GROUP BY r.race ORDER BY max_attribute_value DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "811": " SELECT a.attribute_name, s.power_name FROM superhero AS h JOIN hero_attribute AS a ON h.id = a.hero_id JOIN alignment AS al ON a.attribute_id = al.id JOIN superpower AS s ON h.id = s.hero_id WHERE h.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": " SELECT full_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');\t----- bird -----\tsuperhero",
    "813": " SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.alignment_id = 3; \t----- bird -----\tsuperhero",
    "814": " SELECT s.skin_colour FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN alignment AS a ON ha.attribute_id = a.id WHERE a.attribute_value = 100; \t----- bird -----\tsuperhero",
    "815": " SELECT COUNT(*) FROM superhero WHERE gender.id = 2 AND hero.alignment.id = 1; \t----- bird -----\tsuperhero",
    "816": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_value BETWEEN 75 AND 80; \t----- bird -----\tsuperhero",
    "817": " SELECT s.race FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN colour AS c1 ON ha1.attribute_id = c1.id JOIN colour AS c2 ON c1.colour = 'blue' AND c2.id = colour.id JOIN gender AS g ON ha1.attribute_id = g.id JOIN gender AS g2 ON g.id = s.gender_id WHERE g.gender ='male' AND c2.colour = 'blue'; \t----- bird -----\tsuperhero",
    "818": " SELECT     100.0 * COUNT(CASE WHEN gender.id = 2 AND alignment.id = 2 THEN 1 END)     / COUNT(alignment.id = 2)     AS percentage FROM     superhero WHERE     alignment.id = 2; \t----- bird -----\tsuperhero",
    "819": " SELECT     SUM(CASE WHEN hero_attribute.eye_colour_id = 7 THEN 1 ELSE 0 END) AS blue_eyed,     SUM(CASE WHEN hero_attribute.eye_colour_id = 1 THEN 1 ELSE 0 END) AS no_eye_colour FROM     superhero JOIN     hero_attribute ON superhero.id = hero_attribute.hero_id WHERE     superhero.weight_kg IS NULL; \t----- bird -----\tsuperhero",
    "820": " SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN hero_power ON hero_attribute.hero_id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Hulk' AND hero_attribute.attribute_name = 'Strength'; \t----- bird -----\tsuperhero",
    "821": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": " SELECT COUNT(DISTINCT hero.id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Green' AND hero_attribute.attribute_value = 1 AND alignment.alignment = 'Bad'; \t----- bird -----\tsuperhero",
    "823": " SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": " SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC; \t----- bird -----\tsuperhero",
    "825": " SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": " SELECT s.superhero_name, h.weight_kg FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON ha.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2 ON r.race_id = al2.id JOIN alignment al3 ON p.publisher_id = al3.id JOIN alignment al4 ON h.weight_kg = al4.weight_kg WHERE p.publisher_name = 'DC Comics' GROUP BY s.superhero_name ORDER BY h.weight_kg DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "827": " SELECT AVG(h.height_cm) AS average_height FROM superhero h JOIN hero_attribute a ON h.id = a.hero_id JOIN attribute attr ON a.attribute_id = attr.id WHERE attr.attribute_name IN ('Race', 'Non-human') AND h.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics'); \t----- bird -----\tsuperhero",
    "828": " SELECT s.superhero_name, a.attribute_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name, a.attribute_name ORDER BY MAX(h.attribute_value) DESC LIMIT 10; \t----- bird -----\tsuperhero",
    "829": " SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, (SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics')) AS difference FROM superhero; \t----- bird -----\tsuperhero",
    "830": " SELECT a.attribute_name FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Black Panther' GROUP BY a.attribute_name ORDER BY MIN(attribute_value) ASC LIMIT 1; \t----- bird -----\tsuperhero",
    "831": " SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": " SELECT s.superhero_name, MAX(s.height_cm) AS tallest_height FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.superhero_name; \t----- bird -----\tsuperhero",
    "833": " SELECT \"superhero_name\" FROM \"superhero\" WHERE \"full_name\" = 'Charles Chandler'; \t----- bird -----\tsuperhero",
    "834": " SELECT     (SUM(CASE WHEN t.gender = 'Female' THEN 1 ELSE 0 END) * 100.0 / COUNT(t.publisher_name)) AS percentage FROM     superhero t WHERE     t.publisher_name = 'George Lucas'; \t----- bird -----\tsuperhero",
    "835": " SELECT     (         SELECT             COUNT(*)         FROM             superhero         WHERE             publisher_name = 'Marvel Comics' AND             alignment = 'Good'     ) AS good_superheroes_count,     (         SELECT             COUNT(*)         FROM             superhero         WHERE             publisher_name = 'Marvel Comics'     ) AS total_marvel_superheroes_count,     (         SELECT             COUNT(*)         FROM             superhero         WHERE             publisher_name = 'Marvel Comics' AND             alignment = 'Bad'     ) AS bad_superheroes_count,     (         SELECT             COUNT(*)         FROM             superhero         WHERE             publisher_name = 'Marvel Comics' AND             alignment = 'Neutral'     ) AS neutral_superheroes_count,     (         SELECT             (                 (                     SELECT                         COUNT(*)                     FROM                         superhero                     WHERE                         publisher_name = 'Marvel Comics' AND                         alignment = 'Good'                 ) :: FLOAT / (                         (                             SELECT                                 COUNT(*)                             FROM                                 superhero                             WHERE                             publisher_name = 'Marvel Comics'                         ) :: FLOAT                     )             ) * 100.0         AS percentage     ) AS percentage_good_superheroes FROM     superhero WHERE     publisher_name = 'Marvel Comics'; \t----- bird -----\tsuperhero",
    "836": " SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'; \t----- bird -----\tsuperhero",
    "837": " SELECT hero_id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute) \t----- bird -----\tsuperhero",
    "838": " SELECT full_name FROM superhero WHERE superhero_name = 'Alien'; \t----- bird -----\tsuperhero",
    "839": " SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id JOIN colour AS c1 ON a1.colour_id = c1.id WHERE c1.colour = 'brown' AND s.weight_kg < 100; \t----- bird -----\tsuperhero",
    "840": " SELECT h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = 'Aquababy'; \t----- bird -----\tsuperhero",
    "841": " SELECT weight_kg, race FROM superhero WHERE id = 40;\t----- bird -----\tsuperhero",
    "842": " SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'neutral'); \t----- bird -----\tsuperhero",
    "843": " SELECT s.id FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence'; \t----- bird -----\tsuperhero",
    "844": " SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.hero_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.hero_id JOIN colour ON ha2.attribute_id = colour.id WHERE superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": " SELECT s.power_name FROM superhero AS s JOIN (     SELECT AVG(height_cm) AS avg_height     FROM superhero ) AS avg_height ON TRUE WHERE s.height_cm > (     SELECT MULTIPLY(avg_height.avg_height, 0.8)     FROM avg_height ); \t----- bird -----\tsuperhero",
    "846": " SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = q.raceId WHERE r.raceId = 20 AND q.position = 5 AND q.number = (SELECT MAX(number) FROM qualifying WHERE raceId = 20); \t----- bird -----\tformula_1",
    "847": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 19 AND r.round = 2 ORDER BY lt.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "848": " SELECT s.year FROM seasons AS se JOIN races AS r ON se.race_id = r.race_id JOIN circuits AS c ON r.circuit_id = c.circuit_id WHERE c.location = 'Shanghai' GROUP BY se.year HAVING COUNT(DISTINCT r.race_id) = 1; \t----- bird -----\tformula_1",
    "849": " SELECT races.name FROM races JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.url LIKE '%Circuit de Barcelona-Catalunya%'; \t----- bird -----\tformula_1",
    "850": " SELECT r.name FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE c.country = 'Germany'; \t----- bird -----\tformula_1",
    "851": " SELECT c.name, r.name AS race_name, p.position FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN lap_times l ON r.race_id = l.race_id JOIN pit_stops ps ON r.race_id = ps.race_id JOIN drivers d ON l.driver_id = d.driver_id JOIN pit_stops_driver_status pds ON ps.stop_id = pds.stop_id JOIN drivers_status ds ON pds.driver_id = ds.driver_id JOIN status s ON ds.status_id = s.status_id WHERE c.constructor_reference_name = 'Renault' ORDER BY r.year, p.position; \t----- bird -----\tformula_1",
    "852": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN seasons AS s ON r.race_id = s.race_id WHERE s.url LIKE '%2010%' AND (r.Circuit.country NOT IN ('Asia', 'Europe') AND r.Circuit.location NOT LIKE '%Asia%' AND r.Circuit.location NOT LIKE '%Europe%'); \t----- bird -----\tformula_1",
    "853": " SELECT r.name FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_Id WHERE c.country = 'Spain'; \t----- bird -----\tformula_1",
    "854": " SELECT circuits.latitude, circuits.longitude FROM circuits WHERE circuits.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": " SELECT r.name FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE c.location = 'Sepang International Circuit'; \t----- bird -----\tformula_1",
    "856": " SELECT r.name, s.url FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE r.circuit_id = (SELECT circuit_id FROM circuits WHERE circuit_reference_name = 'Sepang International Circuit') AND MONTH(r.date) = 9 AND YEAR(r.date) = 2022; \t----- bird -----\tformula_1",
    "857": " SELECT r.name, c.nationality, d.forename, d.surname, r.date, r.time, r.url FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id JOIN drivers d ON r.driver_id = d.driver_id WHERE r.name = 'Abu Dhabi Grand Prix'; \t----- bird -----\tformula_1",
    "858": " SELECT c.country FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN constructor_results cr ON r.race_id = cr.race_id JOIN constructors con ON cr.constructor_id = con.constructor_id WHERE r.race_id = 24 AND cr.points = 1; \t----- bird -----\tformula_1",
    "859": " SELECT q1_time FROM qualifying WHERE race_id = 354 AND driver_id = (     SELECT id     FROM drivers     WHERE forename = 'Bruno'     AND surname = 'Senna' );\t----- bird -----\tformula_1",
    "860": " SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON q.race_id = r.race_id WHERE r.race_id = 355 AND q.qualify_1 = '0:01:40'; \t----- bird -----\tformula_1",
    "861": " SELECT d.forename, d.surname, r.number FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN driver_standings_q3 ds_q3 ON d.driver_id = ds_q3.driverId JOIN qualifying q ON ds_q3.constructor_reference_name = q.race_id JOIN races r ON q.driver_id = r.driver_id WHERE r.race_id = 903 AND q3 LIKE 'M:54%'; \t----- bird -----\tformula_1",
    "862": " SELECT COUNT(DISTINCT driver_id) FROM races WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "863": " SELECT s.url FROM seasons s JOIN races r ON s.race_id = r.race_id WHERE r.race_no = 901; \t----- bird -----\tformula_1",
    "864": " SELECT COUNT(DISTINCT drivers.driverID) AS num_drivers_finished FROM races JOIN lap_times ON races.raceID = lap_times.raceID JOIN drivers ON lap_times.driverID = drivers.driverID WHERE races.date = '2015-11-29'; \t----- bird -----\tformula_1",
    "865": " SELECT d.forename, d.surname, d.date_of_birth FROM drivers d JOIN races r ON d.driver_id = r.driver_id WHERE r.race_id = 592 AND r.time IS NOT NULL ORDER BY d.date_of_birth ASC LIMIT 1; \t----- bird -----\tformula_1",
    "866": " SELECT d.forename, d.surname, d.url FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 161 AND lt.time LIKE 'M:SS%'; \t----- bird -----\tformula_1",
    "867": " SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverID = r.driverID JOIN constructor_results cr ON r.raceID = cr.raceID JOIN constructors c ON cr.constructorID = c.constructorID WHERE r.raceID = 933 AND cr.points = (SELECT MAX(points) FROM constructor_results WHERE raceID = 933) AND cr.constructorID = (SELECT constructorID FROM constructors WHERE name = (SELECT constructorReferenceName FROM constructor_results WHERE raceID = 933 AND points = (SELECT MAX(points) FROM constructor_results WHERE raceID = 933))); \t----- bird -----\tformula_1",
    "868": " SELECT races.location, races.latitude, races.longitude FROM races JOIN circuits ON races.Circuit_Id = circuits.circuit_id WHERE races.name = 'Malaysian Grand Prix'; \t----- bird -----\tformula_1",
    "869": " SELECT c.url FROM constructors c JOIN constructor_results cr ON c.constructor_id = cr.constructor_id JOIN seasons s ON cr.race_id = s.race_id WHERE s.race_id = 9 AND cr.points = (SELECT MAX(points) FROM constructor_results WHERE race_id = 9);\t----- bird -----\tformula_1",
    "870": " SELECT q1_time FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345; \t----- bird -----\tformula_1",
    "871": " SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN constructor_standings cs ON ds.constructorReferenceName = cs.constructorId JOIN constructors c ON cs.constructorId = c.constructorId WHERE ds.raceId = 347 AND ds.position = 2 AND ds.qualifying1 = '0:01:15' LIMIT 1; \t----- bird -----\tformula_1",
    "872": " SELECT d.forename, d.surname, d.code FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_number = 45 AND q.q3_time LIKE '0:01:33%'; \t----- bird -----\tformula_1",
    "873": " SELECT t3.time FROM races AS t1 JOIN lap_times AS t2 ON t1.race_id = t2.race_id JOIN drivers AS t3 ON t2.driver_id = t3.driver_id WHERE t1.race_id = 743 AND t3.driver_id = 1; \t----- bird -----\tformula_1",
    "874": " SELECT d.forename, d.surname, r.name, r.date, r.time, rs.points FROM drivers d JOIN races r ON d.driverID = r.driverID JOIN constructor_results cr ON r.raceID = cr.raceID JOIN constructors c ON cr.constructorID = c.constructorID WHERE r.name = 'San Marino Grand Prix' AND r.year = 2006 ORDER BY r.date, d.forename, d.surname LIMIT 1; \t----- bird -----\tformula_1",
    "875": " SELECT s.url FROM seasons s JOIN races r ON s.race_id = r.race_id WHERE r.race_no = 901; \t----- bird -----\tformula_1",
    "876": " SELECT COUNT(DISTINCT driver_id) FROM races WHERE date = '2015-11-29' AND position = 0; \t----- bird -----\tformula_1",
    "877": " SELECT d.forename, d.surname, MIN(d.date_of_birth) AS youngest_age FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 872 GROUP BY d.driver_id, d.forename, d.surname; \t----- bird -----\tformula_1",
    "878": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 348 ORDER BY lt.time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "879": " SELECT d.nationality FROM drivers d JOIN results r ON d.driver_id = r.driver_id JOIN races r2 ON r.race_id = r2.race_id JOIN lap_times lt ON r2.driver_id = lt.driver_id AND lt.lap = r.number WHERE lt.time = (SELECT MAX(time) FROM lap_times WHERE r2.driver_id = d.driver_id AND r2.race_id = r.race_id) \t----- bird -----\tformula_1",
    "880": " SELECT     (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853) * 100 FROM     results WHERE     driverId = (SELECT driverId FROM qualifying WHERE raceId = 853); \t----- bird -----\tformula_1",
    "881": " SELECT COUNT(DISTINCT drivers.driverID) * 100.0 / COUNT(drivers.driverID) AS completion_rate FROM drivers JOIN races ON drivers.driverID = races.driverID JOIN seasons ON races.raceID = seasons.raceID WHERE seasons.date = '1983-07-16'; \t----- bird -----\tformula_1",
    "882": " SELECT MIN(seasons.year) AS first_singapore_grand_prix_year FROM seasons JOIN races ON seasons.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.name = 'Marina Bay Street Circuit'; \t----- bird -----\tformula_1",
    "883": " SELECT COUNT(*) AS total_races FROM races WHERE year = 2005; \t----- bird -----\tformula_1",
    "884": " SELECT r.name FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE (s.year, s.month) = (SELECT MIN(year, month) FROM seasons);\t----- bird -----\tformula_1",
    "885": " SELECT r.name, r.date FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.year = 1999 ORDER BY r.date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "886": " SELECT MAX(year) AS max_year_of_races FROM races; \t----- bird -----\tformula_1",
    "887": " SELECT r.name FROM races AS r JOIN seasons AS s ON r.race_id = s.race_id WHERE s.year = 2017 AND NOT EXISTS (     SELECT 1     FROM seasons AS t     WHERE t.year = 2000     AND r.circuit_id = t.race_id );\t----- bird -----\tformula_1",
    "888": " SELECT c.name, c.location FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.year = (SELECT MIN(year) FROM races); \t----- bird -----\tformula_1",
    "889": " SELECT MAX(seasons.year) AS last_british_grand_prix_year FROM seasons JOIN races ON seasons.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.name = 'Brands Hatch' AND races.name = 'British Grand Prix'; \t----- bird -----\tformula_1",
    "890": " SELECT COUNT(DISTINCT seasons.race_ID) AS total_seasons FROM seasons JOIN races ON seasons.race_ID = races.race_ID JOIN circuits ON races.Circuit_ID = circuits.circuit_id WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom'; \t----- bird -----\tformula_1",
    "891": " SELECT d.forename, d.surname, rs.position FROM drivers d JOIN driver_standings rs ON d.driver_id = rs.driver_id JOIN seasons s ON rs.race_id = s.race_id WHERE s.url = 'http://www.f1live.net/2010/singapore' ORDER BY rs.position; \t----- bird -----\tformula_1",
    "892": " SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driver_id = results.driver_id JOIN status ON results.status_id = status.status_id WHERE status.status = 'Winner' GROUP BY drivers.driver_id ORDER BY SUM(results.points) DESC LIMIT 1; \t----- bird -----\tformula_1",
    "893": " SELECT d.forename, d.surname, r.points FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN race r ON ds.constructorReferenceName = r.raceID WHERE r.name = '2017 Chinese Grand Prix' LIMIT 3; \t----- bird -----\tformula_1",
    "894": " SELECT l.drivers.forename, r.name, MIN(lt.milliseconds) AS best_lap_time FROM lap_times l JOIN drivers d ON l.driver_id = d.driver_id JOIN races r ON l.race_id = r.race_id JOIN constructor_results cr ON r.race_id = cr.race_id JOIN constructors c ON cr.constructor_id = c.constructor_id JOIN lap_times lt ON l.lap = lt.lap AND l.driver_id = lt.driver_id WHERE lt.milliseconds IS NOT NULL GROUP BY l.drivers.forename, r.name ORDER BY best_lap_time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "895": " SELECT AVG(milliseconds) AS average_lap_time FROM lap_times JOIN drivers ON lap_times.driver_id = drivers.driver_id JOIN races ON lap_times.race_id = races.race_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix'; \t----- bird -----\tformula_1",
    "896": " SELECT  100.0 *  COUNT(DISTINCT r.raceId)  AS percentage FROM  races r JOIN  drivers d ON r.driverId = d.driverId JOIN  constructors c ON r.constructorId = c.constructorId WHERE  d.surname = 'Hamilton' AND  r.year >= 2010 AND  r.position > 1 GROUP BY  NULL; \t----- bird -----\tformula_1",
    "897": " SELECT d.forename, d.surname, c.nationality, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverID = r.driverID JOIN constructors c ON r.constructorID = c.constructorID GROUP BY d.driverID ORDER BY max_points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "898": " SELECT d.forename, d.surname, d.dob, d.nationality FROM drivers d JOIN seasons s ON d.driverID = s.raceID JOIN constructors c ON s.constructorId = c.constructorId WHERE c.nationality = 'Japanese' ORDER BY d.dob ASC LIMIT 1; \t----- bird -----\tformula_1",
    "899": " SELECT c.circuit_reference_name, COUNT(r.race_id) AS race_count FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuit_reference_name HAVING race_count = 4; \t----- bird -----\tformula_1",
    "900": " SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE circuits.country = 'USA' AND races.year = 2006; \t----- bird -----\tformula_1",
    "901": " SELECT r.name, c.name AS circuit_name, r.location FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005; \t----- bird -----\tformula_1",
    "902": " SELECT r.name FROM races r JOIN lap_times lt ON r.race_id = lt.race_id JOIN drivers d ON lt.driver_id = d.driver_id WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND lt.position < 20; \t----- bird -----\tformula_1",
    "903": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN circuits AS c ON r.circuit_id = c.circuit_id WHERE c.location = 'Sepang International Circuit' AND r.driver_id = (SELECT id FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher'); \t----- bird -----\tformula_1",
    "904": " SELECT r.name, s.year FROM races r JOIN lap_times lt ON r.race_id = lt.race_id JOIN drivers d ON lt.driver_id = d.driver_id JOIN drivers_full_name df ON d.driver_id = df.driver_id WHERE df.forename = 'Michael' AND df.surname = 'Schumacher' AND lt.milliseconds = (SELECT MIN(milliseconds) FROM lap_times WHERE race_id = r.race_id);\t----- bird -----\tformula_1",
    "905": " SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine'); \t----- bird -----\tformula_1",
    "906": " SELECT r.name AS first_race, s.points AS points_recorded FROM races r JOIN seasons s ON r.race_id = s.race_id JOIN drivers d ON r.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "907": " SELECT r.name, s.country FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.year = 2017 ORDER BY r.date; \t----- bird -----\tformula_1",
    "908": " SELECT r.name, s.year, c.location FROM races r JOIN seasons s ON r.race_id = s.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE r.laps = (SELECT MAX(laps) FROM races); \t----- bird -----\tformula_1",
    "909": " SELECT COUNT(races.race_id) * 100.0 / (SELECT COUNT(races.race_id) FROM races WHERE races.country = 'Germany' AND races.name = 'European Grand Prix') AS percentage FROM races WHERE races.name = 'European Grand Prix' AND races.country = 'Germany'; \t----- bird -----\tformula_1",
    "910": " SELECT location, latitude, longitude FROM circuits WHERE circuits.name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "911": " SELECT \"name\" FROM \"circuits\" WHERE \"location\" IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY latitude DESC LIMIT 1; \t----- bird -----\tformula_1",
    "912": " SELECT \"circuit reference name\" FROM \"circuits\" WHERE \"name\" = 'Marina Bay Street Circuit'; \t----- bird -----\tformula_1",
    "913": " SELECT c.country FROM circuits c JOIN (     SELECT circuit_id, MAX(alt) AS max_altitude     FROM races     GROUP BY circuit_id ) r ON c.circuit_id = r.circuit_id WHERE c.alt = r.max_altitude; \t----- bird -----\tformula_1",
    "914": " SELECT COUNT(*) FROM drivers WHERE code IS NULL; \t----- bird -----\tformula_1",
    "915": " SELECT c.country FROM drivers d JOIN status s ON d.driver_id = s.driver_id JOIN results r ON d.driver_id = r.driver_id JOIN qualifying q ON d.driver_id = q.driver_id JOIN constructor c ON q.constructor_id = c.constructor_id WHERE r.position = 1 GROUP BY c.country ORDER BY MAX(r.date_of_birth) DESC LIMIT 1; \t----- bird -----\tformula_1",
    "916": " SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'italian'; \t----- bird -----\tformula_1",
    "917": " SELECT d.forename, d.surname, d.date_of_birth, d.nationality FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN seasons s ON ds.race_id = s.race_id WHERE ds.constructor_reference_name = 'Anthony Davidson'; \t----- bird -----\tformula_1",
    "918": " SELECT forename FROM drivers WHERE driverRef = 'Lewis Hamilton'; \t----- bird -----\tformula_1",
    "919": " SELECT circuits.circuit_reference_name FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE races.name = '2009 Spanish Grand Prix'; \t----- bird -----\tformula_1",
    "920": " SELECT DISTINCT seasons.url FROM seasons JOIN races ON seasons.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.circuit_reference_name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "921": " SELECT r.name FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.circuit_reference_name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "922": " SELECT r.time FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.location = 'Abu Dhabi' AND r.year BETWEEN 2010 AND 2019; \t----- bird -----\tformula_1",
    "923": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN circuits AS c ON r.circuit_id = c.circuit_id WHERE c.location LIKE '%Italy%'; \t----- bird -----\tformula_1",
    "924": " SELECT r.name, r.date FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE c.circuit_reference_name = 'Barcelona-Catalunya'; \t----- bird -----\tformula_1",
    "925": " SELECT c.circuit_reference_name, c.name, c.location, c.country, c.latitude, c.longitude, c.alt, c.url FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009; \t----- bird -----\tformula_1",
    "926": " SELECT MAX(fastestLapTime) AS fastest_lap_time FROM results JOIN drivers ON results.driverID = drivers.driverID JOIN seasons ON results.raceID = seasons.raceID WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "927": " SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverID = r.driverID JOIN lap_times lt ON r.driverID = lt.driverID AND r.lap = lt.lap JOIN status st ON r.statusId = st.statusId WHERE st.status = 'Fastest Lap'; \t----- bird -----\tformula_1",
    "928": " SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverID = r.driverID JOIN races e ON r.raceID = e.raceID WHERE e.name = 'Canadian Grand Prix' AND YEAR(r.date) = 2007 ORDER BY r.position ASC LIMIT 1; \t----- bird -----\tformula_1",
    "929": " SELECT r.name FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "930": " SELECT r.name AS race_name, MIN(rank) AS highest_rank FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN results res ON r.raceId = res.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' GROUP BY r.name ORDER BY highest_rank ASC LIMIT 1; \t----- bird -----\tformula_1",
    "931": " SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_2009_spanish_grand_prix FROM results WHERE raceId = (SELECT raceId FROM seasons WHERE url LIKE '%Spanish Grand Prix%');\t----- bird -----\tformula_1",
    "932": " SELECT r.year FROM drivers d JOIN races r ON d.driverID = r.driverID WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "933": " SELECT positionOrder FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix') AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "934": " SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverID = q.driverId JOIN races r ON r.raceID = q.raceId WHERE r.name = 'Australian Grand Prix' AND r.year = 1989 AND (SELECT grid FROM laptimes lt WHERE lt.driverID = d.driverID) = 4; \t----- bird -----\tformula_1",
    "935": " SELECT COUNT(DISTINCT drivers.driver_id) FROM races JOIN qualifying ON races.race_id = qualifying.race_id JOIN drivers ON qualifying.driver_id = drivers.driver_id WHERE races.name = '2008 Australian Grand Prix' AND races.time IS NOT NULL; \t----- bird -----\tformula_1",
    "936": " SELECT lap_times.time FROM lap_times JOIN drivers ON lap_times.driver_id = drivers.driver_id JOIN races ON drivers.driver_id = races.driver_id WHERE races.name = '2008 Australian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "937": " SELECT r.name, d.forename, d.surname, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN results res ON r.raceId = res.raceId AND d.driverId = res.driverId WHERE r.year = 2008 AND r.name = 'Austrian Grand Prix' AND res.rank = 2 ORDER BY r.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "938": "  [SQL] SELECT d.forename, d.surname, r.name FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN driver_standings_position sp ON ds.driver_standings_id = sp.driver_standings_id JOIN driver_standings_position_details pos ON sp.position_id = pos.position_id JOIN driver_standings_position_details_details dpos ON pos.details_id = dpos.details_id JOIN driver_standings_position_details_details_details dpsp ON dpos.details_id = dpsp.details_id JOIN driver_standings_position_details_details_details_details dpspp ON dpsp.details_id = dpspp.details_id JOIN driver_standings_position_details_details_details_details_details dpsppp ON dpspp.details_id = dpsppp.details_id JOIN driver_standings_position_details_details_details_details_details_details dpspppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details dpsppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details dpspppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details dpsppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details dpspppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details dpsppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details dpspppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details dpsppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpspppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpsppppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpspppppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpsppppppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpspppppppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details_details dpsppppppppppppppppp ON dpsppp.details_id = dpspppp.details_id JOIN driver_standings_position\t----- bird -----\tformula_1",
    "939": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN races ON drivers.driver_id = races.driver_id JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.url LIKE '%2008 Australian Grand Prix%' AND seasons.nationality = 'British'; \t----- bird -----\tformula_1",
    "940": " SELECT COUNT(DISTINCT drivers.driverID) AS total_drivers_raced FROM drivers JOIN races ON drivers.driverID = races.driverID JOIN seasons ON races.raceID = seasons.raceID WHERE seasons.url LIKE '%2008 Chinese Grand Prix%' AND races.year = 2008 AND races.round = 1; \t----- bird -----\tformula_1",
    "941": " SELECT SUM(points) FROM results JOIN drivers ON results.driver_id = drivers.driver_id JOIN constructors ON drivers.constructor_id = constructors.constructor_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "942": " SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverID = drivers.driverID JOIN circuits ON results.CircuitID = circuits.circuitID JOIN seasons ON results.raceID = seasons.raceID WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "943": " SELECT raceID FROM races WHERE name = '2008 Australian Grand Prix'; \t----- bird -----\tformula_1",
t----- bird -----\tformula_1",
    "945": " SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'; \t----- bird -----\tformula_1",
    "946": " SELECT circuits.location, circuits.latitude, circuits.longitude FROM circuits WHERE circuits.country = 'USA'; \t----- bird -----\tformula_1",
    "947": " SELECT COUNT(DISTINCT driver_id) FROM drivers WHERE nationality = 'British' AND YEAR(date_of_birth) > 1980; \t----- bird -----\tformula_1",
    "948": " SELECT c.nationality, MAX(r.points) AS max_points FROM constructors c JOIN constructor_results rr ON c.constructor_id = rr.constructor_id JOIN races r ON rr.race_id = r.race_id WHERE c.nationality = 'British' GROUP BY c.nationality; \t----- bird -----\tformula_1",
    "949": " SELECT c.ConstructorReferenceName, rs.points FROM constructors c JOIN constructor_results rs ON c.ConstructorId = rs.constructorId ORDER BY rs.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "950": " SELECT c.name FROM constructors c JOIN constructor_results cr ON c.constructor_id = cr.constructor_id JOIN seasons s ON cr.race_id = s.race_id WHERE s.race_id = 291 AND cr.points = 0; \t----- bird -----\tformula_1",
    "951": " SELECT COUNT(DISTINCT c.constructor_id) FROM constructors c JOIN constructor_results cr ON c.constructor_id = cr.constructor_id JOIN races r ON cr.race_id = r.race_id WHERE c.nationality = 'Japanese' AND cr.points = 0 AND r.race_id IN (SELECT race_id FROM races WHERE COUNT(race_id) = 2); \t----- bird -----\tformula_1",
    "952": " SELECT c.ConstructorReferenceName, c.points FROM constructor_results cr JOIN constructor c ON cr.constructorId = c.constructorId WHERE cr.status = '1' GROUP BY c.ConstructorReferenceName ORDER BY c.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "953": " SELECT COUNT(DISTINCT constructor_id) FROM constructors c JOIN races r ON c.constructor_id = r.constructor_id WHERE c.nationality = 'French' AND r.lap_number > 50; \t----- bird -----\tformula_1",
    "954": " SELECT COUNT(DISTINCT drivers.driverID) AS japanese_drivers, COUNT(races.raceID) AS total_races, (COUNT(DISTINCT drivers.driverID) / COUNT(races.raceID)) * 100 AS completion_percentage FROM drivers JOIN races ON drivers.driverID = races.driverID WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 AND races.time IS NOT NULL; \t----- bird -----\tformula_1",
    "955": " SELECT     s.year,     AVG(r.time_seconds) AS average_time_seconds FROM     seasons s JOIN     races r ON s.race_id = r.race_id JOIN     results r ON r.race_id = s.race_id AND r.driver_id = d.driver_id AND r.constructor_id = c.constructor_id JOIN     drivers d ON d.driver_id = r.driver_id JOIN     constructors c ON c.constructor_id = r.constructor_id WHERE     r.status_id = (SELECT status_id FROM status WHERE status = 'Champion')     AND s.year < 1975 GROUP BY     s.year ORDER BY     s.year; \t----- bird -----\tformula_1",
    "956": " SELECT d.forename, d.surname FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN seasons s ON ds.race_id = s.race_id WHERE s.year > 1975 AND ds.position = 2 AND d.date_of_birth > '1975-12-31'; \t----- bird -----\tformula_1",
    "957": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN driver_standings ON drivers.driver_id = driver_standings.driverId JOIN seasons ON driver_standings.constructor_id = seasons.race_id WHERE drivers.nationality = 'Italian' AND seasons.url LIKE '%race%not%finished%'; \t----- bird -----\tformula_1",
    "958": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id WHERE lt.time = (     SELECT MAX(time)     FROM lap_times     WHERE driver_id = d.driver_id ); \t----- bird -----\tformula_1",
    "959": " SELECT r.position, r.fastest_lap_number FROM results r JOIN status s ON r.status_id = s.status_id JOIN drivers d ON r.driver_id = d.driver_id JOIN constructors c ON r.constructor_id = c.constructor_id JOIN races e ON r.race_id = e.race_id WHERE e.year = 2009 AND s.status = 'Champion' ORDER BY r.fastest_lap_number DESC LIMIT 1; \t----- bird -----\tformula_1",
    "960": " SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM results WHERE raceID = (SELECT raceID FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "961": " SELECT r.name, s.year FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.url LIKE '%shortest actual finishing time%' AND (s.url LIKE '%Min(milliseconds)%' AND s.milliseconds IS NOT NULL) OR (s.url LIKE '%null%' AND s.milliseconds IS NULL); \t----- bird -----\tformula_1",
    "962": " SELECT \t( \t\tCOUNT(DISTINCT drivers.driverID) \t\t* 100.0 \t\t/ \t\t( \t\t\tSELECT \t\t\t\tCOUNT(DISTINCT drivers.driverID) \t\t\tFROM \t\t\t\tdrivers \t\t\tWHERE \t\t\t\tyear(drivers.dob) < 1985 \t\t\t\tAND laps > 50 \t\t) \t) AS percentage FROM \tdrivers WHERE \tyear(drivers.dob) < 1985 \tAND laps > 50 \t----- bird -----\tformula_1",
    "963": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN lap_times ON drivers.driver_id = lap_times.driver_id JOIN races ON lap_times.race_id = races.race_id JOIN seasons ON races.race_id = seasons.race_id WHERE drivers.nationality = 'French' AND lap_times.time < '02:00:00'; \t----- bird -----\tformula_1",
    "964": " SELECT * FROM drivers WHERE nationality = 'America'; \t----- bird -----\tformula_1",
    "965": " SELECT races.race_id FROM races JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.url LIKE '%2009%';\t----- bird -----\tformula_1",
    "966": " SELECT COUNT(DISTINCT drivers.driverID) FROM drivers JOIN races ON drivers.driverID = races.driverID WHERE races.raceID = 18; \t----- bird -----\tformula_1",
    "967": " SELECT     d.driverId,     d.forename,     d.surname,     c.nationality FROM     drivers d JOIN     driver_standings ds ON d.driverId = ds.driverId JOIN     constructor_standings cs ON ds.constructorReferenceName = cs.constructorId JOIN     constructors c ON cs.constructorId = c.constructorId WHERE     d.dateOfBirth < (SELECT MAX(dateOfBirth) FROM drivers) ORDER BY     points DESC LIMIT 3; \t----- bird -----\tformula_1",
    "968": " SELECT \"driverRef\" FROM \"drivers\" WHERE \"forename\" = 'Robert' AND \"surname\" = 'Kubica'; \t----- bird -----\tformula_1",
    "969": " SELECT COUNT(DISTINCT driver_id) FROM drivers WHERE nationality = 'British' AND YEAR(date_of_birth) = 1980; \t----- bird -----\tformula_1",
    "970": " SELECT d.forename, d.surname, r.year, r.round, r.CircuitId, r.name, l.time FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lap_times l ON r.raceId = l.raceId AND d.driverId = l.driverId WHERE d.nationality = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND l.time = (SELECT MIN(time) FROM lap_times WHERE raceId = r.raceId AND driverId = d.driverId) GROUP BY d.forename, d.surname, r.year, r.round, r.CircuitId, r.name ORDER BY r.year, r.round, l.time ASC LIMIT 3; \t----- bird -----\tformula_1",
    "971": " SELECT d.forename, d.surname, d.date_of_birth, d.nationality FROM drivers d JOIN qualifying q ON d.driver_id = q.driver_id JOIN seasons s ON q.race_id = s.race_id JOIN circuits c ON s.circuit_id = c.circuit_id WHERE c.country = 'Germany' AND d.nationality = 'German' AND s.year = (SELECT MIN(year) FROM seasons) ORDER BY d.date_of_birth ASC; \t----- bird -----\tformula_1",
    "972": " SELECT d.driver_id, d.code FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id WHERE r.year = 1971 AND l.fastest_lap_time = (SELECT MAX(fastest_lap_time) FROM lap_times WHERE race_id = r.race_id) AND d.date_of_birth = 1971; \t----- bird -----\tformula_1",
    "973": " SELECT d.forename, d.surname, r.year, r.round, r.CircuitId, r.name, l.time FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lap_times l ON r.raceId = l.raceId AND d.driverId = l.driverId JOIN (     SELECT driverId, MAX(time) AS latest_lap_time     FROM lap_times     WHERE driverId IN (         SELECT driverId FROM drivers         WHERE nationality = 'Spanish' AND year(dob) < 1982     )     GROUP BY driverId ) latest_laps ON l.time = latest_laps.latest_lap_time WHERE d.nationality = 'Spanish' AND year(dob) < 1982 ORDER BY r.year DESC, r.round DESC, l.time ASC LIMIT 10; \t----- bird -----\tformula_1",
    "974": " SELECT s.url AS racing_year_with_fastest_lap_time FROM seasons s JOIN results r ON s.race_id = r.race_id JOIN lap_times lt ON r.driver_id = lt.driver_id AND r.lap = lt.lap JOIN drivers d ON lt.driver_id = d.driver_id WHERE lt.time = (SELECT MIN(time) FROM lap_times WHERE lap_times.driver_id = lt.driver_id AND lap_times.lap = lt.lap) GROUP BY s.url; \t----- bird -----\tformula_1",
    "975": " SELECT s.year, MAX(lt.time) AS lowest_speed_of_lap_time FROM seasons s JOIN races r ON s.race_id = r.race_id JOIN lap_times lt ON r.race_id = lt.race_id AND r.driver_id = lt.driver_id GROUP BY s.year ORDER BY lowest_speed_of_lap_time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "976": " SELECT d.driver_id, r.race_id, r.time_first_lap FROM drivers d JOIN races r ON d.driver_id = r.driver_id JOIN lap_times lt ON r.race_id = lt.race_id AND lt.lap = 1 JOIN results res ON r.race_id = res.race_id AND r.driver_id = res.driver_id WHERE res.position = 1 ORDER BY r.time_first_lap DESC LIMIT 5; \t----- bird -----\tformula_1",
    "977": " SELECT COUNT(*) FROM races WHERE raceId BETWEEN 50 AND 100 AND statusId = 2; \t----- bird -----\tformula_1",
    "978": " SELECT c.name, c.location, c.latitude, c.longitude FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN seasons s ON r.race_id = s.race_id WHERE s.url LIKE '%Austria%' GROUP BY c.name, c.location, c.latitude, c.longitude HAVING COUNT(DISTINCT s.race_id) = 1; \t----- bird -----\tformula_1",
    "979": " SELECT r.name, COUNT(DISTINCT d.driver_id) AS finishers_count FROM races r JOIN drivers d ON r.driver_id = d.driver_id GROUP BY r.name ORDER BY finishers_count DESC LIMIT 1; \t----- bird -----\tformula_1",
    "980": " SELECT d.forename, d.surname, d.nationality, d.date_of_birth FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 23 AND lt.lap = 2 AND q.position = 2; \t----- bird -----\tformula_1",
    "981": " SELECT MIN(races.date) AS youngest_race_date, races.name, races.time FROM races JOIN drivers ON races.driver_id = drivers.driver_id JOIN qualifying ON races.race_id = qualifying.race_id JOIN constructors ON races.circuit_id = constructors.circuit_id WHERE drivers.dob = (SELECT MIN(drivers.dob) FROM drivers) AND qualifying.qualify_id = (SELECT MIN(qualifying.qualify_id) FROM qualifying); \t----- bird -----\tformula_1",
    "982": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN driver_standings ON drivers.driver_id = driver_standings.driverId JOIN seasons ON driver_standings.race_id = seasons.race_id JOIN status ON driver_standings.status_id = status.status_id WHERE status.status = 'Puncture' AND drivers.nationality = 'American'; \t----- bird -----\tformula_1",
    "983": " SELECT c.name AS italian_constructor, MAX(r.points) AS highest_points_to_date FROM constructors c JOIN constructor_results rr ON c.constructor_id = rr.constructor_id JOIN races r ON rr.race_id = r.race_id WHERE c.nationality = 'Italian' GROUP BY c.name ORDER BY highest_points_to_date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "984": " SELECT c.ConstructorReferenceName, SUM(r.wins) AS total_wins FROM circuits c JOIN races r ON c.circuitId = r.CircuitId JOIN constructor_results cr ON r.raceId = cr.raceId AND c.constructorId = cr.constructorId GROUP BY c.ConstructorReferenceName ORDER BY total_wins DESC LIMIT 1; \t----- bird -----\tformula_1",
    "985": " SELECT d.forename, d.surname, l.lap, l.time FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "986": " SELECT r.name AS race_name, l.time AS fastest_lap_time FROM races r JOIN lap_times l ON r.race_id = l.race_id JOIN drivers d ON r.driver_id = d.driver_id JOIN constructors c ON r.constructor_id = c.constructor_id WHERE l.lap = 1 ORDER BY l.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "987": " SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverID = drivers.driverID JOIN races ON races.raceID = results.raceID WHERE races.url = 'http://www.f1live.net/2006/usgp.html' AND drivers.nationality = 'United States' AND results.rank < 11 GROUP BY drivers.driverID LIMIT 10;\t----- bird -----\tformula_1",
    "988": " SELECT     d.forename,     d.surname,     AVG(p.duration) AS avg_pit_stop_duration FROM     drivers d JOIN     pit_stops p ON d.driver_id = p.driver_id JOIN     races r ON d.driver_id = r.driver_id JOIN     seasons s ON r.race_id = s.race_id WHERE     d.nationality = 'Germany'     AND s.year BETWEEN 1980 AND 1985     AND p.stop = 1 GROUP BY     d.forename,     d.surname ORDER BY     avg_pit_stop_duration ASC LIMIT 3; \t----- bird -----\tformula_1",
    "989": " SELECT d.forename, d.surname, r.time FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN race_results rr ON ds.driverId = rr.driverId JOIN races r ON rr.raceID = r.raceID WHERE r.name = 'Canadian Grand Prix' AND r.year = 2008 ORDER BY r.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "990": " SELECT c.constructor_reference_name, c.url FROM constructor_results cr JOIN constructor c ON cr.constructor_id = c.constructor_id JOIN races r ON cr.race_id = r.race_id WHERE r.name = '2009 Singapore Grand Prix' GROUP BY c.constructor_reference_name, c.url HAVING MAX(r.time) = (SELECT MAX(r2.time) FROM races r2 WHERE r2.name = '2009 Singapore Grand Prix'); \t----- bird -----\tformula_1",
    "991": " SELECT d.forename, d.surname, d.date_of_birth FROM drivers d JOIN status s ON d.driver_id = s.driver_id WHERE s.status = 'Austrian' AND d.date_of_birth BETWEEN '1981-01-01' AND '1991-12-31'; \t----- bird -----\tformula_1",
    "992": " SELECT d.forename, d.surname, 'https://de.wikipedia.org/wiki/' || d.forename || '_' || d.surname AS wikipedia_link, d.dob FROM drivers d JOIN seasons s ON d.driver_id = s.race_id WHERE s.year BETWEEN 1971 AND 1985 AND d.nationality = 'German' ORDER BY d.dob DESC; \t----- bird -----\tformula_1",
    "993": " SELECT name, location, country, latitude, longitude FROM circuits WHERE circuit_reference_name = 'Hungaroring'; \t----- bird -----\tformula_1",
    "994": " SELECT c.name, c.nationality FROM constructor_results cr JOIN constructor c ON cr.constructor_id = c.constructor_id WHERE cr.race_id IN (     SELECT s.race_id     FROM seasons s     WHERE s.url LIKE '%Monaco Grand Prix%'     AND s.year BETWEEN 1980 AND 2010 ) AND cr.points = (     SELECT MAX(cr2.points)     FROM constructor_results cr2     WHERE cr2.race_id = cr.race_id ); \t----- bird -----\tformula_1",
    "995": " SELECT AVG(results.points) FROM results JOIN drivers ON results.driver_id = drivers.driver_id JOIN seasons ON results.race_id = seasons.race_id JOIN races ON results.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.location = 'Turkey' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "996": " SELECT YEAR(races.date) AS year, COUNT(races.race_id) AS races_per_year FROM races WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year HAVING COUNT(races.race_id) > 0 ORDER BY year \t----- bird -----\tformula_1",
    "997": " SELECT MAX(nationality) AS majority_citizenship FROM drivers; \t----- bird -----\tformula_1",
    "998": " SELECT SUM(points) FROM results WHERE driverId = (     SELECT driverId     FROM driver standings     WHERE position = 91 );\t----- bird -----\tformula_1",
    "999": " SELECT r.name FROM races r JOIN results res ON r.race_id = res.race_id JOIN lap_times lt ON res.driver_id = lt.driver_id AND res.lap = lt.lap JOIN drivers d ON lt.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.position DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1000": " SELECT circuits.location +'(' + circuits.country + ')' AS full_location FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE races.date = (SELECT MAX(date) FROM races) LIMIT 1; \t----- bird -----\tformula_1",
    "1001": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON lt.driver_id = q.driver_id JOIN races r ON q.race_id = r.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE c.location = 'Marina Bay Street Circuit' AND r.year = 2008 AND q.position = 1 AND lt.lap = 3 GROUP BY d.driver_id, d.forename, d.surname ORDER BY d.forename, d.surname LIMIT 1; \t----- bird -----\tformula_1",
    "1002": " SELECT     d.forename,     d.surname,     c.nationality,     s.name FROM     drivers d     JOIN races r ON d.driver_id = r.driver_id     JOIN seasons s ON r.race_id = s.race_id     JOIN constructors c ON r.constructor_id = c.constructor_id WHERE     r.year = (SELECT MIN(year) FROM races) ORDER BY     r.date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1003": " SELECT     d.forename,     d.surname,     COUNT(CASE WHEN cr.status_id = 3 THEN 1 END) AS accidents_count FROM     drivers d JOIN     races r ON d.driver_id = r.driver_id JOIN     constructor_results cr ON r.race_id = cr.race_id WHERE     r.name = 'Canadian Grand Prix' GROUP BY     d.forename,     d.surname ORDER BY     accidents_count DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1004": " SELECT d.forename, d.surname, COUNT(r.result_id) AS wins FROM drivers d JOIN races r ON d.driver_id = r.driver_id JOIN results rs ON r.result_id = rs.result_id JOIN status st ON rs.status_id = st.status_id WHERE r.year = (SELECT MIN(year) FROM seasons) GROUP BY d.forename, d.surname ORDER BY wins DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1005": " SELECT MAX(duration) AS longest_time_spent_at_pitstop FROM pit_stops WHERE driver_id = (SELECT driver_id FROM results WHERE rank = 1); \t----- bird -----\tformula_1",
    "1006": " SELECT MAX(time) AS fastest_lap_time FROM lap_times WHERE race_id = (SELECT race_id FROM seasons WHERE url = 'https://example.com/race'); \t----- bird -----\tformula_1",
    "1007": " SELECT MAX(duration) AS longest_time_at_pit_stop FROM pit_stops WHERE driver_id = (SELECT id FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'); \t----- bird -----\tformula_1",
    "1008": " SELECT lap, stop FROM pit_stops WHERE driver_id = (     SELECT driver_id     FROM qualifying     WHERE name = 'Lewis Hamilton'     AND race_id = (         SELECT race_id         FROM races         WHERE year = 2011         AND name = 'Australian Grand Prix'     ) ) \t----- bird -----\tformula_1",
    "1009": " SELECT d.forename, d.surname, p.time FROM drivers d JOIN pit_stops ps ON d.driver_id = ps.driver_id JOIN lap_times lt ON ps.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.name = '2011 Australian Grand Prix' AND lt.lap = 1 AND lt.position = 1 AND lt.time IS NOT NULL; \t----- bird -----\tformula_1",
    "1010": " SELECT r.race_id, MAX(r.time) AS lap_record FROM results r JOIN drivers d ON r.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' GROUP BY r.race_id; \t----- bird -----\tformula_1",
    "1011": " SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverID = r.driverID JOIN races e ON r.raceID = e.raceID WHERE e.year = (SELECT MIN(year) FROM seasons) AND r.time = (SELECT MIN(time) FROM lap_times WHERE raceID = e.raceID) ORDER BY r.time ASC LIMIT 20; \t----- bird -----\tformula_1",
    "1012": " SELECT r.name, c.name AS constructor_name, l.position FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id JOIN lap_times l ON r.race_id = l.race_id AND l.driver_id = r.driver_id WHERE r.driver_id = (SELECT id FROM drivers WHERE forename = 'Lewis') AND r.race_id = (SELECT id FROM seasons WHERE url LIKE '%Formula_1%') AND l.time = (SELECT MIN(time) FROM lap_times WHERE race_id = r.race_id AND driver_id = r.driver_id); \t----- bird -----\tformula_1",
    "1013": " SELECT MAX(time) AS lap_record FROM races WHERE CircuitId = (SELECT circuit_id FROM circuits WHERE circuit_reference_name = 'Austrian Grand Prix Circuit'); \t----- bird -----\tformula_1",
    "1014": " SELECT c.name, r.name AS race_name, l.time FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN lap_times l ON r.race_id = l.race_id WHERE c.location = 'Italy' GROUP BY c.name, r.name ORDER BY l.time DESC; \t----- bird -----\tformula_1",
    "1015": " SELECT r.name AS race_name, s.url AS season_url, c.name AS circuit_name, l.time AS lap_record_time FROM races r JOIN circuits c ON r.circuit_id = c.circuit_id JOIN seasons s ON r.race_id = s.race_id JOIN lap_times l ON r.race_id = l.race_id AND l.driver_id = r.driver_id WHERE c.name = 'Austrian Grand Prix Circuit' AND l.time = (SELECT MAX(time) FROM lap_times WHERE race_id = r.race_id AND driver_id = r.driver_id); \t----- bird -----\tformula_1",
    "1016": " SELECT pit_stops.duration FROM races JOIN pit_stops ON races.race_id = pit_stops.race_id JOIN drivers ON races.driver_id = drivers.driver_id WHERE races.name = 'Austrian Grand Prix Circuit' AND drivers.forename = 'Driver Name' AND results.position = 1; \t----- bird -----\tformula_1",
    "1017": " SELECT c.location, c.latitude, c.longitude FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN results res ON r.race_id = res.race_id JOIN status st ON res.status_id = st.status_id WHERE st.status = 'Lap Record' AND res.time = '1:29.488' GROUP BY c.circuit_id, c.location, c.latitude, c.longitude HAVING COUNT(DISTINCT res.race_id) = 1; \t----- bird -----\tformula_1",
    "1018": " SELECT AVG(milliseconds) AS average_pit_stop_time FROM pit_stops JOIN drivers ON pit_stops.driver_id = drivers.driver_id JOIN races ON pit_stops.race_id = races.race_id JOIN constructors ON races.constructor_id = constructors.constructor_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "1019": " SELECT AVG(milliseconds) AS average_lap_time FROM lap_times JOIN races ON lap_times.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.country = 'Italy'; \t----- bird -----\tformula_1",
    "1020": " SELECT player_api_id FROM Player Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player Attributes); \t----- bird -----\teuropean_football_2",
    "1021": " SELECT MAX(height) AS tallest_player_height, player_name FROM Player JOIN Team ON Player.team_api_id = Team.team_api_id JOIN Match ON Player.home_player_1 = Match.home_player_1 OR Player.away_player_1 = Match.away_player_1 JOIN PlayerAttributes ON Match.home_player_1 = PlayerAttributes.player_api_id OR Match.away_player_1 = PlayerAttributes.player_api_id GROUP BY player_name HAVING MAX(height) = (SELECT MAX(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1022": " SELECT pa.preferred_foot FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN (     SELECT player_api_id, MIN(potential) AS min_potential     FROM PlayerAttributes     GROUP BY player_api_id ) min_potential ON pa.player_api_id = min_potential.player_api_id WHERE min_potential.min_potential = (     SELECT MIN(potential)     FROM PlayerAttributes ); \t----- bird -----\teuropean_football_2",
    "1023": " SELECT COUNT(*) FROM Player WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": " SELECT pa.player_api_id, pa.overall_rating FROM PlayerAttributes pa WHERE pa.attribute = 'crossing' ORDER BY pa.overall_rating DESC LIMIT 5; \t----- bird -----\teuropean_football_2",
    "1025": " SELECT l.name, MAX(SUM(m.home_team_goal + m.away_team_goal)) AS max_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY max_goals DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1026": " SELECT h.team_long_name, COUNT(m.id) AS lost_matches FROM Team h JOIN Match m ON h.team_api_id = m.home_team_api_id WHERE m.season = '2015/2016' GROUP BY h.team_long_name ORDER BY lost_matches ASC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1027": " SELECT player_name, penalties FROM Player ORDER BY penalties DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1028": " SELECT     t.team_long_name,     m.away_team_api_id,     m.season,     m.away_team_goal - m.home_team_goal AS goal_difference FROM     Team t JOIN     League l ON t.team_id = l.team_id JOIN     Match m ON l.id = m.league_id AND t.id = m.home_team_id WHERE     l.name = 'Scotland Premier League' AND     m.season = '2009/2010' GROUP BY     t.team_long_name,     m.away_team_api_id,     m.season HAVING     goal_difference > 0 ORDER BY     goal_difference DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1029": " SELECT t.team_long_name, MAX(ta.build_up_play_speed) AS top_build_up_play_speed FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id GROUP BY t.team_long_name ORDER BY top_build_up_play_speed DESC LIMIT 4; \t----- bird -----\teuropean_football_2",
    "1030": " SELECT l.name, MAX(m.draw_matches) AS max_draw_matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY max_draw_matches DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1031": " SELECT p.player_name, p.birthday, p.height, p.weight, p.sprint_speed FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.country_id WHERE l.name LIKE '2013%' AND l.name LIKE '2015%' AND p.sprint_speed >= 97 \t----- bird -----\teuropean_football_2",
    "1032": " SELECT MAX(COUNT(league_id)) AS league_with_highest_matches_and_count FROM Match; \t----- bird -----\teuropean_football_2",
    "1033": " SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59'; \t----- bird -----\teuropean_football_2",
    "1034": " SELECT player_api_id, MAX(overall_rating) AS highest_above_average_rating FROM Player Attributes WHERE substr(date, 1, 4) = '2010' GROUP BY player_api_id \t----- bird -----\teuropean_football_2",
    "1035": " SELECT t.team_fifa_api_id FROM Team t JOIN TeamAttributes ta ON t.team_api_id = ta.team_api_id WHERE ta.build_up_play_speed > 50 AND ta.build_up_play_speed < 60; \t----- bird -----\teuropean_football_2",
    "1036": " SELECT t.team_long_name, t.buildUpPlayPassing FROM Team AS t JOIN (     SELECT team_long_name, AVG(buildUpPlayPassing) AS avg_buildUpPlayPassing     FROM TeamAttributes     WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM TeamAttributes WHERE strftime('%Y', date) = '2012' AND team_long_name IS NOT NULL)     GROUP BY team_long_name ) AS above_avg_buildUpPlay ON t.team_long_name = above_avg_buildUpPlay.team_long_name WHERE t.team_long_name IN (SELECT team_long_name FROM above_avg_buildUpPlay); \t----- bird -----\teuropean_football_2",
    "1037": " SELECT     (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage_left_foot_players FROM     Player WHERE     YEAR(birthday) BETWEEN 1987 AND 1992; \t----- bird -----\teuropean_football_2",
    "1038": " SELECT     l.name AS league_name,     SUM(m.home_team_goal + m.away_team_goal) AS total_goals_combined FROM     League l JOIN     Match m ON l.id = m.league_id GROUP BY     l.name ORDER BY     total_goals_combined ASC LIMIT 5; \t----- bird -----\teuropean_football_2",
    "1039": " SELECT AVG(long_shots) AS average_long_shots FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag'); \t----- bird -----\teuropean_football_2",
    "1040": " SELECT p.player_name, AVG(h.heading_accuracy) AS avg_heading_accuracy FROM Player p JOIN PlayerAttributes h ON p.player_api_id = h.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1041": " SELECT t.team_long_name, t.chance_creation_passing FROM TeamAttributes ta JOIN Team t ON ta.team_federation_international_football_association_api_id = t.team_api_id WHERE ta.build_up_play_dribbling_class = 'Normal' AND ta.date >= '2014-01-01 00:00:00' AND ta.date <= '2014-12-31 23:59:59' AND t.chance_creation_passing < (SELECT AVG(chance_creation_passing) FROM TeamAttributes WHERE build_up_play_dribbling_class = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59') ORDER BY t.chance_creation_passing DESC; \t----- bird -----\teuropean_football_2",
    "1042": " SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal); \t----- bird -----\teuropean_football_2",
    "1043": " SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'; \t----- bird -----\teuropean_football_2",
    "1044": " SELECT player_name FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": " SELECT \"attacking work rate\" FROM \"Player Attributes\" WHERE \"player api id\" = (SELECT \"player api id\" FROM \"Player\" WHERE \"player name\" = 'Franco Zennaro'); \t----- bird -----\teuropean_football_2",
    "1046": " SELECT Team.team_long_name, TeamAttributes.buildUpPlayPositioningClass FROM Team JOIN TeamAttributes ON Team.team_federation_international_football_association_api_id = TeamAttributes.team_federation_international_football_association_api_id WHERE Team.team_long_name = 'ADO Den Haag'; \t----- bird -----\teuropean_football_2",
    "1047": " SELECT `overall_rating` AS `header's finishing rate` FROM `Player Attributes` WHERE `player federation international football association api id` = (     SELECT `player api id`     FROM `Player`     WHERE `player name` = 'Francois Affolter' ) AND `date` = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT player_api_id     FROM Player     WHERE player_name = 'Gabriel Tamas' ) AND date = strftime('%Y', date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": " SELECT COUNT(*) FROM Match WHERE League.name = 'Scotland Premier League' AND season = '2015/2016'; \t----- bird -----\teuropean_football_2",
    "1050": " SELECT pa.preferred_foot FROM Player AS p JOIN PlayerAttributes AS pa ON p.player_api_id = pa.player_api_id JOIN Team AS t ON p.team_api_id = t.team_api_id JOIN League AS l ON t.country_id = l.country_id JOIN Country AS c ON l.id = c.id WHERE p.latest_birthday = (SELECT MIN(birthday) FROM Player) AND pa.date = '2022-01-01'; \t----- bird -----\teuropean_football_2",
    "1051": " SELECT player_api_id, player_name, MAX(potential) AS highest_potential_score FROM Player GROUP BY player_api_id, player_name ORDER BY highest_potential_score DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1052": " SELECT COUNT(*) FROM Player WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": " SELECT DISTINCT team_short_name FROM Team JOIN TeamAttributes ON Team.team_api_id = TeamAttributes.team_api_id JOIN Match ON Team.team_api_id = Match.home_team_api_id JOIN PlayerAttributes ON Match.home_player_1 = PlayerAttributes.player_api_id WHERE TeamAttributes.chance_creation_passing_class = 'Risky'; \t----- bird -----\teuropean_football_2",
    "1054": " SELECT \"defensive_work_rate\" FROM \"Player Attributes\" WHERE \"player api id\" = (SELECT \"player api id\" FROM \"Player\" WHERE \"player name\" = 'David Wilson'); \t----- bird -----\teuropean_football_2",
    "1055": " SELECT t1.player_name, t1.birthday FROM Player AS t1 JOIN (     SELECT player_api_id     FROM PlayerAttributes     GROUP BY player_api_id     ORDER BY MAX(overall_rating) DESC     LIMIT 1 ) AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.overall_rating = (     SELECT MAX(overall_rating)     FROM PlayerAttributes     WHERE player_api_id = t2.player_api_id );\t----- bird -----\teuropean_football_2",
    "1056": " SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands'; \t----- bird -----\teuropean_football_2",
    "1057": " SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011'; \t----- bird -----\teuropean_football_2",
    "1058": " SELECT MAX(AVG(finishing)) AS highest_avg_finishing_rate FROM Player JOIN PlayerAttributes ON Player.player_api_id = PlayerAttributes.player_api_id WHERE PlayerAttributes.player_federation_international_football_association_api_id IN (     SELECT id FROM Country     ORDER BY height ASC     LIMIT 1 ) AND PlayerAttributes.player_federation_international_football_association_api_id IN (     SELECT id FROM Country     ORDER BY height DESC     LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1059": " SELECT player_name FROM Player WHERE height > 180; \t----- bird -----\teuropean_football_2",
    "1060": " SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990'; \t----- bird -----\teuropean_football_2",
    "1061": " SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170; \t----- bird -----\teuropean_football_2",
    "1062": " SELECT p.player_name FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010'; \t----- bird -----\teuropean_football_2",
    "1063": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran'); \t----- bird -----\teuropean_football_2",
    "1064": " SELECT player_api_id FROM Player WHERE preferred_foot = 'left'; \t----- bird -----\teuropean_football_2",
    "1065": " SELECT t.team_long_name FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id WHERE ta.build_up_play_speed_class = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": " SELECT TA.buildUpPlayPassingClass FROM TeamAttributes TA JOIN Team T ON TA.teamFederationInternationalFootballAssociationApiId = T.teamFederationInternationalFootballAssociationApiId WHERE T.teamShortName = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": " SELECT t.team_short_name FROM Team AS t JOIN TeamAttributes AS ta ON t.team_api_id = ta.team_api_id JOIN Match AS m ON t.team_api_id = m.home_team_api_id OR t.team_api_id = m.away_team_api_id WHERE ta.buildUpPlayPassing > 70; \t----- bird -----\teuropean_football_2",
    "1068": " SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player AS t1 JOIN PlayerAttributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 170 AND t2.date >= '2010-01-01' AND t2.date <= '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1069": " SELECT MIN(height) AS shortest_height FROM Player WHERE height = (SELECT MIN(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1070": " SELECT Country.name FROM League WHERE League.name = 'Italy Serie A'; \t----- bird -----\teuropean_football_2",
    "1071": " SELECT DISTINCT team_short_name FROM Team JOIN TeamAttributes ON Team.team_api_id = TeamAttributes.team_api_id JOIN PlayerAttributes ON TeamAttributes.team_federation_international_football_association_api_id = PlayerAttributes.player_federation_international_football_association_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32; \t----- bird -----\teuropean_football_2",
    "1072": " SELECT AVG(overall_rating) AS average_overall_rating FROM Player WHERE player_name = 'Aaron Doran'; \t----- bird -----\teuropean_football_2",
    "1073": " SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": " SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN TeamAttributes AS ta1 ON t1.team_federation_international_football_association_api_id = ta1.team_federation_international_football_association_api_id JOIN PlayerAttributes AS pa1 ON ta1.build_up_play_speed = pa1.build_up_play_speed JOIN PlayerAttributes AS pa2 ON ta1.build_up_play_speed_class = pa2.build_up_play_speed_class JOIN PlayerAttributes AS pa3 ON ta1.build_up_play_dribbling = pa3.build_up_play_dribbling JOIN PlayerAttributes AS pa4 ON ta1.build_up_play_dribbling_class = pa4.build_up_play_dribbling_class JOIN PlayerAttributes AS pa5 ON ta1.build_up_play_passing = pa5.build_up_play_passing JOIN PlayerAttributes AS pa6 ON ta1.build_up_play_passing_class = pa6.build_up_play_passing_class JOIN PlayerAttributes AS pa7 ON ta1.build_up_play_positioning_class = pa7.build_up_play_positioning_class JOIN PlayerAttributes AS pa8 ON ta1.chance_creation_passing = pa8.chance_creation_passing JOIN PlayerAttributes AS pa9 ON ta1.chance_creation_passing_class = pa9.chance_creation_passing_class JOIN PlayerAttributes AS pa10 ON ta1.chance_creation_crossing = pa10.chance_creation_crossing JOIN PlayerAttributes AS pa11 ON ta1.chance_creation_crossing_class = pa11.chance_creation_crossing_class JOIN PlayerAttributes AS pa12 ON ta1.chance_creation_shooting = pa12.chance_creation_shooting JOIN PlayerAttributes AS pa13 ON ta1.chance_creation_shooting_class = pa13.chance_creation_shooting_class JOIN PlayerAttributes AS pa14 ON ta1.chance_creation_positioning_class = pa14.chance_creation_positioning_class JOIN PlayerAttributes AS pa15 ON ta1.defence_pressure = pa15.defence_pressure JOIN PlayerAttributes AS pa16 ON ta1.defence_pressure_class = pa16.defence_pressure_class JOIN PlayerAttributes AS pa17 ON ta1.defence_aggression = pa17.defence_aggression JOIN PlayerAttributes AS pa18 ON ta1.defence_aggression_class = pa18.defence_aggression_class JOIN PlayerAttributes AS pa19 ON ta1.defence_team_width = pa19.defence_team_width JOIN PlayerAttributes AS pa20 ON ta1.defence_team_width_class = pa20.defence_team_width_class JOIN PlayerAttributes AS pa21 ON ta1.defence_defender_line_class = pa21.defence_defender_line_class WHERE m1.home_team_goal = 10 \t----- bird -----\teuropean_football_2",
    "1075": " SELECT pa.player_name, pa.balance_score FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = 61 AND pa.balance_score = (SELECT MAX(balance_score) FROM PlayerAttributes WHERE potential = 61); \t----- bird -----\teuropean_football_2",
    "1076": " SELECT SUBTRACT(AVG(ball_control) FROM (SELECT AVG(ball_control) AS avg_ball_control FROM Player Attributes WHERE player_name = 'Abdou Diallo') INTERSECT SELECT AVG(ball_control) FROM Player Attributes WHERE player_name = 'Aaron Appindangoye'); \t----- bird -----\teuropean_football_2",
    "1077": " SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'; \t----- bird -----\teuropean_football_2",
    "1078": " SELECT     player_name FROM     Player JOIN     PlayerAttributes ON     Player.player_api_id = PlayerAttributes.player_api_id WHERE     player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY     birthday DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1079": " SELECT MAX(height) AS tallest_player FROM Player; \t----- bird -----\teuropean_football_2",
    "1080": " SELECT COUNT(*) FROM Player WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": " SELECT Country.name FROM Country JOIN League AS l ON Country.id = l.country_id WHERE League.name = 'Belgium Jupiler League'; \t----- bird -----\teuropean_football_2",
    "1082": " SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany'; \t----- bird -----\teuropean_football_2",
    "1083": " SELECT MAX(overall_rating) AS strongest_overall_strength FROM Player Attributes; \t----- bird -----\teuropean_football_2",
    "1084": " SELECT COUNT(DISTINCT player_api_id) FROM Player WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high'; \t----- bird -----\teuropean_football_2",
    "1085": " SELECT MAX(crossing) AS best_crossing_player FROM Player Attributes WHERE player_api_id IN (     SELECT player_api_id     FROM Player     WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') );\t----- bird -----\teuropean_football_2",
    "1086": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT home_player_1     FROM Match     WHERE team_api_id = (         SELECT team_api_id         FROM Team         WHERE team_long_name = 'Ariel Borysiuk'     ) );\t----- bird -----\teuropean_football_2",
    "1087": " SELECT COUNT(*) FROM Player WHERE height > 180 AND volley_score > 70; \t----- bird -----\teuropean_football_2",
    "1088": " SELECT p.player_name FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70; \t----- bird -----\teuropean_football_2",
    "1089": " SELECT COUNT(MATCH.id) FROM MATCH JOIN LEAGUE ON MATCH.league_id = LEAGUE.id JOIN COUNTRY ON LEAGUE.country_id = COUNTRY.id WHERE COUNTRY.name = 'Belgium' AND MATCH.season = '2008/2009'; \t----- bird -----\teuropean_football_2",
    "1090": " SELECT MAX(long_passing) AS max_long_passing_score FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player); \t----- bird -----\teuropean_football_2",
    "1091": " SELECT COUNT(*) FROM Match WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = '2009-04'; \t----- bird -----\teuropean_football_2",
    "1092": " SELECT MAX(league_name) AS league_with_most_matches FROM League WHERE season = '2008/2009'; \t----- bird -----\teuropean_football_2",
    "1093": " SELECT AVG(overall_rating) AS average_overall_rating FROM Player WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": " SELECT (SUBQUERY(SELECT overall_rating FROM Player WHERE player_name = 'Ariel Borysiuk') - SUBQUERY(SELECT overall_rating FROM Player WHERE player_name = 'Paulin Puel'), 0) * 100 AS percentage_difference FROM Player; \t----- bird -----\teuropean_football_2",
    "1095": " SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM TeamAttributes WHERE team_long_name = 'Heart of Midlothian'; \t----- bird -----\teuropean_football_2",
    "1096": " SELECT AVG(T1.overall_rating) AS average_overall_rating FROM Player Attributes T1 WHERE T1.player_name = 'Pietro Marino'; \t----- bird -----\teuropean_football_2",
    "1097": " SELECT SUM(crossing) AS total_crossing_score FROM PlayerAttributes WHERE player_name = 'Aaron Lennox'; \t----- bird -----\teuropean_football_2",
    "1098": " SELECT MAX(chance_creation_passing) AS highest_score, chance_creation_passing_class FROM Team_Attributes WHERE team_long_name = 'Ajax'; \t----- bird -----\teuropean_football_2",
    "1099": " SELECT preferred_foot FROM Player WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": " SELECT MAX(overall_rating) AS highest_overall_rating FROM Player Attributes WHERE T2.player_name = 'Dorlan Pabon'; \t----- bird -----\teuropean_football_2",
    "1101": " SELECT AVG(away_team_goal) AS average_goals_away FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy'); \t----- bird -----\teuropean_football_2",
    "1102": " SELECT t1.player_name FROM Player AS t1 JOIN PlayerAttributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = 77 AND t2.date LIKE '2016-06-23%' ORDER BY t1.birthday DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1103": " SELECT overall_rating FROM Player Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": " SELECT overall_rating AS potential FROM Player Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": " SELECT `attacking work rate` FROM `Player Attributes` WHERE `player federation international football association api id` = (SELECT `id` FROM `Player` WHERE `player name` = 'Francesco Migliore') AND `date` LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": " SELECT `defensive_work_rate` FROM `Player Attributes` WHERE `player federation international football association api id` = (     SELECT `player api id`     FROM `Player`     WHERE `player name` = 'Kevin Berigaud' ) AND `date` = '2013-02-22 00:00:00'; \t----- bird -----\teuropean_football_2",
    "1107": " SELECT date FROM Player Attributes WHERE player_name = 'Kevin Constant' AND crossing = (SELECT MAX(crossing) FROM Player Attributes WHERE player_name = 'Kevin Constant'); \t----- bird -----\teuropean_football_2",
    "1108": " SELECT t2.build_up_play_speed_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_long_name = 'Willem II' AND t2.date = '2012-02-22'; \t----- bird -----\teuropean_football_2",
    "1109": " SELECT t2.build_up_play_dribbling_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_short_name = 'LEI' AND t2.date = '2015-09-10 00:00:00'; \t----- bird -----\teuropean_football_2",
    "1110": " SELECT t2.build_up_play_passing_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_long_name = 'FC Lorient' AND t2.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": " SELECT tc.chance_creation_passing_class FROM TeamAttributes AS ta JOIN Team AS t ON ta.team_federation_international_football_association_api_id = t.team_federation_international_football_association_api_id JOIN Match AS m ON t.team_api_id = m.away_team_api_id WHERE t.team_long_name = 'PEC Zwolle' AND m.date = '2013-09-20 00:00:00'; \t----- bird -----\teuropean_football_2",
    "1112": " SELECT t2.chance_creation_crossing_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_long_name = 'Hull City' AND t2.date = '2010-02-22 00:00:00'; \t----- bird -----\teuropean_football_2",
    "1113": " SELECT t.defence_aggression_class FROM TeamAttributes t JOIN Match m ON t.team_federation_international_football_association_api_id = m.team_federation_international_football_association_api_id JOIN Team team ON t.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hannover 96' AND m.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": " SELECT AVG(overall_rating) FROM Player Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21'; \t----- bird -----\teuropean_football_2",
    "1115": " SELECT     (SUBTRACT(overall_rating, (SELECT overall_rating FROM Player Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12'))),     (SELECT overall_rating FROM Player Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013/7/12') AS percentage FROM Player Attributes WHERE player_name IN ('Landon Donovan', 'Jordan Bowery') AND date = '2013/7/12'; \t----- bird -----\teuropean_football_2",
    "1116": " SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1117": " SELECT player_api_id FROM (     SELECT player_api_id, weight     FROM Player     WHERE id IN (         SELECT id         FROM Player         ORDER BY weight DESC         LIMIT 10     ) ) AS subquery \t----- bird -----\teuropean_football_2",
    "1118": " SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.country_id JOIN Country c ON l.id = c.id WHERE l.name = 'English Premier League' AND t.team_long_name = 'Manchester United' AND t.team_short_name = 'United'; \t----- bird -----\teuropean_football_2",
    "1119": " SELECT SUM(home_player_1.goal) FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id JOIN PlayerAttributes ON Match.home_player_1 = PlayerAttributes.player_api_id WHERE PlayerAttributes.player_name = 'Aaron Lennon'; \t----- bird -----\teuropean_football_2",
    "1120": " SELECT SUM(away_team_goal) FROM Match WHERE home_player_1 = 'Daan Smith' OR home_player_1 = 'Filipe Ferreira'; \t----- bird -----\teuropean_football_2",
    "1121": " SELECT SUM(home_team_goal) FROM Match JOIN Player Attributes ON Match.home_player_1 = Player_Attributes.player_api_id JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.birthday < DATE('now', 'localtime') - INTERVAL '30 years'; \t----- bird -----\teuropean_football_2",
    "1122": " SELECT MAX(overall_rating) AS strongest_player_rating FROM Player Attributes \t----- bird -----\teuropean_football_2",
    "1123": " SELECT player_name FROM Player JOIN PlayerAttributes ON Player.player_api_id = PlayerAttributes.player_api_id WHERE PlayerAttributes.potential = (SELECT MAX(potential) FROM PlayerAttributes); \t----- bird -----\teuropean_football_2",
    "1124": " SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id JOIN PlayerAttributes pa ON m.home_player_1 = pa.player_api_id WHERE ta.attacking_work_rate = 'high' GROUP BY p.player_name; \t----- bird -----\teuropean_football_2",
    "1125": " SELECT MAX(finishing) AS eldest_player_with_finishing_rate_of_1_name FROM Player WHERE finishing = 1 LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1126": " SELECT Player.player_name FROM Player JOIN Team ON Player.player_api_id = Team.team_api_id JOIN League ON Team.team_federation_international_football_association_api_id = League.country_id WHERE League.name = 'Belgium'; \t----- bird -----\teuropean_football_2",
    "1127": " SELECT p.player_name, c.name AS country FROM Player p JOIN TeamAttributes ta ON p.player_api_id = ta.home_player_1 JOIN Team t ON ta.team_api_id = t.team_api_id JOIN Country c ON t.team_federation_international_football_association_api_id = c.id WHERE ta.build_Up_Play_Vision > 89; \t----- bird -----\teuropean_football_2",
    "1128": " SELECT c.name, MAX(pa.weight) AS heaviest_average_weight FROM Country c JOIN Player p ON c.id = p.country_id JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id GROUP BY c.name ORDER BY heaviest_average_weight DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1129": " SELECT t.team_long_name FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE ta.build_Up_Play_Speed_Class = 'Slow' GROUP BY t.team_long_name; \t----- bird -----\teuropean_football_2",
    "1130": " SELECT t.team_short_name FROM Team t JOIN Match m ON t.team_api_id = m.away_team_api_id JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN PlayerAttributes pa ON m.home_player_X1 = pa.player_api_id WHERE ta.chance_creation_passing_class = 'Safe' \t----- bird -----\teuropean_football_2",
    "1131": " SELECT AVG(height) AS average_heights FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy'); \t----- bird -----\teuropean_football_2",
    "1132": " SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3; \t----- bird -----\teuropean_football_2",
    "1133": " SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Aaron%' AND birthday > '1990' AND YEAR(birthday) >= 1990; \t----- bird -----\teuropean_football_2",
    "1134": " SELECT SUBTRACT(jumping, jumping) AS difference_jumping FROM Player WHERE id = 6 AND id = 23; \t----- bird -----\teuropean_football_2",
    "1135": " SELECT pa.id FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.team_federation_international_football_association_api_id = l.country_id WHERE pa.potential = (SELECT MIN(potential) FROM PlayerAttributes) AND pa.preferred_foot = 'right'; \t----- bird -----\teuropean_football_2",
    "1136": " SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player) AS percentage_with_high_strength_stamina FROM Player WHERE strength > 80 AND stamina > 80; \t----- bird -----\teuropean_football_2",
    "1138": " SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Ekstraklasa'; \t----- bird -----\teuropean_football_2",
    "1139": " SELECT home_team_goal + away_team_goal AS final_score FROM Match WHERE date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Belgium Jupiler League'; \t----- bird -----\teuropean_football_2",
    "1140": " SELECT player_name, sprint_speed, agility, acceleration FROM Player WHERE player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": " SELECT buildUpPlaySpeedClass FROM TeamAttributes WHERE team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "1142": " SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league = (SELECT id FROM League WHERE name = 'Italian Serie A'); \t----- bird -----\teuropean_football_2",
    "1143": " SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')); \t----- bird -----\teuropean_football_2",
    "1144": " SELECT MAX(weight) AS heaviest_weight, PA.finishing_rate, PA.curve_score FROM Player AS P JOIN PlayerAttributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.weight = (SELECT MAX(weight) FROM Player) \t----- bird -----\teuropean_football_2",
    "1145": " SELECT League.name, COUNT(Match.id) AS games FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY games DESC LIMIT 4; \t----- bird -----\teuropean_football_2",
    "1146": " SELECT t2.team_long_name FROM Team AS t1 JOIN Match AS m ON t1.team_api_id = m.away_team_api_id JOIN PlayerAttributes AS p ON m.away_player_X1 = p.player_api_id WHERE p.goal = (SELECT MAX(goal) FROM PlayerAttributes) LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1147": " SELECT player_api_id, MAX(overall_rating) AS greatest_overall_strength FROM Player Attributes GROUP BY player_api_id \t----- bird -----\teuropean_football_2",
    "1148": " SELECT  PERCENTAGE FROM  (     SELECT         COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) AS count     FROM         Player Attributes     WHERE         player federation international football association api id IN (             SELECT player federation international football association api id FROM Player         )  ) AS subquery \t----- bird -----\teuropean_football_2",
    "1149": " SELECT     SEX,     COUNT(*) AS total_patients,     (COUNT(*) FILTER (WHERE Admission = '+')) * 100.0 / COUNT(*) AS percentage FROM     Patient WHERE     SEX = 'M' GROUP BY     SEX ORDER BY     percentage DESC; \t----- bird -----\tthrombosis_prediction",
    "1150": " SELECT \t(COUNT(patient_id) * 100.0 / (SELECT COUNT(patient_id) FROM patient WHERE SEX = 'F' AND year(birthday) > '1930')) AS percentage FROM \tpatient WHERE \tSEX = 'F' AND year(birthday) > '1930'; \t----- bird -----\tthrombosis_prediction",
    "1151": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE YEAR(Patient.Birthday) BETWEEN 1930 AND 1940) AS inpatient_percentage FROM Examination WHERE Examination.anti_Cardiolipin_antibody_IgG > 0 AND Examination.anti_Cardiolipin_antibody_IgM > 0 AND Examination.anti_nucleus_antibody > 0 AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Positive'; \t----- bird -----\tthrombosis_prediction",
    "1152": " SELECT     (SELECT COUNT(ID)      FROM Examination      WHERE Diagnosis = 'SLE' AND Admission = '+') /     (SELECT COUNT(ID)      FROM Examination      WHERE Diagnosis = 'SLE' AND Admission = '-') AS outpatient_to_inpatient_ratio \t----- bird -----\tthrombosis_prediction",
    "1153": " SELECT Diagnosis FROM Patient WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": " SELECT Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109; \t----- bird -----\tthrombosis_prediction",
    "1155": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.AST glutamic oxaloacetic transaminase > 500 AND E.ALT glutamic pyruvic transaminase > 500 AND E.lactate dehydrogenase > 500 AND E.alkaliphophatase > 500 AND E.total protein > 500 AND E.albumin > 500 AND E.uric acid > 500 AND E.urea nitrogen > 500 AND E.creatinine > 500 AND E.total bilirubin > 500 AND E.total cholesterol > 500 AND E.triglyceride > 500 AND E.creatinine phosphokinase > 500 AND E.blood glucose > 500 AND E.White blood cell > 500 AND E.Red blood cell > 500 AND E.Hemoglobin > 500 AND E.Hematoclit > 500 AND E.platelet > 500 AND E.prothrombin time > 500 AND E.activated partial prothrombin time > 500 AND E.fibrinogen > 500 AND E.PIC > 500 AND E.TAT > 500 AND E.TAT2 > 500 AND E.proteinuria IS NOT NULL AND E.Ig G > 500 AND E.Ig A > 500 AND E.Ig M > 500 AND E.C-reactive protein IS NOT NULL AND E.Rhuematoid Factor IS NOT NULL AND E.RAHA IS NOT NULL AND E.complement 3 > 500 AND E.complement 4 > 500 AND E.anti-ribonuclear protein IS NOT NULL AND E.anti-SM IS NOT NULL AND E.anti-scl70 IS NOT NULL AND E.anti-SSA IS NOT NULL AND E.anti-SSB IS NOT NULL AND E.anti-centromere IS NOT NULL AND E.anti-DNA IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1156": " SELECT P.ID, age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'positive degree of coagulation' AND age = SUBTRACT(year(current_timestamp), year(P.Birthday));\t----- bird -----\tthrombosis_prediction",
    "1157": " SELECT p.ID, p.SEX, d.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Examination_Diagnosis dd ON e.ID = dd.ID JOIN Diagnosis d ON dd.Diagnosis_ID = d.ID WHERE e.Thrombosis = 2 AND d.Diagnosis ='severe degree of thrombosis'; \t----- bird -----\tthrombosis_prediction",
    "1158": " SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Patient.Birthday) = 1937 AND Examination.T-CHO >= 250; \t----- bird -----\tthrombosis_prediction",
    "1159": " SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.albumin < 3.5; \t----- bird -----\tthrombosis_prediction",
    "1160": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_abnormal_total_protein FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.TP < '6.0' OR Examination.TP > '8.5'; \t----- bird -----\tthrombosis_prediction",
    "1161": " SELECT AVG(anti_cardiolipin_antibody_IgG) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'F' AND Patient.Birthday <= DATE('now', '-50 years'); \t----- bird -----\tthrombosis_prediction",
    "1162": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Description = '1997-01-01' AND Examination.Admission = '-'; \t----- bird -----\tthrombosis_prediction",
    "1163": " SELECT MIN(Birthday) AS youngest_age FROM Patient WHERE ID = (SELECT MIN(ID) FROM Examination); \t----- bird -----\tthrombosis_prediction",
    "1164": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 1 AND p.SEX = 'F' AND e.Examination_Date >= '1997-01-01' AND e.Examination_Date <= '1997-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1165": " SELECT MAX(age) - MIN(age) AS age_gap FROM Patient WHERE tg >= 200; \t----- bird -----\tthrombosis_prediction",
    "1166": " SELECT p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis, l.Symptoms FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.ID = (SELECT MIN(ID) FROM Examination) AND p.Diagnosis IS NOT NULL ORDER BY p.Birthday DESC; \t----- bird -----\tthrombosis_prediction",
    "1167": " SELECT     AVG(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS average_male_patients_per_month,     DATE(Laboratory.Date) AS lab_month FROM     Patient JOIN     Examination ON Patient.ID = Examination.ID JOIN     Laboratory ON Examination.ID = Laboratory.ID WHERE     DATE('now') BETWEEN DATE('1998-01-01') AND DATE('1998-12-31') GROUP BY     lab_month ORDER BY     lab_month; \t----- bird -----\tthrombosis_prediction",
    "1168": " SELECT MAX(Laboratory.Date) AS oldest_lab_date, (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS age_at_admission FROM Examination AS E JOIN Patient ON E.ID = Patient.ID JOIN Laboratory ON E.ID = Laboratory.ID WHERE E.Diagnosis = 'SJS'; \t----- bird -----\tthrombosis_prediction",
    "1169": " SELECT     COUNT(DISTINCT Patient.ID) AS male_count,     COUNT(DISTINCT Patient.ID) AS female_count,     (male_count / female_count) AS ratio FROM     Patient JOIN     Examination ON Patient.ID = Examination.ID WHERE     Examination.anti_Cardiolipin_antibody(IgG) > 0 AND     Examination.anti_Cardiolipin_antibody(IgM) > 0 AND     Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Abnormal' AND     (Patient.SEX = 'M' AND Examination.anti_Cardiolipin_antibody(IgG) <= 8.0) OR     (Patient.SEX = 'F' AND Examination.anti_Cardiolipin_antibody(IgG) <= 6.5); \t----- bird -----\tthrombosis_prediction",
    "1170": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1; \t----- bird -----\tthrombosis_prediction",
    "1171": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date BETWEEN '1990-01-01' AND '1993-12-31' AND Patient.SEX = 'underage'; \t----- bird -----\tthrombosis_prediction",
    "1172": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-BIL >= 2.0; \t----- bird -----\tthrombosis_prediction",
    "1173": " SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1174": " SELECT AVG(SUBTRACT(year(Birthday), 1999)) AS average_age_1999 FROM Patient WHERE Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": " SELECT     p.SEX,     p.Birthday,     p.Description,     p.First_Date,     p.Admission,     p.Diagnosis,     e.ID AS Examination_ID,     e.anti_Cardiolipin_antibody_IgG,     e.anti_Cardiolipin_antibody_IgM,     e.anti_nucleus_antibody,     e.pattern_observed_in_the_sheet_of_ANA_examination,     e.anti_Cardiolipin_antibody_IgA_concentration,     e.Diagnosis AS patient_diagnosis,     l.AST,     l.ALT,     l.lactate_dehydrogenase,     l.alkaliphophatase,     l.total_protein,     l.albumin,     l.uric_acid,     l.urea_nitrogen,     l.creatinine,     l.total_bilirubin,     l.total_cholesterol,     l.triglyceride,     l.creatinine_phosphokinase,     l.blood_glucose,     l.White_blood_cell,     l.Red_blood_cell,     l.Hemoglobin,     l.Hematocrit,     l.platelet,     l.prothrombin_time,     l.activated_partial_thromboplastin_time,     l.fibrinogen,     l.PIC,     l.TAT,     l.TAT2,     l.proteinuria,     l.Ig_G,     l.Ig_A,     l.Ig_M,     l.C_reactive_protein,     l.Rhuematoid_Factor,     l.RAHA,     l.complement_3,     l.complement_4,     l.anti_ribonuclear_protein,     l.anti_SM,     l.anti_scl70,     l.anti_SSA,     l.anti_SSB,     l.anti_centromere,     l.anti_DNA,     l.anti_DNA AS anti_DNA_count FROM     Patient p JOIN     Examination e ON p.ID = e.ID JOIN     Laboratory l ON e.ID = l.ID WHERE     p.ID = (         SELECT             ID         FROM             Examination         WHERE             Hemoglobin = (                 SELECT                     MAX(Hemoglobin)                 FROM                     Examination             )     ) \t----- bird -----\tthrombosis_prediction",
    "1176": " SELECT anti_nucleus_antibody FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02'; \t----- bird -----\tthrombosis_prediction",
    "1177": " SELECT `Symptoms` FROM `Examination` WHERE `ID` = 2927464 AND `Examination Date` = '1995-09-04'; \t----- bird -----\tthrombosis_prediction",
    "1178": " SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'AORTITIS' ORDER BY P.ID LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1179": " SELECT e.anti_Cardiolipin_antibody_IgM FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Diagnosis = 'SLE' AND e.Examination_Date = '1993-11-12'; \t----- bird -----\tthrombosis_prediction",
    "1180": " SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Date = '1992-06-12' AND E.anti-Cardiolipin antibody (IgG) = 9 AND (P.SEX = 'M' OR P.SEX = 'F'); \t----- bird -----\tthrombosis_prediction",
    "1181": " SELECT SUBTRACT(year(Date), year(Birthday)) AS age_at_test FROM Examination WHERE UA = '8.4' AND Date = '1991-10-21'; \t----- bird -----\tthrombosis_prediction",
    "1182": " SELECT COUNT(Laboratory.ID) AS total_laboratory_tests_in_1995 FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First_Date = '1991-06-13' AND Patient.Diagnosis = 'SJS'; \t----- bird -----\tthrombosis_prediction",
    "1183": " SELECT p.SEX, p.Description, p.First_Date, p.Admission FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'SLE' AND e.Examination_Date = '1997-01-27' AND NOT EXISTS (     SELECT 1     FROM Examination e2     WHERE e2.Patient_ID = p.ID       AND e2.Diagnosis!= 'SLE'       AND e2.Examination_Date < '1997-01-27' ); \t----- bird -----\tthrombosis_prediction",
    "1184": " SELECT Patient.Description FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.Examination Date = '1993-09-27'; \t----- bird -----\tthrombosis_prediction",
    "1185": " SELECT     (SUM(CASE WHEN DATE_PART('month', Birthday) = 11 AND DATE_PART('year', Birthday) = 1981 AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) -      SUM(CASE WHEN DATE_PART('month', Birthday) = 11 AND DATE_PART('year', Birthday) = 1981 AND Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) /     (SUM(CASE WHEN DATE_PART('month', Birthday) = 11 AND DATE_PART('year', Birthday) = 1981 AND Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END)) FROM     Patient WHERE     SEX = 'Unknown' AND     Birthday = '1959-02-18'; \t----- bird -----\tthrombosis_prediction",
    "1186": " SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'Behcet' AND e.Description BETWEEN '1997-01-01' AND '1997-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1187": " SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND e.AST glutamic oxaloacetic transaminase > 30 AND e.albumin < 4; \t----- bird -----\tthrombosis_prediction",
    "1188": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": " SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'Thrombosis level 2' AND Laboratory.ANA = 'S' AND Laboratory.anti-Cardiolip in antibody (IgM) = 20% * AVG(anti-Cardiolip in antibody (IgM)) GROUP BY Patient.ID; \t----- bird -----\tthrombosis_prediction",
    "1190": " SELECT 100.0 * COUNT(DISTINCT p.ID) AS percentage FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.pattern_observed_in_the_sheet_of_ANA_examination = 'Normal' AND l.UA < = 6.5 AND e.U-PRO > 0 AND e.U-PRO < 30; \t----- bird -----\tthrombosis_prediction",
    "1191": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(FIRST_DATE) = 1981) AS percentage_behcet FROM Examination WHERE DIAGNOSIS = 'BEHCET' AND ID IN (SELECT ID FROM Examination WHERE Patient_ID = Examination.ID); \t----- bird -----\tthrombosis_prediction",
    "1192": " SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.Admission = '-' AND l.Date LIKE '1991-10%' AND e.T-BIL < 2.0; \t----- bird -----\tthrombosis_prediction",
    "1193": " SELECT COUNT(*) FROM Examination WHERE anti_Cardiolipin_antibody_IgG > 0 AND anti_Cardiolipin_antibody_IgM > 0 AND anti_nucleus_antibody!= 'P' AND SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1194": " SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'PSS' AND Examination.C-reactive_protein = 'de 2+' AND Examination.creatinine = '1' AND Examination.LDH = '123';\t----- bird -----\tthrombosis_prediction",
    "1195": " SELECT AVG(ALB) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": " SELECT MAX(Symptoms) AS Most_Common_Sign FROM Examination WHERE Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1197": " SELECT Patient.Description, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 48473; \t----- bird -----\tthrombosis_prediction",
    "1198": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": " SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) = 1997 AND AST > 8.5 AND AST < 6 \t----- bird -----\tthrombosis_prediction",
    "1200": " SELECT  DIVIDE(SUM(CASE WHEN Examination.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END),  SUM(CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 AS proportion_of_sles_with_thrombocytopenia FROM  Examination JOIN  Patient ON Examination.ID = Patient.ID JOIN  Laboratory ON Examination.ID = Laboratory.ID; \t----- bird -----\tthrombosis_prediction",
    "1201": " SELECT \t( \t\tSELECT \t\t\tCOUNT(DISTINCT Patient.ID) \t\tFROM \t\t\tPatient \t\t\tJOIN Examination ON Patient.ID = Examination.ID \t\t\tJOIN Laboratory ON Examination.ID = Laboratory.ID \t\tWHERE \t\t\tYEAR(Patient.Birthday) = 1980 \t\t\tAND Diagnosis = 'RA' \t\t\tAND SEX = 'F' \t) * 100 AS percentage FROM \tPatient; \t----- bird -----\tthrombosis_prediction",
    "1202": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE p.SEX = 'M' AND e.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND d.Diagnosis = 'Behcet'; \t----- bird -----\tthrombosis_prediction",
    "1203": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.WBC < 3.5; \t----- bird -----\tthrombosis_prediction",
    "1204": " SELECT DATEDIFF(Examination.First_Date, Patient.Admission) AS time_between_admission_and_evaluation FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298; \t----- bird -----\tthrombosis_prediction",
    "1205": " SELECT uric_acid FROM Examination WHERE ID = 57266 AND (UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F'); \t----- bird -----\tthrombosis_prediction",
    "1206": " SELECT L.Date, L.AST_glutamic_oxaloacetic_transaminase FROM Examination AS E JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Patient_ID = 48473 AND L.AST_glutamic_oxaloacetic_transaminase > 60; \t----- bird -----\tthrombosis_prediction",
    "1207": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Date = '1994-01-01' AND e.AST glutamic oxaloacetic transaminase (GOT) < 60; \t----- bird -----\tthrombosis_prediction",
    "1208": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.Laboratory.GPT > 60 AND e.Laboratory.GPT IS NOT NULL AND e.Diagnosis IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1209": " SELECT p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.ALT glutamic pylvic transaminase > 60 ORDER BY p.Birthday ASC; \t----- bird -----\tthrombosis_prediction",
    "1210": " SELECT AVG(LDH) AS average_ldh_normal_range FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE LDH < 500; \t----- bird -----\tthrombosis_prediction",
    "1211": " SELECT p.ID, (SUBTRACT(year(current_timestamp), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.lactate_dehydrogenase BETWEEN 100 AND 300 AND e.lactate_dehydrogenase > 300 * 1.5 GROUP BY p.ID; \t----- bird -----\tthrombosis_prediction",
    "1212": " SELECT Admission FROM Patient WHERE ALP < 300 AND (Admission = '+') OR (Admission = '-'); \t----- bird -----\tthrombosis_prediction",
    "1213": " SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.Birthday = '1982-04-01' LIMIT 1;  [SQL] SELECT CASE     WHEN E.ALP < 300 THEN 'Within normal range'     ELSE 'Not within normal range' END AS alkaliphophatase_status FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE P.Birthday = '1982-04-01'; \t----- bird -----\tthrombosis_prediction",
    "1214": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.measure_of_degree_of_coagulation = 'TP < 6.0' AND E.anti_cardiolipin_antibody_IgG = 0 AND E.anti_cardiolipin_antibody_IgM = 0 AND E.anti_nucleus_antibody = 0 AND E.anti_cardiolipin_antibody_IgA = 0 AND E.thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1215": " SELECT p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.AST, l.ALT, l.lactate_dehydrogenase, l.alkaliphophatase, l.total_protein, l.albumin, l.uric_acid, l.urea_nitrogen, l.creatinine, l.total_bilirubin, l.total_cholesterol, l.triglyceride, l.creatinine_phosphokinase, l.blood_glucose, l.White_blood_cell, l.Red_blood_cell, l.Hemoglobin, l.Hematoclit, l.platelet, l.prothrombin_time, l.activated_partial_prothrombin_time, l.fibrinogen, l.PIC, l.TAT, l.TAT2, l.proteinuria, l.Ig_G, l.Ig_A, l.Ig_M, l.C_reactive_protein, l.Rhuematoid_Factor, l.RAHA, l.complement_3, l.complement_4, l.anti_ribonuclear_protein, l.anti_SM, l.anti_scl70, l.anti_SSA, l.anti_SSB, l.anti_centromere, l.anti_DNA, l.anti_DNA AS deviation_from_normal FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.total_protein > 8.5; \t----- bird -----\tthrombosis_prediction",
    "1216": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.albumin NOT BETWEEN 3.5 AND 5.5 ORDER BY P.Birthday DESC; \t----- bird -----\tthrombosis_prediction",
    "1217": " SELECT Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Patient.Birthday) = 1982 AND albumin BETWEEN 3.5 AND 5.5; \t----- bird -----\tthrombosis_prediction",
    "1218": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_high_UA FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Positive' AND Examination.anti-Cardiolipin_antibody_(IgG) > 100 AND Examination.uric_acid > 8.0 AND Patient.SEX = 'F'; \t----- bird -----\tthrombosis_prediction",
    "1219": " SELECT AVG(Laboratory.UA) AS average_UA_index FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' OR Patient.SEX = 'F' AND Laboratory.UA < 8.0 AND Laboratory.UA < 6.5 AND Laboratory.ID = (SELECT MAX(ID) FROM Examination); \t----- bird -----\tthrombosis_prediction",
    "1220": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.urea_nitrogen = 29; \t----- bird -----\tthrombosis_prediction",
    "1221": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'RA' AND e.UN < 30 \t----- bird -----\tthrombosis_prediction",
    "1222": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.measure_of_degree_of_coagulation LIKE '%creatinine index out of the normal range%'; \t----- bird -----\tthrombosis_prediction",
    "1223": " SELECT COUNT(DISTINCT Patient.ID) AS male_count, COUNT(DISTINCT Patient.ID) AS female_count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE >= 1.5 AND Patient.SEX = 'M' GROUP BY Patient.SEX;  SELECT COUNT(DISTINCT Patient.ID) AS male_count, COUNT(DISTINCT Patient.ID) AS female_count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE >= 1.5 AND Patient.SEX = 'F' GROUP BY Patient.SEX;  SELECT CASE     WHEN male_count > female_count THEN 'True'     WHEN male_count < female_count THEN 'False'     ELSE 'Ambiguous' END AS result; \t----- bird -----\tthrombosis_prediction",
    "1224": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.measure_of_degree_of_coagulation = 'MAX(T-BIL)' \t----- bird -----\tthrombosis_prediction",
    "1225": " SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Examination.ID) AS Examination_IDs, COUNT(Examination.ID) AS Patient_Count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-BIL > 2.0 GROUP BY Patient.SEX; \t----- bird -----\tthrombosis_prediction",
    "1226": " SELECT P.ID, L.T_CHO FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.Birthday = (SELECT MIN(P2.Birthday) FROM Patient P2) AND L.T_CHO = (SELECT MAX(L2.T_CHO) FROM Examination E2 JOIN Laboratory L2 ON E2.ID = L2.ID) \t----- bird -----\tthrombosis_prediction",
    "1227": " SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250; \t----- bird -----\tthrombosis_prediction",
    "1228": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti-Cardiolipin antibody (IgG) > 100 AND e.anti-Cardiolipin antibody (IgM) > 100 AND e.anti-nucleus antibody > 100 AND e.pattern_observed_in_the_sheet_of_ANA_examination = 'TG index > 100' AND e.Diagnosis LIKE '%TG index > 100%'; \t----- bird -----\tthrombosis_prediction",
    "1229": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgG) > 1.0 AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Positive' AND Examination.measure_of_degree_of_coagulation = 'Elevated'; \t----- bird -----\tthrombosis_prediction",
    "1230": " SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.Admission = '-';  AND Laboratory.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1231": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.Birthday BETWEEN '1936' AND '1956' AND Examination.CPK >= 250; \t----- bird -----\tthrombosis_prediction",
    "1232": " SELECT P.ID, P.SEX, P.Birthday + INTERVAL 'age' age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.GLU >= 180 AND E.T-CHO < 250 \t----- bird -----\tthrombosis_prediction",
    "1233": " SELECT p.ID, l.GLU FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Description = '1991' AND l.GLU < 180; \t----- bird -----\tthrombosis_prediction",
    "1234": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.AST glutamic oxaloacetic transaminase > 30 OR e.ALT glutamic pyruvic transaminase > 30 AND e.White blood cell < 3.5 OR e.White blood cell > 9.0 GROUP BY p.SEX ORDER BY p.Birthday ASC; \t----- bird -----\tthrombosis_prediction",
    "1235": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RBC < 3.5 \t----- bird -----\tthrombosis_prediction",
    "1236": " SELECT p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.AST, l.ALT, l.lactate_dehydrogenase, l.alkaliphophatase, l.total_protein, l.albumin, l.uric_acid, l.urea_nitrogen, l.creatinine, l.total_bilirubin, l.total_cholesterol, l.triglyceride, l.creatinine_phosphokinase, l.blood_glucose, l.White_blood_cell, l.Red_blood_cell, l.Hemoglobin, l.Hematoclit, l.platelet, l.prothrombin_time, l.activated_partial_prothrombin_time, l.fibrinogen, l.PIC, l.TAT, l.TAT2, l.proteinuria, l.Ig_G, l.Ig_A, l.Ig_M, l.C_reactive_protein, l.Rhuematoid_Factor, l.RAHA, l.complement_3, l.complement_4, l.anti_ribonuclear_protein, l.anti_SM, l.anti_scl70, l.anti_SSA, l.anti_SSB, l.anti_centromere, l.anti_DNA, l.anti_DNA AS abnormal_red_blood_cell FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= DATE('now', '-50 years') AND (p.Red_blood_cell < 3.5 OR p.Red_blood_cell > 6.0) AND (p.Admission = '+' OR p.Admission = '-'); \t----- bird -----\tthrombosis_prediction",
    "1237": " SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'outpatients' AND Examination.Symptoms = 'low hemoglobin level'; \t----- bird -----\tthrombosis_prediction",
    "1238": " SELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.HGB BETWEEN 10 AND 17 ORDER BY E.Birthday ASC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1239": " SELECT p.ID, p.age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.pattern = 'pattern_exceeding_normal_range' GROUP BY p.ID HAVING COUNT(e.ID) > 2; \t----- bird -----\tthrombosis_prediction",
    "1240": " SELECT AVG(HCT) AS average_low_hematoclit FROM Examination WHERE Date LIKE '1991%' AND HCT < 29; \t----- bird -----\tthrombosis_prediction",
    "1241": " SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT < 100;  SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT > 400;  SELECT (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT < 100) - (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'True' AND PLT > 400) AS difference; \t----- bird -----\tthrombosis_prediction",
    "1242": " SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date = '1984' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) < 50 AND Examination.AST glutamic oxaloacetic transaminase BETWEEN 10 AND 40 AND Examination.ALT glutamic pyruvic transaminase BETWEEN 10 AND 40 AND Examination.lactate dehydrogenase BETWEEN 100 AND 400 AND Examination.alkaliphophatase BETWEEN 20 AND 80 AND Examination.total protein BETWEEN 6 AND 8 AND Examination.albumin BETWEEN 3.5 AND 5 AND Examination.uric acid BETWEEN 3 AND 7 AND Examination.urea nitrogen BETWEEN 5 AND 20 AND Examination.creatinine BETWEEN 0.5 AND 1.5 AND Examination.total bilirubin BETWEEN 0.3 AND 1.2 AND Examination.total cholesterol BETWEEN 150 AND 240 AND Examination.triglyceride BETWEEN 50 AND 150 AND Examination.creatinine phosphokinase BETWEEN 20 AND 150 AND Examination.blood glucose BETWEEN 60 AND 120 AND Examination.White blood cell BETWEEN 3.5 AND 11 AND Examination.Red blood cell BETWEEN 3.5 AND 5 AND Examination.Hemoglobin BETWEEN 12 AND 16 AND Examination.Hematoclit BETWEEN 35 AND 45 AND Examination.platelet BETWEEN 100 AND 400; \t----- bird -----\tthrombosis_prediction",
    "1243": " SELECT     P.SEX,     COUNT(P.ID) AS female_count,     COUNT(*) AS total_count,     (COUNT(P.ID) / COUNT(*)) * 100 AS percentage FROM     Patient P WHERE     P.SEX = 'F' AND     SUBTRACT(year(current_timestamp), year(P.Birthday)) > 55 HAVING     PT > = 14 \t----- bird -----\tthrombosis_prediction",
    "1244": " SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID IN (     SELECT Examination.ID     FROM Examination     WHERE Examination.Examination Date > '1992-12-31' ) AND Examination.PT < 14; \t----- bird -----\tthrombosis_prediction",
    "1245": " SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45; \t----- bird -----\tthrombosis_prediction",
    "1246": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Abnormal' AND Examination.anti-Cardiolipin_antibody_(IgA)_concentration > 0 AND Examination.Thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1247": " SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'M' AND Examination.WBC > 3.5 AND Examination.WBC < 9.0 AND Examination.FG <= 150 AND Examination.FG >= 450; \t----- bird -----\tthrombosis_prediction",
    "1248": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Birthday > '1980-01-01' AND Examination.FG < 150 OR Examination.FG > 450; \t----- bird -----\tthrombosis_prediction",
    "1249": " SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.proteinuria = 'U-PRO' > = 30; \t----- bird -----\tthrombosis_prediction",
    "1250": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.pattern_observed_in_the_sheet_of_ANA_examination = 'normal' AND e.Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1251": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgG) > 2000; \t----- bird -----\tthrombosis_prediction",
    "1252": " SELECT COUNT(*) FROM Patient WHERE Ig G > 900 AND Ig G < 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": " SELECT P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.IgA = (SELECT MAX(IgA) FROM Examination WHERE IgA BETWEEN 80 AND 500);\t----- bird -----\tthrombosis_prediction",
    "1254": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgA) > 80 AND Examination.anti-Cardiolipin antibody (IgA) < 500 AND Examination.Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": " SELECT Diagnosis FROM Examination WHERE IgM IN (SELECT IgM FROM Examination WHERE IgM ABNORMAL) GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1256": " SELECT COUNT(*) FROM Patient WHERE abnormal_C_reactive_protein = 'CRP ='+ AND Description IS NULL; \t----- bird -----\tthrombosis_prediction",
    "1257": " SELECT COUNT(*) FROM Patient WHERE creatinine_level = 'abnormal' AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.Rhuematoid_Factor = 'normal' AND l.measure_of_degree_of_coagulation = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": " SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday >= '1985-01-01' AND e.RhuematoidFactor IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": " SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.RF < 20 AND SUBSTRING(P.Birthday, 1, 4) - SUBSTRING(P.Birthday, 4, 2) > 60; \t----- bird -----\tthrombosis_prediction",
    "1261": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RhuematoidFactor < 20 AND Examination.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgG) > 0 AND Examination.anti-Cardiolipin antibody (IgM) > 0 AND Examination.pattern observed in the sheet of ANA examination = 'P' AND Examination.complement 3 > 35; \t----- bird -----\tthrombosis_prediction",
    "1263": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE Hematoclit NOT BETWEEN 29 AND 52 AND anti_Cardiolipin_antibody_IgA = (     SELECT MAX(anti_Cardiolipin_antibody_IgA)     FROM Examination     WHERE ID = e.ID );\t----- bird -----\tthrombosis_prediction",
    "1264": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis LIKE '%Blood Clots in veins%' AND Examination.complement_4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-ribonuclear protein = '-' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": " SELECT P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.anti_ribonuclear_protein NOT IN ('-', '+-') AND E.ID = (     SELECT MAX(ID)     FROM Examination     WHERE P.ID = E.ID );\t----- bird -----\tthrombosis_prediction",
    "1267": " SELECT COUNT(*) FROM Patient WHERE anti_SM IN ('-', '+-') AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti_SM = 'abnormal' AND e.pattern_observed_in_the_sheet_of_ANA_examination IS NOT NULL AND e.anti_SM NOT IN ('negative', '0') GROUP BY p.ID ORDER BY p.Birthday ASC LIMIT 3; \t----- bird -----\tthrombosis_prediction",
    "1269": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date > '1997-01-01' AND SC170 IN ('negative', '0'); \t----- bird -----\tthrombosis_prediction",
    "1270": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti_scl70 = 'normal' AND p.SEX = 'F' AND p.symptoms IS NULL; \t----- bird -----\tthrombosis_prediction",
    "1271": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti_SSA IN ('-','+') AND Examination.First_Date < '2000-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1272": " SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.anti_SSA = 'abnormal' AND E.First_Date = (SELECT MIN(First_Date) FROM Patient) AND NOT EXISTS (     SELECT 1     FROM Examination E2     WHERE E2.ID = E.ID     AND E2.anti_SSA = 'negative'     AND E2.First_Date = (SELECT MIN(First_Date) FROM Patient) );\t----- bird -----\tthrombosis_prediction",
    "1273": " SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.anti_SSB IN ('-', '+-') AND Examination.Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1274": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti_SSB IN ('negative', '0') AND Examination.Symptoms IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1275": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti_centromere IN ('-', '+-') AND e.anti_SSB IN ('-', '+-') AND p.SEX = 'M'; \t----- bird -----\tthrombosis_prediction",
    "1276": " SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti-DNA > 8 \t----- bird -----\tthrombosis_prediction",
    "1277": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-DNA = 'normal' AND Examination.Description IS NULL; \t----- bird -----\tthrombosis_prediction",
    "1278": " SELECT COUNT(*) FROM Patient WHERE IGG BETWEEN 900 AND 2000 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": " SELECT     (COUNT(CASE WHEN Examination.GOT > 60 AND Examination.Diagnosis = 'SLE' THEN 1 END) / COUNT(Examination.ID)) * 100 FROM     Examination \t----- bird -----\tthrombosis_prediction",
    "1280": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.AST glutamic oxaloacetic transaminase < 60; \t----- bird -----\tthrombosis_prediction",
    "1281": " SELECT MIN(Birthday) AS youngest_birthday FROM Patient WHERE AST glutamic oxaloacetic transaminase > 60; \t----- bird -----\tthrombosis_prediction",
    "1282": " SELECT P.ID, P.SEX, P.Birthday, MAX(L.GPT) AS Highest_GPT_Normal_Range FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.AST glutamic oxaloacetic transaminase < 60 AND L.ALT glutamic pyruvic transaminase < 60 GROUP BY P.ID, P.SEX, P.Birthday ORDER BY Highest_GPT_Normal_Range DESC LIMIT 3; \t----- bird -----\tthrombosis_prediction",
    "1283": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.AST glutamic oxaloacetic transaminase < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": " SELECT MIN(Patient.First_Date) AS first_recorded_date FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.LDH < 500 GROUP BY Patient.ID HAVING MAX(Examination.LDH) = LDH_max; \t----- bird -----\tthrombosis_prediction",
    "1285": " SELECT MAX(First_Date) AS latest_patient_date FROM Patient WHERE ID IN (     SELECT ID     FROM Examination     ORDER BY First_Date DESC     LIMIT 1 ) AND AST glutamic oxaloacetic transaminase > 500 AND ALT glutamic pyruvic transaminase > 500 AND lactate dehydrogenase > 500 \t----- bird -----\tthrombosis_prediction",
    "1286": " SELECT COUNT(*) FROM Patient WHERE abnormal_alkaliphophatase_level = 'true' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": " SELECT COUNT(*) FROM Patient WHERE Admission = '-'; \t----- bird -----\tthrombosis_prediction",
    "1288": " SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.total_protein < 6.0; \t----- bird -----\tthrombosis_prediction",
    "1289": " SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SJS' AND total_protein > 6.0 AND total_protein < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": " SELECT e.Examination_Date FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.ALB > 3.5 AND l.ALB < 5.5 GROUP BY e.Examination_Date HAVING MAX(l.ALB) = (SELECT MAX(ALB) FROM Laboratory WHERE ID = e.ID); \t----- bird -----\tthrombosis_prediction",
    "1291": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.ALB > 3.5 AND Examination.ALB < 5.5 AND Examination.TP BETWEEN 6.0 AND 8.5; \t----- bird -----\tthrombosis_prediction",
    "1292": " SELECT e.anti_Cardiolipin_antibody_concentration FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.SEX = 'F' AND MAX(L.UA) > 6.50 GROUP BY e.ID HAVING COUNT(DISTINCT L.ID) = 1 \t----- bird -----\tthrombosis_prediction",
    "1293": " SELECT MAX(anti_nucleus_antibody) AS highest_anti_nucleus_antibody FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Creatinine < 1.5 AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1294": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.creatinine < 1.5 AND e.anti_Cardiolipin_antibody_IgA = (SELECT MAX(anti_Cardiolipin_antibody_IgA) FROM Examination) \t----- bird -----\tthrombosis_prediction",
    "1295": " SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.measure_of_degree_of_coagulation = 'T-BIL' > 2.0 AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'P';\t----- bird -----\tthrombosis_prediction",
    "1296": " SELECT AVG(anti_nucleus_antibody_concentration) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE MAX(AST_glutamic_oxaloacetic_transaminase) < 2.0 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1297": " SELECT COUNT(*) FROM Patient WHERE total_cholesterol > 250 AND KCT = '-'; \t----- bird -----\tthrombosis_prediction",
    "1298": " SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-CHO < 250 AND Examination.ANA_Pattern = 'P'; \t----- bird -----\tthrombosis_prediction",
    "1299": " SELECT COUNT(*) FROM Patient WHERE AST = 'normal' AND triglyceride < 200 AND Symptoms IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1300": " SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.measure_of_degree_of_coagulation = 'MAX(TG < 200)' GROUP BY p.ID, p.Diagnosis HAVING COUNT(DISTINCT e.measure_of_degree_of_coagulation) = 1; \t----- bird -----\tthrombosis_prediction",
    "1301": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 0 AND e.CPK < 250; \t----- bird -----\tthrombosis_prediction",
    "1302": " SELECT COUNT(*) FROM Patient WHERE AST glutamic oxaloacetic transaminase < 250 AND ALT glutamic pyruvic transaminase < 250 AND lactate dehydrogenase < 250 AND alkaliphophatase < 250 AND total protein > 0 AND albumin > 0 AND uric acid < 1.5 AND urea nitrogen < 20 AND creatinine < 1.2 AND total bilirubin < 1.2 AND total cholesterol < 200 AND triglyceride < 150 AND creatinine phosphokinase < 250 AND blood glucose > 0 AND White blood cell > 4 AND Red blood cell > 4 AND Hemoglobin > 12 AND Hematoclit > 40 AND platelet > 150 AND prothrombin time > 0.8 AND activated partial prothrombin time < 1.5 AND fibrinogen > 2 AND PIC < 100 AND TAT < 10 AND TAT2 < 10 AND proteinuria = '' AND Ig G = 0 AND Ig A = 0 AND Ig M = 0 AND C-reactive protein = '' AND Rhuematoid Factor = '' AND RAHA = '' AND complement 3 > 0.5 AND complement 4 > 0.5 AND anti-ribonuclear protein = '' AND anti-SM = '' AND anti-scl70 = '' AND anti-SSA = '' AND anti-SSB = '' AND anti-centromere = '' AND anti-DNA = '' AND anti-DNA = 0;  [Explanation]  1. The query starts by selecting all rows from the \"Patient\" table. 2. The WHERE clause filters the rows based on the given conditions for normal creatinine phosphokinase (CPK) levels. 3. The conditions for normal CPK levels are derived from the provided normal range (CPK < 250). 4. The query then counts the number of rows that meet all the specified conditions, effectively counting the number of patients with a normal CPK level. 5. This count represents the number of patients with a positive measure of degree of coagulation, as per the question's requirement.  The final SQL statement is:  [SQL] SELECT COUNT(*) FROM Patient WHERE AST glutamic oxaloacetic transaminase < 250 AND ALT glutamic pyruvic transaminase < 250 AND lactate dehydrogenase < 250 AND alkaliphophatase < 250 AND total protein > 0 AND albumin > 0 AND uric acid < 1.5 AND urea nitrogen < 20 AND creatinine < 1.2 AND total bilirubin < 1.2 AND total cholesterol < 200 AND triglyceride < 150 AND creatinine phosphokinase < 250 AND blood glucose > 0 AND White blood cell > 4 AND Red blood cell > 4 AND Hemoglobin > 12 AND Hematoclit > 40 AND platelet > 150 AND prothrombin time > 0.8 AND activated partial prothrombin time < 1.5 AND fibrinogen > 2 AND PIC < 100 AND TAT < 10 AND TAT2 < 10 AND proteinuria = '' AND Ig G = 0 AND Ig A = 0 AND Ig M = 0 AND C-reactive protein = '' AND Rhuematoid Factor = '' AND RAHA = '' AND complement 3 > 0.5 AND complement 4 > 0.5 AND anti-ribonuclear protein = '' AND anti-SM = '' AND anti-scl70 = '' AND anti-SSA = '' AND anti-SSB = '' AND anti-centromere = '' AND anti-DNA = '' AND anti-DNA = 0; \t----- bird -----\tthrombosis_prediction",
    "1303": " SELECT P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis LIKE '%blood glucose%' AND E.measure_of_degree_of_coagulation = 'abnormal' AND E.anti_cardiolipin_antibody_IgG > 0 AND E.anti_cardiolipin_antibody_IgM > 0 AND E.anti_nucleus_antibody > 0 AND E.pattern_observed_in_the_sheet_of_ANA_examination = 'positive' AND E.anti_cardiolipin_antibody_IgA_concentration > 0 ORDER BY P.Birthday DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1304": " SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'normal blood glucose' AND Thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1305": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Admission = '+'; \t----- bird -----\tthrombosis_prediction",
    "1306": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.WBC BETWEEN 3.5 AND 9.0; \t----- bird -----\tthrombosis_prediction",
    "1307": " SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC > 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.pattern_observed_in_the_sheet_of_ANA_examination IS NOT NULL AND e.Diagnosis IS NOT NULL AND e.platelet BETWEEN 100 AND 400; \t----- bird -----\tthrombosis_prediction",
    "1309": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis, l.AST, l.ALT, l.lactate_dehydrogenase, l.alkaliphophatase, l.total_protein, l.albumin, l.uric_acid, l.urea_nitrogen, l.creatinine, l.total_bilirubin, l.total_cholesterol, l.triglyceride, l.creatinine_phosphokinase, l.blood_glucose, l.White_blood_cell, l.Red_blood_cell, l.Hemoglobin, l.Hematoclit, l.platelet, l.prothrombin_time, l.activated_partial_prothrombin_time, l.fibrinogen, l.PIC, l.TAT, l.TAT2, l.proteinuria, l.Ig_G, l.Ig_A, l.Ig_M, l.C_reactive_protein, l.Rhuematoid_Factor, l.RAHA, l.complement_3, l.complement_4, l.anti_ribonuclear_protein, l.anti_SM, l.anti_scl70, l.anti_SSA, l.anti_SSB, l.anti_centromere, l.anti_DNA, l.anti_DNA FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX ='male' AND p.Diagnosis = 'MCTD' AND l.platelet BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1310": " SELECT AVG(Laboratory.prothrombin_time) AS average_prothrombin_time FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14; \t----- bird -----\tthrombosis_prediction",
    "1311": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 2 OR e.Thrombosis = 1 AND l.PT < 14 AND e.Diagnosis ='severe thrombosis'; \t----- bird -----\tthrombosis_prediction",
    "1312": " SELECT m.major_name FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m.first_name = 'Angela' AND m.last_name = 'Sanders'; \t----- bird -----\tstudent_club",
    "1313": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Student_Club ON Member.link_to_major = Student_Club.major_id JOIN Major ON Student_Club.major_id = Major.major_id WHERE Major.college = 'College of Engineering'; \t----- bird -----\tstudent_club",
    "1314": " SELECT m.first_name, m.last_name FROM Member m JOIN Member_Club mc ON m.member_id = mc.member_id JOIN Club c ON mc.club_id = c.club_id WHERE c.club_name = 'Student_Club' AND m.department = 'Art and Design'; \t----- bird -----\tstudent_club",
    "1315": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Attendance ON Member.member_id = Attendance.link_to_member JOIN Event ON Attendance.link_to_event = Event.event_id WHERE Event.event_name = 'Women's Soccer'; \t----- bird -----\tstudent_club",
    "1316": " SELECT M.phone FROM Member AS M JOIN Member_Club AS MC ON M.member_id = MC.member_id JOIN Club AS C ON MC.club_id = C.club_id JOIN Event AS E ON C.event_id = E.event_id WHERE E.event_name = 'Women''s Soccer' AND C.club_name = 'Student_Club'; \t----- bird -----\tstudent_club",
    "1317": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Attendance ON Member.member_id = Attendance.link_to_member JOIN Event ON Attendance.link_to_event = Event.event_id WHERE Event.event_name = 'Women's Soccer' AND Member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": " SELECT E.event_name, MAX(A.count) AS highest_attendance FROM Event E JOIN Attendance A ON E.event_id = A.link_to_event JOIN Member M ON A.link_to_member = M.member_id JOIN Major MC ON M.link_to_major = MC.major_id WHERE MC.major_name = 'Student_Club' GROUP BY E.event_name ORDER BY highest_attendance DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1319": " SELECT m.college FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m.position = 'Vice President'; \t----- bird -----\tstudent_club",
    "1320": " SELECT E.event_name FROM Event AS E JOIN Attendance AS A ON E.event_id = A.link_to_event JOIN Member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Maya' AND M.last_name = 'Mclean'; \t----- bird -----\tstudent_club",
    "1321": " SELECT COUNT(DISTINCT e.event_id) FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND e.type = 'Student_Club' AND YEAR(e.event_date) = 2019; \t----- bird -----\tstudent_club",
    "1322": " SELECT COUNT(DISTINCT event_id) FROM Event WHERE type = 'Meeting' AND member_count > 10 AND member_id IN (     SELECT member_id     FROM Member     WHERE link_to_major = 'Student_Club' );\t----- bird -----\tstudent_club",
    "1323": " SELECT e.event_name FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event WHERE a.student_count > 20 AND e.type!= 'fundraiser'; \t----- bird -----\tstudent_club",
    "1324": " SELECT AVG(attendance) AS average_attendance FROM Attendance a JOIN Event e ON a.link_to_event = e.event_id WHERE e.type = 'Meeting' AND YEAR(e.event_date) = 2020; \t----- bird -----\tstudent_club",
    "1325": " SELECT MAX(cost) AS most_expensive_item FROM Expense WHERE expense_description LIKE '%club events%'; \t----- bird -----\tstudent_club",
    "1326": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Student_Club ON Member.link_to_major = Student_Club.major_name WHERE Student_Club.major_name = 'Environmental Engineering'; \t----- bird -----\tstudent_club",
    "1327": " SELECT M.first_name, M.last_name FROM Member M JOIN Attendance A ON M.member_id = A.link_to_member JOIN Event E ON A.link_to_event = E.event_id WHERE E.event_name = 'Laugh Out Loud' AND M.link_to_major = 'Student_Club'; \t----- bird -----\tstudent_club",
    "1328": " SELECT m.last_name FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Law and Constitutional Studies'; \t----- bird -----\tstudent_club",
    "1329": " SELECT Zip_Code.county FROM Zip_Code WHERE Zip_Code.city = 'Sherri Ramsey grew up city' AND Zip_Code.state = 'Sherri Ramsey grew up state'; \t----- bird -----\tstudent_club",
    "1330": " SELECT Major.college FROM Major JOIN Attendance ON Attendance.link_to_member = Member.member_id JOIN Event ON Event.event_id = Attendance.link_to_event WHERE Member.first_name = 'Tyler' AND Member.last_name = 'Hewitt'; \t----- bird -----\tstudent_club",
    "1331": " SELECT SUM(amount) FROM Income WHERE source = 'Vice President'; \t----- bird -----\tstudent_club",
    "1332": " SELECT SUM(spent) FROM Expense WHERE expense_description LIKE '%Food%' AND member_id IN (     SELECT member_id     FROM Member     WHERE link_to_major = 'Student_Club' );\t----- bird -----\tstudent_club",
    "1333": " SELECT zip.city, zip.state FROM Zip_Code AS zip JOIN Member AS mem ON zip.zip_code = mem.zip;  WHERE mem.position = 'President'; \t----- bird -----\tstudent_club",
    "1334": " SELECT M.first_name, M.last_name FROM Member M JOIN Zip_Code ZC ON M.zip = ZC.zip_code WHERE ZC.state = 'Illinois'; \t----- bird -----\tstudent_club",
    "1335": " SELECT SUM(spent) FROM Expense WHERE expense_description LIKE '%Advertisement%' AND member_id IN (     SELECT member_id     FROM Member     WHERE position = 'Student_Club' ) AND event_name = 'September Meeting'; \t----- bird -----\tstudent_club",
    "1336": " SELECT m.department FROM Major m JOIN Event e ON m.major_id = e.type JOIN Member mi ON e.link_to_member = mi.member_id WHERE mi.first_name = 'Pierce' AND mi.last_name = 'Guidi'; \t----- bird -----\tstudent_club",
    "1337": " SELECT SUM(amount) FROM Budget WHERE event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": " SELECT approved FROM Expense WHERE link_to_event = 'October Meeting' AND expense_date = '2019-10-08'; \t----- bird -----\tstudent_club",
    "1339": " SELECT SUM(cost) AS total_average_cost FROM Expense JOIN Member ON Expense.link_to_member = Member.member_id WHERE Member.first_name = 'Elijah' AND Member.last_name = 'Allen' AND MONTH(DATE('expense_date')) IN (9, 10);\t----- bird -----\tstudent_club",
    "1340": " SELECT SUM(spent) FROM Budget WHERE event_id IN (     SELECT event_id     FROM Event     WHERE link_to_member IN (         SELECT member_id         FROM Member         WHERE link_to_major IN (             SELECT major_id             FROM Major             WHERE name = 'Student_Club'         )     )     AND YEAR(event_date) = 2019 ) UNION SELECT SUM(spent) FROM Budget WHERE event_id IN (     SELECT event_id     FROM Event     WHERE link_to_member IN (         SELECT member_id         FROM Member         WHERE link_to_major IN (             SELECT major_id             FROM Major             WHERE name = 'Student_Club'         )     )     AND YEAR(event_date) = 2020 ) \t----- bird -----\tstudent_club",
    "1341": " SELECT \"location\" FROM \"Event\" WHERE \"event name\" = 'Spring Budget Review'; \t----- bird -----\tstudent_club",
    "1342": " SELECT cost FROM Expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'; \t----- bird -----\tstudent_club",
    "1343": " SELECT MAX(remaining) AS biggest_food_remaining FROM Budget WHERE category = 'Food'; \t----- bird -----\tstudent_club",
    "1344": " SELECT notes FROM Event WHERE event_date = '2019-09-14'; \t----- bird -----\tstudent_club",
    "1345": " SELECT COUNT(DISTINCT major.major_id) FROM Major WHERE college = 'College of Humanities and Social Sciences'; \t----- bird -----\tstudent_club",
    "1346": " SELECT phone FROM Member WHERE full_name = 'Carlo Jacobs'; \t----- bird -----\tstudent_club",
    "1347": " SELECT zip.short_state, zip.county FROM Zip_Code AS zip WHERE zip.city = 'Adela O'Gallagher'; \t----- bird -----\tstudent_club",
    "1348": " SELECT COUNT(*) FROM Budget WHERE event_id = (SELECT event_id FROM Event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": " SELECT SUM(amount) AS total_budget_amount FROM Budget WHERE event_id = (SELECT event_id FROM Event WHERE event_name = 'September Speaker'); \t----- bird -----\tstudent_club",
    "1350": " SELECT e.event_status FROM Event e JOIN Expense ex ON e.event_id = ex.link_to_event WHERE ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019-08-20'; \t----- bird -----\tstudent_club",
    "1351": " SELECT Major.major_name FROM Major WHERE Major.member_id = (     SELECT Member.member_id     FROM Member     WHERE Member.full_name = 'Brent Thomason' );\t----- bird -----\tstudent_club",
    "1352": " SELECT COUNT(*) FROM Member WHERE link_to_major = 'Business' AND t_shirt_size = 'Medium'; \t----- bird -----\tstudent_club",
    "1353": " SELECT type FROM Zip_Code WHERE city = 'Christof Nielson' AND state = 'Colorado'; \t----- bird -----\tstudent_club",
    "1354": " SELECT \"Major name\" FROM \"Major\" WHERE \"position\" = 'Vice President'; \t----- bird -----\tstudent_club",
    "1355": " SELECT zip.state FROM Zip_Code AS zip JOIN Member AS member ON zip.zip_code = member.zip WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison'; \t----- bird -----\tstudent_club",
    "1356": " SELECT Major.department FROM Major JOIN Member ON Major.link_to_major = Member.member_id WHERE Member.position = 'President'; \t----- bird -----\tstudent_club",
    "1357": " SELECT i.date_received FROM Member i JOIN Income o ON i.member_id = o.member_id WHERE i.email = 'Connor.Hilton@example.com' AND o.source = 'Dues'; \t----- bird -----\tstudent_club",
    "1358": " SELECT MIN(received_date) AS first_paid_dues FROM Member WHERE source = 'Dues'; \t----- bird -----\tstudent_club",
    "1359": " SELECT COUNT(*) FROM Budget WHERE category = 'Advertisement' AND (event_name = 'Yearly Kickoff' AND spent > spent) OR (event_name = 'October Meeting' AND spent < spent); \t----- bird -----\tstudent_club",
    "1360": " SELECT \t(SUM(Budget.spent) WHERE Budget.category = 'Parking' AND Event.event_name = 'November Speaker') / \t(SELECT COUNT(*) FROM Event WHERE Event.event_name = 'November Speaker') * 100 FROM \tEvent \tJOIN Budget ON Event.event_id = Budget.link_to_event \t----- bird -----\tstudent_club",
    "1361": " SELECT SUM(cost) FROM Expense WHERE expense_description = 'Pizza'; \t----- bird -----\tstudent_club",
    "1362": " SELECT COUNT(DISTINCT city) AS number_of_cities FROM Zip_Code WHERE state = 'Virginia' AND county = 'Orange County';\t----- bird -----\tstudent_club",
    "1363": " SELECT DISTINCT department FROM Major WHERE college = 'College of Humanities and Social Sciences'; \t----- bird -----\tstudent_club",
    "1364": " SELECT zip.city, zip.county, zip.state, zip.short_state FROM Zip_Code AS zip WHERE zip.city = 'Amy Firth\\'s hometown'; \t----- bird -----\tstudent_club",
    "1365": " SELECT b.category, e.expense_description, e.cost FROM Budget b JOIN Expense e ON b.budget_id = e.budget_id WHERE b.remaining = (SELECT MIN(remaining) FROM Budget) ORDER BY e.cost ASC; \t----- bird -----\tstudent_club",
    "1366": " SELECT M.member_id, M.first_name, M.last_name FROM Member M JOIN Attendance A ON M.member_id = A.link_to_member WHERE A.link_to_event = 'October Meeting'; \t----- bird -----\tstudent_club",
    "1367": " SELECT college, COUNT(member.member_id) AS popularity FROM Member JOIN ZipCode ON Member.zip = ZipCode.zip_code JOIN Major ON ZipCode.college = Major.college GROUP BY college ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1368": " SELECT m.first_name, m.last_name, m.position FROM Member m JOIN ZipCode z ON m.zip = z.zip_code JOIN Major m_major ON z.zip = m_major.zip WHERE m.phone = '809-555-3360'; \t----- bird -----\tstudent_club",
    "1369": " SELECT e.event_name, MAX(b.amount) AS highest_budget FROM Event e JOIN Budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1370": " SELECT e.expense_description, m.first_name, m.last_name, i.amount FROM Expense e JOIN Member m ON e.link_to_member = m.member_id JOIN Income i ON m.link_to_member = i.member_id WHERE m.position = 'Vice President'; \t----- bird -----\tstudent_club",
    "1371": " SELECT COUNT(DISTINCT Member.member_id) AS total_members FROM Attendance WHERE Event.event_name = 'Women's Soccer'; \t----- bird -----\tstudent_club",
    "1372": " SELECT date_received FROM Income WHERE member_id = 'Casey Mason'; \t----- bird -----\tstudent_club",
    "1373": " SELECT COUNT(DISTINCT zip) AS maryland_count FROM Member WHERE state = 'Maryland'; \t----- bird -----\tstudent_club",
    "1374": " SELECT COUNT(DISTINCT Event.event_id) FROM Event JOIN Attendance ON Event.event_id = Attendance.link_to_event JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Member.phone_number = '954-555-6240'; \t----- bird -----\tstudent_club",
    "1375": " SELECT m.first_name, m.last_name FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id JOIN Department d ON m_major.department = d.department_id WHERE d.department_name = 'School of Applied Sciences, Technology and Education' \t----- bird -----\tstudent_club",
    "1376": " SELECT e.event_name, MAX(DIVIDE(b.spent, b.amount)) AS highest_spend_to_budget_ratio FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_id, e.event_name ORDER BY highest_spend_to_budget_ratio DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1377": " SELECT COUNT(*) FROM Member WHERE position = 'President'; \t----- bird -----\tstudent_club",
    "1378": " SELECT MAX(spent) AS highest_budget_spend FROM Budget WHERE link_to_event = (SELECT event_id FROM Event WHERE event_name = 'Event Name'); \t----- bird -----\tstudent_club",
    "1379": " SELECT COUNT(*) FROM Event WHERE type = 'Meeting' AND YEAR(event_date) = 2020; \t----- bird -----\tstudent_club",
    "1380": " SELECT SUM(spent) FROM Budget WHERE category = 'Food'; \t----- bird -----\tstudent_club",
    "1381": " SELECT m.first_name, m.last_name FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id HAVING COUNT(a.link_to_event) > 7; \t----- bird -----\tstudent_club",
    "1382": " SELECT m.member_id, m.first_name, m.last_name FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id WHERE m.zip.type = 'Zip Code' AND m.zip.city = 'Community Theater' AND m.major_id = (SELECT major_id FROM Major WHERE major_name = 'Interior Design');\t----- bird -----\tstudent_club",
    "1383": " SELECT m.first_name, m.last_name FROM Member m JOIN ZipCode z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina'; \t----- bird -----\tstudent_club",
    "1384": " SELECT SUM(amount) FROM Income WHERE link_to_member = 'Grant Gilmour'; \t----- bird -----\tstudent_club",
    "1385": " SELECT m.member_id, m.first_name, m.last_name, i.income_amount FROM Member m JOIN Income i ON m.member_id = i.member_id WHERE i.income_amount > 40; \t----- bird -----\tstudent_club",
    "1386": " SELECT SUM(cost) AS total_expense FROM Expense WHERE expense_description = 'Yearly Kickoff'; \t----- bird -----\tstudent_club",
    "1387": " SELECT m.member_id, m.first_name, m.last_name FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.expense_id = b.expense_id WHERE b.category = 'budget for Yearly Kickoff' LIMIT 1; \t----- bird -----\tstudent_club",
    "1388": " SELECT m.first_name, m.last_name, i.source FROM Member m JOIN Income i ON m.member_id = i.member_id ORDER BY i.amount DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1389": " SELECT e.event_name, MIN(b.cost) AS lowest_cost FROM Event e JOIN Budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name; \t----- bird -----\tstudent_club",
    "1390": " SELECT \tDIVIDE(SUM(cost) WHERE event_name = 'Yearly Kickoff', SUM(cost)) * 100 FROM \tEvent; \t----- bird -----\tstudent_club",
    "1391": " SELECT SUM(CASE WHEN \"Major\".\"major_name\" = 'Finance' THEN 1 ELSE 0 END) AS finance_students, SUM(CASE WHEN \"Major\".\"major_name\" = 'Physics' THEN 1 ELSE 0 END) AS physics_students FROM \"Member\" INNER JOIN \"Major\" ON \"Member\".\"link_to_major\" = \"Major\".\"major_id\" GROUP BY 1; \t----- bird -----\tstudent_club",
    "1392": " SELECT source, MAX(amount) AS top_fund_source FROM Income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY top_fund_source DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1393": " SELECT m.first_name, m.email FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m_major.name = 'Student_Club' AND m.position = 'Secretary'; \t----- bird -----\tstudent_club",
    "1394": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Student_Club ON Member.link_to_major = Student_Club.major_id JOIN Major ON Student_Club.major_id = Major.major_id WHERE Major.major_name = 'Physics Teaching'; \t----- bird -----\tstudent_club",
    "1395": " SELECT COUNT(DISTINCT Member.member_id) AS number_of_members FROM Attendance JOIN Event ON Attendance.link_to_event = Event.event_id JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Event.event_name = 'Community Theater' AND YEAR(Event.event_date) = 2019; \t----- bird -----\tstudent_club",
    "1396": " SELECT COUNT(DISTINCT e.member_id) AS total_events_attended FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi'; \t----- bird -----\tstudent_club",
    "1397": " SELECT AVG(spent) AS average_food_spending FROM Budget WHERE category = 'Food' AND event_status = 'Closed'; \t----- bird -----\tstudent_club",
    "1398": " SELECT e.event_name, MAX(b.spent) AS highest_advertisement_spend FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' GROUP BY e.event_id, e.event_name ORDER BY highest_advertisement_spend DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1399": " SELECT * FROM Attendance JOIN Event ON Attendance.link_to_event = Event.event_id JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Member.first_name = 'Maya' AND Member.last_name = 'Mclean' AND Event.event_name = 'Women\\'s Soccer'; \t----- bird -----\tstudent_club",
    "1400": " SELECT     (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 FROM     Event WHERE     event_date BETWEEN '2019-01-01' AND '2019-12-31'; \t----- bird -----\tstudent_club",
    "1401": " SELECT SUM(cost) FROM Expense WHERE expense_description = 'Posters' AND link_to_event = 'September Speaker'; \t----- bird -----\tstudent_club",
    "1402": " SELECT t_shirt_size, COUNT(*) AS popularity FROM Member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1403": " SELECT e.event_name FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1404": " SELECT SUM(cost) AS total_value_approved FROM Expense JOIN Budget ON Expense.link_to_budget = Budget.budget_id JOIN Event ON Budget.link_to_event = Event.event_id WHERE Event.event_name = 'October Meeting' AND Expense.approved = 'approved'; \t----- bird -----\tstudent_club",
    "1405": " SELECT SUM(amount) AS amount_budgeted FROM Budget WHERE event_id = (SELECT event_id FROM Event WHERE event_name = 'April Speaker'); \t----- bird -----\tstudent_club",
    "1406": " SELECT MAX(spent) AS max_budget_amount FROM Budget WHERE category = 'Food'; \t----- bird -----\tstudent_club",
    "1407": " SELECT b.category, b.spent, b.remaining, b.amount, b.event_status FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.category, b.spent, b.remaining, b.amount, b.event_status ORDER BY b.spent DESC LIMIT 3; \t----- bird -----\tstudent_club",
    "1408": " SELECT SUM(cost) FROM Expense WHERE expense_description = 'Parking'; \t----- bird -----\tstudent_club",
    "1409": " SELECT SUM(cost) FROM Expense WHERE expense_date = '2019-08-20'; \t----- bird -----\tstudent_club",
    "1410": " SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM Member m JOIN Expense e ON m.member_id = e.member_id WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id; \t----- bird -----\tstudent_club",
    "1411": " SELECT expense_description FROM Expense WHERE member_id = (SELECT member_id FROM Member WHERE full_name = 'Sacha Harrison'); \t----- bird -----\tstudent_club",
    "1412": " SELECT m.first_name, m.last_name, e.expense_description, e.cost FROM Member m JOIN Expense e ON m.member_id = e.member_id WHERE m.t_shirt_size = 'X-Large'; \t----- bird -----\tstudent_club",
    "1413": " SELECT Zip_Code.zip, Member.first_name, Member.last_name FROM Zip_Code JOIN Member ON Zip_Code.zip = Member.zip WHERE EXTRACT(YEAR FROM Event_Date) = 2022 AND EXTRACT(MONTH FROM Event_Date) = 12 AND Budget.spent < 50; \t----- bird -----\tstudent_club",
    "1414": " SELECT m.major_name FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m.email = 'phillip.cullen@example.com'; \t----- bird -----\tstudent_club",
    "1415": " SELECT first_name, last_name, position FROM Member WHERE link_to_major = 'Business'; \t----- bird -----\tstudent_club",
    "1416": " SELECT COUNT(*) FROM Member WHERE link_to_major = 'Business' AND t_shirt_size = 'Medium'; \t----- bird -----\tstudent_club",
    "1417": " SELECT e.event_name, e.type FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30 \t----- bird -----\tstudent_club",
    "1418": " SELECT e.type, e.event_name FROM Event e JOIN ZipCode z ON e.location = z.city AND z.county = 'Columbia' AND z.state = 'MO' AND z.short_state = 'MO' WHERE z.city = 'Columbia' AND z.county = 'Boone' AND z.state = 'MO' AND z.short_state = 'MO' AND e.location = 'MU 215'; \t----- bird -----\tstudent_club",
    "1419": " SELECT \"category\" FROM \"Budget\" WHERE \"link to event\" = '2020-03-24T12:00:00'; \t----- bird -----\tstudent_club",
    "1420": " SELECT Major.major_name FROM Member JOIN Member.link_to_major ON Major; \t----- bird -----\tstudent_club",
    "1421": " SELECT (SUM(position = 'Member' and major_name = 'Business') / COUNT(member_id)) * 100 FROM Member; \t----- bird -----\tstudent_club",
    "1422": " SELECT type FROM Event WHERE location = 'MU 215'; \t----- bird -----\tstudent_club",
    "1423": " SELECT COUNT(*) FROM Income WHERE amount = 50; \t----- bird -----\tstudent_club",
    "1424": " SELECT COUNT(*) FROM Member WHERE t_shirt_size = 'X-Large'; \t----- bird -----\tstudent_club",
    "1425": " SELECT COUNT(*) FROM Major WHERE department = 'School of Applied Sciences, Technology and Education'; \t----- bird -----\tstudent_club",
    "1426": " SELECT m.last_name, m.major.name AS major_name, m.major.department, m.major.college FROM Member m JOIN Major major ON m.link_to_major = major.major_id WHERE major.name = 'Environmental Engineering'; \t----- bird -----\tstudent_club",
    "1427": " SELECT b.category FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0; \t----- bird -----\tstudent_club",
    "1428": " SELECT zip.city, zip.state FROM ZipCode AS zip JOIN Member AS mem ON zip.zip_code = mem.zip WHERE mem.position = 'Member' AND mem.link_to_major = 'Electrical and Computer Engineering Department'; \t----- bird -----\tstudent_club",
    "1429": " SELECT e.event_name FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.position = 'Vice President' AND m.zip = (SELECT zip_code FROM Zip_Code WHERE city = 'Student_Club' AND county = 'University' AND state = 'CA' AND short_state = 'CA') AND e.type = 'Social' AND e.location = '900 E. Washington St.'; \t----- bird -----\tstudent_club",
    "1430": " SELECT m.last_name, m.position FROM Member m JOIN Expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10'; \t----- bird -----\tstudent_club",
    "1431": " SELECT M.first_name, M.last_name FROM Member AS M JOIN Attendance AS A ON M.member_id = A.link_to_member JOIN Event AS E ON A.link_to_event = E.event_id WHERE E.event_name = 'Women\\'s Soccer' \t----- bird -----\tstudent_club",
    "1432": " SELECT AVG(amount) * 100 AS percentage FROM Expense JOIN Member ON Expense.link_to_member = Member.member_id WHERE Member.t_shirt_size = 'Medium' AND Member.link_to_major.major_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "1433": " SELECT zip.state FROM ZipCode AS zip JOIN Major AS major ON zip.zip = major.zip WHERE major.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": " SELECT ZipCode.zip FROM ZipCode JOIN Member ON ZipCode.zip = Member.zip JOIN Major ON Member.link_to_major = Major.major_id JOIN Event ON Event.event_id = Attendance.link_to_event JOIN Budget ON Event.event_id = Budget.link_to_event JOIN Expense ON Expense.link_to_member = Member.member_id JOIN Income ON Income.link_to_member = Member.member_id WHERE Major.college = 'San Juan Municipio' AND Major.state = 'Puerto Rico' AND ZipCode.type = 'PO Box' \t----- bird -----\tstudent_club",
    "1435": " SELECT e.event_name FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'Closed' AND e.type = 'Game' AND e.event_date BETWEEN '2019-03-15' AND '2020-03-20'; \t----- bird -----\tstudent_club",
    "1436": " SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.zip_code IN (     SELECT z.zip_code     FROM ZipCode z     JOIN Member m ON z.zip_code = m.zip_code     WHERE m.paid_more_than_50 = true ) \t----- bird -----\tstudent_club",
    "1437": " SELECT m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id WHERE m.approved = 'true' AND e.event_date BETWEEN '2019-01-10' AND '2019-11-19'; \t----- bird -----\tstudent_club",
    "1438": " SELECT M.college FROM Member M JOIN Member.link_to_major LM ON LM.major_id ='rec1N0upiVLy5esTO' JOIN Major M2 ON M2.major_id = LM.major_id WHERE M.first_name = 'Katy'; \t----- bird -----\tstudent_club",
    "1439": " SELECT M.phone FROM Member AS M JOIN Major AS Maj ON M.link_to_major = Maj.major_id JOIN ZipCode AS Zip ON M.zip = Zip.zip_code WHERE Maj.major_name = 'Business' AND Zip.college = 'College of Agriculture and Applied Sciences'; \t----- bird -----\tstudent_club",
    "1440": " SELECT m.email FROM Member m JOIN Income i ON m.member_id = i.member_id JOIN Expense e ON i.income_id = e.income_id WHERE e.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND e.cost > 20; \t----- bird -----\tstudent_club",
    "1441": " SELECT COUNT(*) FROM Member WHERE link_to_major = 'education'; \t----- bird -----\tstudent_club",
    "1442": " SELECT     DIVIDE(SUM(CASE WHEN spent < 0 THEN 1 ELSE 0 END), COUNT(event_id)) * 100 FROM     Event \t----- bird -----\tstudent_club",
    "1443": " SELECT e.event_id, e.location, e.status FROM Event e JOIN ZipCode z ON e.location = z.city WHERE e.event_date BETWEEN '2019-11-01' AND '2020-03-31'; \t----- bird -----\tstudent_club",
    "1444": " SELECT expense_id, AVG(cost) AS average_cost FROM Expense WHERE cost > 50 GROUP BY expense_id HAVING average_cost > 50; \t----- bird -----\tstudent_club",
    "1445": " SELECT m.first_name, m.last_name FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m_major.t_shirt_size = 'X-Large'; \t----- bird -----\tstudent_club",
    "1446": " SELECT     (SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) / COUNT(DISTINCT zip_code)) * 100 FROM     Zip_Code; \t----- bird -----\tstudent_club",
    "1447": " SELECT e.event_name, e.location FROM Event e JOIN Budget b ON e.event_id = b.event_id WHERE b.remaining > 0 \t----- bird -----\tstudent_club",
    "1448": " SELECT e.event_name, e.event_date FROM Event e JOIN Expense ex ON e.event_id = ex.link_to_event WHERE ex.expense_description = 'Pizza' AND ex.cost BETWEEN 50 AND 100; \t----- bird -----\tstudent_club",
    "1449": " SELECT m.first_name, m.last_name, m.major_name FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100; \t----- bird -----\tstudent_club",
    "1450": " SELECT e.city, e.state, e.short_state FROM Event e JOIN ZipCode z ON e.location = z.zip_code WHERE e.status = 'ongoing' AND (     SELECT COUNT(*)     FROM Income i     WHERE i.link_to_member = e.member_id     AND i.amount > 40 ) > 40; \t----- bird -----\tstudent_club",
    "1451": " SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM Member m JOIN Expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT e.event_id) > 1 ORDER BY total_expense DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1452": " SELECT AVG(cost) AS average_amount_paid FROM Expense WHERE member_id NOT IN (     SELECT member_id     FROM Member ); \t----- bird -----\tstudent_club",
    "1453": " SELECT e.event_name FROM Event e JOIN (     SELECT event_id, AVG(cost) AS avg_cost     FROM Expense     WHERE category = 'Parking'     GROUP BY event_id ) sub ON e.event_id = sub.event_id WHERE e.cost < sub.avg_cost; \t----- bird -----\tstudent_club",
    "1454": " SELECT \tPERCENTAGE( \t\tSUM(cost) AS total_cost, \t\tCOUNT(DISTINCT event_id) AS event_count \t) FROM \tEvent WHERE \ttype = 'Meeting'; \t----- bird -----\tstudent_club",
    "1455": " SELECT b.category, SUM(e.cost) AS total_cost FROM Budget b JOIN Expense e ON b.budget_id = e.budget_id WHERE e.expense_description LIKE '%water, chips, cookies%' GROUP BY b.category ORDER BY total_cost DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1456": " SELECT m.first_name, m.last_name FROM Member m JOIN Expense e ON m.member_id = e.member_id JOIN Budget b ON e.budget_id = b.budget_id JOIN Event e2 ON b.link_to_event = e2.event_id GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5; \t----- bird -----\tstudent_club",
    "1457": " SELECT m.first_name, m.phone FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event JOIN (     SELECT category, AVG(cost) AS avg_cost     FROM Expense     GROUP BY category ) avg_cost_table ON b.category = avg_cost_table.category WHERE e.cost > avg_cost_table.avg_cost \t----- bird -----\tstudent_club",
    "1458": " SELECT     (SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_nj,     (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_vt FROM     Member WHERE     zip IN (SELECT zip_code FROM ZipCode WHERE state IN ('New Jersey', 'Vermont')); \t----- bird -----\tstudent_club",
    "1459": " SELECT m.major_name, m.department FROM Member m JOIN Major major ON m.link_to_major = major.major_id WHERE m.email = 'garrett.gerke@example.com'; \t----- bird -----\tstudent_club",
    "1460": " SELECT m.first_name, m.last_name, e.expense_description, e.cost FROM Member m JOIN Expense e ON m.member_id = e.member_id WHERE e.expense_description = 'Water, Veggie tray, supplies' LIMIT 1; \t----- bird -----\tstudent_club",
    "1461": " SELECT m.last_name, m.phone FROM Member m JOIN Major me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education'; \t----- bird -----\tstudent_club",
    "1462": " SELECT b.category, b.spent FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": " SELECT e.event_name FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": " SELECT m.first_name, m.last_name, i.amount FROM Member m JOIN Income i ON m.member_id = i.member_id WHERE i.date_received = '2019-09-09'; \t----- bird -----\tstudent_club",
    "1465": " SELECT category FROM Budget WHERE expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": " SELECT m.first_name, m.last_name, m.zip.type, m.zip.college FROM Member m JOIN ZipCode z ON m.zip = z.zip_code WHERE m.position = 'Secretary'; \t----- bird -----\tstudent_club",
    "1467": " SELECT e.event_name, SUM(b.spent) AS total_spent FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name; \t----- bird -----\tstudent_club",
    "1468": " SELECT zip.city FROM Zip_Code AS zip JOIN Member AS member ON zip.zip_code = member.zip; \t----- bird -----\tstudent_club",
    "1469": " SELECT m.first_name, m.last_name, m.position FROM Member m JOIN ZipCode z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092; \t----- bird -----\tstudent_club",
    "1470": " SELECT COUNT(DISTINCT gas_stations.Gas_Station_ID) FROM gas_stations JOIN products ON gas_stations.Gas_Station_ID = products.Product_ID WHERE gas_stations.Country = 'CZE' AND products.Description LIKE '%Premium%'; \t----- bird -----\tdebit_card_specializing",
    "1471": " SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS ratio_of_eur_to_czk FROM customers; \t----- bird -----\tdebit_card_specializing",
    "1472": " SELECT c.client_segment, ym.CustomerID, ym.Consumption FROM customers c JOIN year_and_month ym ON c.CustomerID = ym.CustomerID WHERE c.client_segment = 'LAM' AND ym.Date BETWEEN '20120101' AND '20121231' ORDER BY ym.Consumption ASC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1473": " SELECT AVG(Consumption) AS average_monthly_consumption FROM year_and_month WHERE CustomerID IN (     SELECT CustomerID     FROM customers     WHERE client_segment = 'SME' ) AND Date BETWEEN '20130101' AND '20131231';\t----- bird -----\tdebit_card_specializing",
    "1474": " SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE c.Currency = 'CZK' AND t.Date BETWEEN '20110101' AND '20111231' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1475": " SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE customers.client_segment = 'KAM' AND year_and_month.Date BETWEEN '20120101' AND '20121231'; \t----- bird -----\tdebit_card_specializing",
    "1476": " SELECT     SUM(CASE WHEN c.currency = 'CZK' THEN t.amount ELSE 0 END) -     SUM(CASE WHEN c.currency = 'EUR' THEN t.amount ELSE 0 END) AS consumption_difference FROM     customers c JOIN     transactions t ON c.CustomerID = t.CustomerID JOIN     gas_stations gs ON t.GasStationID = gs.GasStationID WHERE     YEAR(t.Date) = 2012 \t----- bird -----\tdebit_card_specializing",
    "1477": " SELECT year, SUM(consumption) AS total_consumption FROM year_and_month JOIN customers ON year_and_month.CustomerID = customers.CustomerID JOIN transactions ON year_and_month.CustomerID = transactions.Customer ID JOIN products ON transactions.ProductID = products.ProductID JOIN gas_stations ON transactions.GasStationID = gas_stations.GasStationID WHERE products.Currency = 'EUR' GROUP BY year ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1478": " SELECT c.client_segment, MIN(t.consumption) AS least_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1479": " SELECT year, MAX(consumption) AS max_consumption FROM year_and_month JOIN customers ON year_and_month.CustomerID = customers.CustomerID JOIN transactions ON year_and_month.CustomerID = transactions.CustomerID JOIN products ON transactions.ProductID = products.ProductID JOIN gas_stations ON transactions.GasStationID = gas_stations.GasStationID WHERE products.Currency = 'CZK' GROUP BY year; \t----- bird -----\tdebit_card_specializing",
    "1480": " SELECT t1.Date, t1.Consumption FROM year_and_month AS t1 JOIN customers AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.client_segment = 'SME' AND YEAR(t1.Date) = 2013 AND MONTH(t1.Date) = (SELECT MAX(MONTH(t1.Date)) FROM year_and_month WHERE t1.CustomerID = t2.CustomerID AND YEAR(t1.Date) = 2013) ORDER BY t1.Date DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1481": " SELECT     CONCAT(         YEAR(year_and_month.Date),         '01',         '01',         '01',         '01'     ) AS start_date,     CONCAT(         YEAR(year_and_month.Date),         '12',         '31',         '31',         '31'     ) AS end_date,     AVG(year_and_month.Consumption) AS avg_consumption FROM     year_and_month JOIN     customers ON year_and_month.CustomerID = customers.CustomerID WHERE     customers.client_segment = 'SME' GROUP BY     start_date,     end_date ORDER BY     start_date LIMIT 1;  SELECT     CONCAT(         YEAR(year_and_month.Date),         '01',         '01',         '01',         '01'     ) AS start_date,     CONCAT(         YEAR(year_and_month.Date),         '12',         '31',         '31',         '31'     ) AS end_date,     AVG(year_and_month.Consumption) AS avg_consumption FROM     year_and_month JOIN     customers ON year_month.CustomerID = customers.CustomerID WHERE     customers.client_segment = 'LAM' GROUP BY     start_date,     end_date ORDER BY     start_date LIMIT 1;  SELECT     CONCAT(         YEAR(year_and_month.Date),         '01',         '01',         '01',         '01'     ) AS start_date,     CONCAT(         YEAR(year_and_month.Date),         '12',         '31',         '31',         '31'     ) AS end_date,     AVG(year_and_month.Consumption) AS avg_consumption FROM     year_and_month JOIN     customers ON year_and_month.CustomerID = customers.CustomerID WHERE     customers.client_segment = 'KAM' GROUP BY     start_date,     end_date ORDER BY     start_date LIMIT 1;  WITH     sme_avg_consumption AS (         SELECT             AVG(year_and_month.Consumption) AS avg_consumption         FROM             year_and_month         JOIN             customers ON year_and_month.CustomerID = customers.CustomerID         WHERE             customers.client_segment = 'SME'         GROUP BY             start_date,             end_date     ),     lam_avg_consumption AS (         SELECT             AVG(year_and_month.Consumption) AS avg_consumption         FROM             year_and_month         JOIN             customers ON year_and_month.CustomerID = customers.CustomerID         WHERE             customers.client_segment = 'LAM'         GROUP BY             start_date,             end_date     ),     kam_avg_consumption AS (         SELECT             AVG(year_and_month.Consumption) AS avg_consumption         FROM             year_and_month         JOIN             customers ON year_and_month.CustomerID = customers.CustomerID         WHERE             customers.client_segment = 'KAM'         GROUP BY             start_date,             end_date     )  SELECT     (sme_avg_consumption.avg_consumption - lam_avg_consumption.avg_consumption) AS sme_lam_diff,     (lam_avg_consumption.avg_consumption - kam_avg_consumption.avg_consumption) AS lam_kam_diff,     (kam_avg_consumption.avg_consumption - sme_avg_consumption.avg_consumption) AS kam_sme_diff; \t----- bird -----\tdebit_card_specializing",
    "1482": " SELECT     c.client_segment,     (SUM(t.Amount) - SUM(t.Amount)) / SUM(t.Amount) * 100 AS percentage_increase FROM     customers c JOIN     transactions t ON c.CustomerID = t.CustomerID JOIN     products p ON t.ProductID = p.ProductID JOIN     gas_stations gs ON t.GasStationID = gs.GasStationID JOIN     year_and_month ym ON c.CustomerID = ym.CustomerID WHERE     YEAR(t.Date) = 2013 GROUP BY     c.client_segment ORDER BY     percentage_increase DESC; \t----- bird -----\tdebit_card_specializing",
    "1483": " SELECT SUM(consumption) FROM year_and_month WHERE CustomerID = 6 AND Date BETWEEN '20130801' AND '20131130'; \t----- bird -----\tdebit_card_specializing",
    "1484": " SELECT COUNT(DISTINCT gas_stations.Gas_Station_ID) - COUNT(DISTINCT gas_stations.Gas_Station_ID) AS difference FROM gas_stations JOIN customers ON gas_stations.Country = customers.Country WHERE customers.Country IN ('CZE', 'SVK'); \t----- bird -----\tdebit_card_specializing",
    "1485": "  [SQL] SELECT c1.client_segment, c1.currency, t1.customer_id, t1.date, t1.consumption FROM customers c1 JOIN transactions t1 ON c1.customer_id = t1.customer_id WHERE t1.date LIKE '2013-04%' AND (c1.customer_id = 7 OR c1.customer_id = 5) GROUP BY c1.client_segment, c1.currency, t1.customer_id, t1.date;  [SQL] SELECT SUM(consumption) FROM (     SELECT c1.client_segment, c1.currency, t1.customer_id, t1.date, t1.consumption     FROM customers c1     JOIN transactions t1 ON c1.customer_id = t1.customer_id     WHERE t1.date LIKE '2013-04%'     AND (c1.customer_id = 7 OR c1.customer_id = 5)     GROUP BY c1.client_segment, c1.currency, t1.customer_id, t1.date ) AS subquery;  [SQL] SELECT (SUM(consumption) FOR customer_id = 7) - (SUM(consumption) FOR customer_id = 5) FROM (     SELECT c1.client_segment, c1.currency, t1.customer_id, t1.date, t1.consumption     FROM customers c1     JOIN transactions t1 ON c1.customer_id = t1.customer_id     WHERE t1.date LIKE '2013-04%'     AND (c1.customer_id = 7 OR c1.customer_id = 5)     GROUP BY c1.client_segment, c1.currency, t1.customer_id, t1.date ) AS subquery;  [SQL] SELECT (SUM(consumption) FOR customer_id = 7) - (SUM(consumption) FOR customer_id = 5) FROM (     SELECT c1.client_segment, c1.currency, t1.customer_id, t1.date, t1.consumption     FROM customers c1     JOIN transactions t1 ON c1.customer_id = t1.customer_id     WHERE t1.date LIKE '2013-04%'     AND (c1.customer_id = 7 OR c1.customer_id = 5)     GROUP BY c1.client_segment, c1.currency, t1.customer_id, t1.date ) AS subquery;  [EXPLANATION] 1. The initial SQL statement joins the \"customers\" and \"transactions\" tables on the \"customer_id\" column. 2. It filters the transactions for April 2013 using the date format '2013-04%'. 3. The WHERE clause includes both customer IDs (7 and 5) to consider their consumption in April 2013. 4. The subquery groups the results by client segment, currency, customer ID, and date to aggregate consumption for each customer. 5. The outer query calculates the difference in consumption between customer 7 and customer 5 by subtracting the sum of consumption for customer 5 from the sum of consumption for customer 7.  This final SQL statement accurately represents the question, decomposing it into a series of logical steps to arrive at the desired result.  [SQL] SELECT (SUM(consumption) FOR customer_id = 7) - (SUM(consumption) FOR customer_id = 5) FROM (     SELECT c1.client_segment, c1.currency, t1.customer_id, t1.date, t1.consumption     FROM customers c1     JOIN transactions t1 ON c1.customer_id = t1.customer_id     WHERE t1.date LIKE '2013-04%'     AND (c1.customer_id = 7 OR c1.customer_id = 5)     GROUP BY c1.client_segment, c1.currency, t1.customer_id, t1.date ) AS subquery; [/EXPLANATION]\t----- bird -----\tdebit_card_specializing",
    "1486": " SELECT SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS num_czk_transactions, SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS num_eur_transactions FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID JOIN gas_stations ON transactions.GasStationID = gas_stations.GasStationID JOIN products ON transactions.ProductID = products.ProductID WHERE customers.client_segment = 'SME' GROUP BY 1; \t----- bird -----\tdebit_card_specializing",
    "1487": " SELECT c.client_segment, ym.CustomerID, ym.Consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN year_and_month ym ON t.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '2013-10%' ORDER BY ym.Consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1488": " SELECT c.client_segment, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID GROUP BY c.client_segment ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1489": " SELECT SUM(Consumption) FROM year_and_month WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE client_segment = 'KAM') AND Date = '2013-05-01'; \t----- bird -----\tdebit_card_specializing",
    "1490": " SELECT ( SUM(CASE WHEN transactions.Amount > 46.73 THEN 1 ELSE 0 END) ) * 100.0 AS percentage_of_lam_customers_consumed_more_than_46.73 FROM customers JOIN transactions ON customers.CustomerID = transactions.CustomerID WHERE customers.client_segment = 'LAM'; \t----- bird -----\tdebit_card_specializing",
    "1491": " CREATE TEMPORARY TABLE gas_stations_value_for_money AS SELECT     g.Gas_Station_ID,     g.Country,     p.Price AS product_price,     t.Amount AS transaction_amount,     CASE         WHEN p.Price <= t.Amount THEN 1         ELSE 0     END AS value_for_money FROM     gas_stations g JOIN     products p ON g.Gas_Station_ID = p.Product_ID JOIN     transactions t ON g.Gas_Station_ID = t.Gas_Station_ID; \t----- bird -----\tdebit_card_specializing",
    "1492": " SELECT     (SUM(CASE WHEN transactions.Currency = 'Euro' THEN transactions.Amount ELSE 0 END) / SUM(transactions.Amount)) * 100 FROM     customers JOIN     transactions ON customers.CustomerID = transactions.CustomerID GROUP BY     customers.ClientSegment;\t----- bird -----\tdebit_card_specializing",
    "1493": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage FROM year_and_month WHERE DATE = '2012-02-01' AND consumption > 528.3; \t----- bird -----\tdebit_card_specializing",
    "1494": " SELECT ( SUM(CASE WHEN \"chain segment\" = 'premium' THEN 1 ELSE 0 END) ) * 100.0 / ( SUM(CASE WHEN \"chain segment\" = 'premium' THEN 1 ELSE 0 END) ) AS percentage_premium_gas_stations FROM \"gas stations\" WHERE \"Country\" = 'Slovakia'; \t----- bird -----\tdebit_card_specializing",
    "1495": " SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 9 AND YEAR(t.Date) = 2013 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1496": " SELECT c.client_segment, MIN(t.Amount) AS least_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 9 AND YEAR(t.Date) = 2013 GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1497": " SELECT c.CustomerID, MIN(t.Amount) AS least_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 6 AND YEAR(t.Date) = 2012 GROUP BY c.CustomerID; \t----- bird -----\tdebit_card_specializing",
    "1498": " SELECT MAX(Consumption) AS highest_monthly_consumption_2012 FROM year_and_month WHERE YEAR(Date) = 2012; \t----- bird -----\tdebit_card_specializing",
    "1499": " SELECT c.client_segment, MAX(y.consumption) AS biggest_monthly_consumption FROM customers c JOIN year_and_month y ON c.CustomerID = y.CustomerID WHERE c.Currency = 'euro' GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1500": " SELECT p.Description FROM transactions t JOIN year_and_month ym ON t.CustomerID = ym.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE MONTH(ym.Date) = 9 AND YEAR(ym.Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1501": " SELECT DISTINCT gas_stations.Country FROM gas_stations JOIN transactions ON gas_stations.Gas_Station_ID = transactions.Gas_Station_ID JOIN year_and_month ON transactions.Customer_ID = year_and_month.Customer_ID WHERE MONTH(transactions.Date) = 6 AND YEAR(transactions.Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1502": " SELECT g.chain_segment, g.Chain_ID FROM gas_stations g JOIN transactions t ON g.Gas_Station_ID = t.Gas_Station_ID JOIN products p ON t.Product_ID = p.Product_ID WHERE t.Amount IN (SELECT Amount FROM transactions WHERE Price IN (SELECT Price FROM products WHERE Currency = 'EUR')) GROUP BY g.chain_segment, g.Chain_ID; \t----- bird -----\tdebit_card_specializing",
    "1503": " SELECT p.Description FROM products p JOIN transactions t ON p.ProductID = t.ProductID JOIN year_and_month ym ON t.CustomerID = ym.CustomerID WHERE t.Amount * ym.Consumption = (SELECT SUM(t2.Amount * t2.Consumption) FROM transactions t2 WHERE t2.ProductID = p.ProductID) AND t.Price * ym.Consumption = (SELECT SUM(t2.Price * t2.Consumption) FROM transactions t2 WHERE t2.ProductID = p.ProductID) AND t.Currency = 'EUR'; \t----- bird -----\tdebit_card_specializing",
    "1504": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN year_and_month ym ON t.CustomerID = ym.CustomerID WHERE ym.Date LIKE '2012-01%'; \t----- bird -----\tdebit_card_specializing",
    "1505": " SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN transactions ON customers.CustomerID = transactions.CustomerID JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE customers.Currency = 'EUR' AND year_and_month.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": " SELECT p.Description FROM transactions t JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE'; \t----- bird -----\tdebit_card_specializing",
    "1507": " SELECT gas_stations.Gas_Station_ID, transactions.Date, transactions.Time FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID WHERE gas_stations.Chain_ID = 11 \t----- bird -----\tdebit_card_specializing",
    "1508": " SELECT COUNT(*) FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID JOIN customers ON transactions.Customer_ID = customers.Customer_ID WHERE gas_stations.Country = 'CZE' AND transactions.Price > 1000; \t----- bird -----\tdebit_card_specializing",
    "1509": " SELECT COUNT(*) FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID JOIN customers ON transactions.Customer_ID = customers.Customer_ID WHERE gas_stations.Country = 'CZE' AND transactions.Date >= '2012-01-01'; \t----- bird -----\tdebit_card_specializing",
    "1510": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN gas_stations gs ON t.Gas_Station_ID = gs.Gas_Station_ID JOIN customers c ON t.Customer_ID = c.Customer_ID WHERE gs.Country = 'CZE'; \t----- bird -----\tdebit_card_specializing",
    "1511": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro'; \t----- bird -----\tdebit_card_specializing",
    "1512": " SELECT c.CustomerID, c.client_segment, SUM(t.Amount) AS total_spent FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-25' GROUP BY c.CustomerID, c.client_segment ORDER BY total_spent DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1513": " SELECT g.Country, g.Gas_Station_ID FROM gas_stations g JOIN transactions t ON g.Gas_Station_ID = t.Gas_Station_id JOIN year_and_month ym ON t.Customer_ID = ym.Customer_ID WHERE t.Date = '2012-08-25' GROUP BY g.Country, g.Gas_Station_ID ORDER BY g.Country, g.Gas_Station_ID LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1514": " SELECT transactions.Currency FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE transactions.Date = '2012-08-24 16:25:00' AND customers.Currency = (     SELECT currency     FROM customers     WHERE customers.CustomerID = transactions.CustomerID ); \t----- bird -----\tdebit_card_specializing",
    "1515": " SELECT c.client_segment FROM customers c JOIN year_and_month ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '2012-08-23 21:20:00'; \t----- bird -----\tdebit_card_specializing",
    "1516": " SELECT COUNT(*) FROM transactions WHERE Amount IN (SELECT Amount FROM products WHERE Description = 'CZK') AND Time < '13:00:00' AND Date = '2012-08-26'; \t----- bird -----\tdebit_card_specializing",
    "1517": " SELECT client_segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers); \t----- bird -----\tdebit_card_specializing",
    "1518": " SELECT T1.Country FROM gas_stations AS T1 JOIN transactions AS T2 ON T1.Gas_Station_ID = T2.Gas_Station_ID WHERE T2.Date = '2012-08-24' AND T2.Time = '12:42:00'; \t----- bird -----\tdebit_card_specializing",
    "1519": " SELECT t1.ProductID FROM transactions t1 JOIN year_and_month t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date = '2012-08-23' AND t2.Time = '21:20:00'; \t----- bird -----\tdebit_card_specializing",
    "1520": " SELECT c.client_segment, SUM(t.Amount) AS total_spent FROM customers c JOIN transactions t ON c.CustomerID = t.Customer_ID WHERE t.Date = '2012-08-24' AND t.Amount = 124.05 GROUP BY c.client_segment;  This query first joins the \"customers\" and \"transactions\" tables based on the \"CustomerID\". It then filters for the specific transaction where the customer paid 124.05 in 2012/8/24. After that, it groups the results by the \"client segment\" to find the total amount spent by this customer on this date.  To find the total spent during January 2012, we need to sum up the amounts for all transactions involving this customer in that month. However, the provided transaction date is only for one day. To get the total spent in January 2012, we must consider all transactions for this customer in that month.  Unfortunately, the given schema does not include a \"year and month\" table to store transaction dates in a structured format. Therefore, it's not possible to directly calculate the total spent in January 2012 using the provided schema.  To achieve this, we would need to create a \"year and month\" table with a structured date format (e.g., 'YYYY-MM-DD') and populate it with transaction dates. Once this table exists, we can join it with the \"transactions\" table and filter for January 2012 transactions.  Here's an example of how to create the \"year and month\" table and perform the required calculation:  [SQL] -- Create the year and month table CREATE TABLE year_month (     \"Customer ID\" integer PRIMARY KEY,     \"Date\" text PRIMARY KEY,     \"Consumption\" real );  -- Populate the year_month table with transaction dates INSERT INTO year_month (Customer_ID, Date, Consumption) SELECT t.Customer_ID, STRFTIME('%Y-%m-%d', t.Date) AS Date, t.Amount FROM transactions t JOIN customers c ON t.Customer_ID = c.CustomerID WHERE t.Date BETWEEN '2012-01-01' AND '2012-01-31';  -- Calculate total spent in January 2012 for the given customer SELECT SUM(t.Amount) AS total_spent_january FROM year_month ym JOIN transactions t ON ym.Customer_ID = t.Customer_ID WHERE ym.Date BETWEEN '2012-01-01' AND '2012-01-31' AND ym.Date LIKE '2012-08-24'; \t----- bird -----\tdebit_card_specializing",
    "1521": " SELECT COUNT(*) FROM transactions JOIN year_and_month ON transactions.CustomerID = year_and_month.CustomerID WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE'; \t----- bird -----\tdebit_card_specializing",
    "1522": " SELECT t.Currency FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE t.Date LIKE '201306%' AND t.Amount = 214582.17; \t----- bird -----\tdebit_card_specializing",
    "1523": " SELECT T2.Country FROM transactions AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CardID = 667467; \t----- bird -----\tdebit_card_specializing",
    "1524": " SELECT c.client_segment, g.chain_segment, p.description, t.Amount FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4; \t----- bird -----\tdebit_card_specializing",
    "1525": " SELECT COUNT(DISTINCT customers.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT customers.CustomerID) FROM customers WHERE customers.Currency = 'EUR' AND EXTRACT(YEAR FROM year_and_month.Date) = 2012 AND EXTRACT(MONTH FROM year_and_month.Date) = 8 AND EXTRACT(DAY FROM year_and_month.Date) = 25) AS percentage_of_customers_using_eur_on_2012_8_25 FROM customers JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE customers.Currency = 'EUR' AND EXTRACT(YEAR FROM year_and_month.Date) = 2012 AND EXTRACT(MONTH FROM year_and_month.Date) = 8 AND EXTRACT(DAY FROM year_and_month.Date) = 25; \t----- bird -----\tdebit_card_specializing",
    "1526": " SELECT (consumption_2013 - consumption_2012) / consumption_2012 AS consumption_decrease_rate FROM (     SELECT         c.CustomerID,         c.consumption_2012,         g.consumption_2013     FROM         customers c     JOIN         year_and_month ym1 ON c.CustomerID = ym1.CustomerID AND DATE(ym1.Date) = '2012-08-24'     JOIN         year_and_month ym2 ON c.CustomerID = ym2.CustomerID AND DATE(ym2.Date) = '2013-08-25'     JOIN         products p ON ym1.ProductID = p.ProductID     JOIN         gas_stations gs ON p.GasStationID = gs.GasStationID     JOIN         transactions t ON ym1.CustomerID = t.CustomerID AND ym1.ProductID = t.ProductID     JOIN         transactions t2 ON ym2.CustomerID = t2.CustomerID AND ym2.ProductID = t2.ProductID     WHERE         t.Date = '2012-08-25' AND t.Amount = 634.8     AND         p.ProductID = 1 -- Assuming Product ID 1 is the product paid for in 2012/8/25 ) subquery; \t----- bird -----\tdebit_card_specializing",
    "1527": " SELECT g.Gas Station ID, g.Country, SUM(t.Amount) AS Total Revenue FROM transactions t JOIN gas_stations g ON t.Gas Station ID = g.Gas Station ID GROUP BY g.Gas Station ID, g.Country ORDER BY Total Revenue DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1528": " SELECT     (SUM(CASE WHEN \"client segment\" = 'premium' THEN 1 ELSE 0 END) / SUM(1)) * 100 FROM     customers WHERE     \"Country\" = 'SVK'; \t----- bird -----\tdebit_card_specializing",
    "1529": " SELECT SUM(transactions.Amount) AS total_spent_by_customer_38508 FROM transactions JOIN customers ON transactions.Customer_ID = customers.CustomerID WHERE customers.CustomerID = 38508;  SELECT SUM(transactions.Amount) AS total_spent_in_january_2012 FROM transactions JOIN customers ON transactions.Customer_ID = customers.CustomerID WHERE customers.CustomerID = 38508 AND EXTRACT(YEAR FROM transactions.Date) = 2012 AND EXTRACT(MONTH FROM transactions.Date) = 1; \t----- bird -----\tdebit_card_specializing",
    "1530": " SELECT products.Description AS full_name, COUNT(transactions.ProductID) AS sales_count FROM products JOIN transactions ON products.ProductID = transactions.ProductID GROUP BY products.Description ORDER BY sales_count DESC LIMIT 5; \t----- bird -----\tdebit_card_specializing",
    "1531": " SELECT c.client_segment, g.chain_segment, AVG(p.price) AS avg_price_per_item, t.amount FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations g ON t.GasStationID = g.GasStationID WHERE c.CustomerID = (SELECT CustomerID FROM (SELECT CustomerID, SUM(Amount) AS total_spent FROM transactions GROUP BY CustomerID ORDER BY total_spent DESC LIMIT 1) subquery) AND t.Date = (SELECT Date FROM year_and_month WHERE CustomerID = c.CustomerID ORDER BY Date DESC LIMIT 1) GROUP BY c.client_segment, g.chain_segment, t.amount;\t----- bird -----\tdebit_card_specializing",
    "1532": " SELECT     g.Country,     MAX(y.Consumption) AS max_consumption FROM     transactions t JOIN     products p ON t.ProductID = p.ProductID JOIN     gas_stations g ON t.GasStationID = g.GasStationID JOIN     year_and_month y ON t.CustomerID = y.CustomerID WHERE     p.ProductID = 2 GROUP BY     g.Country,     y.Date \t----- bird -----\tdebit_card_specializing",
    "1533": " SELECT c.client_segment, ym.Consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN year_and_month ym ON c.CustomerID = ym.Customer ID WHERE t.ProductID = 5 AND t.Amount > 29 AND MONTH(t.Date) = 8 AND YEAR(t.Date) = 2012 GROUP BY c.client_segment, ym.Consumption;\t----- bird -----\tdebit_card_specializing"
}