
{
    "0": " SELECT MAX(Percent (%) Eligible Free (K-12)) AS highest_eligible_free_rate FROM free_and_reduced_price_meals WHERE County Name = 'Alameda County'; \t----- bird -----\tcalifornia_schools",
    "1": " SELECT     CDSCode,     MIN(Percent) AS lowest_eligible_free_rate FROM     free_and_reduced_price_meals WHERE     DistrictType = 'Continuation School'     AND AgeGroup = '5-17'     AND EducationalOptionType = 'Eligible Free' GROUP BY     CDSCode LIMIT 3; \t----- bird -----\tcalifornia_schools",
    "2": " SELECT s.Zip FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.County = 'Fresno County Office of Education'; \t----- bird -----\tcalifornia_schools",
    "3": " SELECT s.street_address FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.cds = frpm.CDSCode WHERE frpm.Percent >= (SELECT MAX(Percent) FROM (SELECT Percent FROM free_and_reduced_price_meals WHERE Academic_Year = '2019-2020' AND District_Type = 'Public' AND School_Type = 'Elementary' ORDER BY FRPM_Count DESC LIMIT 1)) AND frpm.Academic_Year = '2019-2020' AND frpm.District_Type = 'Public' AND frpm.School_Type = 'Elementary'; \t----- bird -----\tcalifornia_schools",
    "4": " SELECT s.Phone FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.OpenDate > '2000-01-01' AND sc.rtype = 'Charter'; \t----- bird -----\tcalifornia_schools",
    "5": " SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_Math > 400 AND s.Virtual = 1 AND s.Charter = 0; \t----- bird -----\tcalifornia_schools",
    "6": " SELECT s.school_name, s.district_name, s.county_name FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.Number_of_Test_Takers >= 500 AND (s.Magnet = 1 OR s.Education_Option_Code LIKE '%magnet%'); \t----- bird -----\tcalifornia_schools",
    "7": " SELECT s.Phone FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.Number_of_Test_Takers >= 1500 GROUP BY ss.cds ORDER BY COUNT(*) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "8": " SELECT s.enrollment (1st-12th grade), sr.Number_of_Test_Takers FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode JOIN free_and_reduced_price_meals fr ON s.CDSCode = fr.CDSCode WHERE fr.Percent (%) Eligible FRPM (K-12) = (SELECT MAX(Percent (%) Eligible FRPM (K-12)) FROM free_and_reduced_price_meals) ORDER BY s.enrollment (1st-12th grade) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "9": " SELECT COUNT(DISTINCT s.CDSCode) FROM sat_scores AS s JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.average_scores_math > 560 AND sc.Charter = 1; \t----- bird -----\tcalifornia_schools",
    "10": " SELECT sr.school_name, sr.average_reading_score FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode WHERE sr.average_reading_score = (SELECT MAX(average_reading_score) FROM sat_scores) AND s.grade_span_served.contains('5-17') SELECT sr.FRPM_count FROM sat_scores sr JOIN schools s ON sr.cds = s.CDSCode WHERE s.grade_span_served.contains('5-17'); \t----- bird -----\tcalifornia_schools",
    "11": " SELECT s.CDSCode FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode HAVING SUM(ss.enrollment (1st-12th grade)) > 500; \t----- bird -----\tcalifornia_schools",
    "12": " SELECT MAX(FRPM_percent) AS highest_eligible_free_rate FROM free_and_reduced_price_meals JOIN sat_scores ON free_and_reduced_price_meals.CDSCode = sat_scores.cds WHERE sat_scores.average_scores_in_Reading >= 0.3 AND sat_scores.average_scores_in_Math >= 0.3 AND sat_scores.average_scores_in_writing >= 0.3 AND free_and_reduced_price_meals.Percent(%) Eligible FRPM (Ages 5-17) > 0.3 GROUP BY free_and_reduced_price_meals.CDSCode; \t----- bird -----\tcalifornia_schools",
    "13": " SELECT s.Phone FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 / ss.Number_of_Test_Takers * 100 >= 10 ORDER BY ss.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 / ss.Number_of_Test_Takers * 100 DESC LIMIT 3; \t----- bird -----\tcalifornia_schools",
    "14": " SELECT s.CDSCode, s.NationalCenterForEducationalStatisticsSchoolIdentificationNumber FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode ORDER BY SUM(ss.Enrollment_1st_12th_grade) DESC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "15": " SELECT s.CDSCode, s.DistrictName, a.average_scores_reading FROM schools s JOIN sat_scores a ON s.CDSCode = a.cds WHERE s.StatusType = 'Active' ORDER BY a.average_scores_reading DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "16": " SELECT COUNT(*) FROM schools WHERE County = 'Alameda' AND Charter = 0 AND Number_of_Test_Takers < 100; \t----- bird -----\tcalifornia_schools",
    "17": " SELECT s.CDSCode, s.charter_num, a.average_writing_score FROM schools s JOIN sat_scores a ON s.CDSCode = a.cds WHERE a.average_writing_score > 499 ORDER BY a.average_writing_score DESC; \t----- bird -----\tcalifornia_schools",
    "18": " SELECT COUNT(*) FROM schools WHERE County = 'Fresno' AND District = 'Directly Funded' AND Number_of_Test_Takers <= 250; \t----- bird -----\tcalifornia_schools",
    "19": " SELECT s.Phone FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.average_scores_in_Math = (     SELECT MAX(average_scores_in_Math)     FROM sat_scores ) \t----- bird -----\tcalifornia_schools",
    "20": " SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND Low_Grade = '9' AND High_Grade = '12'; \t----- bird -----\tcalifornia_schools",
    "21": " SELECT COUNT(*) FROM free_and_reduced_price_meals AS frrm JOIN schools ON frrm.CDSCode = schools.CDSCode WHERE schools.County = 'Los Angeles' AND frrm.Enrollment (K-12) > 500 AND frrm.Free_Meal_Count (K-12) < 700 AND frrm.Academic_Year = '2019-2020'; \t----- bird -----\tcalifornia_schools",
    "22": " SELECT s.school_name, MAX(s.enrollment_1st_12th) AS highest_enrollment FROM schools s JOIN sat_scores ss ON s.cds = ss.cds WHERE s.county = 'Contra Costa' GROUP BY s.school_name ORDER BY highest_enrollment DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "23": " SELECT s.school_name, s.street_address FROM schools s JOIN free_and_reduced_price_meals frrpm ON s.CDSCode = frrpm.CDSCode WHERE frrpm.Enrollment (K-12) - frrpm.Enrollment (Ages 5-17) > 30 \t----- bird -----\tcalifornia_schools",
    "24": " SELECT s.school_name, s.district_name, s.county_name, f.percent_eligible_free, s.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 FROM schools s JOIN sat_scores f ON s.CDSCode = f.cds WHERE f.Percent(%) Eligible Free (K-12) > 0.1 AND f.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 > 0; \t----- bird -----\tcalifornia_schools",
    "25": " SELECT s.CDSCode, s.DistrictName, s.FundingType FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.County = 'Riverside' AND ss.average_math >= 400 GROUP BY s.CDSCode, s.DistrictName, s.FundingType HAVING COUNT(ss.cds) > 0; \t----- bird -----\tcalifornia_schools",
    "26": " SELECT s.school_name, s.street_address, s.city, s.zip, s.state, s.mailing_city, s.mailing_zip, s.mailing_state, s.Phone, s.extension, s.Website FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.county = 'Monterey' AND sc.age_group = '15-17' AND sc.FRPM_count_15_17 > 800 AND sc.stype = 'High School'; \t----- bird -----\tcalifornia_schools",
    "27": " SELECT s.school, s.average_scores_in_writing, s.phone FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01'; \t----- bird -----\tcalifornia_schools",
    "28": " SELECT s.school_name, s.doc_type FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.FundingType = 'Locally Funded' GROUP BY s.school_name, s.doc_type HAVING AVG(ss.enrollment_1st_12th - ss.enrollment_5_17) > (     SELECT AVG(enrollment_1st_12th - enrollment_5_17)     FROM schools     WHERE FundingType = 'Locally Funded' ); \t----- bird -----\tcalifornia_schools",
    "29": " SELECT MAX(OpenDate) AS max_enrollment_open_date FROM schools WHERE enrollment = (SELECT MAX(enrollment) FROM schools); \t----- bird -----\tcalifornia_schools",
    "30": " SELECT s.city, COUNT(sr.student_id) AS enrollment_count FROM schools s JOIN student_registrations sr ON s.CDSCode = sr.school_code WHERE sr.grade_level BETWEEN 1 AND 12 GROUP BY s.city ORDER BY enrollment_count ASC LIMIT 5; \t----- bird -----\tcalifornia_schools",
    "31": " SELECT     s.school_name,     f.enrollment_12th,     f.free_meal_count_12th,     f.percent_eligible_free_12th FROM     schools s JOIN     free_and_reduced_price_meals f ON s.cds = f.cds WHERE     f.grade_span_served = '1-12' ORDER BY     f.enrollment_12th DESC LIMIT 10;  SELECT     s.school_name,     f.enrollment_12th,     f.free_meal_count_12th,     f.percent_eligible_free_12th FROM     schools s JOIN     free_and_reduced_price_meals f ON s.cds = f.cds WHERE     f.grade_span_served = '1-12' AND     f.enrollment_12th IN (         SELECT             f1.enrollment_12th         FROM             free_and_reduced_price_meals f1         ORDER BY             f1.enrollment_12th DESC         LIMIT 10     ); \t----- bird -----\tcalifornia_schools",
    "32": " SELECT     s.school_name,     f.enrollment_12th,     f.free_meal_count_12th,     f.percent_eligible_free_12th,     f.frpm_count_12th,     f.percent_eligible_frpm_12th FROM     schools s JOIN     free_and_reduced_price_meals f ON s.cds = f.cds WHERE     s.ownership_code = 66 ORDER BY     f.free_meal_count_12th DESC LIMIT 5;  SELECT     f.percent_eligible_free_12th FROM     free_and_reduced_price_meals f JOIN     (         SELECT             cds,             MAX(enrollment_12th) AS max_enrollment         FROM             free_and_reduced_price_meals         WHERE             ownership_code = 66         GROUP BY             cds     ) subquery ON f.cds = subquery.cds WHERE     f.free_meal_count_12th = subquery.max_enrollment; \t----- bird -----\tcalifornia_schools",
    "33": " SELECT s.school_name, s.website FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_reading BETWEEN 1900 AND 2000 AND ss.average_scores_in_math BETWEEN 1900 AND 2000 AND ss.average_scores_in_writing BETWEEN 1900 AND 2000 AND ss.Number_of_Test_Takers >= 1000 AND ss.Enrollment_1st_12th_grade >= 500 AND ss.Enrollment_5_17th_grade >= 500 AND ss.2013_14_calpads_fall_1_certification_status = 1 \t----- bird -----\tcalifornia_schools",
    "34": " SELECT     s.school_name,     sr.percent_eligible_free_5_17 AS free_rate FROM     schools s JOIN     sat_scores sr ON s.cds = sr.cds WHERE     s.school = 'Kacey Gibson' LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "35": " SELECT s.email FROM sat_scores AS ss JOIN free_and_reduced_price_meals AS frpm ON ss.cds = frpm.CDSCode JOIN schools AS s ON frpm.CDSCode = s.CDSCode WHERE ss.rtype = 'Charter' GROUP BY ss.cds HAVING MIN(enrollment_1st_12th) = (     SELECT MIN(enrollment_1st_12th)     FROM (         SELECT ss.cds, MIN(enrollment_1st_12th) AS enrollment_1st_12th         FROM sat_scores AS ss         JOIN free_and_reduced_price_meals AS frpm ON ss.cds = frpm.CDSCode         JOIN schools AS s ON frpm.CDSCode = s.CDSCode         WHERE ss.rtype = 'Charter'         GROUP BY ss.cds     ) AS subquery ); \t----- bird -----\tcalifornia_schools",
    "36": " SELECT s.administrator_first_name_1, s.administrator_last_name_1 FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE sc.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 > 0 ORDER BY sc.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "37": " SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds ORDER BY sc.average_scores_in_reading / sc.average_scores_in_math - (sc.average_scores_in_reading / sc.average_scores_in_math) / sc.average_scores_in_writing ASC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "38": " SELECT s.website FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.County = 'Los Angeles County' AND ss.Number_of_Test_Takers BETWEEN 2000 AND 3000; \t----- bird -----\tcalifornia_schools",
    "39": " SELECT AVG(Number_of_Test_Takers) FROM sat_scores JOIN schools ON sat_scores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'; \t----- bird -----\tcalifornia_schools",
    "40": " SELECT s.Phone FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.school_name = frpm.school_name WHERE frpm.district_name = 'Fresno Unified' AND ss.average_scores_in_reading = (SELECT MIN(average_scores_in_reading) FROM sat_scores) AND s.StatusType = 'Active'; \t----- bird -----\tcalifornia_schools",
    "41": " SELECT s.school_name, s.county_name FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT CDSCode, COUNT(*) AS count, AVG(average_scores_reading) AS avg_score     FROM sat_scores     WHERE rtype = 'SAT' AND school_type = 'Virtual'     GROUP BY CDSCode ) v ON s.CDSCode = v.CDSCode WHERE v.count = (     SELECT COUNT(*)     FROM sat_scores     WHERE rtype = 'SAT' AND school_type = 'Virtual'     GROUP BY CDSCode     ORDER BY avg_score DESC     LIMIT 5 ) ORDER BY s.avg_score_reading DESC; \t----- bird -----\tcalifornia_schools",
    "42": " SELECT s.school_name, s.district_name, s.county_name, a.average_scores_math FROM schools s JOIN sat_scores a ON s.cds = a.cds ORDER BY a.average_scores_math DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "43": " SELECT s.county, AVG(ss.average_scores_math) AS avg_math_score FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT school, MIN(avg_scores_reading) AS min_reading, MIN(avg_scores_math) AS min_math, MIN(avg_scores_writing) AS min_writing     FROM sat_scores     GROUP BY school ) min_scores ON s.CDSCode = min_scores.school WHERE ss.average_scores_math = min_scores.min_math GROUP BY s.county ORDER BY avg_math_score ASC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "44": " SELECT s.city, AVG(ss.average_scores_in_writing) AS avg_writing_score FROM sat_scores ss JOIN schools s ON ss.cds = s.CDSCode JOIN (     SELECT school_name, COUNT(*) AS test_takers_score_1500     FROM sat_scores     WHERE Number_of_Test_Takers >= 1500 AND average_scores_in_reading >= 500 AND average_scores_in_math >= 500     GROUP BY school_name     ORDER BY test_takers_score_1500 DESC     LIMIT 1 ) t ON s.school_name = t.school_name WHERE ss.Number_of_Test_Takers >= 1500; \t----- bird -----\tcalifornia_schools",
    "45": " SELECT s.school, AVG(ss.average_scores_writing) AS avg_writing_score FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE s.administrator_first_name = 'Ricci' AND s.administrator_last_name = 'Ulrich' GROUP BY s.school; \t----- bird -----\tcalifornia_schools",
    "46": " SELECT     MAX(SUM(sat_scores.enrollment_1st_12th)) AS max_enrollment FROM     free_and_reduced_price_meals JOIN     sat_scores ON     free_and_reduced_price_meals.CDSCode = sat_scores.cds GROUP BY     free_and_reduced_price_meals.CDSCode; \t----- bird -----\tcalifornia_schools",
    "47": " SELECT COUNT(DISTINCT schools.CDSCode) AS monthly_average_openings FROM schools JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode WHERE free_and_reduced_price_meals.County = 'Alameda' AND free_and_reduced_price_meals.District = 'Elementary School District' AND free_and_reduced_price_meals.AcademicYear = '1980' AND schools.StatusType = 'Open'; \t----- bird -----\tcalifornia_schools",
    "48": " SELECT     COUNT(DISTINCT schools.CDSCode) AS merged_unified_count,     COUNT(DISTINCT schools.CDSCode) AS merged_elementary_count FROM     schools JOIN     free_and_reduced_price_meals AS frpm ON     schools.CDSCode = frpm.CDSCode WHERE     schools.County = 'Orange County'     AND (schools.DistrictType = 'Unified School District' OR schools.DistrictType = 'Elementary School District') GROUP BY     schools.DistrictType; \t----- bird -----\tcalifornia_schools",
    "49": " SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.County, s.School ORDER BY COUNT(s.CDSCode) DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "50": " SELECT s.school_name, s.street_address FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds ORDER BY ss.average_scores_in_math DESC LIMIT 7; \t----- bird -----\tcalifornia_schools",
    "51": " SELECT s.mailing_street_address, s.school_name FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN (     SELECT CDSCode, AVG(average_scores_in_reading) AS avg_reading     FROM sat_scores     GROUP BY CDSCode     ORDER BY avg_reading ASC     LIMIT 1 ) subquery ON s.CDSCode = subquery.CDSCode WHERE ss.average_scores_in_reading = subquery.avg_reading; \t----- bird -----\tcalifornia_schools",
    "52": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE sat_scores.Number_of_Test_Takers_Whose_Total_SAT_Scores_Are_Greater_or_Equal_to_1500 >= 1 AND schools.mailing_city = 'Lakeport'; \t----- bird -----\tcalifornia_schools",
    "53": " SELECT COUNT(DISTINCT \"cds\") AS total_test_takers FROM \"sat scores\" JOIN \"schools\" ON \"sat scores\".\"cds\" = \"schools\".\"CDSCode\" WHERE \"schools\".\"City\" LIKE '%Fresno%'; \t----- bird -----\tcalifornia_schools",
    "54": " SELECT s.CDSCode, s.County, s.District, s.School, m.mailing_zip FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN schools m ON s.CDSCode = m.CDSCode WHERE s.admin_name = 'Avetik Atoian'; \t----- bird -----\tcalifornia_schools",
    "55": " SELECT COUNT(DISTINCT schools.CDSCode) AS colusa_count, COUNT(DISTINCT schools.CDSCode) AS humboldt_count FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.mailing_state = 'California' AND schools.county IN ('Colusa', 'Humboldt'); \t----- bird -----\tcalifornia_schools",
    "56": " SELECT COUNT(*) FROM schools WHERE Charter = 0 AND City = 'San Joaquin' AND State = 'California'; \t----- bird -----\tcalifornia_schools",
    "57": " SELECT s.Phone, s.extension FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds WHERE ss.average_scores_in_writing = (SELECT AVG(average_scores_in_writing) FROM sat_scores WHERE cds = s.CDSCode ORDER BY average_scores_in_reading DESC LIMIT 333, 1) ORDER BY ss.average_scores_in_writing DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "58": " SELECT s.school_name, s.Phone, s.extension FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704'; \t----- bird -----\tcalifornia_schools",
    "59": " SELECT s.website FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.administrator_first_name1 = 'Mike' AND s.administrator_last_name1 = 'Larson' OR s.administrator_first_name2 = 'Dante' AND s.administrator_last_name2 = 'Alvarez'; \t----- bird -----\tcalifornia_schools",
    "60": " SELECT s.website FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE s.Charter = 1 AND s.District Ownership Code = 'Partially Virtual' AND s.County = 'San Joaquin' AND sc.rtype = 'SAT' AND frpm.Academic Year = '2021-2022'; \t----- bird -----\tcalifornia_schools",
    "61": " SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND District = 'Elementary School District' AND Charter = 1; \t----- bird -----\tcalifornia_schools",
    "62": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN free_and_reduced_price_meals ON schools.CDSCode = free_and_reduced_price_meals.CDSCode WHERE free_and_reduced_price_meals.County = 'Los Angeles' AND free_and_reduced_price_meals.DistrictType = 'Public' AND free_and_reduced_price_meals.SchoolType = 'Elementary' AND free_and_reduced_price_meals.EducationalOptionType = 'Non-Charter' AND free_and_reduced_price_meals.Percent(%) Eligible Free (K-12) < 0.018; \t----- bird -----\tcalifornia_schools",
    "63": " SELECT s.school_name, s.city FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE sc.charter = 1 AND sc.charter_num = '00D2' LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "64": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.City = 'Hickman' AND schools.CharterNum = '00D4'; \t----- bird -----\tcalifornia_schools",
    "65": " SELECT     (SUM(CASE WHEN schools.FundingType = 'Locally Funded' THEN 1 ELSE 0 END) / SUM(CASE WHEN schools.FundingType = 'Charter' THEN 1 ELSE 0 END)) * 100 FROM     free_and_reduced_price_meals JOIN     schools ON free_and_reduced_price_meals.CDSCode = schools.CDSCode WHERE     schools.County = 'Santa Clara'; \t----- bird -----\tcalifornia_schools",
    "66": " SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.OpenDate >= '2000-01-01' AND schools.OpenDate <= '2005-12-31' AND schools.County = 'Stanislaus'; \t----- bird -----\tcalifornia_schools",
    "67": " SELECT SUM(charter) FROM schools WHERE city = 'San Francisco' AND YEAR(OpenDate) = 1989 AND YEAR(ClosedDate) = 1989; \t----- bird -----\tcalifornia_schools",
    "68": " SELECT s.County, COUNT(s.CDS) AS school_closures FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' AND s.TheDistrictOwnershipCode = 'CEA' AND s.OpenDate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY s.County ORDER BY school_closures DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "69": " SELECT s.NationalCenterForEducationalStatisticsSchoolDistrictIdentificationNumber FROM schools s JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE frpm.SchoolOwnershipCode = 'State Special Schools' AND s.DistrictOwnershipCode = 'State'; \t----- bird -----\tcalifornia_schools",
    "70": " SELECT COUNT(DISTINCT CDSCode) FROM schools WHERE County = 'Alpine' AND StatusType = 'Active' OR StatusType = 'Closed'; \t----- bird -----\tcalifornia_schools",
    "71": " SELECT s.DistrictCode FROM schools s JOIN free_and_reduced_price_meals frrm ON s.CDSCode = frrm.CDSCode WHERE frrm.CountyName = 'Fresno' AND NOT EXISTS (     SELECT 1     FROM schools     WHERE s.CDSCode = schools.CDSCode     AND schools.Magnet = 1 ) AND s.City = 'Fresno'; \t----- bird -----\tcalifornia_schools",
    "72": " SELECT SUM(enrollment) FROM sat_scores JOIN schools ON sat_scores.cds = schools.CDSCode WHERE schools.school = 'State Special School' AND schools.county = 'Fremont' AND schools.district = 'State' AND schools.zip = '94538' AND schools.state = 'CA' AND schools.OpenDate <= '2014-12-01' AND schools.ClosedDate >= '2015-06-01'; \t----- bird -----\tcalifornia_schools",
    "73": " SELECT SUM(FRPM_Count_K_12) AS free_meal_count_ages_5_17 FROM free_and_reduced_price_meals JOIN schools ON free_and_reduced_price_meals.CDSCode = schools.CDSCode WHERE schools.Street = 'PO Box 1040' AND schools.City = 'Youth Authority School' AND schools.State = 'Unknown'; \t----- bird -----\tcalifornia_schools",
    "74": " SELECT MIN(low_grade) AS lowest_grade FROM schools WHERE CDSCode = '0613360' AND district = 'District Special Education Consortia School'; \t----- bird -----\tcalifornia_schools",
    "75": " SELECT s.school_name, e.educational_instruction_level_name FROM schools s JOIN sat_scores ss ON s.cds = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.cds = frpm.cds WHERE frpm.nslp_provision_status = 'Breakfast Provision 2' AND s.county_code = 37 AND e.educational_instruction_level_type = 'Elementary'; \t----- bird -----\tcalifornia_schools",
    "76": " SELECT s.city FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds JOIN free_and_reduced_price_meals frpm ON ss.cds = frpm.CDSCode WHERE frpm.EducationalOptionType = 'Lunch Provision 2' AND frpm.LowGrade = '9' AND frpm.HighGrade = '12' AND s.county = 'Merced'; \t----- bird -----\tcalifornia_schools",
    "77": " SELECT s.school_name, f.percent_eligible_frpm_ages_17 FROM schools s JOIN sat_scores f ON s.cds = f.cds WHERE s.county = 'Los Angeles' AND s.grade_span_served = 'Kindergarten to 9th grade'; \t----- bird -----\tcalifornia_schools",
    "78": " SELECT grade_span_served, COUNT(*) AS popularity FROM schools WHERE city = 'Adelanto' GROUP BY grade_span_served ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "79": " SELECT COUNT(DISTINCT schools.CDSCode) AS count, schools.County FROM schools JOIN sat_scores ON schools.CDSCode = sat_scores.cds WHERE schools.County IN ('San Diego', 'Santa Barbara') AND schools.StatusType = 'Charter' AND schools.Street = '' AND schools.City = '' AND schools.Zip = '' AND schools.State = '' AND schools.MailStreet = '' AND schools.mailingCity = '' AND schools.mailingZip = '' AND schools.mailingState = '' AND schools.Phone = '' AND schools.extension = '' AND schools.Website = '' AND schools.OpenDate = '' AND schools.ClosedDate = '' AND schools.Charter = 1 AND schools.CharterNum = '' AND schools.FundingType = '' AND schools.DistrictOwnershipCode = '' AND schools.DistrictOwnershipTypeCode = '' AND schools.SchoolOwnershipCode = '' AND schools.SchoolOwnershipTypeCode = '' AND schools.EducationOptionCode = '' AND schools.EducationalOptionName = '' AND schools.EducationalInstructionLevelCode = '' AND schools.EducationalInstructionLevelName = '' AND schools.gradeSpanOffered = '' AND schools.gradeSpanServed = '' AND schools.Virtual = '' AND schools.Magnet = 0 AND schools.Latitude = 0 AND schools.Longitude = 0 AND schools.administratorFirstName1 = '' AND schools.administratorLastName1 = '' AND schools.administratorEmailAddress1 = '' AND schools.administratorFirstName2 = '' AND schools.administratorLastName2 = '' AND schools.administratorEmailAddress2 = '' AND schools.administratorFirstName3 = '' AND schools.administratorLastName3 = '' AND schools.administratorEmailAddress3 = ''; \t----- bird -----\tcalifornia_schools",
    "80": " SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN sat_scores ss ON s.CDSCode = ss.cds ORDER BY s.latitude DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "81": " SELECT s.City, s.SchoolName, s.LowestGrade FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN (     SELECT CDSCode, MIN(Latitude) AS MinLatitude, MIN(Longitude) AS MinLongitude, MIN(GradeSpan) AS MinGrade     FROM sat_scores     GROUP BY CDSCode ) min_scores ON s.CDSCode = min_scores.CDSCode WHERE s.State = 'California' AND s.Latitude = min_scores.MinLatitude ORDER BY s.City, s.LowestGrade; \t----- bird -----\tcalifornia_schools",
    "82": " SELECT s.grade_span_offered, s.longitude FROM schools s JOIN (     SELECT CDSCode, MAX(longitude) AS max_longitude     FROM schools     GROUP BY CDSCode ) max_lon ON s.CDSCode = max_lon.CDSCode ORDER BY s.longitude DESC LIMIT 1; \t----- bird -----\tcalifornia_schools",
    "83": " SELECT s.City, COUNT(sr.SchoolCode) AS num_schools FROM schools s JOIN sat_scores sr ON s.CDSCode = sr.cds WHERE s.grade_span_offered = 'Kindergarten to 8th grade' AND s.Magnet = 1 GROUP BY s.City HAVING COUNT(DISTINCT sr.EducationalOptionCode) > 1; \t----- bird -----\tcalifornia_schools",
    "84": " SELECT administrator's first name 1, administrator's last name 1, district FROM schools WHERE administrator's first name 1!= '' AND administrator's last name 1!= '' GROUP BY administrator's first name 1, administrator's last name 1 ORDER BY COUNT(*) DESC LIMIT 2; \t----- bird -----\tcalifornia_schools",
    "85": " SELECT s.DistrictCode, f.Percent (%) Eligible Free (K-12) FROM schools s JOIN free_and_reduced_price_meals f ON s.CDSCode = f.CDSCode WHERE s.administrator_first_name = 'Alusine'; \t----- bird -----\tcalifornia_schools",
    "86": " SELECT s.CDSCode, s.NationalCenterForEducationalStatisticsSchoolDistrictIdentificationNumber, s.NationalCenterForEducationalStatisticsSchoolIdentificationNumber, s.StatusType, s.County, s.District, s.School, s.Street, s.streetAddress, s.City, s.Zip, s.State, s.MailStreet, s.mailingStreetAddress, s.mailingCity, s.mailingZip, s.mailingState, s.Phone, s.extension, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DistrictOwnershipCode, s.DistrictOwnershipTypeCode, s.SchoolOwnershipCode, s.SchoolOwnershipTypeCode, s.EducationOptionCode, s.EducationalOptionName, s.EducationalInstructionLevelCode, s.EducationalInstructionLevelName, s.gradeSpanOffered, s.gradeSpanServed, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.administratorFirstName1, s.administratorLastName1, s.administratorEmailAddress1, s.administratorFirstName2, s.administratorLastName2, s.administratorEmailAddress2, s.administratorFirstName3, s.administratorLastName3, s.administratorEmailAddress3 FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds WHERE sc.CharterNum = '40'; \t----- bird -----\tcalifornia_schools",
    "87": " SELECT s.email FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN free_and_reduced_price_meals frpm ON s.CDSCode = frpm.CDSCode WHERE s.County = 'San Bernardino' AND s.City = 'San Bernardino City Unified' AND frpm.DistrictType IN ('Public Intermediate/Middle Schools', 'Unified Schools') AND frpm.AcademicYear BETWEEN '2009-01-01' AND '2010-12-31' AND s.StatusType = 'Open' AND s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31'; \t----- bird -----\tcalifornia_schools",
    "88": " SELECT s.school_name, a.email FROM schools s JOIN sat_scores sc ON s.CDSCode = sc.cds JOIN administrators a ON s.CDSCode = a.CDSCode WHERE sc.Number_of_Test_Takers >= 1500 ORDER BY sc.Number_of_Test_Takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": " SELECT COUNT(DISTINCT account_id) FROM account JOIN disposition ON account.account_id = disposition.account_id JOIN client ON client.location_of_branch = account.location_of_branch WHERE type = 'issuance after transaction' AND district_name = 'East Bohemia'; \t----- bird -----\tfinancial",
    "90": " SELECT COUNT(DISTINCT account.account_id) FROM account JOIN disposition ON account.account_id = disposition.account_id JOIN client ON account.location_of_branch = client.location_of_branch WHERE district.district_name = 'Prague' AND disposition.type = 'loan'; \t----- bird -----\tfinancial",
    "91": " SELECT AVG(unemployment_ratio_1995) AS avg_unemployment_1995, AVG(unemployment_ratio_1996) AS avg_unemployment_1996 FROM district WHERE district_name ='specific_district_name';  This query first selects the average unemployment ratio for 1995 and 1996 from the 'district' table. It then compares these two averages to determine which year has a higher percentage. The'specific_district_name' placeholder should be replaced with the actual name of the district for which you want to find the comparison.  To find the district with the higher unemployment ratio, you would need to execute this query for each district and compare the results.  Here's the final SQL statement:  [SQL] SELECT AVG(unemployment_ratio_1995) AS avg_unemployment_1995, AVG(unemployment_ratio_1996) AS avg_unemployment_1996 FROM district WHERE district_name ='specific_district_name'; \t----- bird -----\tfinancial",
    "92": " SELECT COUNT(*) FROM district WHERE ratio_of_urban_inhabitants > 0.5 AND average_salary BETWEEN 6000 AND 10000 AND gender = 'female'; \t----- bird -----\tfinancial",
    "93": " SELECT COUNT(*) FROM client JOIN district ON client.location_of_branch = district.location_of_branch WHERE client.gender ='male' AND district.district_name = 'North Bohemia' AND district.average_salary > 8000; \t----- bird -----\tfinancial",
    "94": " SELECT     c.client_id,     c.gender,     c.birth_date,     d.district_name,     AVG(l.amount) AS avg_salary FROM     client c JOIN     district d ON c.location_of_branch = d.location_of_branch JOIN     loan l ON c.client_id = l.client_id WHERE     c.gender = 'female' GROUP BY     c.client_id,     c.gender,     c.birth_date,     d.district_name ORDER BY     c.birth_date DESC,     AVG(l.amount) ASC LIMIT 1;  SELECT     MAX(AVG(l.amount)) - MIN(AVG(l.amount)) AS salary_gap FROM     client c JOIN     district d ON c.location_of_branch = d.location_of_branch JOIN     loan l ON c.client_id = l.client_id WHERE     c.gender = 'female'; \t----- bird -----\tfinancial",
    "95": " SELECT c.account_id, c.gender, c.birth_date, d.district_name, d.average_salary FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE (c.birth_date, d.average_salary) IN (     SELECT MIN(birth_date) AS min_birth_date, MAX(average_salary) AS max_average_salary     FROM client     JOIN district ON client.location_of_branch = district.location_of_branch ); \t----- bird -----\tfinancial",
    "96": " SELECT COUNT(DISTINCT client.client_id) FROM client JOIN disposition ON client.client_id = disposition.client_id JOIN account ON disposition.account_id = account.account_id WHERE account.frequency ='statement of weekly issuance' AND account.location_of_branch = 1; \t----- bird -----\tfinancial",
    "97": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.type = 'Disponent'; \t----- bird -----\tfinancial",
    "98": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE YEAR(l.date) = 1997 GROUP BY a.account_id, a.location_of_branch, a.frequency, a.date HAVING COUNT(DISTINCT l.disposition_id) = 1 ORDER BY a.location_of_branch, a.date LIMIT 1;  SELECT t.transaction_id, t.account_id, t.date_of_transaction, t.balance_after_transaction FROM transaction t JOIN account a ON t.account_id = a.account_id WHERE YEAR(t.date_of_transaction) = 1997 AND a.location_of_branch = (     SELECT d.location_of_branch     FROM district d     WHERE d.district_name = 'Weekly Issuance Statement' ) ORDER BY t.date_of_transaction; \t----- bird -----\tfinancial",
    "99": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date >= '1993-01-01' GROUP BY a.account_id, a.location_of_branch, a.frequency, a.date HAVING MAX(l.amount) = (SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id AND l2.duration > 12 AND a.date >= '1993-01-01'); \t----- bird -----\tfinancial",
    "100": " SELECT COUNT(*) FROM client JOIN district ON client.location_of_branch = district.location_of_branch WHERE client.gender = 'female' AND client.birth_date < '1950-01-01' AND district.district_name = 'Sokolov'; \t----- bird -----\tfinancial",
    "101": " SELECT a.account_id, a.date FROM account a JOIN transaction t ON a.account_id = t.account_id WHERE t.date = '1995-01-01' GROUP BY a.account_id ORDER BY a.date ASC LIMIT 1; \t----- bird -----\tfinancial",
    "102": " SELECT a.account_id, a.location_of_branch, a.date, a.frequency, a.amount FROM account a JOIN disposition d ON a.account_id = d.account_id JOIN client c ON a.location_of_branch = c.location_of_branch WHERE a.date < '1997-01-01' AND a.amount > 3000 \t----- bird -----\tfinancial",
    "103": " SELECT c.client_id FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN card t ON d.disposition_id = t.disposition_id JOIN account a ON t.account_id = a.account_id WHERE a.date = '1994-03-03'; \t----- bird -----\tfinancial",
    "104": " SELECT t.date_of_transaction, a.location_of_branch FROM transaction t JOIN account a ON t.account_id = a.account_id WHERE t.amount_of_money = 840 AND t.date_of_transaction BETWEEN '1998-10-01' AND '1998-10-31' AND a.date = (SELECT MAX(date) FROM account WHERE account_id = t.account_id); \t----- bird -----\tfinancial",
    "105": " SELECT d.location_of_branch, d.district_id FROM district d JOIN account ac ON d.location_of_branch = ac.location_of_branch WHERE ac.date = '1994-08-25' AND ac.type = 'loan'; \t----- bird -----\tfinancial",
    "106": " SELECT MAX(amount) AS biggest_transaction_amount FROM transaction JOIN client ON transaction.account_id = client.account_id JOIN card ON client.location_of_branch = card.location_of_branch WHERE card.issued = '1996-10-21'; \t----- bird -----\tfinancial",
    "107": " SELECT t.gender FROM (     SELECT client_id, gender,            ROW_NUMBER() OVER (PARTITION BY account.location_of_branch ORDER BY date ASC) AS rn     FROM client     JOIN disposition ON client.client_id = disposition.client_id     JOIN account ON disposition.account_id = account.account_id     WHERE account.location_of_branch = (         SELECT location_of_branch         FROM district         GROUP BY location_of_branch         ORDER BY max_avg_salary DESC         LIMIT 1     ) ) t WHERE rn = 1; \t----- bird -----\tfinancial",
    "108": " SELECT t.transaction_id, t.amount, t.date_of_transaction FROM transaction t JOIN account ac ON t.account_id = ac.account_id WHERE ac.account_id = (     SELECT account_id     FROM loan     ORDER BY amount DESC     LIMIT 1 ); \t----- bird -----\tfinancial",
    "109": " SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.location_of_branch = district.location_of_branch WHERE district.district_name = 'Jesenik' AND client.gender = 'female'; \t----- bird -----\tfinancial",
    "110": " SELECT d.disposition_id FROM client c JOIN disposition ON c.client_id = disposition.client_id JOIN transaction t ON c.client_id = t.client_id WHERE t.amount = 5100 AND t.date LIKE '1998-09-02%' LIMIT 1; \t----- bird -----\tfinancial",
    "111": " SELECT COUNT(*) FROM account WHERE district_name = 'Litomerice' AND YEAR(date) = 1996; \t----- bird -----\tfinancial",
    "112": " SELECT d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE c.gender = 'female' AND c.birth_date = '1976-01-29'; \t----- bird -----\tfinancial",
    "113": " SELECT c.birth_date FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE l.amount = 98832 AND l.date LIKE '1996/01/03%' LIMIT 1; \t----- bird -----\tfinancial",
    "114": " SELECT c.account_id FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'Prague' LIMIT 1; \t----- bird -----\tfinancial",
    "115": " SELECT district_name, number_of_inhabitants FROM district WHERE region ='south Bohemia' ORDER BY number_of_inhabitants DESC LIMIT 1; \t----- bird -----\tfinancial",
    "116": " SELECT     c.client_id,     a.account_id,     t.date_of_transaction,     t.amount_of_money,     t.balance_after_transaction,     t.characterization_of_transaction FROM     client c JOIN     account a ON c.location_of_branch = a.location_of_branch JOIN     transaction t ON a.account_id = t.account_id WHERE     t.date_of_transaction BETWEEN '1993-03-22' AND '1998-12-27' AND     c.client_id = (         SELECT             client_id         FROM             disposition         ORDER BY             date_of_disposition         LIMIT 1     ) AND     a.date BETWEEN '1993-07-05' AND '1993-07-05'; \t----- bird -----\tfinancial",
    "117": " SELECT AVG(monthly_payments) * 100 AS full_payment_percentage FROM loan WHERE status = 'Fully Paid'; \t----- bird -----\tfinancial",
    "118": " SELECT COUNT(DISTINCT account_id) * 100.0 / (SELECT COUNT(DISTINCT account_id) FROM loan WHERE amount < 100000) AS percentage_of_accounts_running_with_no_issue FROM loan WHERE amount < 100000 AND status = 'running with no issue'; \t----- bird -----\tfinancial",
    "119": " SELECT a.account_id, d.district_name, d.district_region FROM account AS a JOIN district AS d ON a.location_of_branch = d.location_of_branch WHERE a.date >= '1993-01-01' AND a.date <= '1993-12-31' AND a.transaction_id IS NOT NULL; \t----- bird -----\tfinancial",
    "120": " SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.location_of_branch = c.location_of_branch WHERE a.location_of_branch = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31'; \t----- bird -----\tfinancial",
    "121": " SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.location_of_branch = d.location_of_branch WHERE d.district_name = 'Prachatice'; \t----- bird -----\tfinancial",
    "122": " SELECT d.district_name, r.region FROM district d JOIN district r ON d.location_of_branch = r.location_of_branch WHERE d.location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 4990); \t----- bird -----\tfinancial",
    "123": " SELECT a.account_id, d.district_name, d.region FROM account a JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE l.amount > 300000; \t----- bird -----\tfinancial",
    "124": " SELECT loan.loan_id, district.district_name, district.average_salary FROM loan JOIN account ON loan.account_id = account.account_id JOIN district ON account.location_of_branch = district.location_of_branch WHERE loan.duration = 60 \t----- bird -----\tfinancial",
    "125": " SELECT     d.district_name,     s.state_name,     (l.unemployment_rate_1996 - l.unemployment_rate_1995) / l.unemployment_rate_1995 * 100 AS unemployment_rate_increment FROM     district d JOIN     loan l ON d.location_of_branch = l.account_id JOIN     client c ON l.client_id = c.client_id JOIN     state s ON d.region = s.region WHERE     l.status = 'running' AND     c.debt = true; \t----- bird -----\tfinancial",
    "126": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE district_name = 'Decin') AS percentage_of_accounts FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Decin') AND date = '1993-01-01'; \t----- bird -----\tfinancial",
    "127": " SELECT account_id FROM account WHERE frequency ='monthly'; \t----- bird -----\tfinancial",
    "128": " SELECT district_name, COUNT(DISTINCT client.client_id) AS female_account_holders FROM district JOIN client ON district.location_of_branch = client.location_of_branch WHERE client.gender = 'female' GROUP BY district_name ORDER BY female_account_holders DESC LIMIT 9; \t----- bird -----\tfinancial",
    "129": " SELECT     d.district_name,     SUM(t.amount_of_money) AS total_withdrawals FROM     district d JOIN     transaction t ON d.location_of_branch = t.account_id WHERE     t.mode_of_transaction = 'non-credit card'     AND MONTH(t.date_of_transaction) = 1     AND YEAR(t.date_of_transaction) = 1996 GROUP BY     d.district_name ORDER BY     total_withdrawals DESC LIMIT 10; \t----- bird -----\tfinancial",
    "130": " SELECT COUNT(*) FROM client WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'South Bohemia') AND credit_card_id IS NULL; \t----- bird -----\tfinancial",
    "131": " SELECT d.district_name, COUNT(l.loan_id) AS active_loans FROM loan l JOIN account a ON l.account_id = a.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE l.status = 'active' GROUP BY d.district_name ORDER BY active_loans DESC LIMIT 1; \t----- bird -----\tfinancial",
    "132": " SELECT AVG(loans.amount) AS average_loan_amount_by_male_borrowers FROM loans JOIN clients ON loans.account_id = clients.account_id WHERE clients.gender ='male'; \t----- bird -----\tfinancial",
    "133": " SELECT d.location_of_branch, d.district_name FROM district d JOIN disposition ON d.location_of_branch = disposition.client_id JOIN loan l ON l.account_id = d.location_of_branch WHERE YEAR(l.date) = 1996 AND l.status = 'active' ORDER BY l.unemployment_rate DESC LIMIT 1; \t----- bird -----\tfinancial",
    "134": " SELECT COUNT(DISTINCT account_id) AS num_accounts FROM account JOIN district ON account.location_of_branch = district.location_of_branch JOIN transaction ON account.account_id = transaction.account_id WHERE district.year = 1996 AND transaction.year = 1996 GROUP BY district.location_of_branch ORDER BY SUM(transaction.committed_crimes_1996) DESC LIMIT 1; \t----- bird -----\tfinancial",
    "135": " SELECT COUNT(DISTINCT account_id) FROM account WHERE monthly_issuance = 'true' AND balance < 0; \t----- bird -----\tfinancial",
    "136": " SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE account.date BETWEEN '1995-01-01' AND '1997-12-31' AND account.frequency ='monthly statement issuance' AND loan.amount >= 250000 AND loan.status = 'approved'; \t----- bird -----\tfinancial",
    "137": " SELECT COUNT(*) FROM account WHERE location_of_branch = 1 AND status = 'running'; \t----- bird -----\tfinancial",
    "138": " SELECT location_of_branch FROM district WHERE (     SELECT COUNT(*)     FROM transaction     WHERE district_name = district.district_name AND year = 1995 AND crime_type = 'committed' ) IN (     SELECT COUNT(*)     FROM (         SELECT district_name, COUNT(*)         FROM transaction         WHERE district_name = district.district_name AND year = 1995 AND crime_type = 'committed'         GROUP BY district_name     ) AS subquery     ORDER BY COUNT(*) DESC     LIMIT 1, 1 ); \t----- bird -----\tfinancial",
    "139": " SELECT COUNT(*) FROM card JOIN disposition ON card.disposition_id = disposition.disposition_id WHERE disposition.type = 'OWNER'; \t----- bird -----\tfinancial",
    "140": " SELECT COUNT(*) FROM district WHERE district_name = 'Pisek'; \t----- bird -----\tfinancial",
    "141": " SELECT d.district_name, t.date_of_transaction FROM district d JOIN transaction t ON d.location_of_branch = t.account_id WHERE t.amount_of_money > 10000 AND t.date_of_transaction = '1997-01-01'; \t----- bird -----\tfinancial",
    "142": " SELECT account_id FROM order WHERE bank_of_the_recipient = 'Pisek' AND characterization_of_the_payment = 'household payment'; \t----- bird -----\tfinancial",
    "143": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE d.district_name = 'Gold District'; \t----- bird -----\tfinancial",
    "144": " SELECT AVG(type) AS average_credit_card_amount_per_month_in_2021 FROM card WHERE YEAR(issued) = 2021; \t----- bird -----\tfinancial",
    "145": " SELECT a.account_id, a.location_of_branch, t.transaction_id, t.date_of_transaction, t.amount_of_money, t.balance_after_transaction FROM account a JOIN transaction t ON a.account_id = t.account_id JOIN card c ON t.credit_card_id = c.credit_card_id WHERE c.type = 'credit card' AND t.amount_of_money < (SELECT AVG(amount) FROM loan WHERE loan_id IN (SELECT loan_id FROM order WHERE YEAR(order_date) = 1998 AND account_id = a.account_id)) AND t.date_of_transaction BETWEEN '1998-01-01' AND '1998-12-31'; \t----- bird -----\tfinancial",
    "146": " SELECT c.client_id, c.gender, c.birth_date, c.location_of_branch, d.disposition_id, l.loan_id FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON c.client_id = l.client_id WHERE c.gender = 'female' AND d.type = 'credit card' AND l.status = 'active'; \t----- bird -----\tfinancial",
    "147": " SELECT COUNT(*) FROM client WHERE gender = 'female' AND location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'South Bohemia'); \t----- bird -----\tfinancial",
    "148": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, l.amount, l.duration, l.monthly_payments, l.status FROM account a JOIN loan l ON a.account_id = l.account_id WHERE a.district_name = 'Tabor' AND l.status = 'Eligible'; \t----- bird -----\tfinancial",
    "149": " SELECT     d.district_name,     AVG(c.average_salary) AS avg_income FROM     district d JOIN     client c ON d.location_of_branch = c.location_of_branch WHERE     c.average_salary > 8000 AND c.average_salary <= 9000 GROUP BY     d.location_of_branch; \t----- bird -----\tfinancial",
    "150": " SELECT COUNT(DISTINCT account_id) FROM account JOIN transaction ON account.account_id = transaction.account_id JOIN order ON account.account_id = order.account_id WHERE district.district_name = 'North Bohemia' AND bank_of_recipient = 'AB'; \t----- bird -----\tfinancial",
    "151": " SELECT d.district_name FROM district d JOIN account a ON d.location_of_branch = a.account_id JOIN transaction t ON a.account_id = t.account_id WHERE t.characterization_of_transaction = 'withdrawal'; \t----- bird -----\tfinancial",
    "152": " SELECT AVG(committed_crimes) FROM district WHERE number_of_inhabitants > 4000 AND region IN (     SELECT location_of_branch     FROM account     WHERE YEAR(date) >= 1997 ); \t----- bird -----\tfinancial",
    "153": " SELECT COUNT(DISTINCT card.credit_card_id) FROM card JOIN disposition ON card.disposition_id = disposition.disposition_id JOIN client ON disposition.client_id = client.client_id JOIN account ON client.location_of_branch = account.location_of_branch WHERE account.type = 'classic' AND loan.status = 'eligible'; \t----- bird -----\tfinancial",
    "154": " SELECT COUNT(*) FROM client WHERE gender ='male' AND location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Hl.m. Praha'); \t----- bird -----\tfinancial",
    "155": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM card WHERE type = 'Gold' AND issued < '1998-01-01') AS percentage_gold_cards_issued_before_1998 FROM card WHERE type = 'Gold'; \t----- bird -----\tfinancial",
    "156": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE c.account_id = (     SELECT account_id     FROM loan     ORDER BY amount DESC     LIMIT 1 ); \t----- bird -----\tfinancial",
    "157": " SELECT district_name, committed_crimes FROM district WHERE location_of_branch = (SELECT account_id FROM account WHERE account_id = 532); \t----- bird -----\tfinancial",
    "158": " SELECT d.location_of_branch FROM district d JOIN order o ON d.location_of_branch = o.account_id WHERE o.order_id = 33333; \t----- bird -----\tfinancial",
    "159": " SELECT t1.transaction_id, t1.date_of_transaction, t1.amount_of_money, t1.balance_after_transaction, t1.characterization_of_transaction FROM transaction t1 JOIN account a ON t1.account_id = a.account_id WHERE a.client_id = 3356 AND t1.mode_of_transaction = 'cash' AND t1.characterization_of_transaction LIKE '%withdrawal%'; \t----- bird -----\tfinancial",
    "160": " SELECT COUNT(*) FROM account WHERE type = 'weekly issuance' AND EXISTS (     SELECT 1     FROM loan     WHERE loan.account_id = account.account_id     AND loan.amount < 200000 );\t----- bird -----\tfinancial",
    "161": " SELECT type FROM card WHERE client_id = 13539; \t----- bird -----\tfinancial",
    "162": " SELECT district_name FROM district WHERE location_of_branch = (SELECT client_id FROM client WHERE client_id = 3541);\t----- bird -----\tfinancial",
    "163": " SELECT d.district_name, COUNT(l.account_id) AS loan_count FROM district d JOIN loan l ON d.location_of_branch = l.account_id WHERE l.status = 'finished with no problems' GROUP BY d.location_of_branch ORDER BY loan_count DESC LIMIT 1; \t----- bird -----\tfinancial",
    "164": " SELECT * FROM order WHERE order_id = 32423; \t----- bird -----\tfinancial",
    "165": " SELECT t.transaction_id, t.account_id, t.date_of_transaction, t.plus_minus_transaction, t.mode_of_transaction, t.amount_of_money, t.balance_after_transaction, t.characterization_of_transaction, t.bank_of_partner, t.account_of_partner FROM transaction t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.location_of_branch = d.location_of_branch WHERE d.district_name = 'District 5'; \t----- bird -----\tfinancial",
    "166": " SELECT COUNT(*) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Jesenik'); \t----- bird -----\tfinancial",
    "167": " SELECT c.client_id FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN card cc ON d.disposition_id = cc.disposition_id JOIN account a ON cc.account_id = a.account_id WHERE a.date > '1996-12-31'; \t----- bird -----\tfinancial",
    "168": " SELECT AVG(CASE WHEN district.average_salary > 10000 THEN client.gender = 'female' END) * 100 AS percentage FROM client JOIN disposition ON client.client_id = disposition.client_id JOIN district ON disposition.account_id = district.location_of_branch WHERE district.average_salary > 10000; \t----- bird -----\tfinancial",
    "169": " SELECT     c.client_id,     c.gender,     SUM(l.amount) AS total_loan_amount FROM     client c JOIN     disposition d ON c.client_id = d.client_id JOIN     loan l ON d.disposition_id = l.disposition_id AND c.location_of_branch = l.account_id WHERE     c.gender ='male'     AND d.date BETWEEN '1996-01-01' AND '1997-12-31' GROUP BY     c.client_id,     c.gender \t----- bird -----\tfinancial",
    "170": " SELECT COUNT(*) FROM card WHERE type = 'withdrawal' AND date > '1995-01-01'; \t----- bird -----\tfinancial",
    "171": " SELECT SUM(committed_crimes) - SUM(committed_crimes_east) AS difference FROM district WHERE district_name = 'East Bohemia' AND district_name = 'North Bohemia' AND year = 1996; \t----- bird -----\tfinancial",
    "172": " SELECT COUNT(DISTINCT disposition_id) AS total_dispositions FROM disposition WHERE account_id BETWEEN 1 AND 10; \t----- bird -----\tfinancial",
    "173": " SELECT t.frequency, COUNT(t.transaction_id) AS transaction_count FROM account AS a JOIN transaction AS t ON a.account_id = t.account_id WHERE a.account_id = 3 GROUP BY t.frequency; \t----- bird -----\tfinancial",
    "174": " SELECT birth_date FROM client WHERE client_id = 130; \t----- bird -----\tfinancial",
    "175": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON c.client_id = l.account_id WHERE d.type = 'owner disposition' AND l.status ='request for statement'; \t----- bird -----\tfinancial",
    "176": " SELECT c.amount_of_debt FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON l.account_id = c.account_id WHERE c.client_id = 992;  SELECT d.type FROM disposition d JOIN loan l ON l.account_id = d.account_id WHERE l.account_id = [SQL] SELECT account_id FROM transaction WHERE transaction_id = 12345; \t----- bird -----\tfinancial",
    "177": " SELECT SUM(t.amount) AS client_4_account_sum FROM account AS a JOIN transaction AS t ON a.account_id = t.account_id WHERE t.transaction_id = 851 AND a.client_id = 4;  SELECT c.gender FROM client AS c JOIN transaction AS t ON c.client_id = t.client_id WHERE t.transaction_id = 851 AND a.account_id = 4;\t----- bird -----\tfinancial",
    "178": " SELECT c.type FROM client c WHERE c.client_id = 9; \t----- bird -----\tfinancial",
    "179": " SELECT SUM(amount) FROM transaction WHERE account_id = 617 AND YEAR(date_of_transaction) = 1998; \t----- bird -----\tfinancial",
    "180": " SELECT c.client_id, c.gender, c.birth_date, d.district_name FROM client c JOIN district d ON c.location_of_branch = d.location_of_branch WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.district_name = 'East Bohemia'; \t----- bird -----\tfinancial",
    "181": " SELECT c.client_id, c.gender, SUM(l.amount) AS total_loan FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'female' GROUP BY c.client_id, c.gender ORDER BY total_loan DESC LIMIT 3; \t----- bird -----\tfinancial",
    "182": " SELECT COUNT(DISTINCT client_id) FROM client WHERE gender ='male' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND (SELECT SUM(amount) FROM order WHERE account_id = client_id) > 4000; \t----- bird -----\tfinancial",
    "183": " SELECT COUNT(*) FROM account WHERE location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'Beroun') AND date > '1996-01-01'; \t----- bird -----\tfinancial",
    "184": " SELECT COUNT(*) FROM client WHERE gender = 'female' AND type = 'junior credit card'; \t----- bird -----\tfinancial",
    "185": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 'Prague_branch_account_id')) AS proportion_female_customers FROM client WHERE location_of_branch = (SELECT location_of_branch FROM account WHERE account_id = 'Prague_branch_account_id') AND gender = 'female'; \t----- bird -----\tfinancial",
    "186": " SELECT AVG(CASE WHEN gender ='male' THEN 1 ELSE 0 END) * 100 AS percentage_male_weekly_statements FROM client WHERE type = 'weekly statements'; \t----- bird -----\tfinancial",
    "187": " SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE a.frequency = 'weekly' AND c.gender = 'Owner'; \t----- bird -----\tfinancial",
    "188": " SELECT a.account_id, a.location_of_branch, a.frequency, a.date, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' GROUP BY a.account_id, a.location_of_branch, a.frequency, a.date HAVING MIN(l.amount) = (SELECT MIN(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id); \t----- bird -----\tfinancial",
    "189": " SELECT c.client_id, a.account_id, c.gender, c.birth_date, d.district_name, a.location_of_branch, a.average_salary FROM client c JOIN disposition d ON c.location_of_branch = d.account_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'female' ORDER BY c.birth_date DESC, a.average_salary ASC LIMIT 1; \t----- bird -----\tfinancial",
    "190": " SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND location_of_branch = (SELECT location_of_branch FROM district WHERE district_name = 'East Bohemia'); \t----- bird -----\tfinancial",
    "191": " SELECT COUNT(*) FROM loan WHERE duration = 24 AND issuance = 'weekly'; \t----- bird -----\tfinancial",
    "192": " SELECT AVG(loan.amount) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.status = 'running' AND account.date >= transaction.date_of_transaction GROUP BY account.account_id; \t----- bird -----\tfinancial",
    "193": " SELECT c.client_id, d.district_name FROM client c JOIN disposition ON c.client_id = disposition.client_id JOIN loan ON loan.account_id = c.location_of_branch WHERE disposition.type IN ('permanent order', 'loan application') GROUP BY c.client_id, d.district_name; \t----- bird -----\tfinancial",
    "194": " SELECT c.client_id, c.birth_date, c.gender, d.type, l.amount, l.duration, l.status FROM client c JOIN disposition d ON c.client_id = d.client_id JOIN loan l ON c.client_id = l.account_id WHERE d.type = 'high level credit card' AND l.status = 'eligible for loans'; \t----- bird -----\tfinancial",
    "195": " SELECT bond_type, COUNT(*) AS bond_count FROM bond GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "196": " SELECT COUNT(DISTINCT CASE WHEN t3.element = 'Cl' THEN t1.molecule_id END) AS chlorine_count FROM atom AS t1 JOIN bond AS t2 ON t1.molecule_id = t2.molecule_id JOIN connected AS t3 ON t2.bond_id = t3.bond_id WHERE t1.molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'non-carcinogenic' );\t----- bird -----\ttoxicology",
    "197": " SELECT AVG(connected.count) AS average_oxygen_atoms FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id WHERE a.element = 'O' AND c.atom_id = a.atom_id AND c.atom_id_2 = a.atom_id GROUP BY a.molecule_id; \t----- bird -----\ttoxicology",
    "198": " SELECT AVG(COUNT(DISTINCT b.bond_id)) AS avg_single_bonds FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN atom a2 ON m.molecule_id = a2.molecule_id JOIN bond b ON a1.atom_id = b.molecule_id AND a2.atom_id = b.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id; \t----- bird -----\ttoxicology",
    "199": " SELECT atom.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'Na'; \t----- bird -----\ttoxicology",
    "200": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON c1.atom_id = m.molecule_id JOIN connected c2 ON c2.atom_id = m.molecule_id JOIN connected c3 ON c3.atom_id_2 = c1.atom_id JOIN bond b ON b.bond_id = c3.bond_id WHERE b.bond_type = 'triple' AND EXISTS (     SELECT 1     FROM carcinogenic c     WHERE c.molecule_id = m.molecule_id ); \t----- bird -----\ttoxicology",
    "201": " SELECT AVG(element = 'C') * 100.0 / COUNT(DISTINCT molecule_id) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id 2 = connected.atom_id_2 JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = 'double'; \t----- bird -----\ttoxicology",
    "202": " SELECT COUNT(*) FROM bond WHERE bond_type = 'triple'; \t----- bird -----\ttoxicology",
    "203": " SELECT COUNT(DISTINCT a.atom_id) FROM atom a LEFT JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type IS NULL; \t----- bird -----\ttoxicology",
    "204": " SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON molecule.molecule_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id_2 = a2.atom_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' LIMIT 100; \t----- bird -----\ttoxicology",
    "205": " SELECT atom.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id_2 = atom.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'C'; \t----- bird -----\ttoxicology",
    "206": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'TR004_8_9' GROUP BY e.element; \t----- bird -----\ttoxicology",
    "207": " SELECT element FROM atom WHERE bond_type = 'double'; \t----- bird -----\ttoxicology",
    "208": " SELECT label, COUNT(*) AS count FROM atom WHERE element = 'H' GROUP BY label ORDER BY count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "209": " SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'Cl' AND a2.element = 'Cl'; \t----- bird -----\ttoxicology",
    "210": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id_2 = a2.atom_id JOIN bond AS b ON c1.bond_id = b.bond_id WHERE b.bond_type ='single'; \t----- bird -----\ttoxicology",
    "211": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id_2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id_2 = a3.atom_id WHERE a1.molecule_id IN (     SELECT m.molecule_id     FROM molecule AS m     WHERE m.label = 'non-carcinogenic' ) AND a2.molecule_id = a1.molecule_id AND a3.molecule_id = a2.molecule_id \t----- bird -----\ttoxicology",
    "212": " SELECT a.element, MIN(COUNT(*)) AS min_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label!= 'carcinogenic' GROUP BY a.element; \t----- bird -----\ttoxicology",
    "213": " SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id_2 WHERE c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20'; \t----- bird -----\ttoxicology",
    "214": " SELECT label FROM molecule WHERE molecule_id NOT IN (     SELECT atom.molecule_id     FROM atom     JOIN bond ON atom.molecule_id = bond.molecule_id     JOIN connected ON bond.bond_id = connected.bond_id     WHERE element = 'Sn' );\t----- bird -----\ttoxicology",
    "215": " SELECT COUNT(DISTINCT a1.atom_id) AS iodine_atoms, COUNT(DISTINCT a2.atom_id) AS sulfur_atoms FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id = a2.atom_id WHERE b.bond_type ='single' AND (a1.element = 'I' OR a2.element = 'S'); \t----- bird -----\ttoxicology",
    "216": " SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id_2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'; \t----- bird -----\ttoxicology",
    "217": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id_2 = a2.atom_id JOIN bond AS b ON c1.bond_id = b.bond_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id WHERE m.label = 'TR181'; \t----- bird -----\ttoxicology",
    "218": " SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT m.molecule_id) FROM molecule) AS percentage_without_fluorine FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE m.label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "219": " SELECT     (         SELECT             COUNT(*)         FROM             connected AS c1             JOIN connected AS c2 ON c1.atom_id = c2.atom_id_2             JOIN bond AS b ON c1.bond_id = b.bond_id             JOIN atom AS a1 ON c1.atom_id = a1.atom_id             JOIN atom AS a2 ON c2.atom_id = a2.atom_id             WHERE                 a1.element = 'C' AND a2.element = 'C' AND b.bond_type = 'Triple' AND a1.molecule_id = a2.molecule_id AND a1.label = 'Carcinogenic'     ) AS carcinogenic_in_triples    ,     (         SELECT             COUNT(*)         FROM             atom AS a         WHERE             a.element = 'C' AND a.label = 'Carcinogenic'     ) AS total_carcinogenic FROM     molecule AS m WHERE     m.label = 'Carcinogenic';  SELECT     (carcinogenic_in_triples / total_carcinogenic) * 100 AS percentage; \t----- bird -----\ttoxicology",
    "220": " SELECT e.element AS element, e.atomic_number AS atomic_number, e.symbol AS symbol FROM atom AS a JOIN element AS e ON a.element = e.element_id WHERE a.molecule_id = 'TR000' ORDER BY element ASC LIMIT 3; \t----- bird -----\ttoxicology",
    "221": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON b.bond_id = c2.bond_id WHERE c2.bond_id = 'TR001_2_6' AND a1.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001'); \t----- bird -----\ttoxicology",
    "222": " SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules, COUNT(DISTINCT m.molecule_id) AS non_carcinogenic_molecules FROM molecule m LEFT JOIN connected c ON m.molecule_id = c.atom_id OR m.molecule_id = c.atom_id_2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' OR m.label = 'non-carcinogenic'; \t----- bird -----\ttoxicology",
    "223": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR000_2_5'; \t----- bird -----\ttoxicology",
    "224": " SELECT b.bond_id FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id_2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a2.atom_id = 'TR000_2'; \t----- bird -----\ttoxicology",
    "225": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE b.bond_type = 'double' ORDER BY m.label ASC LIMIT 5; \t----- bird -----\ttoxicology",
    "226": " SELECT AVG(bond_type) AS avg_double_bond_percentage FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008'); \t----- bird -----\ttoxicology",
    "227": " CREATE TEMPORARY TABLE temp_carcinogenic_molecules AS SELECT molecule_id FROM molecule WHERE label = 'Carcinogenic'; \t----- bird -----\ttoxicology",
    "228": " CREATE TEMPORARY TABLE temp_molecule AS SELECT * FROM molecule WHERE molecule_id = 'TR206'; \t----- bird -----\ttoxicology",
    "229": " SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000'; \t----- bird -----\ttoxicology",
    "230": " SELECT m.label, a.element FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.molecule_id = 'TR060'; \t----- bird -----\ttoxicology",
    "231": " SELECT     b.bond_type,     COUNT(b.bond_id) AS bond_count FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id JOIN     connected c ON b.bond_id = c.bond_id WHERE     a.molecule_id = 'TR010' GROUP BY     b.bond_type ORDER BY     bond_count DESC LIMIT 1;  -- To check if the molecule is carcinogenic SELECT label FROM molecule WHERE molecule_id = 'TR010'; \t----- bird -----\ttoxicology",
    "232": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id_2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id_2 = a2.atom_id WHERE b.bond_type ='single' AND NOT EXISTS (     SELECT 1     FROM carcinogenic_molecules cm     WHERE cm.molecule_id = m.molecule_id ) ORDER BY m.label ASC LIMIT 3; \t----- bird -----\ttoxicology",
    "233": " SELECT b.bond_type, b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR006' ORDER BY b.bond_type ASC, b.molecule_id ASC LIMIT 2; \t----- bird -----\ttoxicology",
    "234": " SELECT COUNT(b.bond_id) FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id WHERE a1.atom_id = '12' AND m.molecule_id = 'TR009'; \t----- bird -----\ttoxicology",
    "235": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'B' AND m.label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "236": " SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c1.atom_id_2 = a2.atom_id;  WHERE b.bond_id = 'TR001_6_9'; \t----- bird -----\ttoxicology",
    "237": " SELECT m.label FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = 'TR001_10' JOIN molecule AS m ON c.bond_id = m.molecule_id WHERE a.molecule_id = m.molecule_id; \t----- bird -----\ttoxicology",
    "238": " SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'triple'; \t----- bird -----\ttoxicology",
    "239": " SELECT COUNT(DISTINCT connected.atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.atom_id = '19'; \t----- bird -----\ttoxicology",
    "240": " SELECT DISTINCT element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM connected     WHERE atom_id = (         SELECT atom_id         FROM connected         WHERE atom_id2 = 'TR004'     ) );\t----- bird -----\ttoxicology",
    "241": " SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label NOT LIKE '%carcinogenic%'; \t----- bird -----\ttoxicology",
    "242": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON c1.atom_id = '21' JOIN connected c2 ON c2.atom_id = '21' JOIN connected c3 ON c3.atom_id_2 = '21' JOIN connected c4 ON c4.atom_id_2 = '21' JOIN connected c5 ON c5.atom_id_2 = '21' JOIN connected c6 ON c6.atom_id_2 = '21' JOIN connected c7 ON c7.atom_id_2 = '21' JOIN connected c8 ON c8.atom_id_2 = '21' JOIN connected c9 ON c9.atom_id_2 = '21' JOIN connected c10 ON c10.atom_id_2 = '21' WHERE m.label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "243": " SELECT b.bond_id, b.molecule_id, b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN connected c2 ON b.bond_id = c2.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'P' AND a2.element = 'N'; \t----- bird -----\ttoxicology",
    "244": " SELECT molecule_id, COUNT(CASE WHEN bond_type = 'double' THEN 1 END) AS double_bond_count FROM bond GROUP BY molecule_id ORDER BY double_bond_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "245": " SELECT AVG(b.bond_count) AS average_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element = 'I'; \t----- bird -----\ttoxicology",
    "246": " SELECT b.bond_type, b.bond_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = 45 JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = b.molecule_id; \t----- bird -----\ttoxicology",
    "247": " SELECT DISTINCT element FROM atom WHERE molecule_id NOT IN (     SELECT atom_id     FROM connected ); \t----- bird -----\ttoxicology",
    "248": " SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON b.bond_id = c2.bond_id JOIN molecule AS m ON m.molecule_id = a1.molecule_id WHERE m.label = 'TR041' AND b.bond_type = 'triple'; \t----- bird -----\ttoxicology",
    "249": " SELECT atom.element FROM atom WHERE atom.molecule_id = (     SELECT molecule_id     FROM connected     WHERE connected.atom_id = 'TR144_8_19' );\t----- bird -----\ttoxicology",
    "250": " SELECT c.molecule_id, COUNT(b.bond_id) AS double_bonds FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id_2 = a2.atom_id JOIN bond AS b ON b.bond_id = c.bond_id WHERE a1.element IN ('C', 'N', 'O') -- Carcinogenic elements GROUP BY c.molecule_id ORDER BY double_bonds DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "251": " SELECT element, COUNT(*) AS count FROM (     SELECT atom.element     FROM molecule     JOIN connected ON molecule.molecule_id = connected.molecule_id     JOIN atom ON molecule.molecule_id = atom.molecule_id     WHERE EXISTS (         SELECT 1         FROM molecule         WHERE molecule.molecule_id = connected.molecule_id         AND carcinogenic = 'true'     )     GROUP BY atom.element ) AS subquery GROUP BY element ORDER BY count ASC LIMIT 1; \t----- bird -----\ttoxicology",
    "252": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN atom AS a2 ON b1.atom_id_2 = a2.atom_id WHERE a2.element = 'Pb'; \t----- bird -----\ttoxicology",
    "253": " SELECT DISTINCT b.element FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'Triple'; \t----- bird -----\ttoxicology",
    "254": " SELECT element1, element2, COUNT(*) AS count FROM bond GROUP BY element1, element2 ORDER BY count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "255": " SELECT AVG(is_carcinogenic) * 100.0 AS proportion_carcinogenic_single_bonds FROM bond WHERE bond_type ='single'; \t----- bird -----\ttoxicology",
    "256": " SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) FROM atom; \t----- bird -----\ttoxicology",
    "257": " SELECT atom_id2 FROM connected WHERE atom_id IN (     SELECT atom_id     FROM atom     WHERE element = 'S' );\t----- bird -----\ttoxicology",
    "258": " SELECT b.bond_type FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element = 'Sn'; \t----- bird -----\ttoxicology",
    "259": " SELECT COUNT(DISTINCT element) AS num_elements FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM connected     WHERE bond_type ='single' ); \t----- bird -----\ttoxicology",
    "260": " SELECT SUM(a.atom_count) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label IN ('P3', 'Br3') AND a.element IN ('P', 'Br'); \t----- bird -----\ttoxicology",
    "261": " SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id IN (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = 'carcinogenic' ); \t----- bird -----\ttoxicology",
    "262": " SELECT m.molecule_id FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id WHERE c.bond_id IS NULL AND m.label NOT LIKE 'carcinogenic%'; \t----- bird -----\ttoxicology",
    "263": " SELECT a.molecule_id, b.bond_type, COUNT(c.atom_id) * 100.0 / SUM(COUNT(c.atom_id)) OVER (PARTITION BY a.molecule_id) AS percentage_chlorine FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE a.element = 'Cl' GROUP BY a.molecule_id, b.bond_type; \t----- bird -----\ttoxicology",
    "264": " SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id = 'TR000' OR atom_id = 'TR001' OR atom_id = 'TR002'); \t----- bird -----\ttoxicology",
    "265": " SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%'; \t----- bird -----\ttoxicology",
    "266": " SELECT SUM(molecules.carcinogenic) FROM molecule JOIN connected AS c1 ON molecule.molecule_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond ON c2.bond_id = bond.bond_id JOIN atom ON c1.atom_id = atom.atom_id WHERE molecule.label BETWEEN 'TR000' AND 'TR030' GROUP BY molecule.molecule_id; \t----- bird -----\ttoxicology",
    "267": " SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id BETWEEN 'TR000' AND 'TR050'; \t----- bird -----\ttoxicology",
    "268": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_id = 'TR001_10_11' LIMIT 1; \t----- bird -----\ttoxicology",
    "269": " SELECT COUNT(DISTINCT bond_id) FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id_2 = a2.atom_id WHERE a1.element = 'Iodine'; \t----- bird -----\ttoxicology",
    "270": " SELECT m.label, CASE WHEN b.bond_type ='single' THEN 'Non-carcinogenic' WHEN b.bond_type = 'double' THEN 'Carcinogenic' ELSE 'Unknown' END AS carcinogenicity FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.element = 'Ca'; \t----- bird -----\ttoxicology",
    "271": " SELECT a.element FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR001_1_8' AND a.element IN ('Cl', 'C'); \t----- bird -----\ttoxicology",
    "272": " SELECT m.molecule_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a2 ON c.atom_id = a2.atom_id JOIN atom AS a3 ON c.atom_id2 = a3.atom_id WHERE a.element = 'C' AND b.bond_type = 'Triple' AND a2.atom_id!= a3.atom_id AND a.molecule_id NOT IN (     SELECT m.molecule_id     FROM molecule AS m     WHERE m.label IN ('Carcinogenic', 'Toxic') ) LIMIT 2; \t----- bird -----\ttoxicology",
    "273": " SELECT     m.label AS carcinogenic_molecule,     COUNT(a.element) AS chlorine_atoms,     (COUNT(a.element) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = m.molecule_id)) AS percentage FROM     molecule m JOIN     connected c ON m.molecule_id = c.molecule_id JOIN     atom a ON c.atom_id = a.atom_id WHERE     m.label = 'carcinogenic' GROUP BY     m.label; \t----- bird -----\ttoxicology",
    "274": " SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id_2 JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR001'; \t----- bird -----\ttoxicology",
    "275": " SELECT m.molecule_id FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'double'; \t----- bird -----\ttoxicology",
    "276": " SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE b.bond_type = 'triple' LIMIT 2; \t----- bird -----\ttoxicology",
    "277": " SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = 'TR000_1_2' JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR000_1_2'; \t----- bird -----\ttoxicology",
    "278": " SELECT COUNT(*) FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id, connected.atom_id2 = atom.atom_id WHERE bond_type ='single' AND is_carcinogenic = 'non-carcinogenic'; \t----- bird -----\ttoxicology",
    "279": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": " SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' AND m.label IN ('Carcinogenic', 'Non-Carcinogenic'); \t----- bird -----\ttoxicology",
    "281": " SELECT m.label, a.element FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id_2 JOIN atom a ON c1.atom_id = a.atom_id JOIN atom a2 ON c2.atom_id_2 = a2.atom_id WHERE c1.bond_id = c2.bond_id AND c1.atom_id < c2.atom_id AND c1.atom_id = 4 AND m.label IN (     SELECT label     FROM molecule     WHERE carcinogenic = 1 ) ORDER BY m.label; \t----- bird -----\ttoxicology",
    "282": " SELECT COUNT(DISTINCT a.element) AS hydrogen_count, m.label AS molecule_label FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id_2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'H' AND m.molecule_id = 'TR006' GROUP BY m.label; \t----- bird -----\ttoxicology",
    "283": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'Ca' AND a2.element = 'C'; \t----- bird -----\ttoxicology",
    "284": " SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE a.element = 'C'; \t----- bird -----\ttoxicology",
    "285": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE c.atom_id = 'TR001_10_11' AND b.bond_type = 'TR001_10_11'; \t----- bird -----\ttoxicology",
    "286": " SELECT     (COUNT(DISTINCT b.bond_type) * 100.0 / COUNT(DISTINCT m.molecule_id)) AS triple_bond_percentage FROM     atom AS a JOIN     bond AS b ON a.molecule_id = b.molecule_id JOIN     connected AS c ON b.bond_id = c.bond_id JOIN     molecule AS m ON a.molecule_id = m.molecule_id WHERE     b.bond_type = 'triple'; \t----- bird -----\ttoxicology",
    "287": " SELECT AVG(bond_type = 'double') * 100 AS double_bond_percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR047'; \t----- bird -----\ttoxicology",
    "288": " SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = 'TR001_1'; \t----- bird -----\ttoxicology",
    "289": " SELECT label FROM molecule WHERE molecule_id = 'TR151'; \t----- bird -----\ttoxicology",
    "290": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR151' AND e.toxicity = 1; \t----- bird -----\ttoxicology",
    "291": " SELECT COUNT(DISTINCT molecule_id) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "292": "  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR010' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR020' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR030' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR040' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label BETWEEN 'TR010' AND 'TR050' AND a.element = 'C';  [SQL] SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a\t----- bird -----\ttoxicology",
    "293": " SELECT COUNT(DISTINCT a1.atom_id) FROM atom AS a1 JOIN connected AS c ON a1.atom_id = c.atom_id JOIN molecule AS m ON c.bond_id = m.molecule_id WHERE m.label = 'carcinogenic compounds'; \t----- bird -----\ttoxicology",
    "294": " SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'carcinogenic_compound_molecule_id' AND a2.element = 'C' AND b.bond_type = 'double'; \t----- bird -----\ttoxicology",
    "295": " SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'H' AND m.label = 'carcinogenic compound'; \t----- bird -----\ttoxicology",
    "296": " SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE a.atom_id = 'TR000_1' AND b.bond_type = 'TR000_1_2' AND d.atom_id = 'TR000_1'; \t----- bird -----\ttoxicology",
    "297": " SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'C' AND b.bond_type NOT IN ('C-C', 'C-H', 'C-O', 'C-N', 'C-S', 'C-F'); \t----- bird -----\ttoxicology",
    "298": " SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT m.molecule_id) FROM molecule) AS percentage_of_carcinogenic_molecules_containing_hydrogen FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'H' AND b.bond_type IN ('carcinogenic'); \t----- bird -----\ttoxicology",
    "299": " SELECT label FROM molecule WHERE molecule_id = 'TR124'; \t----- bird -----\ttoxicology",
    "300": " SELECT a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a2 ON b.molecule_id = a2.molecule_id WHERE a2.molecule_id = 'TR186'; \t----- bird -----\ttoxicology",
    "301": " SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR007_4_19'; \t----- bird -----\ttoxicology",
    "302": " SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_id = 'TR001_2_4' LIMIT 1; \t----- bird -----\ttoxicology",
    "303": " SELECT COUNT(DISTINCT bond.bond_id) AS double_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR006'; \t----- bird -----\ttoxicology",
    "304": " SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label IN (SELECT label FROM carcinogenic_molecules); \t----- bird -----\ttoxicology",
    "305": " SELECT b.bond_id, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id ='molecule_id_1' JOIN atom a1 ON c1.atom_id_2 = a1.atom_id JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id ='molecule_id_2' JOIN atom a2 ON c2.atom_id_2 = a2.atom_id WHERE b.bond_type ='single'; \t----- bird -----\ttoxicology",
    "306": " SELECT m.label, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id_2 JOIN atom a ON c1.bond_id = a.atom_id OR c2.bond_id = a.atom_id JOIN bond b ON a.atom_id = b.atom_id AND a.atom_id_2 = b.atom_id_2 WHERE b.bond_type = 'triple' GROUP BY m.label; \t----- bird -----\ttoxicology",
    "307": " SELECT a1.element FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id WHERE b1.bond_id = 'TR000_2_3'; \t----- bird -----\ttoxicology",
    "308": " SELECT COUNT(DISTINCT bond.bond_id) AS chlorine_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS chlorine ON a.element = 'Cl' WHERE chlorine.atom_id = c.atom_id_2; \t----- bird -----\ttoxicology",
    "309": " SELECT a.atom_id, COUNT(b.bond_type) AS bond_types FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id; \t----- bird -----\ttoxicology",
    "310": " SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules FROM bond b JOIN atom a ON b.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id_2 = c.atom_id_2 JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'double';  SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules FROM double_bond_molecules db JOIN molecule m ON db.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic compound';\t----- bird -----\ttoxicology",
    "311": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element!= 'S' AND b.bond_type!= 'double'; \t----- bird -----\ttoxicology",
    "312": " SELECT \"label\" FROM \"molecule\" WHERE \"molecule id\" = 'TR001_2_4' AND \"bond_id\" = 'TR001_2_4_4'; \t----- bird -----\ttoxicology",
    "313": " SELECT COUNT(DISTINCT a1.atom_id) FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id JOIN molecule AS m1 ON b1.molecule_id = m1.molecule_id WHERE m1.molecule_id = 'TR001'; \t----- bird -----\ttoxicology",
    "314": " SELECT COUNT(DISTINCT bond_id) AS single_bonds_count FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type ='single'; \t----- bird -----\ttoxicology",
    "315": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'Cl' AND a2.element = 'Cl'; \t----- bird -----\ttoxicology",
    "316": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'C' AND NOT EXISTS (     SELECT 1     FROM bond b     JOIN connected c2 ON b.bond_id = c2.bond_id     JOIN atom a2 ON c2.atom_id = a2.atom_id     WHERE a2.element = 'C' AND b.bond_type = 'carcinogenic' ); \t----- bird -----\ttoxicology",
    "317": " SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT m.molecule_id) FROM molecule) AS percentage_carcinogenic_chlorine_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'Cl'; \t----- bird -----\ttoxicology",
    "318": " SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'; \t----- bird -----\ttoxicology",
    "319": " SELECT COUNT(DISTINCT element) FROM connected WHERE bond_id = 'TR001_3_4'; \t----- bird -----\ttoxicology",
    "320": " SELECT b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_1' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id = 'TR000_2'; \t----- bird -----\ttoxicology",
    "321": " SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = 'TR000_2' JOIN connected c2 ON c2.atom_id_2 = 'TR000_4' JOIN atom a ON a.atom_id = c1.atom_id JOIN atom a2 ON a2.atom_id = c2.atom_id_2 JOIN bond b ON b.bond_id = c1.bond_id JOIN bond b2 ON b2.bond_id = c2.bond_id WHERE a.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id; \t----- bird -----\ttoxicology",
    "322": " SELECT atom.element FROM atom WHERE atom.atom_id = 'TR000_1'; \t----- bird -----\ttoxicology",
    "323": " SELECT label FROM molecule WHERE molecule_id = (SELECT molecule_id FROM atom WHERE atom_id = 'TR000'); \t----- bird -----\ttoxicology",
    "324": " SELECT     (SUM(CASE WHEN bond_type ='single' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_single_bond FROM     atom JOIN     bond ON atom.molecule_id = bond.molecule_id GROUP BY     atom.molecule_id; \t----- bird -----\ttoxicology",
    "325": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'N' AND m.label IN ('Carcinogenic'); \t----- bird -----\ttoxicology",
    "326": " SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id_2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE m.label = 'Sulphur' AND b.bond_type = 'double'; \t----- bird -----\ttoxicology",
    "327": " SELECT m.molecule_id, COUNT(c.atom_id) AS atom_count FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id GROUP BY m.molecule_id HAVING atom_count > 5 AND m.label NOT LIKE '%carcinogenic%'; \t----- bird -----\ttoxicology",
    "328": " SELECT a.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = 'double'; \t----- bird -----\ttoxicology",
    "329": " SELECT c.molecule_id, COUNT(a.atom_id) AS atom_count FROM connected c JOIN atom a ON c.atom_id = a.molecule_id WHERE c.connected_type = 'carcinogenic' GROUP BY c.molecule_id ORDER BY atom_count DESC LIMIT 1; \t----- bird -----\ttoxicology",
    "330": " SELECT molecule_id FROM molecule WHERE label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "331": " SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id JOIN connected ON molecule.molecule_id = connected.atom_id_2 WHERE molecule.label = 'carcinogenic'; \t----- bird -----\ttoxicology",
    "332": " SELECT COUNT(DISTINCT TR004.molecule_id) FROM atom AS TR004 JOIN bond AS BOND ON TR004.molecule_id = BOND.molecule_id JOIN connected AS CONNECTED ON BOND.bond_id = CONNECTED.bond_id JOIN molecule AS MOL ON TR004.molecule_id = MOL.molecule_id WHERE BOND.bond_type ='single'; \t----- bird -----\ttoxicology",
    "333": " SELECT COUNT(DISTINCT atom.element) AS carbon_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id_2 = connected.atom_id_2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR008'; \t----- bird -----\ttoxicology",
    "334": " SELECT a.element FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label!= 'carcinogenic' AND a.atom_id = 'TR004_7'; \t----- bird -----\ttoxicology",
    "335": " SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'O' AND b.bond_type = 'double'; \t----- bird -----\ttoxicology",
    "336": " SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = 'triple' AND m.label NOT IN ('carcinogenic'); \t----- bird -----\ttoxicology",
    "337": " SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR002'; \t----- bird -----\ttoxicology",
    "338": " SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id_2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_type = 'double' AND a1.molecule_id = 'TR012'; \t----- bird -----\ttoxicology",
    "339": " SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'O'; \t----- bird -----\ttoxicology",
    "340": " SELECT c.name, c.face_converted_mana_cost, c.rarity FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%incredibly powerful%'; \t----- bird -----\tcard_games",
    "341": "  [SQL] SELECT c.name, c.color_identity, c.rarity, c.set_code FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%borderless%' AND c.has_foil = 0 AND c.is_online_only = 0 AND c.is_foreign_only = 0 AND c.is_non_foil_only = 0 AND c.is_partial_preview = 0 AND c.is_partial_preview = 0 AND c.is_story_spotlight = 0 AND c.is_text_less = 0 AND c.is_time_shifted = 0 AND c.is_reprint = 0 AND c.is_reserved = 0 AND c.is_starter = 0 AND c.is_promoted = 0 AND c.is_oversized = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = 0 AND c.is_online_only = \t----- bird -----\tcard_games",
    "342": " SELECT name, converted_mana_cost FROM cards WHERE face = 'true' AND converted_mana_cost > (SELECT MAX(converted_mana_cost) FROM cards WHERE face = 'false'); \t----- bird -----\tcard_games",
    "343": " SELECT c.name, c.rec_rank_edh FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.frame_style = '2015' AND f.rec_rank_edh < 100 \t----- bird -----\tcard_games",
    "344": " SELECT c.name, c.rarity, c.format, c.banned FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'Mythic' AND c.format = 'Print' AND l.status = 'Banned' AND c.format = 'Gladiator'; \t----- bird -----\tcard_games",
    "345": " SELECT legalities.status FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE cards.type = 'Artifact' AND cards.hasMultipleFaces = 0 AND legalities.format = 'Vintage'; \t----- bird -----\tcard_games",
    "346": " SELECT c.unique_id, c.artist FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.format = 'commander' AND f.language = 'English'; \t----- bird -----\tcard_games",
    "347": " SELECT c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE fd.flavor_text LIKE '%Stephen Daniel%' AND r.status = 'active' AND c.rarity = 'common'; \t----- bird -----\tcard_games",
    "348": " SELECT ruling.text FROM ruling WHERE ruling.uuid = (SELECT cards.uuid FROM cards WHERE cards.name = 'Sublime Epiphany' AND cards.number = 74s);\t----- bird -----\tcard_games",
    "349": " SELECT c.name, c.artist, CASE WHEN r.status = 'PROMOTIONAL' THEN 'Yes' ELSE 'No' END AS is_promotional FROM cards c JOIN ruling r ON c.uuid = r.uuid ORDER BY COUNT(r.id) DESC LIMIT 1; \t----- bird -----\tcard_games",
    "350": " SELECT DISTINCT flavor_text FROM foreign_data WHERE name = 'Annul numbered 29' AND language IN (     SELECT DISTINCT language     FROM foreign_data     WHERE name = 'Annul numbered 29' ); \t----- bird -----\tcard_games",
    "351": " SELECT c.name, c.flavor_text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Japanese'; \t----- bird -----\tcard_games",
    "352": " SELECT SUM(availability = 'Chinese Simplified') * 100.0 / COUNT(*) AS percentage_chinese_simplified FROM cards \t----- bird -----\tcard_games",
    "353": " SELECT s.name, SUM(ct.number) AS total_cards FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN card_translations ct ON tr.language = 'Italian' AND ct.card_id = tr.id GROUP BY s.name ORDER BY total_cards DESC; \t----- bird -----\tcard_games",
    "354": " SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd'; \t----- bird -----\tcard_games",
    "355": " SELECT keywords FROM cards WHERE name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "356": " SELECT COUNT(*) FROM cards WHERE keywords = 'infinite power'; \t----- bird -----\tcard_games",
    "357": " SELECT \"is Promotion\" AS promotion_type FROM \"cards\" WHERE \"name\" = 'Duress'; \t----- bird -----\tcard_games",
    "358": " SELECT \"border Color\" FROM \"cards\" WHERE \"name\" = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "359": " SELECT \"type\" FROM \"cards\" WHERE \"name\" = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "360": " SELECT DISTINCT set.language FROM cards AS c JOIN sets AS s ON c.set_code = s.code WHERE c.name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "361": " SELECT COUNT(*) FROM legalities JOIN ruling ON legalities.uuid = ruling.uuid WHERE legalities.status ='restricted' AND ruling.text_boxes = 1; \t----- bird -----\tcard_games",
    "362": " SELECT ruling.text FROM ruling WHERE ruling.uuid = (     SELECT cards.uuid     FROM cards     WHERE cards.name = 'Condemn' );\t----- bird -----\tcard_games",
    "363": " SELECT COUNT(*) FROM legalities JOIN sets ON legalities.uuid = sets.code JOIN starter_decks ON sets.id = starter_decks.set_id WHERE legalities.status ='restricted' AND starter_decks.is_starter = 1; \t----- bird -----\tcard_games",
    "364": " SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Cloudchaser Eagle';\t----- bird -----\tcard_games",
    "365": " SELECT name FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": " SELECT ruling.text FROM ruling WHERE ruling.uuid = (     SELECT cards.uuid     FROM cards     WHERE cards.name = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": " SELECT DISTINCT artist FROM cards WHERE name = 'Phyrexian'; \t----- bird -----\tcard_games",
    "368": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage_borderless FROM cards WHERE border_color = 'Borderless'; \t----- bird -----\tcard_games",
    "369": " SELECT COUNT(*) FROM foreign_data WHERE flavor_text LIKE '%illustrated in German%' AND is_reprint = 1; \t----- bird -----\tcard_games",
    "370": " SELECT COUNT(DISTINCT f.uuid) FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.border_color = 'borderless' AND c.language = 'Russian'; \t----- bird -----\tcard_games",
    "371": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE is_story_spotlight = true AND language = 'fr') AS percentage_french_story_spotlight_cards FROM cards WHERE is_story_spotlight = true AND language = 'fr'; \t----- bird -----\tcard_games",
    "372": " SELECT COUNT(*) FROM cards WHERE toughness = '99'; \t----- bird -----\tcard_games",
    "373": " SELECT name FROM cards WHERE artist = 'Aaron Boyd'; \t----- bird -----\tcard_games",
    "374": " SELECT COUNT(*) FROM cards WHERE color_indicator = 'Black' AND is_online_only = 1 AND mtgo_id IS NOT NULL; \t----- bird -----\tcard_games",
    "375": " SELECT unique\\_id, converted\\_mana\\_cost FROM cards WHERE converted\\_mana\\_cost = 0; \t----- bird -----\tcard_games",
    "376": " SELECT c.name, c.layout FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%flying%' AND c.keywords LIKE '%flying%'; \t----- bird -----\tcard_games",
    "377": " SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype!= 'Angel'; \t----- bird -----\tcard_games",
    "378": " SELECT c.uuid, c.name, c.face_converted_mana_cost, c.power FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%incredibly powerful%' AND c.is_foil = 1 AND c.is_non_foil = 0 GROUP BY c.uuid, c.name, c.face_converted_mana_cost, c.power HAVING COUNT(*) > 1 ORDER BY c.face_converted_mana_cost DESC, c.power DESC; \t----- bird -----\tcard_games",
    "379": " SELECT c.unique_id_number FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%Duel Deck A%' AND fd.language = 'English'; \t----- bird -----\tcard_games",
    "380": " SELECT rec_rank FROM cards WHERE frame_version = '2015'; \t----- bird -----\tcard_games",
    "381": " SELECT DISTINCT artist FROM cards WHERE language = 'zh-CN'; \t----- bird -----\tcard_games",
    "382": " SELECT c.name, c.availability FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese' AND c.availability = 'Paper'; \t----- bird -----\tcard_games",
    "383": " SELECT COUNT(*) FROM cards WHERE color_indicator = 'white' AND border_color = 'white'; \t----- bird -----\tcard_games",
    "384": " SELECT f.uuid, f.language FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.is_legacy = true AND f.language IS NOT NULL; \t----- bird -----\tcard_games",
    "385": " SELECT text FROM ruling WHERE uuid = 'Beacon of Immortality'; \t----- bird -----\tcard_games",
    "386": " SELECT COUNT(*) AS future_frame_count, legality_status FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frame_version = 'future' AND legalities.status = 'legal'; \t----- bird -----\tcard_games",
    "387": " SELECT c.name, c.color_identity FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.name = 'OGW' GROUP BY c.name, c.color_identity; \t----- bird -----\tcard_games",
    "388": " SELECT c.name, st.language, st.translation FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN set_translations st ON fd.language = st.language WHERE c.set_code = '10E' AND c.converted_mana_cost = 5; \t----- bird -----\tcard_games",
    "389": " SELECT c.name, r.date FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE c.type = 'Creature - Elf'; \t----- bird -----\tcard_games",
    "390": " SELECT c.color_identity, l.format FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.unique_id_number BETWEEN 1 AND 20; \t----- bird -----\tcard_games",
    "391": " SELECT c.name, f.flavor_text, s.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN set_translations st ON c.uuid = st.set_code JOIN sets s ON st.set_code = s.code WHERE c.color = 'black' AND c.type = 'artifact' AND s.language IS NOT NULL; \t----- bird -----\tcard_games",
    "392": " SELECT c.name, r.date FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE c.rarity = 'Uncommon' ORDER BY r.date ASC; \t----- bird -----\tcard_games",
    "393": " SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND has_foil = 1 AND is_non_powerful = 1; \t----- bird -----\tcard_games",
    "394": " SELECT COUNT(*) FROM cards WHERE color_indicator = 'W' AND frame_version LIKE '%Power%' AND border_color = 'White'; \t----- bird -----\tcard_games",
    "395": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE artist = 'UDON' AND print_type ='mtgo' AND hand = '-1'; \t----- bird -----\tcard_games",
    "396": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frame_version = '1993' AND cards.availability = 'paper' AND legalities.has_content_warning = 1; \t----- bird -----\tcard_games",
    "397": " SELECT c.converted_mana_cost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.layout = 'normal' AND c.frame_version = '2003' AND c.border_color = 'black' AND f.language = 'paper' AND f.text = 'available' AND s.is_online_only = 0; \t----- bird -----\tcard_games",
    "398": " SELECT SUM(converted_mana_cost) FROM cards WHERE artist = 'Rob Alexander'; \t----- bird -----\tcard_games",
    "399": " SELECT DISTINCT type FROM cards WHERE type IN ('Creature', 'Enchantment', 'Artifact', 'Land', 'Plane', 'Tribal', 'Instant', 'Sorcery', 'Counterspell', 'Ritual', 'Quest', 'Teachings', 'Pilgrimage', 'Emblem', 'Artifact Control', 'Artifact Creature', 'Enchantment - Aura', 'Enchantment - Equipment', 'Enchantment - Land', 'Enchantment - Spell', 'Enchantment - Triumph', 'Enchantment - Wrath', 'Enchantment - Zombie', 'Enchantment - Beast', 'Enchantment - Creature', 'Enchantment - Demon', 'Enchantment - Elemental', 'Enchantment - Faerie', 'Enchantment - Giant', 'Enchantment - Illusion', 'Enchantment - Knight', 'Enchantment - Merfolk', 'Enchantment - Pirate', 'Enchantment - Slimy', 'Enchantment - Spirit', 'Enchantment - Undead', 'Enchantment - Vampire', 'Enchantment - Werewolf', 'Enchantment - Wurm', 'Enchantment - Zombie', 'Enchantment - Beast', 'Enchantment - Creature', 'Enchantment - Demon', 'Enchantment - Elemental', 'Enchantment - Faerie', 'Enchantment - Giant', 'Enchantment - Illusion', 'Enchantment - Knight', 'Enchantment - Merfolk', 'Enchantment - Pirate', 'Enchantment - Slimy', 'Enchantment - Spirit', 'Enchantment - Undead', 'Enchantment - Vampire', 'Enchantment - Werewolf', 'Enchantment - Wurm', 'Enchantment - Zombie'); \t----- bird -----\tcard_games",
    "400": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'Spanish'; \t----- bird -----\tcard_games",
    "401": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE rarity = 'Legendary' AND frame_effects = 'Online Only') AS percentage FROM cards WHERE rarity = 'Legendary' AND frame_effects = 'Online Only'; \t----- bird -----\tcard_games",
    "402": " SELECT c.uuid, c.is_story_spotlight, c.is_text_less FROM cards c JOIN (     SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM cards) AS percentage     FROM cards     WHERE c.is_story_spotlight = 1 AND c.is_text_less = 0 ) AS story_spotlight_no_text ON TRUE WHERE story_spotlight_no_text.percentage IS NOT NULL ORDER BY c.uuid; \t----- bird -----\tcard_games",
    "403": " SELECT f.name, COUNT(f.uuid) * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.language = 'Spanish' GROUP BY f.name ORDER BY percentage DESC; \t----- bird -----\tcard_games",
    "404": " SELECT DISTINCT language FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.total_set_size = 309; \t----- bird -----\tcard_games",
    "405": " SELECT COUNT(DISTINCT st.set_code) FROM sets AS s JOIN set_translations AS st ON s.code = st.set_code WHERE s.block = 'Commander' AND st.language = 'pt-BR'; \t----- bird -----\tcard_games",
    "406": " SELECT c.unique_id, c.name, c.type, c.legality FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'Legal'; \t----- bird -----\tcard_games",
    "407": " SELECT DISTINCT type FROM cards WHERE language = 'de'; \t----- bird -----\tcard_games",
    "408": " SELECT COUNT(*) FROM cards WHERE power IS NOT NULL AND (     SELECT COUNT(*)     FROM ruling     WHERE ruling.uuid = cards.uuid ) > 0; \t----- bird -----\tcard_games",
    "409": " SELECT COUNT(*) FROM cards WHERE format = 'pre-modern' AND ruling_text LIKE '%This is a triggered mana ability.%' AND face_count = 1; \t----- bird -----\tcard_games",
    "410": " SELECT c.unique_id_number FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.artist = 'Erica Yang' AND s.format = 'pauper' AND s.is_paper = 1 AND l.status = 'legal'; \t----- bird -----\tcard_games",
    "411": " SELECT artist FROM cards WHERE ascii_Name = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": " SELECT f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Matthew D. Wilson' AND c.type = 'Creature' AND c.layout = 'Normal' AND c.border_color = 'Black' AND f.language = 'French'; \t----- bird -----\tcard_games",
    "413": " SELECT COUNT(*) FROM cards WHERE rarity = 'Print' AND EXISTS (     SELECT 1     FROM ruling     WHERE ruling.uuid = cards.uuid     AND ruling.date = '2007-01-02' );\t----- bird -----\tcard_games",
    "414": " SELECT language FROM foreign_data WHERE multiverseid = (     SELECT id     FROM sets     WHERE name = 'Ravnica' );\t----- bird -----\tcard_games",
    "415": " SELECT SUM(CASE WHEN legal_status = 'commander' AND status = 'legal' AND has_content_warning = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage FROM foreign_data JOIN legalities ON foreign_data.uuid = legalities.uuid WHERE format = 'commander'; \t----- bird -----\tcard_games",
    "416": " SELECT     COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage FROM     cards WHERE     power IS NULL AND     language = 'fr'; \t----- bird -----\tcard_games",
    "417": " SELECT     COUNT(DISTINCT st.set_code) AS japanese_translated_sets,     COUNT(DISTINCT s.code) AS expansion_sets,     (COUNT(DISTINCT st.set_code) / COUNT(DISTINCT s.code)) * 100 AS percentage FROM     sets s JOIN     set_translations st ON s.code = st.set_code WHERE     st.language = 'Japanese' \t----- bird -----\tcard_games",
    "418": " SELECT \"flavor Text\" FROM \"foreign data\" WHERE \"uuid\" = (SELECT \"uuid\" FROM \"cards\" WHERE \"name\" = 'Daren Bader'); \t----- bird -----\tcard_games",
    "419": " SELECT COUNT(DISTINCT c.uuid) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_id = s.id JOIN set_translations st ON s.code = st.set_code JOIN ruling r ON c.uuid = r.uuid WHERE c.border_color = '' AND c.availability = 'EDH' AND r.date >= '2020-01-01' AND r.date < '2021-01-01' AND f.language = 'English' AND f.text LIKE '%EDH%' AND l.status = 'Legal' AND s.is_foreign_only = 0 AND s.total_set_size > 100 AND c.rec_rank_in_edh > 12000; \t----- bird -----\tcard_games",
    "420": " SELECT COUNT(*) FROM cards WHERE is_oversized = 1 AND is_reprinted = 1 AND is_promotion = 1; \t----- bird -----\tcard_games",
    "421": " SELECT c.name, c.power, c.promotion_types FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Promotion' ORDER BY c.name ASC LIMIT 3; \t----- bird -----\tcard_games",
    "422": " SELECT f.language FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.multiverseid = 149934; \t----- bird -----\tcard_games",
    "423": " SELECT c1.uuid, c1.kingdom_foil_id, c1.kingdom_id, c1.name, c1.power, c1.toughness FROM cards AS c1 JOIN cards AS c2 ON c1.uuid = c2.uuid WHERE c1.kingdom_foil_id < c2.kingdom_foil_id ORDER BY c1.kingdom_foil_id ASC LIMIT 3; \t----- bird -----\tcard_games",
    "424": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) AS proportion_without_normal_layout FROM cards WHERE layout!= 'normal'; \t----- bird -----\tcard_games",
    "425": " SELECT c.unique_id_number, c.name, c.subtypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND fd.flavor_text IS NULL AND l.status = 'Single Face'; \t----- bird -----\tcard_games",
    "426": " SELECT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.tcg_player_group_id = 0 AND s.name NOT IN (     SELECT set_code     FROM sets     WHERE magic_the_gathering_online_code IS NOT NULL ) ORDER BY s.name ASC LIMIT 3; \t----- bird -----\tcard_games",
    "427": " SELECT DISTINCT language FROM foreign_data WHERE uuid IN (     SELECT cards.uuid     FROM cards     JOIN sets ON cards.set_code = sets.code     WHERE sets.name = 'Archenemy' AND sets.code = 'ARC' );\t----- bird -----\tcard_games",
    "428": " SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.set_code WHERE s.id = 5; \t----- bird -----\tcard_games",
    "429": " SELECT s.language, s.type FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.id = 206; \t----- bird -----\tcard_games",
    "430": " SELECT s.id, s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'Italian' AND fd.language = 'Italian' JOIN cards c ON s.id = c.set_id AND tr.language = 'Italian' AND fd.language = 'Italian' WHERE s.block = 'Shadowmoor' ORDER BY s.name ASC; \t----- bird -----\tcard_games",
    "431": " SELECT s.id, s.name, s.base_set_size, s.block, s.booster, s.code, s.is_foil_only, s.is_foreign_only, s.is_non_foil_only, s.is_online_only, s.is_partial_preview, s.keyrune_code, s.magic_card_market_id, s.magic_card_market_id_extras, s.magic_card_market_name, s.magic_the_gathering_online_code, s.parent_code, s.release_date, s.tcg_player_group_id, s.total_set_size, s.type FROM sets s JOIN foreign_data f ON s.uuid = f.uuid WHERE f.language = 'English' AND s.is_foreign_only = 1 AND s.is_online_only = 1 AND s.is_partial_preview = 1 AND s.keyrune_code IS NOT NULL AND s.magic_card_market_id IS NOT NULL AND s.magic_card_market_id_extras IS NOT NULL AND s.magic_card_market_name IS NOT NULL AND s.magic_the_gathering_online_code IS NOT NULL AND s.parent_code IS NOT NULL AND s.release_date IS NOT NULL AND s.tcg_player_group_id IS NOT NULL AND s.total_set_size IS NOT NULL AND s.type IS NOT NULL AND s.code LIKE '%Japanese%'; \t----- bird -----\tcard_games",
    "432": " SELECT s.name, COUNT(fd.id) AS card_count FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid WHERE fd.language = 'ru' GROUP BY s.code ORDER BY card_count DESC LIMIT 1; \t----- bird -----\tcard_games",
    "433": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified' AND is_online_only = 1) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified' AND is_online_only = 1; \t----- bird -----\tcard_games",
    "434": " SELECT COUNT(DISTINCT sets.id) FROM sets WHERE sets.language = 'Japanese' AND sets.is_foreign_only = 0 AND sets.is_online_only = 0 AND sets.is_partial_preview = 0 AND sets.is_non_foil_only = 0 AND sets.is_foil_only = 0 AND sets.tcg_player_group_id = 0 AND sets.total_set_size > 0; \t----- bird -----\tcard_games",
    "435": " SELECT c.unique_id, c.border_color FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavor_text LIKE '%Black%' GROUP BY c.unique_id, c.border_color HAVING COUNT(DISTINCT f.language) = 1 ORDER BY c.unique_id; \t----- bird -----\tcard_games",
    "436": " SELECT c.unique_id_number, c.frame_effects FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%extendedart%' GROUP BY c.unique_id_number, c.frame_effects HAVING COUNT(DISTINCT c.frame_effects) = 1 AND c.frame_effects = 'extendedart'; \t----- bird -----\tcard_games",
    "437": " SELECT c.name, c.type, c.set_code FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.border_color = 'black' AND c.type = 'card' AND s.type = 'full art' GROUP BY c.name, c.type, c.set_code HAVING COUNT(DISTINCT f.language) > 1 AND COUNT(DISTINCT l.status) > 0 AND s.is_foil_only = 0 AND s.is_foreign_only = 0 AND s.is_non_foil_only = 0 AND s.is_online_only = 0 AND s.is_partial_preview = 0 AND s.keyrune_code IS NOT NULL AND s.magic_card_market_id > 0 AND s.magic_card_market_id_extras > 0 AND s.magic_card_market_name IS NOT NULL AND s.magic_the_gathering_online_code IS NOT NULL AND s.parent_code IS NOT NULL AND s.release_date >= '2020-01-01' AND s.total_set_size > 0 AND s.type ='set'; \t----- bird -----\tcard_games",
    "438": " SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.id = 174; \t----- bird -----\tcard_games",
    "439": " SELECT name FROM sets WHERE code = 'ALL'; \t----- bird -----\tcard_games",
    "440": " SELECT flavor_text FROM foreign_data WHERE name = 'A Pedra Fellwar' AND language = (     SELECT language     FROM foreign_data     WHERE name = 'A Pedra Fellwar'     LIMIT 1 );\t----- bird -----\tcard_games",
    "441": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.translation = '2007-07-13'; \t----- bird -----\tcard_games",
    "442": " SELECT s.base_set_size, s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND s.block IN ('Masques', 'Mirage'); \t----- bird -----\tcard_games",
    "443": " SELECT s.id, s.name, s.base_set_size, s.block, s.booster, s.code, s.is_foil_only, s.is_foreign_only, s.is_non_foil_only, s.is_online_only, s.is_partial_preview, s.keyrune_code, s.magic_card_market_id, s.magic_card_market_id_extras, s.magic_card_market_name, s.magic_the_gathering_online_code, s.name, s.parent_code, s.release_date, s.tcg_player_group_id, s.total_set_size, s.type FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND tr.translation = 'Expansion'; \t----- bird -----\tcard_games",
    "444": " SELECT f.flavor_text, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'boros' LIMIT 1; \t----- bird -----\tcard_games",
    "445": " SELECT f.language, f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie' LIMIT 1; \t----- bird -----\tcard_games",
    "446": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE Set_Code = 'Abyssal Horror' AND converted_Mana_Cost = 10) AS percentage FROM cards WHERE Set_Code = 'Abyssal Horror' AND converted_Mana_Cost = 10; \t----- bird -----\tcard_games",
    "447": " SELECT s.name, s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND tr.translation = 'Expansion'; \t----- bird -----\tcard_games",
    "448": " SELECT f.flavor_text, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'abzan' LIMIT 1; \t----- bird -----\tcard_games",
    "449": " SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius'; \t----- bird -----\tcard_games",
    "450": " SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND power = 'incredibly powerful'; \t----- bird -----\tcard_games",
    "451": " SELECT COUNT(*) FROM cards WHERE availability = 'Paper' AND starting_maximum_hand_size > 0; \t----- bird -----\tcard_games",
    "452": " SELECT name FROM cards WHERE type = 'Text Box'; \t----- bird -----\tcard_games",
    "453": " SELECT converted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "454": " SELECT COUNT(*) FROM cards WHERE border_color = 'white' AND power = 'unknown'; \t----- bird -----\tcard_games",
    "455": " SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavor_text LIKE '%promotional painting%' AND c.is_promotion = 1 AND c.has_alternative_deck_limit = 1 AND c.has_content_warning = 1 AND c.has_foil = 1 AND c.has_non_foil = 1 AND c.is_alternative = 1 AND c.is_full_art = 1 AND c.is_online_only = 1 AND c.is_oversized = 1 AND c.is_promotion = 1 AND c.is_reprint = 1 AND c.is_reserved = 1 AND c.is_starter = 1 AND c.is_story_spotlight = 1 AND c.is_text_less = 1 AND c.is_time_shifted = 1 AND c.keywords ='multiple faces'; \t----- bird -----\tcard_games",
    "456": " SELECT DISTINCT type FROM cards WHERE name = 'Molimo, Maro-Sorcerer'; \t----- bird -----\tcard_games",
    "457": " SELECT c.name, s.name AS set_name, s.code AS set_code FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN sets s ON s.code = c.set_code WHERE c.promotion_type = 'bundle' AND s.is_online_only = 0 AND s.is_foreign_only = 0 AND s.is_non_foil_only = 0 AND s.is_partial_preview = 0 AND s.is_foil_only = 0 AND s.total_set_size > 0 AND s.release_date >= '2020-01-01'; \t----- bird -----\tcard_games",
    "458": " SELECT COUNT(DISTINCT artist) FROM cards WHERE border_color = 'black' AND (availability = 'arena' OR availability ='mtgo') AND artist IS NOT NULL; \t----- bird -----\tcard_games",
    "459": " SELECT converted_mana_cost FROM cards WHERE name = 'Serra Angel' AND (name = 'Shrine Keeper' OR converted_mana_cost > (SELECT converted_mana_cost FROM cards WHERE name = 'Shrine Keeper')); \t----- bird -----\tcard_games",
    "460": " SELECT \"artist\" FROM \"cards\" WHERE \"name\" = 'Battra, Dark Destroyer'; \t----- bird -----\tcard_games",
    "461": " SELECT c.name, c.converted_mana_cost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.frame_style = '2003' AND c.rarity = 'Rare' ORDER BY c.converted_mana_cost DESC LIMIT 3; \t----- bird -----\tcard_games",
    "462": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'Italian' AND fd.uuid = tr.translation WHERE s.name LIKE '%Ancestor\\'s Chosen%'; \t----- bird -----\tcard_games",
    "463": " SELECT COUNT(DISTINCT set_translations.id) AS translation_count FROM set_translations JOIN sets ON set_translations.set_code = sets.code WHERE sets.name = 'Angel of Mercy'; \t----- bird -----\tcard_games",
    "464": " SELECT DISTINCT name FROM cards WHERE SetCode = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "465": " SELECT f.flavor_text FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name LIKE '%Ancestor\\'s Chosen%' AND f.language = 'ko'; \t----- bird -----\tcard_games",
    "466": " SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND Set_Code = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "467": " SELECT COUNT(*) FROM cards WHERE sets.name = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "468": " SELECT translation FROM set_translations WHERE set_code = 'Eighth Edition'; \t----- bird -----\tcard_games",
    "469": " SELECT * FROM cards WHERE name = 'Angel of Mercy' AND is_online_only = 1; \t----- bird -----\tcard_games",
    "470": " SELECT release_date FROM sets WHERE name = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "471": " SELECT name FROM sets WHERE code = 'Hauptset Zehnte Edition'; \t----- bird -----\tcard_games",
    "472": " SELECT COUNT(DISTINCT s.id) FROM sets AS s JOIN set_translations AS t ON s.code = t.set_code WHERE s.block = 'Ice Age' AND t.language = 'Italian'; \t----- bird -----\tcard_games",
    "473": " SELECT * FROM foreign_data WHERE flavor_text LIKE '%Adarkar Valkyrie%' AND multiverseid NOT IN (     SELECT uuid     FROM legalities     WHERE format = 'Standard' );\t----- bird -----\tcard_games",
    "474": " SELECT COUNT(DISTINCT s.id) FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'Italian' AND s.base_set_size < 100; \t----- bird -----\tcard_games",
    "475": " SELECT COUNT(*) FROM cards WHERE Set_Code = 'Coldsnap' AND border_Color = 'Black'; \t----- bird -----\tcard_games",
    "476": " SELECT c.name, c.converted_mana_cost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.Set_Code = 'Coldsnap' ORDER BY c.converted_mana_cost DESC LIMIT 1; \t----- bird -----\tcard_games",
    "477": " SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy'); \t----- bird -----\tcard_games",
    "478": " SELECT TOP 1 * FROM cards WHERE number = 4 AND Set_Code = 'Coldsnap'; \t----- bird -----\tcard_games",
    "479": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'Coldsnap' AND converted_mana_cost > 5 AND foreign_data.flavor_text IS NULL AND legalities.status = 'Unknown'; \t----- bird -----\tcard_games",
    "480": " SELECT foreign_data.flavor_text FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor\\'s Chosen' AND cards.language = 'Italian'; \t----- bird -----\tcard_games",
    "481": " SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "482": " SELECT \"type\" FROM \"cards\" WHERE \"name\" = 'Ancestor\\'s Chosen'; \t----- bird -----\tcard_games",
    "483": " SELECT DISTINCT ruling.text FROM ruling JOIN cards ON ruling.uuid = cards.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'Coldsnap'; \t----- bird -----\tcard_games",
    "484": " SELECT c.name, c.converted_mana_cost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.name LIKE '%Coldsnap%' AND f.language = 'Italian' ORDER BY c.converted_mana_cost DESC LIMIT 1; \t----- bird -----\tcard_games",
    "485": " SELECT date FROM ruling WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Reminisce'); \t----- bird -----\tcard_games",
    "486": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE Set_Code = 'Coldsnap' AND converted_Mana_Cost = 7) AS percentage FROM cards WHERE Set_Code = 'Coldsnap' AND converted_Mana_Cost = 7; \t----- bird -----\tcard_games",
    "487": " SELECT id FROM sets WHERE name = 'Coldsnap'; \t----- bird -----\tcard_games",
    "488": " SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'English' AND tr.translation = '2017/7/14'; \t----- bird -----\tcard_games",
    "489": " SELECT keyrune_code FROM sets WHERE code = 'PKHC'; \t----- bird -----\tcard_games",
    "490": " SELECT magic_the_gathering_online_code FROM sets WHERE code = 'SS2'; \t----- bird -----\tcard_games",
    "491": " SELECT \"magic the gathering online code\" FROM \"sets\" WHERE \"release Date\" = '2017-06-09'; \t----- bird -----\tcard_games",
    "492": " SELECT \"type\" FROM \"sets\" WHERE \"name\" = 'From the Vault: Lore'; \t----- bird -----\tcard_games",
    "493": " SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized'; \t----- bird -----\tcard_games",
    "494": " SELECT c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE fd.flavor_text LIKE '%Jim Pavelec%' AND l.status = 'Legal'; \t----- bird -----\tcard_games",
    "495": " SELECT s.release_date FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid WHERE fd.name = 'Evacuation'; \t----- bird -----\tcard_games",
    "496": " SELECT COUNT(*) FROM cards WHERE sets.name = 'Rinascita di Alara'; \t----- bird -----\tcard_games",
    "497": " SELECT name FROM sets WHERE code = 'Huiti\u00e8me \u00e9dition'; \t----- bird -----\tcard_games",
    "498": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN foreign_data fd ON tr.language = 'fr' AND fd.uuid = tr.translation WHERE s.name LIKE '%Tendo Ice Bridge%'; \t----- bird -----\tcard_games",
    "499": " SELECT COUNT(DISTINCT translation.language) FROM set_translations JOIN sets ON set_translations.set_code = sets.code WHERE sets.name = 'Tenth Edition'; \t----- bird -----\tcard_games",
    "500": " SELECT s.name AS japanese_set_name FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'ja' AND s.name = 'Fellwar Stone'; \t----- bird -----\tcard_games",
    "501": " SELECT MAX(converted_mana_cost) AS highest_converted_mana_cost FROM cards WHERE set_code = 'Journey into Nyx Hero's Path'; \t----- bird -----\tcard_games",
    "502": " SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo'; \t----- bird -----\tcard_games",
    "503": " SELECT sets.name FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE foreign_data.name = 'Samite Pilgrim' AND legalities.status = 'Legal'; \t----- bird -----\tcard_games",
    "504": " SELECT COUNT(*) FROM cards WHERE Set_Code = 'World Championship Decks 2004' AND converted_Mana_Cost = 3; \t----- bird -----\tcard_games",
    "505": " SELECT SET_TRANSLATION.translation FROM SET_TRANSLATIONS JOIN SETS ON SET_TRANSLATIONS.set_code = SETS.code WHERE SETS.name = 'Mirrodin' AND SET_TRANSLATIONS.language = 'zh-CN'; \t----- bird -----\tcard_games",
    "506": " SELECT     COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese') AS percentage FROM     foreign_data WHERE     language = 'Japanese'     AND translation IS NOT NULL     AND is_non_foil_only = 1; \t----- bird -----\tcard_games",
    "507": " SELECT SUM(CASE WHEN translations.language = 'Brazil Portuguese' THEN 1 ELSE 0 END) AS total_br_pt_translations,                COUNT(CASE WHEN translations.language = 'Brazil Portuguese' THEN 1 ELSE 0 END) AS total_cards,                SUM(CASE WHEN legalities.is_online_only = 1 THEN 1 ELSE 0 END) AS total_online_only_cards,                (total_online_only_cards * 100.0 / total_cards) AS online_only_percentage FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON cards.code = set_translations.set_code WHERE translations.language = 'Brazil Portuguese'; \t----- bird -----\tcard_games",
    "508": " SELECT DISTINCT printings FROM cards WHERE artist!= 'Aleksi Briclot' AND text_box_created_by = 'Aleksi Briclot'; \t----- bird -----\tcard_games",
    "509": " SELECT s.id, s.name, COUNT(c.unique_id) AS card_count FROM sets s JOIN cards c ON s.code = c.set_code GROUP BY s.id, s.name ORDER BY card_count DESC LIMIT 1; \t----- bird -----\tcard_games",
    "510": " SELECT c.artist, MAX(c.converted_mana_cost) AS highest_cost_artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.is_alternative = 0 GROUP BY c.artist ORDER BY highest_cost_artist DESC LIMIT 1; \t----- bird -----\tcard_games",
    "511": " SELECT flavor_text, COUNT(*) AS popularity FROM foreign_data WHERE is_foil = 1 GROUP BY flavor_text ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tcard_games",
    "512": " SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '') AND duel_deck = 'A' AND (has_foil = 0 OR has_foil = NULL); \t----- bird -----\tcard_games",
    "513": " SELECT s.id, SUM(ct.total_cards) AS total_cards FROM sets s JOIN set_translations tr ON s.code = tr.set_code JOIN sets_translations st ON tr.language = st.language JOIN card_translations ct ON st.set_code = ct.set_code JOIN cards c ON ct.card_id = c.id WHERE s.type = 'Commander' AND ct.card_type = 'Main' AND c.is_promo = 0 AND c.is_alchemy_modification = 0 GROUP BY s.id ORDER BY total_cards DESC LIMIT 1; \t----- bird -----\tcard_games",
    "514": " SELECT card_kingdom_id, converted_mana_cost FROM cards WHERE type = 'Card' ORDER BY converted_mana_cost DESC LIMIT 10; \t----- bird -----\tcard_games",
    "515": " SELECT MAX(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'Mythic' GROUP BY format ORDER BY oldest_release_date ASC LIMIT 1; \t----- bird -----\tcard_games",
    "516": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French'; \t----- bird -----\tcard_games",
    "517": " SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type = 'Rare Enchantment' AND cards.name LIKE '%Abundance%' AND legalities.status = 'Legal'; \t----- bird -----\tcard_games",
    "518": " SELECT format, name FROM legalities WHERE status = 'banned' GROUP BY format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": " SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE s.name = 'Battlebond'; \t----- bird -----\tcard_games",
    "520": " SELECT f.flavor_text, s.format_of_play FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN sets s ON l.uuid = s.uuid WHERE f.language = 'English' GROUP BY f.flavor_text, s.format_of_play ORDER BY COUNT(f.uuid) ASC LIMIT 1; \t----- bird -----\tcard_games",
    "521": " SELECT f.flavor_text, l.status FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid WHERE f.language = 'English' AND f.name = 'D. Alexander Gregory' AND s.frame_style = 1997 AND l.status IN ('Sensitive Content', 'Wizards of the Coast'); \t----- bird -----\tcard_games",
    "522": " SELECT c.name, r.banned_play_format FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE r.banned_in_edhrec = 1 ORDER BY r.banned_in_edhrec DESC LIMIT 1; \t----- bird -----\tcard_games",
    "523": " SELECT     YEAR(release_date) AS release_year,     COUNT(DISTINCT sets.id) AS num_sets,     AVG(num_sets) AS avg_annual_sets FROM     sets JOIN     foreign_data ON sets.uuid = foreign_data.uuid WHERE     sets.release_date BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY     release_year ORDER BY     release_year; \t----- bird -----\tcard_games",
    "524": " SELECT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_id = s.id WHERE c.border_color = 'black' AND s.is_arena_only = 1 AND fd.language = 'English'; \t----- bird -----\tcard_games",
    "525": " SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status ='restricted' OR l.status = 'banned' AND l.format = 'old school'; \t----- bird -----\tcard_games",
    "526": " SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'Paper Only'; \t----- bird -----\tcard_games",
    "527": " SELECT ruling.date, ruling.text FROM ruling JOIN cards ON ruling.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY ruling.date DESC; \t----- bird -----\tcard_games",
    "528": " SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.format IS NOT NULL; \t----- bird -----\tcard_games",
    "529": " SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.set_code WHERE tr.language = 'Korean' AND tr.set_code NOT IN (     SELECT st2.set_code     FROM set_translations tr2     JOIN sets s2 ON tr2.set_code = s2.code     WHERE tr2.language = 'Japanese' ); \t----- bird -----\tcard_games",
    "530": " SELECT DISTINCT f.frame_style, c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN sets s ON c.set_id = s.id WHERE fd.flavor_text LIKE '%Allen Williams%' AND s.name = 'Allen Williams';  [SQL] SELECT c.name FROM cards c JOIN ruling r ON c.uuid = r.uuid WHERE r.text LIKE '%Banned%'; \t----- bird -----\tcard_games",
    "531": " SELECT u.Display_Name, u.Reputation FROM users u JOIN votes v ON u.Id = v.User_Id WHERE v.Post_Id IN (     SELECT p.Id     FROM posts p     WHERE p.Title LIKE '%Harlan%'     UNION     SELECT p.Id     FROM posts p     WHERE p.Title LIKE '%Jarrod Dixon%'; \t----- bird -----\tcodebase_community",
    "532": " SELECT users.Display_Name FROM users WHERE users.Creation_Date >= '2011-01-01' AND users.Creation_Date < '2012-01-01'; \t----- bird -----\tcodebase_community",
    "533": " SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01'; \t----- bird -----\tcodebase_community",
    "534": " SELECT u.Display_Name FROM users u JOIN (     SELECT Display_Name, MAX(Views) AS Max_Views     FROM users     GROUP BY Display_Name ) v ON u.Display_Name = v.Display_Name WHERE u.Views = v.Max_Views; \t----- bird -----\tcodebase_community",
    "535": " SELECT COUNT(DISTINCT u.Id) FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 AND u.UpVotes > 100; \t----- bird -----\tcodebase_community",
    "536": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id WHERE users.Views > 10 AND users.Creation_Date > '2013-01-01'; \t----- bird -----\tcodebase_community",
    "537": " SELECT COUNT(DISTINCT posts.Id) AS total_posts FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "538": " SELECT p.Title FROM posts AS p JOIN users AS u ON p.Owner_UserId = u.Id WHERE u.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "539": " SELECT u.Display_Name FROM posts AS p JOIN users AS u ON p.Owner_User_Id = u.Id WHERE p.Title = 'Eliciting priors from experts'; \t----- bird -----\tcodebase_community",
    "540": " SELECT p.Title FROM posts AS p JOIN users AS u ON p.Owner_UserId = u.Id WHERE u.Id = csgillespie ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "541": " SELECT u.Display_Name FROM users u JOIN posts p ON u.Id = p.Owner_User_Id JOIN (     SELECT post_id, MAX(score) AS popularity     FROM comments     GROUP BY post_id ) c ON p.Id = c.post_id WHERE p.Post_Type_Id = 1 -- Assuming the most valuable post is a question ORDER BY c.popularity DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "542": " SELECT SUM(comments.Score) AS total_comments FROM comments JOIN posts ON comments.Post_Id = posts.Id JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "543": " SELECT COUNT(DISTINCT posts.Id) AS answer_count FROM posts JOIN users ON posts.Owner_UserId = users.Id JOIN votes ON posts.Id = votes.Post_Id JOIN users ON votes.UserId = users.Id WHERE users.Display_Name = 'csgillespie' ORDER BY answer_count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "544": " SELECT u.Display_Name FROM users u JOIN posts p ON u.Id = p.Last_Editor_User_Id WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' LIMIT 1; \t----- bird -----\tcodebase_community",
    "545": " SELECT COUNT(DISTINCT posts.Id) AS root_post_count FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "546": " SELECT u.Display_Name FROM users u JOIN posts p ON u.Id = p.Owner_User_Id JOIN post_history ph ON p.Id = ph.Post_Id JOIN post_links pl ON p.Id = pl.Post_Id JOIN post_history ph2 ON pl.Related_Post_Id = ph2.Post_Id WHERE ph.Post_History_Type_Id = 1 AND ph2.Post_History_Type_Id = 1 AND ph.Creation_Date = ph2.Creation_Date AND ph.Post_Id = p.Id AND ph2.Post_Id = pl.Related_Post_id AND p.Post_Type_Id = 1 AND p.Accepted_Answer_Id IS NOT NULL AND p.Closed_Date IS NULL; \t----- bird -----\tcodebase_community",
    "547": " SELECT COUNT(*) FROM posts JOIN users ON posts.Owner_User_Id = users.Id WHERE users.Reputation > 10000 AND posts.Score > 19; \t----- bird -----\tcodebase_community",
    "548": " SELECT u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts'; \t----- bird -----\tcodebase_community",
    "549": " SELECT t.body FROM posts AS p JOIN tags AS t ON p.Id = t.PostId WHERE t.TagName = 'bayesian' AND t.ExcerptPostId IN (     SELECT Id     FROM post_links     WHERE RelatedPostId = p.Id ); \t----- bird -----\tcodebase_community",
    "550": " SELECT p.Title, p.Body FROM posts p JOIN tags t ON p.Id = t.PostId JOIN tags_excerpts te ON t.Id = te.TagId JOIN users u ON p.OwnerUserId = u.Id WHERE te.ExcerptPostId = u.Id ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "551": " SELECT COUNT(DISTINCT User_Id) AS total_badges FROM badges WHERE User_Id = (SELECT Id FROM users WHERE Display_Name = 'csgillespie'); \t----- bird -----\tcodebase_community",
    "552": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "553": " SELECT COUNT(*) FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "554": " SELECT u.Display_Name FROM users u JOIN (     SELECT User_Id, COUNT(*) AS Badge_Count     FROM badges     GROUP BY User_Id ) b ON u.Id = b.User_Id ORDER BY b.Badge_Count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "555": " SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'csgillespie'; \t----- bird -----\tcodebase_community",
    "556": " SELECT AVG(b.views) AS average_views FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN badges AS b ON p.Id = b.PostId WHERE u.views > 200; \t----- bird -----\tcodebase_community",
    "557": " SELECT     (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 5)) AS percentage FROM     posts JOIN     users ON posts.Owner_UserId = users.Id WHERE     users.Reputation > 10000; \t----- bird -----\tcodebase_community",
    "558": " SELECT SUM(votes.VoteType) AS total_votes FROM votes JOIN users ON votes.User_Id = users.Id WHERE users.Id = 58 AND votes.Creation_Date = '2010-07-19'; \t----- bird -----\tcodebase_community",
    "559": " SELECT MAX(votes.creation_date) AS max_creation_date FROM votes WHERE votes.post_id IN (SELECT post_id FROM posts WHERE posts.owner_user_id = (SELECT id FROM users WHERE display_name = 'John Doe')); \t----- bird -----\tcodebase_community",
    "560": " SELECT COUNT(*) FROM badges WHERE Name = 'Revival'; \t----- bird -----\tcodebase_community",
    "561": " SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.Score = (SELECT MAX(Score) FROM comments WHERE PostId = p.Id) AND u.Id = (SELECT UserId FROM users WHERE DisplayName = 'Highest Score Commenter'); \t----- bird -----\tcodebase_community",
    "562": " SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.View_Count = 1910; \t----- bird -----\tcodebase_community",
    "563": " SELECT COUNT(c.Id) AS favorite_counts FROM posts AS p JOIN comments AS c ON p.Id = c.Post_Id WHERE p.Owner_UserId = 3025 AND c.Text LIKE '%20:29:%2023%' AND p.Creation_Date = '2014-04-23'; \t----- bird -----\tcodebase_community",
    "564": " SELECT c.Text FROM comments c JOIN post_history ph ON c.Id = ph.Id JOIN posts p ON ph.PostId = p.Id WHERE p.ParentId = 107829; \t----- bird -----\tcodebase_community",
    "565": " SELECT c.Text FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON p.Owner_UserId = u.Id WHERE u.Id = 23853 AND c.Creation_Date = '2013-07-12 09:08:18'; \t----- bird -----\tcodebase_community",
    "566": " SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 65041; \t----- bird -----\tcodebase_community",
    "567": " SELECT COUNT(DISTINCT posts.Id) AS total_posts FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'Tiago Pasqualini'; \t----- bird -----\tcodebase_community",
    "568": " SELECT u.Display_Name FROM votes AS v JOIN users AS u ON v.User_Id = u.Id WHERE v.Id = 6347; \t----- bird -----\tcodebase_community",
    "569": " SELECT SUM(votes.VoteType) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'; \t----- bird -----\tcodebase_community",
    "570": " SELECT b.Name FROM badges b JOIN users u ON b.User_Id = u.Id WHERE u.Display_Name = 'DatEpicCoderGuyWhoPrograms'; \t----- bird -----\tcodebase_community",
    "571": " SELECT u.Id, (u.PostCount / v.VoteCount) AS popularity FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Id = 24; \t----- bird -----\tcodebase_community",
    "572": " SELECT views FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'; \t----- bird -----\tcodebase_community",
    "573": " SELECT * FROM comments WHERE Score = 17; \t----- bird -----\tcodebase_community",
    "574": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserIds WHERE v.PostId = (     SELECT Id     FROM posts     WHERE Title = 'http://stackoverflow.com' ) AND v.VoteTypeId = 1; \t----- bird -----\tcodebase_community",
    "575": " SELECT b.Name FROM badges AS b WHERE b.User_Id = (SELECT Id FROM users WHERE Display_Name = 'SilentGhost'); \t----- bird -----\tcodebase_community",
    "576": " SELECT u.Id, u.DisplayName FROM users u JOIN comments c ON u.Id = c.User_Id WHERE c.Text LIKE '%thank you user93%'; \t----- bird -----\tcodebase_community",
    "577": " SELECT c.Text FROM comments c JOIN users u ON c.User_Id = u.Id JOIN posts p ON c.Post_Id = p.Id JOIN users au ON p.Accepted_Answer_Id = au.Id WHERE u.Display_Name = 'A Lion'; \t----- bird -----\tcodebase_community",
    "578": " SELECT u.Id, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserIds WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1; \t----- bird -----\tcodebase_community",
    "579": " SELECT c.Text FROM comments c JOIN post_history ph ON c.Id = ph.Id JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'Necromancer' GROUP BY u.Id HAVING COUNT(DISTINCT b.Id) = 10; \t----- bird -----\tcodebase_community",
    "581": " SELECT u.Display_Name FROM posts AS p JOIN users AS u ON p.Owner_User_Id = u.Id WHERE p.Title = 'Open source tools for visualizing multi-dimensional data' LIMIT 1; \t----- bird -----\tcodebase_community",
    "582": " SELECT p.Title FROM posts p JOIN users u ON p.OwnerUser = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa'; \t----- bird -----\tcodebase_community",
    "583": " SELECT u.Display_Name, SUM(v.Vote_Type_Id) AS total_score FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id JOIN post_history ph ON p.Id = ph.Post_Id JOIN users edited_by ON ph.User_Id = edited_by.Id WHERE edited_by.Display_Name = 'Yevgeny' GROUP BY u.Display_Name ORDER BY total_score DESC; \t----- bird -----\tcodebase_community",
    "584": " SELECT c.Text FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON c.User_Id = u.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND u.Id = (     SELECT User_Id     FROM post_history     WHERE Post_Id = (         SELECT Id         FROM posts         WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'     )     AND History_Type_Id = 1 -- 1 represents an edit )\t----- bird -----\tcodebase_community",
    "585": " SELECT SUM(bounty_amount) FROM votes WHERE post_id IN (SELECT id FROM posts WHERE title LIKE '%data%'); \t----- bird -----\tcodebase_community",
    "586": " SELECT u.Id, u.DisplayName, v.VoteTypeId, v.CreationDate FROM votes AS v JOIN users AS u ON v.UserId = u.Id JOIN posts AS p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.VoteTypeId = 5; \t----- bird -----\tcodebase_community",
    "587": " SELECT p.Title, c.Comment FROM posts p JOIN post_links pl1 ON p.Id = pl1.RelatedPostId JOIN post_links pl2 ON p.Id = pl2.RelatedPostId JOIN tags t ON pl1.TagTypeId = t.Id AND t.TagName = 'humor' JOIN tags t2 ON pl2.TagTypeId = t2.Id AND t2.TagName = 'humor' JOIN comments c ON p.Id = c.PostId WHERE t.Id = (SELECT Id FROM tags WHERE TagName = 'humor') AND t2.Id = (SELECT Id FROM tags WHERE TagName = 'humor'); \t----- bird -----\tcodebase_community",
    "588": " SELECT COUNT(c.Id) AS total_comments FROM comments c JOIN users u ON c.User_Id = u.Id WHERE u.Id = 13; \t----- bird -----\tcodebase_community",
    "589": " SELECT u.Id, u.Reputation FROM users u JOIN (     SELECT User_Id, MAX(Reputation) AS Max_Reputation     FROM votes     GROUP BY User_Id ) v ON u.Id = v.User_Id ORDER BY v.Max_Reputation DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "590": " SELECT u.Id, u.DisplayName, MIN(p.ViewCount) AS lowest_view FROM users u JOIN posts p ON u.Id = p.OwnerUserIds GROUP BY u.Id, u.DisplayName ORDER BY lowest_view ASC LIMIT 1; \t----- bird -----\tcodebase_community",
    "591": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Supporter' AND votes.Creation_Date >= '2011-01-01' AND votes.Creation_Date < '2012-01-01'; \t----- bird -----\tcodebase_community",
    "592": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id JOIN badges ON votes.Post_Id = badges.Id GROUP BY users.Id HAVING COUNT(badges.Id) > 5; \t----- bird -----\tcodebase_community",
    "593": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.User_Id JOIN locations ON users_locations.Location_Id = locations.Id WHERE locations.Name = 'New York' AND tags.Tag_Name IN ('teacher','supporter'); \t----- bird -----\tcodebase_community",
    "594": " SELECT u.Id, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserIds WHERE p.Id = 1; \t----- bird -----\tcodebase_community",
    "595": " SELECT DISTINCT u.Id FROM users u JOIN posts p ON u.Id = p.Owner_UserId JOIN post_history ph ON p.Id = ph.Post_Id JOIN comments c ON ph.Id = c.Post_History_Id JOIN users u_comments ON c.User_Id = u_comments.Id WHERE ph.Revision_GUID IS NOT NULL GROUP BY u.Id HAVING COUNT(DISTINCT ph.Revision_GUID) = 1 AND SUM(ph.Views) >= 1000; \t----- bird -----\tcodebase_community",
    "596": " SELECT u.Id, u.DisplayName, COUNT(c.Id) AS comment_count FROM users u JOIN comments c ON u.Id = c.User_Id GROUP BY u.Id, u.DisplayName ORDER BY comment_count DESC LIMIT 10; \t----- bird -----\tcodebase_community",
    "597": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_india ON users.Id = users_india.UserId JOIN users_badges ON users.Id = users_badges.UserId JOIN badges ON users_badges.BadgeId = badges.Id WHERE users_india.Country = 'India' AND badges.Name = 'Teacher'; \t----- bird -----\tcodebase_community",
    "598": " SELECT     (SUM(CASE WHEN YEAR(Date) = 2011 THEN 1 ELSE 0 END) - SUM(CASE WHEN YEAR(Date) = 2010 THEN 1 ELSE 0 END)) * 100.0 / SUM(CASE WHEN YEAR(Date) = 2010 THEN 1 ELSE 0 END) AS percentage_difference FROM     badges WHERE     Type ='student'; \t----- bird -----\tcodebase_community",
    "599": " SELECT ph.PostHistoryTypeId, COUNT(DISTINCT u.UserId) AS unique_commenters FROM post_history AS ph JOIN posts AS p ON ph.PostId = p.Id JOIN users AS u ON ph.UserId = u.Id WHERE p.Id = 3720 GROUP BY ph.PostHistoryTypeId; \t----- bird -----\tcodebase_community",
    "600": " SELECT p.Title, p.Score, p.ViewCount FROM posts p JOIN post_links pl1 ON p.Id = pl1.RelatedPostId JOIN post_links pl2 ON pl1.RelatedPostId = pl2.PostId WHERE pl2.PostId = 61217 GROUP BY p.Title, p.Score, p.ViewCount ORDER BY p.Score DESC; \t----- bird -----\tcodebase_community",
    "601": " SELECT c.Score, l.LinkTypeId FROM comments c JOIN post_history ph ON c.PostId = ph.PostId JOIN post_links l ON ph.PostId = l.PostId WHERE ph.PostId = 395; \t----- bird -----\tcodebase_community",
    "602": " SELECT p.Id, u.Id FROM posts p JOIN users u ON p.Owner User Id = u.Id WHERE p.Score > 60; \t----- bird -----\tcodebase_community",
    "603": " SELECT SUM(posts.favorite_count) FROM posts JOIN users ON posts.owner_user_id = users.id WHERE users.id = 686 AND YEAR(posts.creation_date) = 2011; \t----- bird -----\tcodebase_community",
    "604": " SELECT AVG(u.UpVotes) AS average_up_votes, AVG(u.Age) AS average_user_age FROM users u JOIN posts p ON u.Id = p.OwnerUserIds WHERE p.PostCount > 10 GROUP BY u.Id; \t----- bird -----\tcodebase_community",
    "605": " SELECT COUNT(DISTINCT users.Id) AS \"Number of users with Announcer badge\" FROM users INNER JOIN votes ON users.Id = votes.User_Id INNER JOIN badges ON votes.Post_Id = badges.Id WHERE badges.Name = 'Announcer'; \t----- bird -----\tcodebase_community",
    "606": " SELECT b.Name FROM badges b JOIN comments c ON b.Id = c.Post_Id JOIN users u ON c.User_Id = u.Id WHERE b.Date = '2010-07-19 19:39:08' AND u.Id = (SELECT User_Id FROM users WHERE Display_Name = 'John Doe'); \t----- bird -----\tcodebase_community",
    "607": " SELECT COUNT(*) FROM comments WHERE score > 0 \t----- bird -----\tcodebase_community",
    "608": " SELECT c.Text FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON p.Owner_UserId = u.Id WHERE p.Creation_Date = '2010-07-19 19:25:47' LIMIT 1; \t----- bird -----\tcodebase_community",
    "609": " SELECT COUNT(*) FROM posts WHERE score = 10; \t----- bird -----\tcodebase_community",
    "610": " SELECT b.Name FROM badges b JOIN (     SELECT User_Id     FROM votes     GROUP BY User_Id     ORDER BY SUM(Vote_Type_Id) DESC     LIMIT 1 ) v ON b.User_Id = v.User_Id \t----- bird -----\tcodebase_community",
    "611": " SELECT u.Id, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE b.Name = '7/19/2010 7:39:08 PM' AND b.Date = '2010-07-19 19:39:08'; \t----- bird -----\tcodebase_community",
    "612": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Display_Name = 'Pierre'; \t----- bird -----\tcodebase_community",
    "613": " SELECT u.Id, u.DisplayName, b.Name, b.Date FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Location = 'Rochester, NY' GROUP BY u.Id, u.DisplayName, b.Name; \t----- bird -----\tcodebase_community",
    "614": " SELECT AVG(reputation) AS average_reputation, COUNT(DISTINCT user_id) AS total_users FROM users WHERE reputation >= 10000 AND badge_name = 'Teacher'; \t----- bird -----\tcodebase_community",
    "615": " SELECT AVG(age) AS average_age, COUNT(*) AS total_users FROM users WHERE badge_name = 'Organizer' AND age >= 13 AND age < 19; \t----- bird -----\tcodebase_community",
    "616": " SELECT c.Score FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.Creation_Date = '2010-07-19 19:19:56'; \t----- bird -----\tcodebase_community",
    "617": " SELECT c.Text FROM comments c JOIN post_history ph ON c.Id = ph.Id JOIN posts p ON ph.PostId = p.Id WHERE p.CreationDate = '2010-07-19 19:37:33'; \t----- bird -----\tcodebase_community",
    "618": " SELECT u.Id, u.Reputation, u.CreationDate, u.DisplayName, u.Location, u.AboutMe, u.WebsiteUrl, u.Age, u.ProfileImageUrl FROM users u JOIN votes v ON u.Id = v.UserIds JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.TagIds = t.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE t.TagName = 'Vienna, Austria' AND b.Name = 'obtained the badge'; \t----- bird -----\tcodebase_community",
    "619": " SELECT COUNT(DISTINCT users.Id) AS adults_with_supporter_badge FROM users JOIN posts ON users.Id = posts.Owner_UserId JOIN badges ON posts.Id = badges.Post_Id WHERE badges.Name = 'Supporter' AND users.Age >= 18; \t----- bird -----\tcodebase_community",
    "620": " SELECT COUNT(DISTINCT users.Id) AS views_count FROM users JOIN posts ON users.Id = posts.Owner_UserId JOIN badges ON posts.Id = badges.Post_Id WHERE badges.Name = '7/19/2010 7:39:08 PM' AND badges.Date = '2010-07-19 19:39:08'; \t----- bird -----\tcodebase_community",
    "621": " SELECT b.Name FROM badges b JOIN (     SELECT User_Id, MIN(Reputation) AS Lowest_Reputation     FROM users     GROUP BY User_Id ) l ON b.User_Id = l.User_Id WHERE b.Reputation = l.Lowest_Reputation; \t----- bird -----\tcodebase_community",
    "622": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Display_Name = 'Sharpie'; \t----- bird -----\tcodebase_community",
    "623": " SELECT COUNT(DISTINCT User_Id) AS elder_count FROM badges WHERE Name = 'Supporter'; \t----- bird -----\tcodebase_community",
    "624": " SELECT users.Display_Name FROM users WHERE users.Id = 30; \t----- bird -----\tcodebase_community",
    "625": " SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.Location = 'New York'; \t----- bird -----\tcodebase_community",
    "626": " SELECT COUNT(*) FROM votes WHERE YEAR(Creation_Date) = 2010; \t----- bird -----\tcodebase_community",
    "627": " SELECT COUNT(DISTINCT users.Id) AS adult_users FROM users WHERE users.Age >= 18; \t----- bird -----\tcodebase_community",
    "628": " SELECT u.Id, u.DisplayName, SUM(v.Views) AS total_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id, u.DisplayName ORDER BY total_views DESC LIMIT 10; \t----- bird -----\tcodebase_community",
    "629": " SELECT     (SUM(CASE WHEN YEAR(Creation_Date) = 2010 THEN Votes ELSE 0 END) /      SUM(CASE WHEN YEAR(Creation_Date) = 2011 THEN Votes ELSE 0 END)) AS ratio_2010_2011 FROM     votes \t----- bird -----\tcodebase_community",
    "630": " SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier'; \t----- bird -----\tcodebase_community",
    "631": " SELECT COUNT(DISTINCT posts.Id) AS total_posts FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'Daniel Vassallo'; \t----- bird -----\tcodebase_community",
    "632": " SELECT SUM(votes) AS total_votes FROM votes WHERE user_id = (SELECT id FROM users WHERE display_name = 'Harlan'); \t----- bird -----\tcodebase_community",
    "633": " SELECT p.Id AS post_id, MAX(a.AnswerCount) AS max_answers_count FROM posts p JOIN answers a ON p.Id = a.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName ='slashnick' GROUP BY p.Id ORDER BY max_answers_count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "634": " SELECT p.Title, p.Score, p.View_Count FROM posts p JOIN users u ON p.Owner_UserId = u.Id WHERE u.Display_Name IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.Score DESC, p.View_Count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "635": " SELECT COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.Owner_UserId = u.Id WHERE u.Display_Name = 'Matt Parker' AND p.Score > 4; \t----- bird -----\tcodebase_community",
    "636": " SELECT SUM(score) FROM comments WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan'); \t----- bird -----\tcodebase_community",
    "637": " SELECT t.TagName FROM posts AS p JOIN tags AS t ON p.Id = t.ExcerptPostId WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes') AND NOT EXISTS (     SELECT 1     FROM comments AS c     WHERE c.PostId = p.Id ) \t----- bird -----\tcodebase_community",
    "638": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Organizer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT b.Id) = 1; \t----- bird -----\tcodebase_community",
    "639": " SELECT COUNT(DISTINCT posts.PostId) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_r_language_posts FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName LIKE '%R%'; \t----- bird -----\tcodebase_community",
    "640": " SELECT     u.Id AS user_id,     SUM(p.ViewCount) AS total_views FROM     users u JOIN     posts p ON u.Id = p.OwnerUserId WHERE     (u.DisplayName = 'Mornington' OR u.DisplayName = 'Amos') GROUP BY     u.Id ORDER BY     total_views DESC; \t----- bird -----\tcodebase_community",
    "641": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.VoteTypeId = badges.Id WHERE badges.Name = 'Commentator' AND badges.Date >= '2014-01-01' AND badges.Date < '2015-01-01'; \t----- bird -----\tcodebase_community",
    "642": " SELECT COUNT(*) FROM posts WHERE creation_date = '2010-07-21'; \t----- bird -----\tcodebase_community",
    "643": " SELECT u.Display_Name, u.Age FROM users u JOIN (     SELECT User_Id, MAX(Views) AS max_views     FROM posts     GROUP BY User_Id ) p ON u.Id = p.User_Id ORDER BY p.max_views DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "644": " SELECT p.last_edit_date, u.user_id FROM posts p JOIN post_history h ON p.id = h.post_id JOIN users u ON h.user_id = u.id WHERE p.title = 'Detecting a given face in a database of facial images'; \t----- bird -----\tcodebase_community",
    "645": " SELECT COUNT(*) FROM comments WHERE User_Id = 13 AND Score < 0; \t----- bird -----\tcodebase_community",
    "646": " SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c.PostId JOIN users u1 ON c.UserId = u1.Id JOIN comments c2 ON p.Id = c.PostId JOIN users u2 ON c.UserId = u2.Id WHERE c.Score > 0 GROUP BY p.Title, u1.DisplayName, u2.DisplayName ORDER BY p.Score DESC, p.Id DESC; \t----- bird -----\tcodebase_community",
    "647": " SELECT b.Name FROM badges AS b JOIN users AS u ON b.User_Id = u.Id WHERE u.Location = 'North Pole' AND b.Date >= '2011-01-01' AND b.Date <= '2011-12-31'; \t----- bird -----\tcodebase_community",
    "648": " SELECT u.Id, u.Display_Name, u.Website_Url FROM users u JOIN posts p ON u.Id = p.Owner_User_Id JOIN votes v ON p.Id = v.Post_Id WHERE p.Favorite_Count > 150; \t----- bird -----\tcodebase_community",
    "649": " SELECT COUNT(phh.Id) AS post_history_counts, MAX(phh.CreationDate) AS last_edit_date FROM post_history AS phh JOIN posts AS p ON phh.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Id; \t----- bird -----\tcodebase_community",
    "650": " SELECT u.Id, u.DisplayName, u.Location, u.LastAccessDate FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Outliers' GROUP BY u.Id, u.DisplayName, u.Location, u.LastAccessDate HAVING COUNT(DISTINCT v.Id) > 1; \t----- bird -----\tcodebase_community",
    "651": " SELECT p.title FROM posts p JOIN post_links pl1 ON p.Id = pl1.RelatedPostId JOIN post_links pl2 ON p.Id = pl2.RelatedPostId WHERE pl1.PostId = 12345 AND pl2.PostId = 67890 AND pl1.LinkTypeId = 1 AND pl2.LinkTypeId = 2 AND pl1.RelatedPostId <> pl2.RelatedPostId AND pl1.PostId <> pl2.PostId AND pl1.PostId = (SELECT PostId FROM post_links WHERE LinkTypeId = 1 AND RelatedPostId = 12345) AND pl2.PostId = (SELECT PostId FROM post_links WHERE LinkTypeId = 2 AND RelatedPostId = 67890); \t----- bird -----\tcodebase_community",
    "652": " SELECT p.Id, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013; \t----- bird -----\tcodebase_community",
    "653": " SELECT p.OwnerDisplayName FROM posts p JOIN (     SELECT post_id, MAX(view_count) AS max_view_count     FROM post_history     GROUP BY post_id ) ph ON p.Id = ph.post_id WHERE p.OwnerUserId IN (     SELECT Id     FROM users     ORDER BY Reputation DESC     LIMIT 1 ); \t----- bird -----\tcodebase_community",
    "654": " SELECT u.Display_Name, u.Location FROM users u JOIN tags t ON u.Id = t.Excerpt_Post_Id JOIN posts p ON t.Id = p.Tag_Id WHERE t.Tag_Name = 'hypothesis-testing' AND p.Post_Type_Id = 1; \t----- bird -----\tcodebase_community",
    "655": " SELECT p.title, l.link_type_id FROM posts p JOIN post_links pl ON p.id = pl.post_id JOIN post_links_link_type l ON pl.link_type_id = l.id WHERE p.title = 'What are principal component scores?'; \t----- bird -----\tcodebase_community",
    "656": " SELECT p.OwnerDisplayName FROM posts p JOIN (     SELECT post_id     FROM comments     ORDER BY score DESC     LIMIT 1 ) c ON p.Id = c.post_id JOIN posts AS parent_post ON p.ParentId = parent_post.Id WHERE parent_post.Score = (     SELECT MAX(score)     FROM posts     WHERE parent_id = parent_post.Id ); \t----- bird -----\tcodebase_community",
    "657": " SELECT u.Display_Name, u.Website_Url FROM users u JOIN votes v ON u.Id = v.User_Id JOIN posts p ON v.Post_Id = p.Id WHERE v.Vote_Type_Id = 8 ORDER BY v.Bounty_Amount DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "658": " SELECT p.Title, p.Popularity FROM posts p JOIN (     SELECT PostId, MAX(Popularity) AS MaxPopularity     FROM post_history     GROUP BY PostId ) ph ON p.Id = ph.PostId WHERE p.Popularity = ph.MaxPopularity ORDER BY p.Popularity DESC LIMIT 5; \t----- bird -----\tcodebase_community",
    "659": " SELECT COUNT(DISTINCT tags.Id) FROM tags JOIN tags_counts ON tags.Id = tags_counts.Tag_Id WHERE tags_counts.Count BETWEEN 5000 AND 7000; \t----- bird -----\tcodebase_community",
    "660": " SELECT p.OwnerUserId, p.Score FROM posts p JOIN (     SELECT PostId, MAX(Score) AS MaxScore     FROM comments     GROUP BY PostId ) c ON p.PostId = c.PostId WHERE p.Score = c.MaxScore ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "661": " SELECT u.Id, u.Reputation FROM users u JOIN votes v ON u.Id = v.User_Id WHERE v.Vote_Type_Id IS NOT NULL GROUP BY u.Id ORDER BY SUM(v.Bounty_Amount) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "662": " SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE YEAR(posts.CreationDate) = 2011 AND votes.VoteTypeId = 10 AND users.Reputation >= 100 AND posts.BountureAmount = 50; \t----- bird -----\tcodebase_community",
    "663": " SELECT MIN(users.Id) AS youngest_user_id FROM users WHERE users.Creation_Date = (SELECT MIN(posts.Creation_Date) FROM posts WHERE posts.Owner_User_Id = users.Id); \t----- bird -----\tcodebase_community",
    "664": " SELECT SUM(score) FROM comments WHERE post_id = (SELECT id FROM posts WHERE creation_date = '2010-07-19'); \t----- bird -----\tcodebase_community",
    "665": " SELECT AVG(monthly_links) FROM (     SELECT         YEAR(creation_date) AS year,         MONTH(creation_date) AS month,         COUNT(post_links.id) AS monthly_links     FROM         post_links     JOIN         posts ON post_links.post_id = posts.id     JOIN         users ON posts.owner_user_id = users.id     WHERE         posts.answer_count <= 2         AND YEAR(creation_date) = 2010     GROUP BY         year, month ) AS subquery; \t----- bird -----\tcodebase_community",
    "666": " SELECT p.Id, p.Score FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "667": " SELECT p.Title FROM posts p JOIN post_links pl ON p.Id = pl.PostId JOIN posts l ON pl.RelatedPostId = l.Id WHERE l.CreationDate = (SELECT MIN(CreationDate) FROM post_links) ORDER BY p.CreationDate ASC LIMIT 1; \t----- bird -----\tcodebase_community",
    "668": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.Post_Id = b.Id GROUP BY u.Id ORDER BY SUM(b.Score) DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "669": " SELECT MAX(votes.creation_date) AS first_vote_date FROM votes JOIN users ON votes.user_id = users.id JOIN posts ON votes.post_id = posts.id WHERE users.display_name = 'chl'; \t----- bird -----\tcodebase_community",
    "670": " SELECT MIN(posts.Creation_Date) AS youngest_post_date FROM posts JOIN users ON posts.Owner_User_Id = users.Id WHERE users.Id = (SELECT MIN(users.Id) FROM users); \t----- bird -----\tcodebase_community",
    "671": " SELECT u.Display_Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' GROUP BY u.Id HAVING COUNT(v.Id) = 1; \t----- bird -----\tcodebase_community",
    "672": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_location ON users.Id = users_location.User_Id JOIN tags_excerpts ON tags_excerpts.Excerpt_Post_Id = users.Id JOIN posts ON posts.Owner_UserId = users.Id JOIN post_history ON post_history.Post_Id = posts.Id JOIN comments ON comments.Post_Id = posts.Id JOIN comments_votes ON comments_votes.Comment_Id = comments.Id JOIN votes ON votes.Post_Id = posts.Id WHERE users_location.Country = 'United Kingdom' AND posts.Favorite_Count >= 4 GROUP BY users.Id; \t----- bird -----\tcodebase_community",
    "673": " SELECT AVG(votes.PostId) AS average_posts_voted FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Age = (SELECT MIN(Age) FROM users) GROUP BY users.Id; \t----- bird -----\tcodebase_community",
    "674": " SELECT u.Display_Name FROM users u JOIN (     SELECT User_Id     FROM votes     GROUP BY User_Id     ORDER BY SUM(Vote_Type_Id) DESC     LIMIT 1 ) v ON u.Id = v.User_Id \t----- bird -----\tcodebase_community",
    "675": " SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.User_Id WHERE users.Reputation > 2000 AND users.Views > 1000; \t----- bird -----\tcodebase_community",
    "676": " SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserIds WHERE v.VoteTypeId = 1 AND v.CreationDate >= date('now', '-1 year') AND u.Age > 18; \t----- bird -----\tcodebase_community",
    "677": " SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.Owner User Id = users.Id WHERE users.Display Name = 'Jay Stevens' AND YEAR(posts.Creation Date) = 2010; \t----- bird -----\tcodebase_community",
    "678": " SELECT p.Id, p.Title FROM posts p JOIN users u ON p.Owner User Id = u.Id WHERE u.Display Name = 'Harvey Motulsky' ORDER BY p.View Count DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "679": " SELECT p.Id, p.Title FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.VoteType = 'up' ORDER BY v.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "680": " SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.Owner_UserId = users.Id WHERE users.Display_Name = 'Stephen Turner'; \t----- bird -----\tcodebase_community",
    "681": " SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserIds JOIN post_views pv ON p.Id = pv.PostId WHERE p.CreationDate >= '2011-01-01' AND p.CreationDate < '2012-01-01' AND pv.Views > 20000 GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT pv.PostId) > 0; \t----- bird -----\tcodebase_community",
    "682": " SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 ORDER BY p.Score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "683": " SELECT     (COUNT(CASE WHEN users.Reputation > 1000 AND YEAR(users.CreationDate) = 2011 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM     posts JOIN     users ON posts.OwnerUserId = users.Id WHERE     YEAR(posts.CreationDate) = 2011; \t----- bird -----\tcodebase_community",
    "684": " SELECT COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_teenage_users FROM users JOIN users ON users.Age >= 13 AND users.Age < 19; \t----- bird -----\tcodebase_community",
    "685": " SELECT u.Display_Name, p.Views FROM users u JOIN posts p ON u.Id = p.Owner_User_Id WHERE p.Title = 'Computer Game Datasets' ORDER BY p.Creation_Date DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "686": " SELECT COUNT(posts.Id) FROM posts JOIN users ON posts.Owner_UserId = users.Id JOIN votes ON posts.Id = votes.Post_Id JOIN users ON votes.UserId = users.Id WHERE users.Views > (SELECT AVG(users.Views) FROM users) \t----- bird -----\tcodebase_community",
    "687": " SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN (     SELECT Post_Id, MAX(Score) AS max_score     FROM posts     GROUP BY Post_Id ) max_scores ON p.Id = max_scores.Post_Id WHERE c.Score = max_scores.max_score; \t----- bird -----\tcodebase_community",
    "688": " SELECT COUNT(posts.Id) FROM posts JOIN views ON posts.Id = views.PostId JOIN users ON views.UserId = users.Id WHERE views.ViewCount > 35000 AND users.Id!= votes.UserId GROUP BY posts.Id HAVING COUNT(votes.Id) = 0; \t----- bird -----\tcodebase_community",
    "689": " SELECT u.Display_Name, u.Location FROM users u JOIN posts p ON u.Id = p.Last_Editor_User_Id WHERE p.Id = 183 ORDER BY u.Last_Access_Date DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "690": " SELECT b.Name, b.Date FROM badges AS b JOIN (     SELECT User_Id     FROM users     WHERE Display_Name = 'Emmett'     LIMIT 1 ) AS u ON b.User_Id = u.User_Id ORDER BY b.Date DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "691": " SELECT COUNT(DISTINCT users.Id) AS adult_users_count FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Age >= 18 AND votes.VoteType = 'upvote' GROUP BY users.Id HAVING SUM(votes.VoteType) > 5000; \t----- bird -----\tcodebase_community",
    "692": " SELECT MAX(creation_date) - MIN(creation_date) AS time_to_badge FROM users WHERE display_name = 'Zolomon'; \t----- bird -----\tcodebase_community",
    "693": " SELECT u.Id, COUNT(c.Id) AS comment_count, COUNT(p.Id) AS post_count FROM users u JOIN posts p ON u.Id = p.Owner_UserId JOIN comments c ON p.Id = c.Post_Id WHERE u.Id = (     SELECT Id     FROM users     ORDER BY Creation_Date DESC     LIMIT 1 ) GROUP BY u.Id; \t----- bird -----\tcodebase_community",
    "694": " SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.User_Id = u.Id JOIN posts p ON c.Post_Id = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.Creation_Date DESC LIMIT 10; \t----- bird -----\tcodebase_community",
    "695": " SELECT COUNT(DISTINCT users.Id) AS num_users_awarded_citizen_patrol FROM users INNER JOIN badges ON users.Id = badges.User_Id WHERE badges.Name = 'Citizen Patrol'; \t----- bird -----\tcodebase_community",
    "696": " SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers'; \t----- bird -----\tcodebase_community",
    "697": " SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon'; \t----- bird -----\tcodebase_community",
    "698": " SELECT COUNT(c.Id) AS comments, COUNT(a.Id) AS answers FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Clustering 1D data' AND u.Id = (SELECT User_Id FROM users WHERE Display_Name = 'YourUsername'); \t----- bird -----\tcodebase_community",
    "699": " SELECT creation_date FROM users WHERE display_name = 'IrishStat'; \t----- bird -----\tcodebase_community",
    "700": " SELECT COUNT(*) FROM posts WHERE bounty_amount > 30; \t----- bird -----\tcodebase_community",
    "701": " SELECT u.Display_Name, COUNT(p.Id) * 100.0 / SUM(COUNT(p.Id)) OVER () AS percentage_above_50 FROM users u JOIN posts p ON u.Id = p.Owner_UserId WHERE u.Reputation >= (SELECT MAX(Reputation) FROM users) GROUP BY u.Display_Name HAVING COUNT(p.Id) > 0; \t----- bird -----\tcodebase_community",
    "702": " SELECT COUNT(*) FROM posts WHERE score < 20; \t----- bird -----\tcodebase_community",
    "703": " SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20; \t----- bird -----\tcodebase_community",
    "704": " SELECT tags.ExcerptPostId, tags.WikiPostId FROM tags WHERE tags.TagName ='sample'; \t----- bird -----\tcodebase_community",
    "705": " SELECT u.Reputation, v.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId = (     SELECT Id     FROM comments     WHERE Text = 'fine, you win :)' ) \t----- bird -----\tcodebase_community",
    "706": " SELECT comments.Text FROM comments JOIN post_history ON comments.Id = post_history.Id JOIN posts ON post_history.Post_Id = posts.Id WHERE posts.Title LIKE '%linear regression%' AND post_history.Post_History_Type_Id = 1; \t----- bird -----\tcodebase_community",
    "707": " SELECT c.Text, MAX(v.Score) AS highest_score FROM comments c JOIN posts p ON c.Post_Id = p.Id JOIN votes v ON p.Id = v.Post_Id WHERE p.Views BETWEEN 100 AND 150 GROUP BY c.Post_Id, c.Text ORDER BY highest_score DESC LIMIT 1; \t----- bird -----\tcodebase_community",
    "708": " SELECT u.Id, u.Reputation, u.CreationDate, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age FROM users u JOIN comments c ON u.Id = c.User Id WHERE c.Text LIKE '%website%'; \t----- bird -----\tcodebase_community",
    "709": " SELECT COUNT(DISTINCT comments.Post_Id) AS num_posts, COUNT(DISTINCT posts.Id) AS num_posts_with_view_count_below_5 FROM comments JOIN posts ON comments.Post_Id = posts.Id WHERE comments.Score = 0 AND posts.View_Count < 5; \t----- bird -----\tcodebase_community",
    "710": " SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.Post_Id = p.Id WHERE p.Comment_Count = 1 AND c.Score = 0; \t----- bird -----\tcodebase_community",
    "711": " SELECT COUNT(DISTINCT users.Id) FROM comments JOIN users ON comments.User_Id = users.Id WHERE comments.Score = 0 AND users.Age > 40; \t----- bird -----\tcodebase_community",
    "712": " SELECT p.Id, c.Text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item'; \t----- bird -----\tcodebase_community",
    "713": " SELECT SUM(votes.UpVotes) FROM votes JOIN comments ON votes.PostId = comments.PostId JOIN users ON votes.UserId = users.Id WHERE comments.Text = 'R is also lazy evaluated.' AND users.DisplayName = 'user_name'; \t----- bird -----\tcodebase_community",
    "714": " SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.User_Id = u.Id WHERE u.DisplayName = 'Harvey Motulsky'; \t----- bird -----\tcodebase_community",
    "715": " SELECT c.User Display Name FROM comments c JOIN votes v ON c.Id = v.Post Id WHERE c.Score BETWEEN 1 AND 5 AND v.Vote Type Id = 1 AND v.User Id = c.User Id AND v.Bounty Amount = 0; \t----- bird -----\tcodebase_community",
    "716": " SELECT     (         SELECT             COUNT(DISTINCT c.User_Id)         FROM             comments c             JOIN posts p ON c.Post_Id = p.Id             JOIN users u ON c.User_Id = u.Id         WHERE             c.Score BETWEEN 5 AND 10             AND u.UpVotes = 0     ) AS zero_up_votes_count    , COUNT(*) AS total_comments_count FROM     comments WHERE     c.Score BETWEEN 5 AND 10 \t----- bird -----\tcodebase_community",
    "717": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = '3-D Man'; \t----- bird -----\tsuperhero",
    "718": " SELECT COUNT(*) FROM superpower WHERE power_name = 'Super Strength'; \t----- bird -----\tsuperhero",
    "719": " SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200; \t----- bird -----\tsuperhero",
    "720": " SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(sp.id) > 15; \t----- bird -----\tsuperhero",
    "721": " SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'blue eyes'; \t----- bird -----\tsuperhero",
    "722": " SELECT colour.colour FROM colour JOIN hero_attribute ON hero_attribute.attribute_id = colour.id JOIN superhero ON superhero.id = hero_attribute.hero_id WHERE superhero.full_name = 'Apocalypse'; \t----- bird -----\tsuperhero",
    "723": " SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'blue eyes' AND power.power_name = 'Agility'; \t----- bird -----\tsuperhero",
    "724": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN attribute a1 ON ha1.attribute_id = a1.id JOIN attribute a2 ON ha2.attribute_id = a2.id WHERE a1.attribute_name = 'eye colour' AND a2.attribute_name = 'hair colour' AND a1.id = (SELECT id FROM attribute WHERE attribute_name = 'blue') AND a2.id = (SELECT id FROM attribute WHERE attribute_name = 'blond'); \t----- bird -----\tsuperhero",
    "725": " SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'; \t----- bird -----\tsuperhero",
    "726": " SELECT s.superhero_name, h.height_cm FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON h.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2 ON r.race_id = al2.id JOIN alignment al3 ON s.publisher_id = al3.id JOIN alignment al4 ON h.alignment_id = al4.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC; \t----- bird -----\tsuperhero",
    "727": " SELECT \"publisher_name\" FROM \"publisher\" WHERE \"id\" = (SELECT \"publisher_id\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron'); \t----- bird -----\tsuperhero",
    "728": " SELECT s.superhero_name, a.attribute_name, COUNT(*) AS popularity FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY s.superhero_name, a.attribute_name ORDER BY popularity DESC; \t----- bird -----\tsuperhero",
    "729": " SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'); \t----- bird -----\tsuperhero",
    "730": " SELECT s.superhero_name, s.full_name, s.gender_id, s.eye_colour_id, s.hair_colour_id, s.skin_colour_id, s.race_id, s.publisher_id, s.alignment_id FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON s.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON s.alignment_id = al.id WHERE a.attribute_name = 'Super Strength' AND p.publisher_name = 'Marvel Comics'; \t----- bird -----\tsuperhero",
    "731": " SELECT COUNT(DISTINCT superhero.id) AS num_dc_superheroes FROM superhero WHERE superhero.publisher_name = 'DC Comics'; \t----- bird -----\tsuperhero",
    "732": " SELECT s.publisher_name, MIN(s.height_cm) AS slowest_height FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name ='speed' GROUP BY s.publisher_id; \t----- bird -----\tsuperhero",
    "733": " SELECT COUNT(DISTINCT s.id) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'gold eyes' AND s.publisher_id = (     SELECT id     FROM publisher     WHERE publisher_name = 'Marvel Comics' );\t----- bird -----\tsuperhero",
    "734": " SELECT p.publisher_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON h.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2  ON r.race_id = al2.id JOIN alignment al3  ON s.alignment_id = al3.id JOIN publisher p ON al3.id = p.id WHERE s.superhero_name = 'Blue Beetle II'; \t----- bird -----\tsuperhero",
    "735": " SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde'); \t----- bird -----\tsuperhero",
    "736": " SELECT superhero.full_name, MIN(superhero_attribute.attribute_value) AS dumbest_score FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.attribute_name = 'intelligence' GROUP BY superhero.full_name; \t----- bird -----\tsuperhero",
    "737": " SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Copycat'; \t----- bird -----\tsuperhero",
    "738": " SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id WHERE h.attribute_id = (     SELECT id     FROM alignment     WHERE attribute_name = 'durability' ) AND h.attribute_value < 50; \t----- bird -----\tsuperhero",
    "739": " SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'death touch'; \t----- bird -----\tsuperhero",
    "740": " SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'female'); \t----- bird -----\tsuperhero",
    "741": " SELECT s.superhero_name, COUNT(hp.power_id) AS power_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY power_count DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "742": " SELECT COUNT(DISTINCT superhero.id) FROM superhero WHERE superhero.full_name = 'Vampire Superhero'; \t----- bird -----\tsuperhero",
    "743": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_self_interested, COUNT(*) FROM superhero WHERE hero_power.power_name ='self-interest' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'); \t----- bird -----\tsuperhero",
    "744": " SELECT publisher_name, COUNT(DISTINCT superhero_id) AS total_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher_name ORDER BY total_superheroes DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "745": " SELECT publisher_name FROM publisher WHERE id = (SELECT id FROM superhero WHERE superhero_name = 'Star Trek'); \t----- bird -----\tsuperhero",
    "746": " SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id \t----- bird -----\tsuperhero",
    "747": " SELECT COUNT(DISTINCT superhero.id) AS total_superheroes_without_full_name FROM superhero WHERE superhero.full_name IS NULL; \t----- bird -----\tsuperhero",
    "748": " SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.id = 75; \t----- bird -----\tsuperhero",
    "749": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Deathlok'; \t----- bird -----\tsuperhero",
    "750": " SELECT AVG(weight) AS average_weight FROM superhero WHERE gender = (SELECT id FROM gender WHERE gender = 'female'); \t----- bird -----\tsuperhero",
    "751": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Male'); \t----- bird -----\tsuperhero",
    "752": " SELECT superhero.full_name FROM superhero WHERE superhero.race.race = 'Alien'; \t----- bird -----\tsuperhero",
    "753": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.height BETWEEN 170 AND 190 AND a.attribute_name = 'eye colour' AND ha.attribute_value = 0; \t----- bird -----\tsuperhero",
    "754": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 56; \t----- bird -----\tsuperhero",
    "755": " SELECT full_name FROM superhero WHERE (superhero_name LIKE 'Demi-God%' OR superhero_name LIKE '%Demi-God%') AND gender_id IN (     SELECT id     FROM alignment     WHERE alignment = 'Demi-God' ); \t----- bird -----\tsuperhero",
    "756": " SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'bad'); \t----- bird -----\tsuperhero",
    "757": " SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.weight = 169 AND attribute.attribute_name = 'race'; \t----- bird -----\tsuperhero",
    "758": " SELECT h.hair_colour FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE h.height_cm = 185 AND a.attribute_name = 'hair colour'; \t----- bird -----\tsuperhero",
    "759": " SELECT s.full_name, c.colour FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON ha.attribute_id = c.id WHERE s.weight = (SELECT MAX(weight) FROM superhero) AND ha.attribute_name = 'eye_colour'; \t----- bird -----\tsuperhero",
    "760": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage FROM superhero WHERE height BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'); \t----- bird -----\tsuperhero",
    "761": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender') AND s.weight > (SELECT AVG(weight) * 0.79 FROM superhero) AND s.gender_id = (SELECT id FROM alignment WHERE attribute_name ='male'); \t----- bird -----\tsuperhero",
    "762": " SELECT superpower.power_name, COUNT(hero_power.hero_id) AS power_count FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY superpower.power_name ORDER BY power_count DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "763": " SELECT h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = 'Abomination'; \t----- bird -----\tsuperhero",
    "764": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1; \t----- bird -----\tsuperhero",
    "765": " SELECT COUNT(*) FROM hero_power WHERE power_name ='stealth'; \t----- bird -----\tsuperhero",
    "766": " SELECT s.full_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name ='strength' ORDER BY s.attribute_value DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "767": " SELECT AVG(h.weight) AS average_weight_no_skin_colour FROM superhero h WHERE h.skin_colour_id IS NULL; \t----- bird -----\tsuperhero",
    "768": " SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics'; \t----- bird -----\tsuperhero",
    "769": " SELECT s.superhero_name, MAX(hp.durability) AS max_durability FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id WHERE hp.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics'); \t----- bird -----\tsuperhero",
    "770": " SELECT c.colour AS eyes_colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN hero h ON ha.hero_id = h.id WHERE h.full_name = 'Abraham Sapien'; \t----- bird -----\tsuperhero",
    "771": " SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'flight'; \t----- bird -----\tsuperhero",
    "772": " SELECT s.full_name, c.colour FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'female') AND s.publisher_id = (SELECT id FROM publisher WHERE name = 'Dark Horse Comics') AND ha.attribute_name IN ('eye colour', 'hair colour','skin colour'); \t----- bird -----\tsuperhero",
    "773": " SELECT s.full_name, s.publisher_name FROM superhero s JOIN hero_attribute ea1 ON s.id = ea1.hero_id AND alignment.id = ea1.attribute_id JOIN hero_attribute ea2 ON s.id = ea1.hero_id AND alignment.id = ea2.attribute_id JOIN colour c1 ON alignment.id = c1.id AND ea1.attribute_value = c1.colour JOIN colour c2 ON alignment.id = c1.id AND ea2.attribute_value = c1.colour JOIN colour c3 ON alignment.id = c1.id AND ea1.attribute_value = c1.colour WHERE c1.colour = c2.colour AND c2.colour = c3.colour LIMIT 1; \t----- bird -----\tsuperhero",
    "774": " SELECT superhero.full_name FROM superhero WHERE superhero.superhero_name = 'A-Bomb'; \t----- bird -----\tsuperhero",
    "775": " SELECT AVG(CASE WHEN t1.gender_id = 1 AND t2.colour_id = 1 THEN 1 ELSE 0 END) * 100 AS percentage FROM superhero AS t1 JOIN hero_attribute AS t2 ON t1.id = t2.hero_id JOIN colour AS t3 ON t2.colour_id = t3.id WHERE t1.gender_id = 1 AND t3.colour = 'blue'; \t----- bird -----\tsuperhero",
    "776": " SELECT s.superhero_name, a.race FROM superhero s JOIN race r ON s.race_id = r.id JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id JOIN attribute a ON s.alignment_id = a.id WHERE s.superhero_name = 'Charles Chandler'; \t----- bird -----\tsuperhero",
    "777": " SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE superhero.superhero_name = 'Agent 13'; \t----- bird -----\tsuperhero",
    "778": " SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'adaptation'; \t----- bird -----\tsuperhero",
    "779": " SELECT COUNT(DISTINCT power_id) AS number_of_powers FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo'); \t----- bird -----\tsuperhero",
    "780": " SELECT h.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Hunter Zolomon'; \t----- bird -----\tsuperhero",
    "781": " SELECT s.height_cm FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'eye colour' AND a.colour = 'amber'; \t----- bird -----\tsuperhero",
    "782": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id WHERE ha1.attribute_id = (SELECT id FROM colour WHERE colour = 'black') AND ha2.attribute_id = (SELECT id FROM colour WHERE colour = 'black'); \t----- bird -----\tsuperhero",
    "783": " SELECT h.eye_colour FROM superhero AS h JOIN hero_attribute AS ha ON h.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name ='skin colour' AND a.attribute_value = 'gold'; \t----- bird -----\tsuperhero",
    "784": " SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'vampire' \t----- bird -----\tsuperhero",
    "785": " SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'neutral alignment' AND hero_attribute.attribute_value = 1; \t----- bird -----\tsuperhero",
    "786": " SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_id = (     SELECT id     FROM alignment     ORDER BY attribute_value DESC     LIMIT 1 ) AND attribute_name = 'Strength'; \t----- bird -----\tsuperhero",
    "787": " SELECT race.race, superhero.alignment FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks'; \t----- bird -----\tsuperhero",
    "788": " SELECT     COUNT(*) AS female_heroes_by_marvel FROM     superhero WHERE     gender = (SELECT id FROM gender WHERE gender_name = 'Female')     AND publisher_name = 'Marvel Comics';  -- Calculate the percentage SELECT     (female_heroes_by_marvel * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage FROM     (SELECT COUNT(*) AS female_heroes_by_marvel      FROM superhero      WHERE gender = (SELECT id FROM gender WHERE gender_name = 'Female')        AND publisher_name = 'Marvel Comics') AS subquery; \t----- bird -----\tsuperhero",
    "789": " SELECT AVG(weight) AS average_weight FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'alien'); \t----- bird -----\tsuperhero",
    "790": " SELECT SUM(weight_diff) AS weight_difference FROM (     SELECT         (CHARITIES.weight_kg - SUPERHEROES.weight_kg) AS weight_diff     FROM         superheroes     JOIN         hero_attribute     ON         superheroes.id = hero_attribute.hero_id     JOIN         attributes     ON         hero_attribute.attribute_id = attributes.id     JOIN         charities     ON         attributes.attribute_id = charities.id     WHERE         superheroes.full_name = 'Emil Blonsky'         AND charities.name = 'Charles Chandler' ) AS subquery; \t----- bird -----\tsuperhero",
    "791": " SELECT superhero.id, superhero.full_name, AVG(superhero.height_cm) AS average_height FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id GROUP BY superhero.id, superhero.full_name; \t----- bird -----\tsuperhero",
    "792": " SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Abomination'; \t----- bird -----\tsuperhero",
    "793": " SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'god/eternal' AND superhero.gender_id = (SELECT id FROM alignment WHERE alignment.alignment ='male'); \t----- bird -----\tsuperhero",
    "794": " SELECT superhero.full_name, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_attribute.attribute_value ON superhero.id = hero_attribute.hero_id AND hero_attribute.attribute_id = attribute.id JOIN colour.colour ON hero_attribute.colour_id = colour.id WHERE attribute.attribute_name ='speed' ORDER BY superhero.height_cm ASC LIMIT 1; \t----- bird -----\tsuperhero",
    "795": " SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral'); \t----- bird -----\tsuperhero",
    "796": " SELECT a.attribute_name, h.attribute_value FROM hero_attribute h JOIN superhero s ON h.hero_id = s.id JOIN attribute a ON h.attribute_id = a.id WHERE s.superhero_name = '3-D Man'; \t----- bird -----\tsuperhero",
    "797": " SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id WHERE ha1.attribute_value = 1 AND ha2.attribute_value = 2 AND ha1.attribute_id = (SELECT id FROM colour WHERE colour = 'blue') AND ha2.attribute_id = (SELECT id FROM colour WHERE colour = 'brown'); \t----- bird -----\tsuperhero",
    "798": " SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'); \t----- bird -----\tsuperhero",
    "799": " SELECT COUNT(DISTINCT superhero.id) FROM superhero WHERE superhero.publisher_id IS NULL; \t----- bird -----\tsuperhero",
    "800": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS blue_eyes_percentage FROM superhero WHERE hero_attribute_value = (SELECT id FROM colour WHERE colour = 'blue'); \t----- bird -----\tsuperhero",
    "801": " SELECT     COUNT(CASE WHEN g.gender = 1 THEN 1 END) AS male_superheroes,     COUNT(CASE WHEN g.gender = 2 THEN 1 END) AS female_superheroes FROM     superhero g \t----- bird -----\tsuperhero",
    "802": " SELECT MAX(height_cm) AS tallest_superhero FROM superhero; \t----- bird -----\tsuperhero",
    "803": " SELECT \"power id\" FROM \"superpower\" WHERE \"power name\" = 'cryokinesis'; \t----- bird -----\tsuperhero",
    "804": " SELECT superhero.full_name FROM superhero WHERE superhero.id = 294; \t----- bird -----\tsuperhero",
    "805": " SELECT s.full_name FROM superhero s WHERE s.weight IS NULL; \t----- bird -----\tsuperhero",
    "806": " SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.full_name = 'Karen Beecher-Duncan'; \t----- bird -----\tsuperhero",
    "807": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr'; \t----- bird -----\tsuperhero",
    "808": " SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE superhero.weight = 108 AND superhero.height = 188 LIMIT 1; \t----- bird -----\tsuperhero",
    "809": " SELECT publisher_name FROM superhero WHERE id = 38; \t----- bird -----\tsuperhero",
    "810": " SELECT s.race, MAX(h.attribute_value) AS max_attribute_value FROM superhero AS s JOIN hero_attribute AS h ON s.id = h.hero_id JOIN alignment AS a ON h.attribute_id = a.id GROUP BY s.race ORDER BY max_attribute_value DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "811": " SELECT a.attribute_name, s.power_name FROM superhero AS s JOIN hero_attribute AS h_a ON s.id = h_a.hero_id JOIN attribute AS a ON h_a.attribute_id = a.id JOIN superpower AS sp ON s.id = sp.hero_id WHERE s.superhero_name = 'Atom IV'; \t----- bird -----\tsuperhero",
    "812": " SELECT s.full_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'blue eyes'; \t----- bird -----\tsuperhero",
    "813": " SELECT AVG(attribute_value) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'neutral'); \t----- bird -----\tsuperhero",
    "814": " SELECT s.skin_colour FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_value = 100; \t----- bird -----\tsuperhero",
    "815": " SELECT COUNT(*) FROM superhero WHERE gender = 'female' AND alignment = 'good'; \t----- bird -----\tsuperhero",
    "816": " SELECT s.superhero_name, h.attribute_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id WHERE h.attribute_value BETWEEN 75 AND 80; \t----- bird -----\tsuperhero",
    "817": " SELECT s.race FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id WHERE a1.attribute_name = 'hair colour' AND a1.attribute_value = 1 AND s.gender_id = 1 AND s.full_name LIKE '%male%'; \t----- bird -----\tsuperhero",
    "818": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_superheroes FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'bad'); \t----- bird -----\tsuperhero",
    "819": " SELECT     COUNT(*) FILTER (WHERE hero.weight IS NULL) AS missing_weight_count,     COUNT(*) FILTER (WHERE hero.eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) AS blue_eyed_count,     COUNT(*) FILTER (WHERE hero.eye_colour_id IS NULL) AS no_eye_colour_count FROM     superhero AS hero \t----- bird -----\tsuperhero",
    "820": " SELECT full_name FROM superhero WHERE superhero_name = 'Hulk'; \t----- bird -----\tsuperhero",
    "821": " SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Ajax'; \t----- bird -----\tsuperhero",
    "822": " SELECT COUNT(*) FROM superhero WHERE skin_colour_id = (     SELECT id     FROM colour     WHERE colour = 'green' ) AND villain = 1; \t----- bird -----\tsuperhero",
    "823": " SELECT COUNT(*) FROM superhero WHERE gender = (SELECT id FROM gender WHERE gender = 'female'); \t----- bird -----\tsuperhero",
    "824": " SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'control wind' ORDER BY s.full_name ASC; \t----- bird -----\tsuperhero",
    "825": " SELECT s.full_name, a.attribute_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE s.power_id = (     SELECT id FROM superpower WHERE power_name = 'Phoenix Force' ) AND a.attribute_name = 'gender'; \t----- bird -----\tsuperhero",
    "826": " SELECT MAX(weight_kg) AS heaviest_superhero FROM superhero WHERE publisher_name = 'DC Comics'; \t----- bird -----\tsuperhero",
    "827": " SELECT AVG(superhero.height_cm) AS average_height FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.name = 'Dark Horse Comics' AND superhero.race_id!= (SELECT id FROM race WHERE name = 'Human'); \t----- bird -----\tsuperhero",
    "828": " SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name ='speed' GROUP BY s.superhero_name ORDER BY MAX(a.attribute_value) DESC LIMIT 10; \t----- bird -----\tsuperhero",
    "829": " SELECT publisher_name, COUNT(superhero.id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.publisher_id IN (SELECT id FROM publisher WHERE publisher_name IN ('DC Comics', 'Marvel Comics')) GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1; \t----- bird -----\tsuperhero",
    "830": " SELECT a.attribute_name FROM attribute a JOIN hero_attribute ha ON a.id = ha.attribute_id JOIN superhero s ON ha.hero_id = s.id WHERE s.full_name = 'Black Panther' AND s.race_id = (SELECT id FROM race WHERE race = 'Black') AND s.gender_id = (SELECT id FROM alignment WHERE alignment = 'Male') AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel') AND s.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral') ORDER BY a.attribute_value ASC LIMIT 1; \t----- bird -----\tsuperhero",
    "831": " SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.full_name = 'Abomination'; \t----- bird -----\tsuperhero",
    "832": " SELECT superhero.full_name, superhero.height_cm FROM superhero WHERE superhero.height_cm = (     SELECT MAX(height_cm)     FROM superhero );\t----- bird -----\tsuperhero",
    "833": " SELECT \"superhero name\" FROM \"superhero\" WHERE \"superhero name\" = 'Charles Chandler'; \t----- bird -----\tsuperhero",
    "834": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_name = 'George Lucas') AS percentage_female_superheroes FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'female'); \t----- bird -----\tsuperhero",
    "835": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes FROM superhero WHERE hero_power.power_name = 'good'; \t----- bird -----\tsuperhero",
    "836": " SELECT COUNT(DISTINCT superhero.id) FROM superhero WHERE superhero.full_name LIKE '%John%'; \t----- bird -----\tsuperhero",
    "837": " SELECT s.id AS hero_id, MIN(h.attribute_value) AS min_attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id GROUP BY s.id ORDER BY min_attribute_value ASC LIMIT 1; \t----- bird -----\tsuperhero",
    "838": " SELECT full_name FROM superhero WHERE superhero_name = 'Alien'; \t----- bird -----\tsuperhero",
    "839": " SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE s.weight < 100 AND a.attribute_name = 'brown eyes'; \t----- bird -----\tsuperhero",
    "840": " SELECT h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = 'Aquababy'; \t----- bird -----\tsuperhero",
    "841": " SELECT weight, race FROM superhero WHERE id = 40; \t----- bird -----\tsuperhero",
    "842": " SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'neutral'); \t----- bird -----\tsuperhero",
    "843": " SELECT s.id FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'intelligence'; \t----- bird -----\tsuperhero",
    "844": " SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.full_name = 'Blackwulf'; \t----- bird -----\tsuperhero",
    "845": " SELECT s.power_name FROM superhero AS s JOIN (     SELECT hero_id, AVG(height_cm) AS avg_height     FROM superhero     GROUP BY hero_id ) AS avg_height ON s.id = avg_height.hero_id WHERE s.height_cm > (avg_height.avg_height * 0.8); \t----- bird -----\tsuperhero",
    "846": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 20 AND q.position = 1 GROUP BY d.driver_id HAVING MAX(q.position) = 1; \t----- bird -----\tformula_1",
    "847": " SELECT d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 19 AND r.round = 2 AND lt.time = (     SELECT MAX(time)     FROM lap_times     WHERE race_id = r.race_id     AND lap = (         SELECT MAX(lap)         FROM lap_times         WHERE race_id = r.race_id     ) ) AND r.url = (     SELECT url     FROM seasons     WHERE race_id = 19     AND round = 2 ); \t----- bird -----\tformula_1",
    "848": " SELECT r.year FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE r.Circuit_Id IN (SELECT circuit_id FROM circuits WHERE location = 'Shanghai'); \t----- bird -----\tformula_1",
    "849": " SELECT races.name FROM races JOIN circuits ON races.Circuit_Id = circuits.circuit_Id WHERE circuits.circuit_reference_name = 'Circuit de Barcelona-Catalunya'; \t----- bird -----\tformula_1",
    "850": " SELECT r.name FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.location = 'Germany'; \t----- bird -----\tformula_1",
    "851": " SELECT c.circuit_reference_name, r.name FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN constructors con ON r.constructor_id = con.constructor_id WHERE con.constructor_reference_name = 'Renault'; \t----- bird -----\tformula_1",
    "852": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN seasons AS s ON r.race_id = s.race_id WHERE s.url LIKE '%2010%' AND (r.Circuit.country NOT IN ('Asia', 'Europe') AND r.Circuit.location NOT LIKE '%Asia%' AND r.Circuit.location NOT LIKE '%Europe%'); \t----- bird -----\tformula_1",
    "853": " SELECT r.name FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.location LIKE '%Spain%'\t----- bird -----\tformula_1",
    "854": " SELECT location, latitude, longitude FROM circuits WHERE country = 'Australia' AND name = 'Australian Grand Prix'; \t----- bird -----\tformula_1",
    "855": " SELECT r.name FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.circuit_reference_name = 'Sepang International Circuit'; \t----- bird -----\tformula_1",
    "856": " SELECT r.name, s.url FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE r.circuit_id = (SELECT circuit_id FROM circuits WHERE circuit_reference_name = 'Sepang International Circuit') AND MONTH(r.date) = 9 AND YEAR(r.date) = 2022; \t----- bird -----\tformula_1",
    "857": " SELECT latitude, longitude FROM circuits WHERE name = 'Abu Dhabi Grand Prix'; \t----- bird -----\tformula_1",
    "858": " SELECT c.country FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN constructor_results cr ON r.race_id = cr.race_id JOIN constructors con ON cr.constructor_id = con.constructor_id WHERE r.race_id = 24 AND cr.points = 1; \t----- bird -----\tformula_1",
    "859": " SELECT q1_time FROM qualifying WHERE driver_id = (     SELECT id     FROM drivers     WHERE forename = 'Bruno'     AND surname = 'Senna' ) AND race_id = 354; \t----- bird -----\tformula_1",
    "860": " SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON q.race_id = r.race_id WHERE r.race_id = 355 AND q.qualify_1 = 'Q2' AND q.time = '0:01:40'; \t----- bird -----\tformula_1",
    "861": " SELECT d.forename, d.surname, q.position FROM drivers d JOIN qualifying q ON d.driver_id = q.driver_id WHERE q.race_id = 903 AND q.position = 3 AND q.qualifying_1 = '0:01:54'; \t----- bird -----\tformula_1",
    "862": " SELECT COUNT(DISTINCT driverId) FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007 AND driverId NOT IN (     SELECT driverId     FROM lapTimes     WHERE raceId = races.raceId );\t----- bird -----\tformula_1",
    "863": " SELECT s.url FROM seasons s JOIN races r ON s.race_id = r.race_id WHERE r.number = 901; \t----- bird -----\tformula_1",
    "864": " SELECT COUNT(DISTINCT drivers.driverID) AS num_drivers_finished FROM races JOIN drivers ON races.driverID = drivers.driverID WHERE races.date = '2015-11-29'; \t----- bird -----\tformula_1",
    "865": " SELECT     d.driver_id,     d.forename,     d.surname,     d.date_of_birth,     d.nationality FROM     drivers d JOIN     races r ON d.driver_id = r.driver_id WHERE     r.race_id = 592 ORDER BY     TIMESTAMP('now', 'localtime') - TIMESTAMP(d.date_of_birth, 'localtime') LIMIT 1; \t----- bird -----\tformula_1",
    "866": " SELECT d.forename, d.surname, d.url FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 161 AND lt.time = '0:01:27'; \t----- bird -----\tformula_1",
    "867": " SELECT d.forename, d.surname, c.nationality FROM results r JOIN races e ON r.race_id = e.race_id JOIN drivers d ON r.driver_id = d.driver_id JOIN constructor_results cr ON d.driver_id = cr.driver_id AND e.constructor_id = cr.constructor_id JOIN constructors c ON cr.constructor_id = c.constructor_id WHERE e.race_id = 933 ORDER BY r.fastest_lap_speed DESC LIMIT 1; \t----- bird -----\tformula_1",
    "868": " SELECT location FROM circuits WHERE name = 'Malaysian Grand Prix'; \t----- bird -----\tformula_1",
    "869": " SELECT c.ConstructorReferenceName, c.url FROM constructors c JOIN constructor_results cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructor_results WHERE raceId = 9); \t----- bird -----\tformula_1",
    "870": " SELECT q1_time FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345; \t----- bird -----\tformula_1",
    "871": " SELECT d.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.raceId = 347 AND r.q2Time = '0:01:15'; \t----- bird -----\tformula_1",
    "872": " SELECT d.forename, d.surname, d.code FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 45 AND q.position = 3 AND q.qualifying_1 = '0:01:33'; \t----- bird -----\tformula_1",
    "873": " SELECT r.time FROM races r JOIN lap_times lt ON r.race_id = lt.race_id JOIN drivers d ON lt.driver_id = d.driver_id WHERE r.race_id = 743 AND d.forename = 'Bruce' AND d.surname = 'McLaren'; \t----- bird -----\tformula_1",
    "874": " SELECT d.forename, d.surname, r.name FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN driver_standings stand ON ds.constructor_reference_name = stand.constructor_reference_name JOIN status st ON stand.status_id = st.status_id JOIN results r ON stand.driver_id = r.driver_id AND stand.constructor_id = r.constructor_id WHERE r.race_id = (SELECT race_id FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006) AND stand.position = 2; \t----- bird -----\tformula_1",
    "875": " SELECT s.url FROM seasons s JOIN races r ON s.race_id = r.race_id WHERE r.number = 901; \t----- bird -----\tformula_1",
    "876": " SELECT COUNT(DISTINCT driverId) FROM races WHERE date = '2015-11-29' AND position = 0; \t----- bird -----\tformula_1",
    "877": " SELECT d.forename, d.surname, MIN(d.date_of_birth) AS youngest_age FROM drivers d JOIN races r ON d.driver_id = r.driver_id WHERE r.race_id = 872 GROUP BY d.forename, d.surname; \t----- bird -----\tformula_1",
    "878": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id WHERE r.race_id = 348 ORDER BY lt.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "879": " SELECT d.nationality FROM drivers d JOIN results r ON d.driver_id = r.driver_id JOIN lap_times lt ON r.driver_id = lt.driver_id JOIN races r2 ON lt.race_id = r2.race_id WHERE r2.fastest_lap_time = (SELECT MAX(fastest_lap_time) FROM lap_times) LIMIT 1; \t----- bird -----\tformula_1",
    "880": " SELECT race_id FROM races WHERE driver_id = (SELECT id FROM drivers WHERE driver_reference_name = 'Paul di Resta'); \t----- bird -----\tformula_1",
    "881": " SELECT COUNT(DISTINCT drivers.driver_id) * 100.0 / COUNT(races.race_id) AS completion_rate FROM drivers JOIN races ON drivers.driver_id = races.driver_id WHERE races.date = '1983-07-16'; \t----- bird -----\tformula_1",
    "882": " SELECT MAX(year) AS first_singapore_grand_prix_year FROM races WHERE name = 'Singapore Grand Prix'; \t----- bird -----\tformula_1",
    "883": " SELECT COUNT(*) AS total_races FROM races WHERE year = 2005; \t----- bird -----\tformula_1",
    "884": " SELECT r.name FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.year = (SELECT MIN(year) FROM seasons) AND s.month = (SELECT MIN(month) FROM seasons WHERE year = (SELECT MIN(year) FROM seasons)); \t----- bird -----\tformula_1",
    "885": " SELECT r.name, r.date FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.year = 1999 ORDER BY r.date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "886": " SELECT year, COUNT(*) AS race_count FROM races GROUP BY year ORDER BY race_count DESC LIMIT 1; \t----- bird -----\tformula_1",
    "887": " SELECT r.name FROM races AS r JOIN seasons AS s ON r.race_id = s.race_id WHERE s.year = 2017 AND s.year <> 2000; \t----- bird -----\tformula_1",
    "888": " SELECT c.name, c.location FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.year = 1 AND r.name = 'European Grand Prix' LIMIT 1; \t----- bird -----\tformula_1",
    "889": " SELECT MAX(races.year) AS last_british_grand_prix_year FROM races JOIN seasons ON races.race_id = seasons.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.name = 'Brands Hatch' AND seasons.url LIKE '%British Grand Prix%'; \t----- bird -----\tformula_1",
    "890": " SELECT COUNT(DISTINCT seasons.race_ID) AS num_seasons_hosted FROM seasons JOIN races ON seasons.race_ID = races.race_ID JOIN circuits ON races.Circuit_ID = circuits.circuit_id WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom'; \t----- bird -----\tformula_1",
    "891": " SELECT d.forename, d.surname, rs.position FROM drivers d JOIN driver_standings rs ON d.driver_id = rs.driver_id JOIN seasons s ON rs.race_id = s.race_id WHERE s.url = 'http://www.f1live.net/2010/singapore' ORDER BY rs.position; \t----- bird -----\tformula_1",
    "892": " SELECT d.forename, d.surname, r.points FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN results r ON ds.driverId = r.driverID WHERE r.points = (SELECT MAX(r2.points) FROM results r2) ORDER BY r.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "893": " SELECT d.forename, d.surname, r.points FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN race r ON ds.constructorReferenceName = r.raceID WHERE r.name = '2017 Chinese Grand Prix' LIMIT 3; \t----- bird -----\tformula_1",
    "894": " SELECT l.driverId, r.name, l.time, l.milliseconds FROM lap_times l JOIN races r ON l.raceId = r.raceId WHERE l.milliseconds = (SELECT MIN(milliseconds) FROM lap_times WHERE raceId = r.raceId) ORDER BY l.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "895": " SELECT AVG(lt.time) AS average_lap_time FROM lap_times lt JOIN drivers d ON lt.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.race_id = 1 AND r.name = '2009 Malaysian Grand Prix'; \t----- bird -----\tformula_1",
    "896": " SELECT     (COUNT(DISTINCT r.driverId) - COUNT(DISTINCT r.driverId WHERE r.position = 1)) * 100.0 / COUNT(DISTINCT r.driverId) AS percentage FROM     races r WHERE     r.year >= 2010 AND     r.driverId IN (         SELECT             d.driverId         FROM             drivers d         WHERE             d.forename = 'Lewis' AND d.surname = 'Hamilton'     ); \t----- bird -----\tformula_1",
    "897": " SELECT d.forename, d.surname, c.nationality, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverID = r.driverID JOIN constructor_results cr ON r.raceID = cr.raceID JOIN constructors c ON cr.constructorID = c.constructorID WHERE r.status = 'Winner' GROUP BY d.forename, d.surname, c.nationality ORDER BY max_points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "898": " SELECT drivers.forename, drivers.surname, drivers.date_of_birth FROM drivers JOIN races ON drivers.driver_id = races.driver_id JOIN seasons ON races.race_id = seasons.race_id WHERE drivers.nationality = 'Japanese' AND races.year = (SELECT MIN(year) FROM seasons) AND drivers.date_of_birth = (SELECT MIN(date_of_birth) FROM drivers WHERE nationality = 'Japanese'); \t----- bird -----\tformula_1",
    "899": " SELECT c.circuit_reference_name, COUNT(r.race_id) AS race_count FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuit_reference_name HAVING race_count = 4; \t----- bird -----\tformula_1",
    "900": " SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE circuits.country = 'USA' AND races.year = 2006; \t----- bird -----\tformula_1",
    "901": " SELECT r.name, c.name AS circuit_name, r.location FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005; \t----- bird -----\tformula_1",
    "902": " SELECT r.name, r.year, r.round, r.CircuitId, r.date, r.time, r.url FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN lap_times lt ON r.raceId = lt.raceId AND d.driverId = lt.driverId WHERE d.number < 20 AND lt.position < 20; \t----- bird -----\tformula_1",
    "903": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN driver_standings AS ds ON r.race_id = ds.constructor_reference_name JOIN drivers AS d ON ds.driver_id = d.driver_id WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND r.circuit_id = (SELECT circuit_id FROM circuits WHERE circuit_reference_name = 'Sepang International Circuit'); \t----- bird -----\tformula_1",
    "904": " SELECT r.name, s.year FROM races r JOIN results res ON r.race_id = res.race_id JOIN drivers d ON res.driver_id = d.driver_id JOIN constructors c ON res.constructor_id = c.constructor_id JOIN status st ON res.status_id = st.status_id WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND res.laps = (SELECT MAX(laps) FROM results WHERE driver_id = d.driver_id); \t----- bird -----\tformula_1",
    "905": " SELECT AVG(points) FROM results JOIN drivers ON results.driver_id = drivers.driver_id JOIN seasons ON results.race_id = seasons.race_id WHERE seasons.year = 2000 AND drivers.forename = 'Eddie' AND drivers.surname = 'Irvine'; \t----- bird -----\tformula_1",
    "906": " SELECT r.name AS first_race, s.status AS status, r.points AS first_race_points FROM races r JOIN seasons s ON r.race_id = s.race_id JOIN drivers d ON r.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year = (SELECT MIN(year) FROM races); \t----- bird -----\tformula_1",
    "907": " SELECT r.name, s.country FROM races r JOIN seasons s ON r.race_id = s.race_id WHERE s.year = 2017 ORDER BY r.date; \t----- bird -----\tformula_1",
    "908": " SELECT r.name, s.year, c.location FROM races r JOIN seasons s ON r.race_id = s.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE r.laps = (SELECT MAX(laps) FROM races); \t----- bird -----\tformula_1",
    "909": " SELECT COUNT(DISTINCT races.race_id) * 100.0 / (SELECT COUNT(DISTINCT seasons.race_id) FROM seasons) AS percentage_germany_races FROM races JOIN circuits ON races.circuit_id = circuits.circuit_id JOIN seasons ON races.race_id = seasons.race_id WHERE circuits.country = 'Germany'; \t----- bird -----\tformula_1",
    "910": " SELECT location, latitude, longitude FROM circuits WHERE circuit_reference_name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "911": " SELECT \"location\" FROM \"circuits\" WHERE \"circuit reference name\" = 'Silverstone Circuit' OR \"circuit reference name\" = 'Hockenheimring' OR \"circuit reference name\" = 'Hungaroring' ORDER BY latitude DESC LIMIT 1; \t----- bird -----\tformula_1",
    "912": " SELECT \"circuit reference name\" FROM \"circuits\" WHERE \"circuit Id\" = (SELECT \"circuit Id\" FROM \"races\" WHERE \"name\" = 'Marina Bay Street Circuit'); \t----- bird -----\tformula_1",
    "913": " SELECT MAX(alt) AS highest_altitude_country FROM circuits JOIN status ON circuits.circuit_id = status.circuit_id WHERE circuits.country = 'Your_Desired_Country'; \t----- bird -----\tformula_1",
    "914": " SELECT COUNT(*) FROM drivers WHERE code IS NULL; \t----- bird -----\tformula_1",
    "915": " SELECT d.nationality FROM drivers d JOIN races r ON d.driver_id = r.driver_id JOIN seasons s ON r.race_id = s.race_id WHERE d.date_of_birth < (SELECT MIN(date_of_birth) FROM drivers) ORDER BY d.date_of_birth ASC LIMIT 1; \t----- bird -----\tformula_1",
    "916": " SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'Italian'; \t----- bird -----\tformula_1",
    "917": " SELECT forename, surname, nationality FROM drivers WHERE driver_reference_name = 'Anthony Davidson'; \t----- bird -----\tformula_1",
    "918": " SELECT forename FROM drivers WHERE driver_reference_name = 'Lewis Hamilton'; \t----- bird -----\tformula_1",
    "919": " SELECT circuits.circuit_reference_name FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE races.name = '2009 Spanish Grand Prix'; \t----- bird -----\tformula_1",
    "920": " SELECT DISTINCT seasons.url FROM seasons JOIN races ON seasons.race_id = races.race_id JOIN circuits ON races.circuit_id = circuits.circuit_id WHERE circuits.circuit_reference_name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "921": " SELECT r.name FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.circuit_reference_name = 'Silverstone Circuit'; \t----- bird -----\tformula_1",
    "922": " SELECT r.time FROM races AS r JOIN circuits AS c ON r.Circuit_Id = c.circuit_id WHERE c.location = 'Abu Dhabi' AND r.year BETWEEN 2010 AND 2019; \t----- bird -----\tformula_1",
    "923": " SELECT COUNT(DISTINCT r.race_id) FROM races AS r JOIN circuits AS c ON r.circuit_id = c.circuit_id WHERE c.location LIKE '%Italy%'; \t----- bird -----\tformula_1",
    "924": " SELECT r.name, r.date FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id WHERE c.circuit_reference_name = 'Barcelona-Catalunya'; \t----- bird -----\tformula_1",
    "925": " SELECT c.circuit_reference_name, c.name, c.location, c.country, c.latitude, c.longitude, c.alt, c.url FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009; \t----- bird -----\tformula_1",
    "926": " SELECT MAX(lt.time) AS fastest_lap_time FROM races r JOIN lap_times lt ON r.race_id = lt.race_id JOIN drivers d ON r.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "927": " SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverID = r.driverID JOIN lap_times lt ON r.driverID = lt.driverID AND r.lap = lt.lap JOIN status st ON r.statusId = st.statusId WHERE st.status = 'Fastest Lap'; \t----- bird -----\tformula_1",
    "928": " SELECT d.forename, d.surname FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN status s ON ds.status_id = s.status_id JOIN results r ON ds.driver_id = r.driverId JOIN races rc ON r.race_id = rc.race_id WHERE rc.name = 'Canadian Grand Prix' AND rc.year = 2007 ORDER BY r.position ASC LIMIT 1; \t----- bird -----\tformula_1",
    "929": " SELECT r.name FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "930": " SELECT s.race_id, s.position FROM driver_standings ds JOIN drivers d ON ds.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY s.position DESC LIMIT 1; \t----- bird -----\tformula_1",
    "931": " SELECT MAX(milliseconds) AS fastest_lap_speed FROM lap_times JOIN races ON lap_times.race_id = races.race_id WHERE races.name = '2009 Spanish Grand Prix'; \t----- bird -----\tformula_1",
    "932": " SELECT r.year FROM drivers d JOIN races r ON d.driverID = r.driverID WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "933": " SELECT T2.position FROM races AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.name = '2008 Chinese Grand Prix' AND T2.forename = 'Lewis'; \t----- bird -----\tformula_1",
    "934": " SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverID = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.name = 'Australian Grand Prix' AND r.year = 1989 AND q.number = 4; \t----- bird -----\tformula_1",
    "935": " SELECT COUNT(DISTINCT drivers.driverID) FROM drivers JOIN races ON drivers.driverID = races.driverID WHERE races.name = '2008 Australian Grand Prix'; \t----- bird -----\tformula_1",
    "936": " SELECT lap_times.time FROM lap_times JOIN drivers ON lap_times.driver_id = drivers.driver_id JOIN races ON drivers.driver_id = races.driver_id WHERE races.name = '2008 Australian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "937": " SELECT l.time FROM lap_times l JOIN drivers d ON l.driver_id = d.driver_id JOIN races r ON l.race_id = r.race_id WHERE r.url = '2008 AustChineseralian Grand Prix' AND d.forename = 'Second-placed Driver Name' AND d.surname = 'Second-placed Driver Surname' AND l.position = 2; \t----- bird -----\tformula_1",
    "938": " SELECT d.forename, d.surname, d.nationality FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN status s ON ds.status_id = s.status_id JOIN seasons sp ON ds.race_id = sp.race_id WHERE sp.url = 'http://example.com/2008-australian-grand-prix' AND s.status = 'Champion'; \t----- bird -----\tformula_1",
    "939": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN races ON drivers.driver_id = races.driver_id WHERE races.name = 'Australian Grand Prix' AND YEAR(races.date) = 2008 AND drivers.nationality = 'UN'; \t----- bird -----\tformula_1",
    "940": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN races ON drivers.driver_id = races.driver_id JOIN races_results ON races.race_id = races_results.race_id JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.url = 'http://www.f1live.net/race/2008-chinese-grand-prix/' AND races_results.status = 'finish'; \t----- bird -----\tformula_1",
    "941": " SELECT SUM(points) FROM results JOIN drivers ON results.driver_id = drivers.driver_id JOIN constructors ON drivers.constructor_id = constructors.constructor_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "942": " SELECT AVG(milliseconds / 1000.0) AS avg_fastest_lap_time_seconds FROM (     SELECT r.race_id, d.driver_id, r.fastest_lap_time_milliseconds     FROM races r     JOIN drivers d ON r.driver_id = d.driver_id     JOIN results rs ON r.race_id = rs.race_id AND d.driver_id = rs.driver_id     WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ) AS subquery; \t----- bird -----\tformula_1",
    "943": " SELECT race_id FROM races WHERE name = '2008 Australian Grand Prix'; \t----- bird -----\tformula_1",
    "944": "  To find out how much faster in percentage the champion is than the driver who finished the race last in the 2008 Australian Grand Prix, we need to follow these steps:  1. Identify the relevant tables and columns. 2. Filter the data for the 2008 Australian Grand Prix. 3. Extract the champion's and the last-placed driver's positions, points, and lap times. 4. Calculate the percentage difference between the champion's and the last-placed driver's positions.  Here's the SQLite statement to achieve this:  [SQL] SELECT     c.name AS champion,     d.forename,     d.surnamet----- bird -----\tformula_1",
    "945": " SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide, Australia'; \t----- bird -----\tformula_1",
    "946": " SELECT circuits.location, circuits.latitude, circuits.longitude FROM circuits JOIN races ON circuits.circuit_id = races.circuit_id WHERE races.country = 'US'; \t----- bird -----\tformula_1",
    "947": " SELECT COUNT(DISTINCT driver_id) FROM drivers WHERE nationality = 'British' AND date_of_birth > '1980-01-01'; \t----- bird -----\tformula_1",
    "948": " SELECT MAX(points) AS max_points_of_british_constructors FROM constructor_standings WHERE constructor_id IN (     SELECT id FROM constructors     WHERE nationality = 'British' ); \t----- bird -----\tformula_1",
    "949": " SELECT c.ConstructorReferenceName, rs.points FROM constructors c JOIN constructor_results rs ON c.ConstructorId = rs.constructorId ORDER BY rs.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "950": " SELECT c.name FROM constructors c JOIN constructor_results cr ON c.constructor_id = cr.constructor_id JOIN seasons s ON cr.race_id = s.race_id WHERE s.race_id = 291 AND cr.points = 0; \t----- bird -----\tformula_1",
    "951": " SELECT COUNT(DISTINCT c.constructor_id) FROM constructors c JOIN constructor_results cr ON c.constructor_id = cr.constructor_id JOIN races r ON cr.race_id = r.race_id WHERE c.nationality = 'Japanese' AND cr.points = 0 AND r.year IN (SELECT DISTINCT year FROM races WHERE r.round = 1 AND r.round = 2); \t----- bird -----\tformula_1",
    "952": " SELECT c.ConstructorReferenceName, c.points FROM constructor_results cr JOIN constructor c ON cr.constructorId = c.constructorId WHERE cr.status = '1' GROUP BY c.ConstructorReferenceName ORDER BY c.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "953": " SELECT COUNT(DISTINCT c.constructor_id) FROM constructors c JOIN races r ON r.race_id = c.constructor_id WHERE c.nationality = 'France' AND r.lap_number > 50; \t----- bird -----\tformula_1",
    "954": " SELECT COUNT(DISTINCT drivers.driver_id) * 100.0 / (SELECT COUNT(*) FROM drivers WHERE drivers.nationality = 'Japanese' AND drivers.date_of_birth BETWEEN '2007-01-01' AND '2009-12-31') AS completion_percentage FROM drivers JOIN races ON drivers.driver_id = races.driver_id JOIN seasons ON races.race_id = seasons.race_id WHERE drivers.nationality = 'Japanese' AND seasons.year BETWEEN 2007 AND 2009; \t----- bird -----\tformula_1",
    "955": " SELECT     s.year,     AVG(r.time) AS average_time_in_seconds FROM     seasons s JOIN     races r ON s.race_id = r.race_id JOIN     results r ON r.race_id = s.race_id AND r.driver_id = d.driver_id AND r.constructor_id = c.constructor_id JOIN     drivers d ON d.driver_id = r.driver_id JOIN     constructors c ON c.constructor_id = r.constructor_id WHERE     s.year < 1975 GROUP BY     s.year; \t----- bird -----\tformula_1",
    "956": " SELECT d.forename, d.surname FROM drivers d JOIN driver_standings ds ON d.driverID = ds.driverId JOIN seasons s ON ds.raceId = s.raceId WHERE s.year >= 1975 AND ds.position = 2; \t----- bird -----\tformula_1",
    "957": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers WHERE drivers.nationality = 'Italian' AND drivers.race_id NOT IN (     SELECT races.race_id     FROM races     WHERE races.status_id = (         SELECT status_id         FROM status         WHERE status_name = 'Finished'     ) );\t----- bird -----\tformula_1",
    "958": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id WHERE lt.time = (     SELECT MAX(time)     FROM lap_times     WHERE driver_id = d.driver_id ); \t----- bird -----\tformula_1",
    "959": " SELECT ds.race_id FROM driver_standings ds JOIN seasons s ON ds.race_id = s.race_id WHERE ds.position = 1 AND s.year = 2009; \t----- bird -----\tformula_1",
    "960": " SELECT race_id FROM races WHERE name = '2009 Spanish Grand Prix'; \t----- bird -----\tformula_1",
    "961": " SELECT r.name, s.year FROM races r JOIN seasons s ON r.race_id = s.race_id ORDER BY r.time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "962": " SELECT COUNT(DISTINCT drivers.driver_id) * 100.0 / (SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers WHERE drivers.date_of_birth < '1985-01-01' AND drivers.date_of_birth > '1975-01-01') AS percentage_drivers_born_before_1985 FROM drivers JOIN races ON drivers.driver_id = races.driver_id JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.year BETWEEN 2000 AND 2005 AND races.lap_number > 50 AND drivers.date_of_birth < '1985-01-01' AND drivers.date_of_birth > '1975-01-01'; \t----- bird -----\tformula_1",
    "963": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN lap_times ON drivers.driver_id = lap_times.driver_id JOIN races ON lap_times.race_id = races.race_id JOIN seasons ON races.race_id = seasons.race_id WHERE drivers.nationality = 'French' AND lap_times.time < '02:00:00'; \t----- bird -----\tformula_1",
    "964": " SELECT d.forename, d.surname, d.nationality FROM drivers d JOIN constructors c ON d.driverId = c.driverId WHERE c.nationality = 'America'; \t----- bird -----\tformula_1",
    "965": " SELECT races.race_id FROM races JOIN seasons ON races.race_id = seasons.race_id WHERE seasons.url LIKE '%2009%';\t----- bird -----\tformula_1",
    "966": " SELECT COUNT(DISTINCT drivers.driverID) FROM drivers JOIN races ON drivers.driverID = races.driverID WHERE races.raceID = 18; \t----- bird -----\tformula_1",
    "967": " SELECT     d.forename,     d.surname,     r.position,     COUNT(c.nationality = 'Netherlands') AS netherlands_drivers FROM     drivers d JOIN     races r ON d.driverID = r.driverID JOIN     constructor_standings cs ON d.driverID = cs.driverId AND cs.constructorId = r.constructorId JOIN     constructors c ON cs.constructorId = c.constructorId GROUP BY     d.forename,     d.surname,     r.position ORDER BY     position ASC LIMIT 3; \t----- bird -----\tformula_1",
    "968": " SELECT \"driver reference name\" FROM \"drivers\" WHERE \"driver reference name\" = 'Robert Kubica'; \t----- bird -----\tformula_1",
    "969": " SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND date_of_birth = '1980-01-01'; \t----- bird -----\tformula_1",
    "970": " SELECT d.forename, d.surname, l.lap FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE d.nationality = 'Germany' AND d.date_of_birth BETWEEN '1980-01-01' AND '1990-12-31' AND l.position = 1 ORDER BY l.lap ASC LIMIT 3; \t----- bird -----\tformula_1",
    "971": " SELECT d.forename, d.surname, d.date_of_birth, d.nationality FROM drivers d JOIN constructor_results cr ON d.driver_id = cr.driver_id JOIN constructors c ON cr.constructor_id = c.constructor_id WHERE c.nationality = 'Germany' ORDER BY d.date_of_birth ASC LIMIT 1; \t----- bird -----\tformula_1",
    "972": " SELECT d.driver_id, d.code FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id WHERE YEAR(r.date_of_birth) = 1971 AND l.time = (SELECT MAX(time) FROM lap_times WHERE race_id = r.race_id) \t----- bird -----\tformula_1",
    "973": " SELECT d.forename, d.surname, l.time FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE c.country = 'Spain' AND d.date_of_birth < '1982-01-01' AND l.time = (SELECT MAX(time) FROM lap_times WHERE race_id = r.race_id); \t----- bird -----\tformula_1",
    "974": " SELECT s.url, r.year, lt.time FROM seasons s JOIN races r ON s.race_id = r.race_id JOIN lap_times lt ON r.race_id = lt.race_id WHERE lt.time = (SELECT MIN(time) FROM lap_times WHERE race_id = r.race_id) ORDER BY r.year DESC LIMIT 1; \t----- bird -----\tformula_1",
    "975": " SELECT s.year, MIN(lt.milliseconds) AS lowest_lap_time_ms FROM seasons s JOIN races r ON s.race_id = r.race_id JOIN lap_times lt ON r.race_id = lt.race_id AND r.driver_id = lt.driver_id GROUP BY s.year ORDER BY lowest_lap_time_ms ASC LIMIT 1; \t----- bird -----\tformula_1",
    "976": " SELECT d.driver_id, r.time FROM results r JOIN lap_times lt ON r.race_id = lt.race_id AND r.driver_id = lt.driver_id JOIN drivers d ON r.driver_id = d.driver_id WHERE lt.lap = 1 ORDER BY r.time DESC LIMIT 5; \t----- bird -----\tformula_1",
    "977": " SELECT COUNT(*) FROM races WHERE race_id BETWEEN 50 AND 100 AND status_id = (SELECT status_id FROM status WHERE status = 'Disqualified'); \t----- bird -----\tformula_1",
    "978": " SELECT c.location, c.latitude, c.longitude FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id WHERE r.location = 'Austria' GROUP BY c.location, c.latitude, c.longitude HAVING COUNT(DISTINCT r.race_id) = (     SELECT COUNT(DISTINCT race_id)     FROM races     WHERE location = 'Austria' ); \t----- bird -----\tformula_1",
    "979": " SELECT r.name, COUNT(DISTINCT d.driver_id) AS finishers_count FROM races r JOIN drivers d ON r.driver_id = d.driver_id GROUP BY r.name ORDER BY finishers_count DESC LIMIT 1; \t----- bird -----\tformula_1",
    "980": " SELECT d.forename, d.surname, d.nationality, d.date_of_birth FROM drivers d JOIN qualifying q ON d.driver_id = q.driver_id JOIN races r ON q.race_id = r.race_id WHERE r.race_id = 23 AND q.lap = 2 \t----- bird -----\tformula_1",
    "981": " SELECT r.year, r.name, r.date, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN qualifying q ON r.raceId = q.raceId WHERE d.dateOfBirth = (SELECT MIN(dateOfBirth) FROM drivers) AND r.year = (SELECT MIN(year) FROM races); \t----- bird -----\tformula_1",
    "982": " SELECT COUNT(DISTINCT drivers.driver_id) FROM drivers JOIN driver_standings ON drivers.driver_id = driver_standings.driverId JOIN seasons ON driver_standings.race_id = seasons.race_id JOIN status ON driver_standings.status_id = status.status_id WHERE status.status = 'puncture' AND drivers.nationality = 'American'; \t----- bird -----\tformula_1",
    "983": " SELECT c.name AS constructor_name, MAX(r.points) AS highest_points_to_date FROM constructors c JOIN constructor_results rr ON c.constructor_id = rr.constructor_id JOIN races r ON rr.race_id = r.race_id WHERE r.year = (SELECT MAX(year) FROM seasons) AND c.country = 'Italy' GROUP BY c.name ORDER BY highest_points_to_date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "984": " SELECT c.ConstructorReferenceName, c.url FROM constructors c JOIN constructor_results cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId GROUP BY c.ConstructorReferenceName, c.url ORDER BY SUM(cr.points) DESC LIMIT 1; \t----- bird -----\tformula_1",
    "985": " SELECT d.forename, d.surname, l.time FROM drivers d JOIN lap_times l ON d.driver_id = l.driver_id JOIN races r ON l.race_id = r.race_id WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time ASC LIMIT 1; \t----- bird -----\tformula_1",
    "986": " SELECT r.time FROM races r JOIN lap_times lt ON r.race_id = lt.race_id JOIN drivers d ON lt.driver_id = d.driver_id WHERE lt.lap = 1 ORDER BY r.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "987": " SELECT AVG(r.fastest_lap_time) AS avg_fastest_lap_time FROM races r JOIN drivers d ON r.driver_id = d.driver_id JOIN constructor_results cr ON r.race_id = cr.race_id JOIN constructors c ON cr.constructor_id = c.constructor_id WHERE r.url LIKE '%2006 United States Grand Prix%' GROUP BY d.driver_id ORDER BY avg_fastest_lap_time DESC LIMIT 10; \t----- bird -----\tformula_1",
    "988": " SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pit_stops p ON d.driver_id = p.driver_id JOIN races r ON d.driver_id = r.driver_id JOIN seasons s ON r.race_id = s.race_id WHERE d.nationality = 'Germany' AND d.date_of_birth BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.forename, d.surname ORDER BY avg_pit_stop_duration ASC LIMIT 3; \t----- bird -----\tformula_1",
    "989": " SELECT d.forename, d.surname, r.time FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN race_results rr ON ds.driver_id = rr.driver_id JOIN races r ON rr.race_id = r.race_id WHERE r.name = 'Canadian Grand Prix' AND YEAR(r.date) = 2008 ORDER BY r.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "990": " SELECT c.constructor_reference_name, c.url FROM constructor_results cr JOIN constructor c ON cr.constructor_id = c.constructor_id JOIN seasons s ON cr.race_id = s.race_id WHERE s.url LIKE '%2009 Singapore Grand Prix%' AND cr.points = (SELECT MAX(points) FROM constructor_results); \t----- bird -----\tformula_1",
    "991": " SELECT d.forename, d.surname, d.date_of_birth FROM drivers d JOIN (     SELECT driver_id     FROM drivers     WHERE nationality = 'Austria'     AND date_of_birth BETWEEN '1981-01-01' AND '1991-12-31' ) sub ON d.driver_id = sub.driver_id \t----- bird -----\tformula_1",
    "992": " SELECT d.forename, d.surname, 'https://de.wikipedia.org/wiki/' || d.forename || '_' || d.surname AS wikipedia_link, d.date_of_birth FROM drivers d JOIN constructor_standings cs ON d.driver_id = cs.driver_id JOIN seasons s ON cs.race_id = s.race_id WHERE d.nationality = 'German' AND d.date_of_birth BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY d.date_of_birth DESC; \t----- bird -----\tformula_1",
    "993": " SELECT location, country, latitude, longitude FROM circuits WHERE circuit_reference_name = 'Hungaroring'; \t----- bird -----\tformula_1",
    "994": " SELECT cs.name, cs.nationality FROM constructor_results cr JOIN constructor cs ON cr.constructor_id = cs.constructor_id WHERE cr.race_id IN (     SELECT r.race_id     FROM races r     WHERE r.name = 'Monaco Grand Prix'     AND r.year BETWEEN 1980 AND 2010 ) AND cr.points > 0 ORDER BY cr.points DESC LIMIT 1; \t----- bird -----\tformula_1",
    "995": " SELECT AVG(d.points) AS average_score FROM drivers d JOIN driver_standings ds ON d.driver_id = ds.driverId JOIN seasons s ON ds.race_id = s.race_id WHERE s.url LIKE '%Turkish Grand Prix%' AND d.forename = 'Lewis'; \t----- bird -----\tformula_1",
    "996": " SELECT AVG(YEAR(date)) AS avg_races_per_year FROM (SELECT race_id FROM races WHERE year BETWEEN 2000 AND 2009 AND race_id IN (SELECT race_id FROM races WHERE year BETWEEN 2000 AND 2009)) AS subquery; \t----- bird -----\tformula_1",
    "997": " SELECT nationality, COUNT(*) AS driver_count FROM drivers GROUP BY nationality ORDER BY driver_count DESC LIMIT 1; \t----- bird -----\tformula_1",
    "998": " SELECT SUM(points) AS total_points_91st_ranked_driver FROM results JOIN drivers ON results.driver_id = drivers.driver_id JOIN status ON results.status_id = status.status_id WHERE drivers.forename = '91st Ranked Driver' AND status.status = 'Victory'; \t----- bird -----\tformula_1",
    "999": " SELECT r.name FROM races r JOIN results res ON r.race_id = res.race_id JOIN lap_times lt ON res.driver_id = lt.driver_id AND res.lap = lt.lap JOIN drivers d ON lt.driver_id = d.driver_id WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND res.position = 1 AND lt.time = (SELECT MAX(time) FROM lap_times WHERE driver_id = d.driver_id); \t----- bird -----\tformula_1",
    "1000": " SELECT r.name, c.location FROM races r JOIN circuits c ON r.Circuit_Id = c.circuit_id ORDER BY r.date DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1001": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN qualifying q ON lt.driver_id = q.driver_id JOIN races r ON q.race_id = r.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE c.name = 'Marina Bay Street Circuit' AND r.year = 2008 AND q.position = 1 ORDER BY lt.time DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1002": " SELECT forename, surname, nationality FROM drivers WHERE date_of_birth = (SELECT MIN(date_of_birth) FROM drivers) ORDER BY date_of_birth ASC LIMIT 1; \t----- bird -----\tformula_1",
    "1003": " SELECT     dt.driver_id,     dt.lap,     dt.position,     dt.time,     dt.milliseconds,     ps.stop FROM     lap_times dt JOIN     pit_stops ps ON dt.driver_id = ps.driver_id WHERE     dt.race_id = (SELECT race_id FROM seasons WHERE url = 'https://www.f1official.com/en/grandprix/2022/canada') AND     dt.year = (SELECT year FROM seasons WHERE url = 'https://www.f1official.com/en/grandprix/2022/canada') GROUP BY     dt.driver_id,     dt.lap,     dt.position,     dt.time,     dt.milliseconds,     ps.stop HAVING     COUNT(ps.stop) = (         SELECT             MAX(accidents)         FROM             (                 SELECT                     COUNT(ps.stop) AS accidents                 FROM                     lap_times dt                 JOIN                     pit_stops ps ON dt.driver_id = ps.driver_id                 WHERE                     dt.race_id = (SELECT race_id FROM seasons WHERE url = 'https://www.f1official.com/en/grandprix/2022/canada')                 AND                     dt.year = (SELECT year FROM seasons WHERE url = 'https://www.f1official.com/en/grandprix/2022/canada')                 GROUP BY                     dt.driver_id             )     ) \t----- bird -----\tformula_1",
    "1004": " SELECT d.forename, d.surname, SUM(r.wins) AS total_wins FROM drivers d JOIN races r ON d.driverID = r.driverID JOIN constructor_standings cs ON r.constructorId = cs.constructorId WHERE d.dateOfBirth = (SELECT MIN(dateOfBirth) FROM drivers) GROUP BY d.forename, d.surname ORDER BY total_wins DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1005": " SELECT MAX(duration) AS longest_pit_stop_time FROM pit_stops; \t----- bird -----\tformula_1",
    "1006": " SELECT MAX(time) AS fastest_lap_time FROM lap_times WHERE race_id = (SELECT race_id FROM seasons WHERE url = 'https://example.com/race'); \t----- bird -----\tformula_1",
    "1007": " SELECT MAX(duration) AS longest_pit_stop_time FROM pit_stops WHERE driver_id = (SELECT driver_id FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'); \t----- bird -----\tformula_1",
    "1008": " SELECT lap, stop FROM pit_stops WHERE driver_id = (     SELECT driver_id     FROM qualifying     WHERE name = 'Lewis Hamilton'     AND race_id = (         SELECT race_id         FROM races         WHERE year = 2011         AND name = 'Australian Grand Prix'     ) ) \t----- bird -----\tformula_1",
    "1009": " SELECT pit_stops.driver_id, pit_stops.stop, pit_stops.lap, pit_stops.time, pit_stops.duration, pit_stops.milliseconds FROM pit_stops JOIN races ON pit_stops.race_id = races.race_id JOIN drivers ON pit_stops.driver_id = drivers.driver_id WHERE races.name = '2011 Australian Grand Prix'; \t----- bird -----\tformula_1",
    "1010": " SELECT MAX(time) AS lap_record FROM lap_times JOIN drivers ON lap_times.driver_id = drivers.driver_id JOIN races ON drivers.driver_id = races.driver_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "1011": " SELECT d.forename, d.surname FROM drivers d JOIN lap_times lt ON d.driver_id = lt.driver_id JOIN races r ON lt.race_id = r.race_id JOIN results res ON r.race_id = res.race_id AND d.driver_id = res.driver_id WHERE res.position = 1 ORDER BY lt.time ASC LIMIT 20; \t----- bird -----\tformula_1",
    "1012": " SELECT c.circuit_reference_name, c.name, c.location, c.country, r.year, r.round FROM races r JOIN circuits c ON r.circuit_id = c.circuit_id WHERE r.driver_id = (     SELECT driver_id     FROM qualifying     WHERE number = 1     AND constructor_id = (         SELECT constructor_id         FROM constructors         WHERE reference_name = 'Lewis Hamilton'     ) ) ORDER BY r.year, r.round, c.position; \t----- bird -----\tformula_1",
    "1013": " SELECT MAX(time) AS lap_record FROM lap_times WHERE race_id = (SELECT id FROM seasons WHERE url = 'https://www.f1live.net/races/2022/austrian-grand-prix'); \t----- bird -----\tformula_1",
    "1014": " SELECT c.name, r.name AS race_name, lt.lap AS lap_record FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN lap_times lt ON r.race_id = lt.race_id WHERE c.location LIKE '%Italy%' GROUP BY c.name, r.name; \t----- bird -----\tformula_1",
    "1015": " SELECT r.name AS race_name, l.time AS lap_record FROM races r JOIN lap_times l ON r.race_id = l.race_id JOIN circuits c ON r.circuit_id = c.circuit_id WHERE c.name = 'Austrian Grand Prix Circuit' GROUP BY r.name ORDER BY lap_record DESC LIMIT 1; \t----- bird -----\tformula_1",
    "1016": " SELECT     pit_stops.time,     pit_stops.duration FROM     races JOIN     lap_times ON races.race_id = lap_times.race_id JOIN     drivers ON lap_times.driver_id = drivers.driver_id JOIN     constructors ON lap_times.constructor_id = constructors.constructor_id JOIN     pit_stops ON lap_times.driver_id = pit_stops.driver_id AND lap_times.lap = pit_stops.stop WHERE     races.name = 'Austrian Grand Prix Circuit' AND     lap_times.time = (         SELECT             MAX(time)         FROM             lap_times         WHERE             races.race_id = lap_times.race_id     ); \t----- bird -----\tformula_1",
    "1017": " SELECT c.location, c.latitude, c.longitude FROM circuits c JOIN races r ON c.circuit_id = r.circuit_id JOIN lap_times lt ON r.race_id = lt.race_id AND lt.lap = 1 JOIN results res ON lt.driver_id = res.driver_id AND lt.constructor_id = res.constructor_id WHERE res.time = '1:29.488' GROUP BY c.circuit_id, c.location; \t----- bird -----\tformula_1",
    "1018": " SELECT AVG(milliseconds) AS average_milliseconds FROM pit_stops JOIN drivers ON pit_stops.driver_id = drivers.driver_id WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'; \t----- bird -----\tformula_1",
    "1019": " SELECT AVG(milliseconds) AS average_lap_time_italy FROM lap_times JOIN circuits ON lap_times.race_id = circuits.race_id WHERE circuits.country = 'Italy'; \t----- bird -----\tformula_1",
    "1020": " SELECT player_api_id, MAX(overall_rating) AS highest_overall_rating FROM Player Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1021": " SELECT MAX(height) AS tallest_player_height, player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1022": " SELECT pa.preferred_foot FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.potential = (SELECT MIN(potential) FROM Player) ORDER BY pa.preferred_foot = 'left' LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1023": " SELECT COUNT(DISTINCT player_api_id) FROM Player WHERE overall_rating BETWEEN 60 AND 65 AND (     SELECT COUNT(DISTINCT match_api_id)     FROM Match     WHERE home_player_1 = player_api_id     OR home_player_2 = player_api_id     OR home_player_3 = player_api_id     OR home_player_4 = player_api_id     OR home_player_5 = player_api_id     OR home_player_6 = player_api_id     OR home_player_7 = player_api_id     OR home_player_8 = player_api_id     OR home_player_9 = player_api_id     OR home_player_10 = player_api_id     OR home_player_11 = player_api_id ) > 0 AND (     SELECT COUNT(DISTINCT match_api_id)     FROM Match     WHERE away_player_1 = player_api_id     OR away_player_2 = player_api_id     OR away_player_3 = player_api_id     OR away_player_4 = player_api_id     OR away_player_5 = player_api_id     OR away_player_6 = player_api_id     OR away_player_7 = player_api_id     OR away_player_8 = player_api_id     OR away_player_9 = player_api_id     OR away_player_10 = player_api_id     OR away_player_11 = player_api_id ) > 0 \t----- bird -----\teuropean_football_2",
    "1024": " SELECT pa.player_api_id, pa.overall_rating FROM PlayerAttributes pa JOIN (     SELECT player_api_id, MAX(crossing) AS max_crossing     FROM PlayerAttributes     GROUP BY player_api_id ) max_crossing ON pa.player_api_id = max_crossing.player_api_id ORDER BY max_crossing DESC LIMIT 5; \t----- bird -----\teuropean_football_2",
    "1025": " SELECT l.name, SUM(m.goals) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2016' GROUP BY l.name ORDER BY total_goals DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1026": " SELECT h.team_long_name, COUNT(m.id) AS lost_matches FROM Team h JOIN Match m ON h.team_api_id = m.home_team_api_id WHERE m.season = '2016' GROUP BY h.team_long_name ORDER BY lost_matches ASC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1027": " SELECT pa.player_name, COUNT(ma.penalties) AS total_penalties FROM PlayerAttributes pa JOIN Match m ON pa.home_player_11 = m.home_player_11 OR pa.away_player_11 = m.away_player_11 JOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id JOIN League l ON t.team_federation_international_football_association_api_id = l.team_federation_international_football_association_api_id GROUP BY pa.player_name ORDER BY total_penalties DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1028": " SELECT t2.team_short_name, COUNT(t1.match_id) AS matches_won FROM Match t1 JOIN Team t2 ON t1.away_team_api_id = t2.team_api_id JOIN TeamAttributes t2_attributes ON t2.team_api_id = t2_attributes.team_api_id WHERE t1.season = '2010' AND t2.country_id = (SELECT id FROM Country WHERE name = 'Scotland') GROUP BY t2.team_short_name ORDER BY matches_won DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1029": " SELECT t1.team_long_name, t1.build_Up_Play_Speed FROM TeamAttributes AS t1 JOIN Team AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t2.team_long_name IN (     SELECT team_long_name     FROM Team     ORDER BY build_Up_Play_Speed DESC     LIMIT 4 ) ORDER BY t1.build_Up_Play_Speed DESC; \t----- bird -----\teuropean_football_2",
    "1030": " SELECT l.name, COUNT(m.id) AS draw_matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2016' AND m.stage = 3 -- Stage 3 represents a draw GROUP BY l.name ORDER BY draw_matches DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1031": " SELECT p.player_name, p.birthday, p.height, p.weight, p.overall_rating, p.potential, p.preferred_foot, p.attacking_work_rate, p.defensive_work_rate, p.crossing, p.finishing, p.heading_accuracy, p.short_passing, p.volleys, p.dribbling, p.curve, p.free_kick_accuracy, p.long_passing, p.ball_control, p.acceleration, p.sprint_speed, p.agility, p.reactions, p.balance, p.shot_power, p.jumping, p.stamina, p.strength, p.long_shots, p.aggression, p.interceptions, p.positioning, p.vision, p.penalties, p.marking, p.standing_tackle, p.sliding_tackle, p.goalkeep_diving, p.goalkeep_handling, p.goalkeep_kicking, p.goalkeep_positioning, p.goalkeep_reflexes FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND YEAR(p.birthday) BETWEEN 2013 AND 2015; \t----- bird -----\teuropean_football_2",
    "1032": " SELECT l.name, COUNT(m.id) AS total_matches FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY total_matches DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1033": " SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01' AND '1995-12-31'; \t----- bird -----\teuropean_football_2",
    "1034": " SELECT player_api_id, MAX(overall_rating) AS highest_overall_rating FROM Player Attributes WHERE YEAR(date) = 2010 GROUP BY player_api_id ORDER BY highest_overall_rating DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1035": " SELECT t.team_fifa_api_id, t.team_name FROM Team t JOIN TeamAttributes ta ON t.team_api_id = ta.team_api_id WHERE ta.build_up_play_speed > 50 AND ta.build_up_play_speed < 60 GROUP BY t.team_fifa_api_id, t.team_name HAVING COUNT(DISTINCT ta.build_up_play_speed) > 0; \t----- bird -----\teuropean_football_2",
    "1036": " SELECT t.team_long_name FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE ta.build_up_play_passing > (SELECT AVG(build_up_play_passing) FROM TeamAttributes WHERE YEAR(match_date) = 2012) AND m.season = '2012'; \t----- bird -----\teuropean_football_2",
    "1037": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player WHERE birthday BETWEEN '1987-01-01' AND '1992-12-31') AS percentage FROM Player WHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01' AND '1992-12-31'; \t----- bird -----\teuropean_football_2",
    "1038": " SELECT     l.name AS league_name,     SUM(m.goals) AS total_goals FROM     League l JOIN     Match m ON l.id = m.league_id GROUP BY     l.name ORDER BY     total_goals ASC LIMIT 5; \t----- bird -----\teuropean_football_2",
    "1039": " SELECT AVG(long_shots) AS average_long_shots FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag'); \t----- bird -----\teuropean_football_2",
    "1040": " SELECT p.player_name, AVG(pa.heading_accuracy) AS avg_heading_accuracy FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1041": " SELECT t.team_long_name, t.team_short_name FROM Team AS t JOIN TeamAttributes AS ta ON t.team_api_id = ta.team_api_id JOIN Match AS m ON t.team_api_id = m.home_team_api_id OR t.team_api_id = m.away_team_api_id WHERE ta.build_Up_Play_Dribbling_Class = 'normal' AND YEAR(m.date) = 2014 AND ta.chance_creation_passing < (     SELECT AVG(chance_creation_passing)     FROM TeamAttributes     WHERE YEAR(Match.date) = 2014 ) ORDER BY ta.chance_creation_passing DESC; \t----- bird -----\teuropean_football_2",
    "1042": " SELECT     l.name AS league_name,     AVG(m.home_player_10 + m.away_player_10) AS avg_goals_difference FROM     League l JOIN     Match m ON l.id = m.league_id WHERE     m.season = '2009/2010' GROUP BY     l.id HAVING     AVG(m.home_player_10) > AVG(m.away_player_10); \t----- bird -----\teuropean_football_2",
    "1043": " SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'; \t----- bird -----\teuropean_football_2",
    "1044": " SELECT p.player_name, p.birthyear, p.birthmonth FROM Player p WHERE p.birthyear = 1970 AND p.birthmonth = '10'; \t----- bird -----\teuropean_football_2",
    "1045": " SELECT \"attacking work rate\" FROM \"Player Attributes\" WHERE \"player api id\" = (SELECT \"player api id\" FROM \"Player\" WHERE \"player name\" = 'Franco Zennaro'); \t----- bird -----\teuropean_football_2",
    "1046": " SELECT MAX(build_Up_Play_Positioning_Class) AS ado_den_haag_team_freedom_of_movement_in_1st_two_thirds_of_pitch FROM Team_Attributes WHERE team_federation_international_football_association_api_id = (     SELECT id FROM Team     WHERE team_long_name = 'ADO Den Haag' ) AND build_Up_Play_Positioning_Class LIKE '1st two thirds of pitch%'; \t----- bird -----\teuropean_football_2",
    "1047": " SELECT `overall_rating` FROM `Player Attributes` WHERE `player api id` = (     SELECT `player api id`     FROM `Player`     WHERE `player name` = 'Francois Affolter' ) AND `date` = '18/09/2014'; \t----- bird -----\teuropean_football_2",
    "1048": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT player_api_id     FROM Player     WHERE player_name = 'Gabriel Tamas' ) AND date = '2011-01-01'; \t----- bird -----\teuropean_football_2",
    "1049": " SELECT COUNT(MATCH.id) FROM MATCH JOIN LEAGUE ON MATCH.league_id = LEAGUE.id JOIN COUNTRY ON LEAGUE.country_id = COUNTRY.id WHERE COUNTRY.name = 'Scotland' AND LEAGUE.name = 'Scotland Premier League' AND MATCH.season = '2015/2016'; \t----- bird -----\teuropean_football_2",
    "1050": " SELECT pa.preferred_foot FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.country_id JOIN Country c ON l.id = c.id WHERE p.birthday = (SELECT MIN(birthday) FROM Player) AND t.team_long_name = 'Youngest Team'; \t----- bird -----\teuropean_football_2",
    "1051": " SELECT player_api_id, player_name, potential FROM Player WHERE potential = (SELECT MAX(potential) FROM Player); \t----- bird -----\teuropean_football_2",
    "1052": " SELECT COUNT(*) FROM Player WHERE weight < 130 AND preferred_foot IN (     SELECT preferred_foot     FROM Player     WHERE preferred_foot IS NOT NULL     AND attacking = 1 );\t----- bird -----\teuropean_football_2",
    "1053": " SELECT DISTINCT t.team_short_name FROM TeamAttributes ta JOIN Team t ON ta.team_federation_international_football_association_api_id = t.team_federation_international_football_association_api_id WHERE ta.chance_creation_passing_class = 'Risky'; \t----- bird -----\teuropean_football_2",
    "1054": " SELECT \"defensive_work_rate\" FROM \"Player Attributes\" WHERE \"player api id\" = (SELECT \"player api id\" FROM \"Player\" WHERE \"player name\" = 'David Wilson'); \t----- bird -----\teuropean_football_2",
    "1055": " SELECT MAX(overall_rating) AS highest_overall_rating, player_name FROM Player JOIN PlayerAttributes ON Player.player_api_id = PlayerAttributes.player_api_id WHERE PlayerAttributes.overall_rating = (SELECT MAX(overall_rating) FROM PlayerAttributes) AND player_name IN (SELECT player_name FROM Player WHERE PlayerAttributes.overall_rating = (SELECT MAX(overall_rating) FROM PlayerAttributes)); \t----- bird -----\teuropean_football_2",
    "1056": " SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Netherlands'; \t----- bird -----\teuropean_football_2",
    "1057": " SELECT AVG(home_team_goal) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011'; \t----- bird -----\teuropean_football_2",
    "1058": " SELECT MAX(avg_finishing_rate) AS highest_avg_finishing_rate FROM (     SELECT         player_api_id,         AVG(finishing) AS avg_finishing_rate     FROM         PlayerAttributes     WHERE         preferred_foot ='short'         AND overall_rating = (SELECT MAX(overall_rating) FROM PlayerAttributes)     GROUP BY         player_api_id ) AS subquery \t----- bird -----\teuropean_football_2",
    "1059": " SELECT player_name FROM Player WHERE height > 180; \t----- bird -----\teuropean_football_2",
    "1060": " SELECT COUNT(*) FROM Player WHERE birthday > '1990-01-01'; \t----- bird -----\teuropean_football_2",
    "1061": " SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170; \t----- bird -----\teuropean_football_2",
    "1062": " SELECT p.player_name FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE pa.overall_rating > 80 AND p.player_federation_international_football_association_api_id IN (     SELECT id     FROM League     WHERE country_id IN (         SELECT id         FROM Country         WHERE name IN ('England', 'Spain', 'Italy') -- Assuming these countries had leagues in the specified time frame         AND season BETWEEN '2008-01-01' AND '2010-12-31'     ) ); \t----- bird -----\teuropean_football_2",
    "1063": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran'); \t----- bird -----\teuropean_football_2",
    "1064": " SELECT player_api_id, player_name FROM Player WHERE preferred_foot = 'left'; \t----- bird -----\teuropean_football_2",
    "1065": " SELECT t.team_long_name FROM TeamAttributes ta JOIN Team t ON ta.team_federation_international_football_association_api_id = t.team_api_id WHERE ta.build_Up_Play_Speed_Class = 'Fast'; \t----- bird -----\teuropean_football_2",
    "1066": " SELECT TA.build_Up_Play_Passing_Class FROM Team AS T JOIN TeamAttributes AS TA ON T.team_federation_international_football_association_api_id = TA.team_federation_international_football_association_api_id WHERE T.team_short_name = 'CLB'; \t----- bird -----\teuropean_football_2",
    "1067": " SELECT t.team_short_name FROM TeamAttributes ta JOIN Team t ON ta.team_federation_international_football_association_api_id = t.team_api_id WHERE ta.build_Up_Play_Passing > 70; \t----- bird -----\teuropean_football_2",
    "1068": " SELECT AVG(overall_rating) FROM Player Attributes WHERE date >= '2010-01-01' AND date <= '2015-12-31' AND overall_rating > 170; \t----- bird -----\teuropean_football_2",
    "1069": " SELECT MIN(height) AS shortest_height FROM Player WHERE height = (SELECT MIN(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1070": " SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Serie A'; \t----- bird -----\teuropean_football_2",
    "1071": " SELECT t.team_short_name FROM TeamAttributes ta JOIN Team t ON ta.team_federation_international_football_association_api_id = t.team_api_id WHERE ta.build_up_play_speed = 31 AND ta.build_up_plan_dribbling = 53 AND ta.build_up_play_passing = 32; \t----- bird -----\teuropean_football_2",
    "1072": " SELECT AVG(overall_rating) FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran'); \t----- bird -----\teuropean_football_2",
    "1073": " SELECT COUNT(MATCH.id) FROM Match JOIN League AS league_germany_1_bundesliga ON MATCH.league_id = league_germany_1_bundesliga.id WHERE league_germany_1_bundesliga.name = 'Germany 1. Bundesliga' AND MATCH.date BETWEEN '2008-08-01' AND '2008-10-31'; \t----- bird -----\teuropean_football_2",
    "1074": " SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN PlayerAttributes AS pa1 ON m1.home_player_1 = pa1.player_api_id WHERE m1.home_team_goal = 10 \t----- bird -----\teuropean_football_2",
    "1075": " SELECT pa.player_api_id, pa.balance, pa.potential FROM PlayerAttributes pa JOIN (     SELECT player_api_id     FROM PlayerAttributes     WHERE balance = (SELECT MAX(balance) FROM PlayerAttributes)     AND potential = 61 ) sub ON pa.player_api_id = sub.player_api_id ORDER BY pa.balance DESC, pa.potential ASC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1076": " SELECT AVG(ball_control) AS average_ball_control_score FROM PlayerAttributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo') AND player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye'); \t----- bird -----\teuropean_football_2",
    "1077": " SELECT team_long_name FROM Team WHERE team_federation_international_football_association_api_id = (     SELECT id     FROM Player     WHERE player_api_id = (         SELECT home_player_1         FROM Match         WHERE country_id = (             SELECT id             FROM Country             WHERE name = 'GEN'         )     ) );\t----- bird -----\teuropean_football_2",
    "1078": " SELECT     pa1.player_name AS older_player,     pa2.player_name AS younger_player FROM     Player AS pa1 JOIN     Player AS pa2 ON     pa1.player_api_id = pa2.player_api_id JOIN     PlayerAttributes AS pa1_attr ON     pa1.player_api_id = pa1_attr.player_api_id JOIN     PlayerAttributes AS pa2_attr ON     pa2.player_api_id = pa2_attr.player_api_id WHERE     pa1_attr.player_federation_international_football_association_api_id = 'Aaron Lennon'     AND pa2_attr.player_federation_international_football_association_api_id = 'Abdelaziz Barrada' \t----- bird -----\teuropean_football_2",
    "1079": " SELECT MAX(height) AS tallest_player_height FROM Player; \t----- bird -----\teuropean_football_2",
    "1080": " SELECT COUNT(DISTINCT player_api_id) FROM Player WHERE preferred_foot = 'left' AND position = 'attacking'; \t----- bird -----\teuropean_football_2",
    "1081": " SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Jupiler League'; \t----- bird -----\teuropean_football_2",
    "1082": " SELECT DISTINCT country.name FROM Country AS country JOIN League AS league ON country.id = league.country_id WHERE league.name = 'Germany'; \t----- bird -----\teuropean_football_2",
    "1083": " SELECT MAX(strength) AS max_strength FROM Player Attributes; \t----- bird -----\teuropean_football_2",
    "1084": " SELECT COUNT(DISTINCT pa.player_api_id) FROM Player AS p JOIN PlayerAttributes AS pa ON p.player_api_id = pa.player_api_id JOIN Team AS t ON p.team_api_id = t.team_api_id JOIN Match AS m ON p.player_api_id = m.home_player_1 WHERE p.birthday < '1986-01-01' AND pa.position = 'Defense' AND m.shot_on = 'Attack' AND pa.attacking_work_rate = 'High'; \t----- bird -----\teuropean_football_2",
    "1085": " SELECT MAX(crossing) AS best_crossing FROM Player Attributes WHERE player_api_id IN (     SELECT player_api_id     FROM Player     WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') );\t----- bird -----\teuropean_football_2",
    "1086": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT home_player_1     FROM Match     WHERE team_api_id = (         SELECT team_api_id         FROM Team         WHERE team_long_name = 'Ariel Borysiuk'     ) );\t----- bird -----\teuropean_football_2",
    "1087": " SELECT COUNT(*) FROM Player JOIN PlayerAttributes ON Player.player_api_id = PlayerAttributes.player_api_id WHERE Player.height > 180 AND PlayerAttributes.volley_score > 70; \t----- bird -----\teuropean_football_2",
    "1088": " SELECT p.player_name FROM Player p JOIN PlayerAttributes pa ON p.player_api_id = pa.player_api_id WHERE pa.volley_score > 70 AND pa.dribbling_score > 70; \t----- bird -----\teuropean_football_2",
    "1089": " SELECT COUNT(MATCH.id) FROM MATCH JOIN LEAGUE ON MATCH.league_id = LEAGUE.id WHERE LEAGUE.country.name = 'Belgium' AND MATCH.season = '2008/2009'; \t----- bird -----\teuropean_football_2",
    "1090": " SELECT MAX(long_passing) AS oldest_long_passing_score FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player); \t----- bird -----\teuropean_football_2",
    "1091": " SELECT COUNT(*) FROM Match WHERE home_team_league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND season = 'April, 2009'; \t----- bird -----\teuropean_football_2",
    "1092": " SELECT l.name, COUNT(m.id) AS matches_count FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2008/2009' GROUP BY l.name ORDER BY matches_count DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1093": " SELECT AVG(overall_rating) FROM Player Attributes WHERE date LIKE '1985-%' AND player federation international football association api id IN (     SELECT player federation international football association api id     FROM Player ) AND player api id IN (     SELECT player api id     FROM Player ); \t----- bird -----\teuropean_football_2",
    "1094": " SELECT     (overall_rating - (SELECT overall_rating FROM Player Attributes WHERE player_api_id = 'Paulin Puel')) * 100.0 / (SELECT overall_rating FROM Player Attributes WHERE player_api_id = 'Paulin Puel') AS percentage_difference FROM     Player Attributes WHERE     player_api_id = 'Ariel Borysiuk'; \t----- bird -----\teuropean_football_2",
    "1095": " SELECT AVG(build_up_play_speed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_federation_international_football_association_api_id = (     SELECT id     FROM Team     WHERE team_long_name = 'Heart of Midlothian' );\t----- bird -----\teuropean_football_2",
    "1096": " SELECT AVG(overall_rating) AS average_overall_rating FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino'); \t----- bird -----\teuropean_football_2",
    "1097": " SELECT SUM(crossing) AS total_crossing_score FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennox'); \t----- bird -----\teuropean_football_2",
    "1098": " SELECT MAX(chance_creation_passing) AS highest_chance_creation_passing_score, chance_creation_passing_class FROM TeamAttributes WHERE team_federation_international_football_association_api_id = (     SELECT id FROM Team     WHERE team_long_name = 'Ajax' );\t----- bird -----\teuropean_football_2",
    "1099": " SELECT preferred_foot FROM Player Attributes WHERE player_api_id = (     SELECT home_player_1     FROM Match     WHERE season = '2022' );\t----- bird -----\teuropean_football_2",
    "1100": " SELECT MAX(overall_rating) AS highest_overall_rating FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Dorlan Pabon'); \t----- bird -----\teuropean_football_2",
    "1101": " SELECT AVG(goal) AS average_goals FROM Match WHERE home_team_api_id IN (SELECT id FROM Team WHERE name = 'Parma') AND away_team_api_id IN (SELECT id FROM Team WHERE country_id IN (SELECT id FROM Country WHERE name = 'Italy')) AND stage = 1; \t----- bird -----\teuropean_football_2",
    "1102": " SELECT MAX(overall_rating) AS oldest_player FROM Player Attributes WHERE date = '2016-06-23' AND overall_rating = 77; \t----- bird -----\teuropean_football_2",
    "1103": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT home_player_1     FROM Match     WHERE date = '2016-02-04' );\t----- bird -----\teuropean_football_2",
    "1104": " SELECT overall_rating FROM Player Attributes WHERE player_api_id = (     SELECT home_player_1     FROM Match     WHERE date = '2010-08-30' );\t----- bird -----\teuropean_football_2",
    "1105": " SELECT `attacking work rate` FROM `Player Attributes` WHERE `player api id` = (     SELECT `player api id`     FROM `Player`     WHERE `player name` = 'Francesco Migliore' ) AND `date` = '2015/5/1'; \t----- bird -----\teuropean_football_2",
    "1106": " SELECT \"defensive_work_rate\" FROM \"Player Attributes\" WHERE \"player api id\" = (SELECT \"player api id\" FROM \"Player\" WHERE \"player name\" = 'Kevin Berigaud' AND \"birthday\" = '2013/02/22'); \t----- bird -----\teuropean_football_2",
    "1107": " SELECT MAX(crossing) AS max_crossing_score FROM Player Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'); \t----- bird -----\teuropean_football_2",
    "1108": " SELECT t.build_up_play_speed_class FROM TeamAttributes t JOIN Match m ON t.team_api_id = m.away_team_api_id WHERE m.date = '2011-02-22' AND t.team_federation_international_football_association_api_id = (     SELECT id FROM Country WHERE name = 'Willem II' ); \t----- bird -----\teuropean_football_2",
    "1109": " SELECT t2.build_up_play_dribbling_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_short_name = 'LEI' AND t2.date = '2015-09-10'; \t----- bird -----\teuropean_football_2",
    "1110": " SELECT TA.build_Up_Play_Passing_Class FROM Team AS T JOIN TeamAttributes AS TA ON T.team_api_id = TA.team_api_id JOIN PlayerAttributes AS PA ON T.team_api_id = PA.player_api_id WHERE T.team_long_name = 'FC Lorient' AND TA.date = '2010-02-22'; \t----- bird -----\teuropean_football_2",
    "1111": " SELECT tc.chance_creation_passing_class FROM TeamAttributes ta JOIN League l ON l.country_id = ta.team_federation_international_football_association_api_id JOIN Team t ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON m.home_team_api_id = t.team_api_id AND m.away_team_api_id = t.team_api_id WHERE l.name = 'PEC Zwolle' AND m.date = '2013-09-20'; \t----- bird -----\teuropean_football_2",
    "1112": " SELECT t2.chance_creation_crossing_class FROM Team AS t1 JOIN TeamAttributes AS t2 ON t1.team_federation_international_football_association_api_id = t2.team_federation_international_football_association_api_id WHERE t1.team_long_name = 'Hull City' AND t2.date = '2010/02/22'; \t----- bird -----\teuropean_football_2",
    "1113": " SELECT t.defence_aggression_class FROM Team t JOIN TeamAttributes ta ON t.team_api_id = ta.team_api_id JOIN Match m ON t.team_federation_international_football_association_api_id = m.team_federation_international_football_association_api_id WHERE t.team_short_name = 'Hannover 96' AND m.date = '2015-09-10'; \t----- bird -----\teuropean_football_2",
    "1114": " SELECT AVG(overall_rating) FROM Player Attributes WHERE player_api_id IN (     SELECT player_api_id     FROM Player     WHERE player_name = 'Marko Arnautovic'     AND date BETWEEN '2007-02-22' AND '2016-04-21' ); \t----- bird -----\teuropean_football_2",
    "1115": " SELECT     (         SELECT             (overall_rating - (SELECT overall_rating FROM Player Attributes WHERE player_api_id = 123456789)) AS rating_difference         FROM             Player Attributes         WHERE             date = '2013-07-12'     ) * 100.0 / (         SELECT             overall_rating         FROM             Player Attributes         WHERE             player_api_id = 123456789     ) AS percentage_difference; \t----- bird -----\teuropean_football_2",
    "1116": " SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player); \t----- bird -----\teuropean_football_2",
    "1117": " SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10; \t----- bird -----\teuropean_football_2",
    "1118": " SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.country_id WHERE p.birthday.year >= 1987 AND p.height > 180 AND p.weight > 80; \t----- bird -----\teuropean_football_2",
    "1119": " SELECT SUM(goals_scored) FROM Match WHERE home_team_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon'); \t----- bird -----\teuropean_football_2",
    "1120": " SELECT SUM(away_team_goal) FROM Match WHERE home_player_1 = 'Daan Smith' AND home_player_2 = 'Filipe Ferreira'; \t----- bird -----\teuropean_football_2",
    "1121": " SELECT SUM(home_team_goal) FROM Match JOIN Player Attributes ON Match.home_player_1 = Player_Attributes.player_api_id JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.birthday <= DATE('now', '-30 years'); \t----- bird -----\teuropean_football_2",
    "1122": " SELECT MAX(overall_rating) AS strongest_player_rating FROM Player Attributes; \t----- bird -----\teuropean_football_2",
    "1123": " SELECT player_api_id, player_name, potential FROM Player ORDER BY potential DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1124": " SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id OR t.team_api_id = m.away_team_api_id WHERE ta.build_Up_Play_Positioning_Class = 'Attacking' GROUP BY p.player_name HAVING COUNT(m.home_player_X1) > 0 OR COUNT(m.away_player_X1) > 0; \t----- bird -----\teuropean_football_2",
    "1125": " SELECT MAX(overall_rating) AS eldest_player_with_finishing_rate_of_1_name FROM Player Attributes WHERE finishing = 1 ORDER BY date ASC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1126": " SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.country_id WHERE l.country_name = 'Belgium'; \t----- bird -----\teuropean_football_2",
    "1127": " SELECT Player.country_id, Country.name FROM Player JOIN Country ON Player.country_id = Country.id WHERE Player.vision >= 90; \t----- bird -----\teuropean_football_2",
    "1128": " SELECT c.name, AVG(p.weight) AS avg_weight FROM Country c JOIN Player p ON c.id = p.country_id GROUP BY c.name ORDER BY avg_weight DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1129": " SELECT t.team_long_name FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id WHERE ta.build_Up_Play_Speed_Class ='slow'; \t----- bird -----\teuropean_football_2",
    "1130": " SELECT t.team_short_name FROM Team t JOIN TeamAttributes ta ON t.team_federation_international_football_association_api_id = ta.team_federation_international_football_association_api_id JOIN Match m ON t.team_api_id = m.away_team_api_id WHERE ta.chance_creation_passing = 1 AND m.shot_on = 'Pass' AND m.shot_off = 'Pass' AND m.foul_commit = 'Safe' AND m.card = 'None'; \t----- bird -----\teuropean_football_2",
    "1131": " SELECT AVG(height) AS average_height FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy'); \t----- bird -----\teuropean_football_2",
    "1132": " SELECT pa.player_name FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.height > 180 AND pa.height < 200 ORDER BY pa.player_name ASC LIMIT 3; \t----- bird -----\teuropean_football_2",
    "1133": " SELECT COUNT(*) FROM Player WHERE player_federation_international_football_association_api_id IN (     SELECT id     FROM Player     WHERE player_name LIKE '%Aaron%'     AND birthday >= '1990-01-01' ); \t----- bird -----\teuropean_football_2",
    "1134": " SELECT `jumping` FROM `Player Attributes` WHERE `player api id` IN (6, 23); \t----- bird -----\teuropean_football_2",
    "1135": " SELECT pa.id FROM PlayerAttributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.id WHERE pa.preferred_foot = 'right' AND pa.potential < (SELECT AVG(potential) FROM PlayerAttributes) ORDER BY pa.potential ASC LIMIT 5; \t----- bird -----\teuropean_football_2",
    "1136": " SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team_Attributes ON Player.team_federation_international_football_association_api_id = Team_Attributes.team_federation_international_football_association_api_id WHERE Player_Attributes.crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND Player_Attributes.preferred_foot = 'left' AND Player_Attributes.attacking_work_rate = 'high'; \t----- bird -----\teuropean_football_2",
    "1137": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player Attributes) AS percentage FROM Player Attributes WHERE strength > 80 AND stamina > 80; \t----- bird -----\teuropean_football_2",
    "1138": " SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Ekstraklasa'; \t----- bird -----\teuropean_football_2",
    "1139": " SELECT MATCH.goal FROM Match WHERE MATCH.date LIKE '2008-09-24%' AND MATCH.season = 'Belgian Jupiler League' AND MATCH.home_team_api_id IN (     SELECT Team.team_api_id     FROM Team     JOIN League ON League.country_id = Team.id     WHERE League.name = 'Belgian Jupiler League' ) AND MATCH.away_team_api_id IN (     SELECT Team.team_api_id     FROM Team     JOIN League ON League.country_id = Team.id     WHERE League.name = 'Belgian Jupiler League' ); \t----- bird -----\teuropean_football_2",
    "1140": " SELECT Player.player_name, PlayerAttributes.sprint_speed, PlayerAttributes.agility, PlayerAttributes.acceleration FROM Player JOIN PlayerAttributes ON Player.player_api_id = PlayerAttributes.player_api_id WHERE Player.player_name = 'Alexis Blin'; \t----- bird -----\teuropean_football_2",
    "1141": " SELECT t.build_up_play_speed_class FROM TeamAttributes t JOIN Match m ON t.team_federation_international_football_association_api_id = m.team_federation_international_football_association_api_id WHERE m.team_short_name = 'KSV Cercle Brugge'; \t----- bird -----\teuropean_football_2",
    "1142": " SELECT COUNT(*) FROM Match WHERE league_id = (SELECT id FROM League WHERE name = 'Italian Serie A' AND season = '2015-2016'); \t----- bird -----\teuropean_football_2",
    "1143": " SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands')); \t----- bird -----\teuropean_football_2",
    "1144": " SELECT MAX(weight) AS max_weight, p.finishing_rate, p.curve_score FROM Player AS p JOIN PlayerAttributes AS pa ON p.player_api_id = pa.player_api_id WHERE pa.weight = (SELECT MAX(weight) FROM PlayerAttributes) AND pa.attribute = 'finishing_rate' AND pa.attribute = 'curve_score'; \t----- bird -----\teuropean_football_2",
    "1145": " SELECT l.name, COUNT(m.id) AS games_played FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015-2016' GROUP BY l.name ORDER BY games_played DESC LIMIT 4; \t----- bird -----\teuropean_football_2",
    "1146": " SELECT t2.team_long_name, COUNT(t1.player_api_id) AS goals_scored FROM Match AS t1 JOIN Team AS t2 ON t1.away_team_api_id = t2.team_api_id GROUP BY t2.team_long_name ORDER BY goals_scored DESC LIMIT 1; \t----- bird -----\teuropean_football_2",
    "1147": " SELECT player_api_id, MAX(overall_strength) AS max_overall_strength FROM Player Attributes GROUP BY player_api_id; \t----- bird -----\teuropean_football_2",
    "1148": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player WHERE height < 180 AND strength > 70) AS percentage FROM Player WHERE height < 180 AND strength > 70; \t----- bird -----\teuropean_football_2",
    "1149": " SELECT SEX, COUNT(*) AS male_count, COUNT(*) AS total_count, (COUNT(*)::FLOAT / total_count::FLOAT) * 100 AS percentage FROM Patient WHERE SEX ='male' GROUP BY SEX; \t----- bird -----\tthrombosis_prediction",
    "1150": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'Female') AS percentage_female_born_after_1930 FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'Female' AND Examination.Birthday > '1930-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1151": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday BETWEEN '1930-01-01' AND '1940-12-31') AS inpatient_percentage FROM Patient WHERE Patient.Birthday BETWEEN '1930-01-01' AND '1940-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1152": " SELECT     COUNT(CASE WHEN Diagnosis = 'SLE' AND Thrombosis = 0 THEN 1 END) AS Outpatient,     COUNT(CASE WHEN Diagnosis = 'SLE' AND Thrombosis = 1 THEN 1 END) AS Inpatient FROM     Patient JOIN     Examination ON Patient.ID = Examination.ID WHERE     Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1153": " SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": " SELECT Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID = 163109; \t----- bird -----\tthrombosis_prediction",
    "1155": " SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.lactate_dehydrogenase > 200 \t----- bird -----\tthrombosis_prediction",
    "1156": " SELECT p.ID, p.Birthday, p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.measure_of_degree_of_coagulation = 'Positive' \t----- bird -----\tthrombosis_prediction",
    "1157": " SELECT p.ID, p.SEX, d.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE e.Thrombosis = 1 \t----- bird -----\tthrombosis_prediction",
    "1158": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(p.Birthday) = 1937 AND e.total_cholesterol > (SELECT AVG(total_cholesterol) FROM Patient) \t----- bird -----\tthrombosis_prediction",
    "1159": " SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.albumin < 3.5; \t----- bird -----\tthrombosis_prediction",
    "1160": " SELECT AVG(CASE WHEN P.SEX = 'F' AND L.total_protein < 6.0 THEN 1 ELSE 0 END) * 100 AS percentage_female_with_abnormal_total_protein FROM Patient P JOIN Laboratory L ON P.ID = L.ID; \t----- bird -----\tthrombosis_prediction",
    "1161": " SELECT AVG(anti_cardiolipin_antibody_IgG) AS average_anti_cardiolipin_antibody_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Female' AND Patient.Birthday >= '1970-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1162": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'female' AND YEAR(p.Birthday) = 1997 AND e.Thrombosis = 1; \t----- bird -----\tthrombosis_prediction",
    "1163": " SELECT MIN(Patient.Birthday) AS youngest_age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Initial Arrival'; \t----- bird -----\tthrombosis_prediction",
    "1164": " SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Examination_Date = '1997-01-01' AND e.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination) AND p.SEX = 'F'; \t----- bird -----\tthrombosis_prediction",
    "1165": " SELECT MIN(age_gap) AS youngest_oldest_age_gap FROM (     SELECT         p.ID AS patient_id,         p.SEX,         p.Birthday,         p.Description,         p.First_Date,         p.Admission,         p.Diagnosis,         l.triglyceride,         MIN(l.Birthday) AS youngest_age,         MAX(l.Birthday) AS oldest_age     FROM         Patient p     JOIN         Laboratory l ON p.ID = l.ID     WHERE         l.triglyceride < 150     GROUP BY         p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis ) AS subquery; \t----- bird -----\tthrombosis_prediction",
    "1166": " SELECT p.Symptoms, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.ID = (SELECT MIN(p.ID) FROM Patient) AND e.Examination_Date = (SELECT MIN(e.Examination_Date) FROM Examination); \t----- bird -----\tthrombosis_prediction",
    "1167": " SELECT     AVG(COUNT(DISTINCT Patient.ID)) AS average_patients_per_month FROM     Patient JOIN     Examination ON Patient.ID = Examination.ID WHERE     EXTRACT(YEAR FROM Examination.Examination Date) = 1998     AND EXTRACT(MONTH FROM Examination.Examination Date) BETWEEN 1 AND 12     AND Patient.SEX = 'Male' GROUP BY     EXTRACT(MONTH FROM Examination.Examination Date); \t----- bird -----\tthrombosis_prediction",
    "1168": " SELECT p.Patient.ID, p.Patient.Birthday, p.Patient.SEX, l.Laboratory.Date FROM Patient p JOIN Examination e ON p.Patient.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Diagnosis = 'SJS' ORDER BY p.Patient.Birthday DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1169": " SELECT     P.SEX,     COUNT(E.ID) AS patient_count FROM     Patient P JOIN     Examination E ON P.ID = E.ID WHERE     E.uric_acid > 0 GROUP BY     P.SEX HAVING     COUNT(E.ID) > 0; \t----- bird -----\tthrombosis_prediction",
    "1170": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date <= DATE('now', '-1 year') AND e.ID = (SELECT MAX(ID) FROM Examination WHERE Patient ID = p.ID); \t----- bird -----\tthrombosis_prediction",
    "1171": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday < '1990-01-01' AND Patient.Birthday >= '1987-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1172": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.total_bilirubin > 1.2 \t----- bird -----\tthrombosis_prediction",
    "1173": " SELECT Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1174": " SELECT AVG(Patient.Birthday) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date = '1991-10-01' AND Examination.Date = '1999-10-01'; \t----- bird -----\tthrombosis_prediction",
    "1175": " SELECT P.ID, P.SEX, P.Birthday, P.Description, P.FirstDate, P.Admission, P.Diagnosis, MAX(E.Hemoglobin) AS Highest_Hemoglobin FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Hemoglobin = (SELECT MAX(Hemoglobin) FROM Examination) GROUP BY P.ID, P.SEX, P.Birthday, P.Description, P.FirstDate, P.Admission, P.Diagnosis; \t----- bird -----\tthrombosis_prediction",
    "1176": " SELECT anti_nucleus_antibody FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02'; \t----- bird -----\tthrombosis_prediction",
    "1177": " SELECT t.total_cholesterol FROM Examination AS t JOIN Patient AS p ON t.ID = p.ID WHERE p.ID = 2927464 AND t.Date = '1995-09-04'; \t----- bird -----\tthrombosis_prediction",
    "1178": " SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'AORTITIS' ORDER BY P.ID LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1179": " SELECT e.anti_Cardiolipin_antibody_IgA_concentration FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Diagnosis = 'SLE' AND p.Birthday = '1994-02-19' AND e.Examination_Date = '1993-11-12'; \t----- bird -----\tthrombosis_prediction",
    "1180": " SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Date = '1992-06-12' AND E.AST glutamic oxaloacetic transaminase = 0 AND E.ALT glutamic pyruvic transaminase = 9 AND E.Rhuematoid Factor = ''; \t----- bird -----\tthrombosis_prediction",
    "1181": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.Date = '1991-10-21' AND l.uric acid = 8.4; \t----- bird -----\tthrombosis_prediction",
    "1182": " SELECT COUNT(DISTINCT L.ID) FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.First Date = '1991-06-13' AND P.Diagnosis = 'SJS' AND YEAR(E.Examination Date) = 1995; \t----- bird -----\tthrombosis_prediction",
    "1183": " SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID = (     SELECT MIN(ID)     FROM Examination     WHERE Examination.Patient.ID = (         SELECT ID         FROM Patient         WHERE Patient.Diagnosis = 'SLE'         AND Patient.First_Date = '1997-01-27'     ) ); \t----- bird -----\tthrombosis_prediction",
    "1184": " SELECT Patient.Description FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.Examination Date = '1993-09-27'; \t----- bird -----\tthrombosis_prediction",
    "1185": " SELECT     p.SEX,     p.Birthday,     p.Description,     p.First_Date,     p.Admission,     p.Diagnosis,     l.AST,     l.ALT,     l.lactate_dehydrogenase,     l.alkaliphophatase,     l.total_protein,     l.albumin,     l.uric_acid,     l.urea_nitrogen,     l.creatinine,     l.total_bilirubin,     l.total_cholesterol,     l.triglyceride,     l.creatinine_phosphokinase,     l.blood_glucose,     l.White_blood_cell,     l.Red_blood_cell,     l.Hemoglobin,     l.Hematoclit,     l.platelet,     l.prothrombin_time,     l.activated_partial_thromboplastin_time,     l.fibrinogen,     l.PIC,     l.TAT,     l.TAT2,     l.proteinuria,     l.Ig_G,     l.Ig_A,     l.Ig_M,     l.C_reactive_protein,     l.Rhuematoid_Factor,     l.RAHA,     l.complement_3,     l.complement_4,     l.anti_ribonuclear_protein,     l.anti_SM,     l.anti_scl70,     l.anti_SSA,     l.anti_SSB,     l.anti_centromere,     l.anti_DNA,     l.anti_DNA AS total_cholesterol_1981_dec FROM     Patient p JOIN     Laboratory l ON p.ID = l.ID WHERE     p.Birthday = '1959-02-18'     AND EXTRACT(MONTH FROM l.Date) = 11     AND EXTRACT(YEAR FROM l.Date) = 1981     AND l.total_cholesterol IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1186": " SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Behcet\\'s' AND Examination.Examination_Date BETWEEN '197-01-01' AND '1997-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1187": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND e.AST glutamic oxaloacetic transaminase > 30 AND e.total protein < 4 \t----- bird -----\tthrombosis_prediction",
    "1188": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Birthday = '1964-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1189": " SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX ='specific_sex' -- replace with the desired sex AND Examination.Diagnosis LIKE '%thrombosis level 2%' AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'S' AND Examination.anti_Cardiolip_antibody_IgM = (     SELECT AVG(anti_Cardiolip_antibody_IgM)     FROM Examination ) * 1.20; \t----- bird -----\tthrombosis_prediction",
    "1190": " SELECT ID FROM Patient WHERE Diagnosis = 'Examination' AND proteinuria = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1191": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'Male' AND Patient.FirstDate BETWEEN '1981-01-01' AND '1981-12-31') AS percentage_male_behcet_patients FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Male' AND Examination.Diagnosis = 'BEHCET'; \t----- bird -----\tthrombosis_prediction",
    "1192": " SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE MONTH(e.Examination Date) = 10 AND YEAR(e.Examination Date) = 1991 AND l.total_bilirubin BETWEEN 0.3 AND 1.2; \t----- bird -----\tthrombosis_prediction",
    "1193": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti-Cardiolipin antibody (IgG) > 0 AND e.pattern observed in the sheet of ANA examination NOT LIKE 'P%' AND p.SEX = 'F' AND p.Birthday BETWEEN '1980-01-01' AND '1989-12-31'; \t----- bird -----\tthrombosis_prediction",
    "1194": " SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.C-reactive_protein = 2 AND Laboratory.creatinine = 1 AND Laboratory.LDH = 123; \t----- bird -----\tthrombosis_prediction",
    "1195": " SELECT AVG(Laboratory.total_protein) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'female' AND Examination.Diagnosis = 'SLE' AND Laboratory.platelet > 400; \t----- bird -----\tthrombosis_prediction",
    "1196": " SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1197": " SELECT P.Birthday, D.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.ID = 48473; \t----- bird -----\tthrombosis_prediction",
    "1198": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'F' AND e.Diagnosis = 'APS'; \t----- bird -----\tthrombosis_prediction",
    "1199": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE YEAR(Laboratory.Date) = 1997 AND Laboratory.protein NOT BETWEEN 0.6 AND 1.4; \t----- bird -----\tthrombosis_prediction",
    "1200": " SELECT     COUNT(*) FILTER (WHERE diagnosis = 'SLE') AS sles_count,     COUNT(*) AS total_thrombocytopenia FROM     (         SELECT             p.ID AS patient_id,             l.ID AS laboratory_id,             l.pattern AS thrombocytopenia         FROM             Patient p         JOIN             Laboratory l ON p.ID = l.ID         WHERE             l.pattern LIKE '%thrombocytopenia%'     ) AS subquery;  SELECT     (sles_count / total_thrombocytopenia) AS proportion FROM     (         SELECT             COUNT(*) FILTER (WHERE diagnosis = 'SLE') AS sles_count,             COUNT(*) AS total_thrombocytopenia         FROM             (                 SELECT                     p.ID AS patient_id,                     l.ID AS laboratory_id,                     l.pattern AS thrombocytopenia                 FROM                     Patient p                 JOIN                     Laboratory l ON p.ID = l.ID                 WHERE                     l.pattern LIKE '%thrombocytopenia%'             ) AS subquery     ); \t----- bird -----\tthrombosis_prediction",
    "1201": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday = '1980-01-01') AS percentage_women_with_RA FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'RA' AND YEAR(Patient.Birthday) = 1980 AND Patient.SEX = 'F'; \t----- bird -----\tthrombosis_prediction",
    "1202": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.Examination_Date BETWEEN '1995-01-01' AND '1997-12-31' AND e.Diagnosis = 'Behcet disease' AND e.Thrombosis = 0 \t----- bird -----\tthrombosis_prediction",
    "1203": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'female' AND Examination.AST glutamic oxaloacetic transaminase < 3.5; \t----- bird -----\tthrombosis_prediction",
    "1204": " SELECT MAX(Admission) - MIN(Admission) AS time_between_first_visit_and_evaluation FROM Patient WHERE ID = 821298; \t----- bird -----\tthrombosis_prediction",
    "1205": " SELECT uric_acid FROM Examination WHERE ID = 57266 AND uric_acid BETWEEN 3.4 AND 8.0; \t----- bird -----\tthrombosis_prediction",
    "1206": " SELECT L.Date, L.AST FROM Examination AS E JOIN Laboratory AS L ON E.ID = L.ID WHERE E.Patient.ID = 48473 AND L.AST > (SELECT AVG(AST) FROM Examination) \t----- bird -----\tthrombosis_prediction",
    "1207": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE YEAR(e.Date) = 1994 AND l.AST glutamic oxaloacetic transaminase BETWEEN 10 AND 40 GROUP BY p.ID, p.SEX, p.Birthday HAVING COUNT(DISTINCT l.ID) = 1; \t----- bird -----\tthrombosis_prediction",
    "1208": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.AST glutamic oxaloacetic transaminase > 30 AND e.ALT glutamic pylvic transaminase > 30 AND e.Diagnosis LIKE '%ALT glutamic pylvic transaminase (GPT) exceed the normal range%'; \t----- bird -----\tthrombosis_prediction",
    "1209": " SELECT p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.ALT glutamic pylvic transaminase > 40 ORDER BY p.Birthday ASC; \t----- bird -----\tthrombosis_prediction",
    "1210": " SELECT AVG(LDH) FROM Examination WHERE LDH BETWEEN 120 AND 180 AND ID IN (     SELECT Examination.ID     FROM Examination     JOIN Patient ON Examination.ID = Patient.ID     WHERE Patient.Diagnosis = 'Normal LDH' ); \t----- bird -----\tthrombosis_prediction",
    "1211": " SELECT p.ID, PATIENT.Birthday.date_part('year', Birthday) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.lactate_dehydrogenase BETWEEN 100 AND 300 \t----- bird -----\tthrombosis_prediction",
    "1212": " SELECT P.SEX, P.Birthday, P.Description, P.First_Date, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.AST = 'normal' AND E.ALT = 'normal' AND E.ALP = 'normal' AND (P.Thrombosis = 1 OR P.Thrombosis = 'yes') \t----- bird -----\tthrombosis_prediction",
    "1213": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday = '1982-04-01' LIMIT 1;  SELECT CASE     WHEN e.ALP BETWEEN 20 AND 120 THEN 'Within normal range'     ELSE 'Outside normal range' END FROM Examination e WHERE e.ID = (     SELECT p.ID     FROM Patient p     JOIN Examination e ON p.ID = e.ID     WHERE p.Birthday = '1982-04-01' );\t----- bird -----\tthrombosis_prediction",
    "1214": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.total_protein < (SELECT AVG(total_protein) FROM Examination) AND E.total_protein > (SELECT MIN(total_protein) FROM Examination); \t----- bird -----\tthrombosis_prediction",
    "1215": " SELECT p.SEX, p.ID, e.TP, n.TP_index FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN (     SELECT TP, TP_index     FROM Laboratory     WHERE Rhuematoid Factor = 'Positive'     AND AST glutamic oxaloacetic transaminase > 30     AND ALT glutamic pyruvic transaminase > 30     AND lactate dehydrogenase > 200     AND alkaliphophatase > 150     AND total protein > 7.0 ) n ON e.TP = n.TP WHERE p.SEX = 'Female'; \t----- bird -----\tthrombosis_prediction",
    "1216": " SELECT P.ID, P.SEX, P.Birthday, P.Description, P.FirstDate, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX ='male' AND E.albumin < (SELECT MIN(albumin) FROM Patient) ORDER BY P.Birthday DESC; \t----- bird -----\tthrombosis_prediction",
    "1217": " SELECT p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(p.Birthday) = 1982 AND e.albumin >= 3.5; \t----- bird -----\tthrombosis_prediction",
    "1218": " SELECT AVG(CASE WHEN SEX = 'F' AND Uric_Acid > 7.0 THEN 1 ELSE 0 END) * 100.0 AS percentage_females_with_high_UA FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Uric_Acid > 7.0; \t----- bird -----\tthrombosis_prediction",
    "1219": " SELECT AVG(Laboratory.UA) AS average_UA_index FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.UA = 'normal' AND Laboratory.Date = (SELECT MAX(Date) FROM Laboratory); \t----- bird -----\tthrombosis_prediction",
    "1220": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.urea_nitrogen BETWEEN 10 AND 20 \t----- bird -----\tthrombosis_prediction",
    "1221": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE d.Diagnosis = 'RA' AND e.measure_of_degree_of_coagulation IN (     SELECT measure_of_degree_of_coagulation     FROM Examination     WHERE measure_of_degree_of_coagulation IN (         SELECT measure_of_degree_of_coagulation         FROM Examination         WHERE measure_of_degree_of_coagulation < 1.5     ) ) \t----- bird -----\tthrombosis_prediction",
    "1222": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.measure_of_degree_of_coagulation LIKE '%out of normal range%'; \t----- bird -----\tthrombosis_prediction",
    "1223": " SELECT     P.SEX,     COUNT(*) AS male_count,     COUNT(CASE WHEN P.SEX = 'Female' THEN 1 END) AS female_count FROM     Patient P JOIN     Laboratory L ON P.ID = L.ID WHERE     L.creatinine NOT BETWEEN 0.6 AND 1.2 GROUP BY     P.SEX HAVING     male_count > female_count; \t----- bird -----\tthrombosis_prediction",
    "1224": " SELECT MAX(total_bilirubin) AS highest_bilirubin, patient.ID, patient.SEX, patient.Birthday FROM Examination AS e JOIN Patient AS patient ON e.ID = patient.ID WHERE e.Diagnosis = 'Thrombosis' GROUP BY e.ID, patient.SEX, patient.Birthday; \t----- bird -----\tthrombosis_prediction",
    "1225": " SELECT Patient.SEX, COUNT(Examination.ID) AS Patients_Count FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-BIL NOT BETWEEN 0.3 AND 1.1 GROUP BY Patient.SEX; \t----- bird -----\tthrombosis_prediction",
    "1226": " SELECT P.ID, MAX(L.T_CHO) AS highest_T_CHO FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.SEX = 'Male' AND L.T_CHO > 200 GROUP BY P.ID ORDER BY highest_T_CHO DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1227": " SELECT AVG(DATEDIFF(CURDATE(), P.Birthday) / 365) AS average_age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'Male' AND L.total_cholesterol > 240; \t----- bird -----\tthrombosis_prediction",
    "1228": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.triglyceride > 100 AND e.Diagnosis IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1229": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.triglyceride > 150 AND Patient.age > 50; \t----- bird -----\tthrombosis_prediction",
    "1230": " SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Laboratory.CK = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1231": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND p.SEX = 'Male' AND e.AST glutamic oxaloacetic transaminase > 30 AND e.creatinine phosphokinase > 300; \t----- bird -----\tthrombosis_prediction",
    "1232": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.GLU NOT BETWEEN 60 AND 99 AND e.T_CHO BETWEEN 180 AND 229 \t----- bird -----\tthrombosis_prediction",
    "1233": " SELECT p.ID, l.GLU FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Examination Date = '1991-01-01' AND l.Date = '1991-01-01' AND l.blood_glucose BETWEEN 70 AND 100; \t----- bird -----\tthrombosis_prediction",
    "1234": " SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.White blood cell > 10000 GROUP BY p.SEX, p.Birthday ORDER BY p.SEX, p.Birthday; \t----- bird -----\tthrombosis_prediction",
    "1235": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Red Blood Cell < 45 AND p.Diagnosis IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1236": " SELECT p.SEX, p.ID, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis, l.AST, l.ALT, l.lactate_dehydrogenase, l.alkaliphophatase, l.total_protein, l.albumin, l.uric_acid, l.urea_nitrogen, l.creatinine, l.total_bilirubin, l.total_cholesterol, l.triglyceride, l.creatinine_phosphokinase, l.blood_glucose, l.White_blood_cell, l.Red_blood_cell, l.Hemoglobin, l.Hematoclit, l.platelet, l.prothrombin_time, l.activated_partial_prothrombin_time, l.fibrinogen, l.PIC, l.TAT, l.TAT2, l.proteinuria, l.Ig_G, l.Ig_A, l.Ig_M, l.C_reactive_protein, l.Rhuematoid_Factor, l.RAHA, l.complement_3, l.complement_4, l.anti_ribonuclear_protein, l.anti_SM, l.anti_scl70, l.anti_SSA, l.anti_SSB, l.anti_centromere, l.anti_DNA, l.anti_DNA AS abnormal_red_blood_cell FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'female' AND p.Birthday >= '1972-01-01' AND l.Red_blood_cell < 45 GROUP BY p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.AST, l.ALT, l.lactate_dehydrogenase, l.alkaliphophatase, l.total_protein, l.albumin, l.uric_acid, l.urea_nitrogen, l.creatinine, l.total_bilirubin, l.total_cholesterol, l.triglyceride, l.creatinine_phosphokinase, l.blood_glucose, l.White_blood_cell, l.Red_blood_cell, l.Hemoglobin, l.Hematoclit, l.platelet, l.prothrombin_time, l.activated_partial_prothrombin_time, l.fibrinogen, l.PIC, l.TAT, l.TAT2, l.proteinuria, l.Ig_G, l.Ig_A, l.Ig_M, l.C_reactive_protein, l.Rhuematoid_Factor, l.RAHA, l.complement_3, l.complement_4, l.anti_ribonuclear_protein, l.anti_SM, l.anti_scl70, l.anti_SSA, l.anti_SSB, l.anti_centromere, l.anti_DNA, l.anti_DNA HAVING COUNT(DISTINCT p.ID) > 1 AND p.Admission = 'yes'; \t----- bird -----\tthrombosis_prediction",
    "1237": " SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.hemoglobin < 12; \t----- bird -----\tthrombosis_prediction",
    "1238": " SELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.hemoglobin > 0 AND E.hemoglobin < 100 AND E.pattern_observed_in_the_sheet_of_ANA_examination = 'normal' ORDER BY E.Birthday DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1239": " SELECT p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e1 ON p.ID = e1.ID JOIN Examination e2 ON p.ID = e2.ID WHERE e1.hematoclit > 45 AND e2.hematoclit > 45 GROUP BY p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis HAVING COUNT(DISTINCT e1.ID) >= 2 AND COUNT(DISTINCT e2.ID) >= 2; \t----- bird -----\tthrombosis_prediction",
    "1240": " SELECT AVG(hematoclit) FROM Examination WHERE hematoclit < (SELECT AVG(hematoclit) FROM Examination WHERE YEAR(Examination.Examination_Date) = 1991) AND Diagnosis LIKE '%normal range%'; \t----- bird -----\tthrombosis_prediction",
    "1241": " SELECT COUNT(*) FROM Patient WHERE platelet < (SELECT normal_range FROM Laboratory WHERE ID = Patient.ID) AND IgG > 0 AND IgA > 0 AND IgM > 0 \t----- bird -----\tthrombosis_prediction",
    "1242": " SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date BETWEEN '1984-01-01' AND '1984-12-31' AND Examination.anti-Cardiolipin antibody (IgG) < 10 AND Examination.anti-Cardiolipin antibody (IgM) < 10 AND Examination.anti-nucleus antibody = 0 AND Examination.pattern_observed_in_the_sheet_of_ANA_examination = 'Normal' AND Examination.anti-Cardiolipin antibody (IgA) concentration < 10 AND Examination.Diagnosis LIKE '%Thrombosis%' AND Patient.Age < 50 AND Examination.platelet > 150; \t----- bird -----\tthrombosis_prediction",
    "1243": " SELECT AVG(CASE WHEN P.SEX = 'F' AND P.Examination.PT > 'normal' THEN 1 ELSE 0 END) * 100 AS percentage_female_with_abnormal_PT FROM Patient P INNER JOIN Examination ON P.ID = Examination.ID WHERE P.Birthday <= DATE('now', '-55 years'); \t----- bird -----\tthrombosis_prediction",
    "1244": " SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date >= '1992-01-01' AND e.prothrombin_time <= 14.5 GROUP BY p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis HAVING COUNT(DISTINCT e.ID) = 1; \t----- bird -----\tthrombosis_prediction",
    "1245": " SELECT COUNT(*) FROM Examination WHERE Examination_Date >= '1997-01-01' AND prothrombin_time IN ('inactivated', 'partial'); \t----- bird -----\tthrombosis_prediction",
    "1246": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.prothrombin_time > '2022-01-01' AND Examination.thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1247": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.White_blood_cell > 4000 AND e.Fibrinogen < 300; \t----- bird -----\tthrombosis_prediction",
    "1248": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date >= '1980-01-01' AND Examination.fibrinogen < 1.5; \t----- bird -----\tthrombosis_prediction",
    "1249": " SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.proteinuria = 'abnormal' AND l.measure_of_degree_of_coagulation = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1250": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE p.Sex = 'Male' AND p.Description = '2022-01-01' AND e.proteinuria = 'Normal' AND d.Diagnosis = 'Systemic Lupus Erythematosus (SLE)'; \t----- bird -----\tthrombosis_prediction",
    "1251": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.IgG > normal_IgG_value; \t----- bird -----\tthrombosis_prediction",
    "1252": " SELECT COUNT(DISTINCT p.ID) AS symptom_count FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.IgG = 'normal' AND p.Symptoms IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1253": " SELECT p.ID, p.SEX, p.Description, p.First Date, p.Admission, d.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN (     SELECT ID, MAX(IgA) AS max_IgA     FROM Examination     WHERE IgA BETWEEN 0 AND 100     GROUP BY ID ) max_IgA_subquery ON e.ID = max_IgA_subquery.ID JOIN Diagnosis d ON max_IgA_subquery.ID = d.ID WHERE max_IgA_subquery.max_IgA BETWEEN 0 AND 100; \t----- bird -----\tthrombosis_prediction",
    "1254": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgA) concentration = 0 AND Examination.Examination Date > '1990-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1255": " SELECT P.Diagnosis, COUNT(E.ID) AS Diagnosis_Count FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE E.anti-Cardiolipin antibody (IgM) < some_threshold_value GROUP BY P.Diagnosis ORDER BY Diagnosis_Count DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1256": " SELECT COUNT(*) FROM Patient WHERE C_reactive_protein IS NOT NULL AND C_reactive_protein!= 'Normal'; \t----- bird -----\tthrombosis_prediction",
    "1257": " SELECT COUNT(*) FROM Patient WHERE creatinine!= '70' AND creatinine IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1258": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Rhuematoid Factor = 'normal' AND e.measure of degree of coagulation = 'positive'; \t----- bird -----\tthrombosis_prediction",
    "1259": " SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday >= '1985-01-01' AND e.Rhuematoid_Factor = 'normal' AND p.Diagnosis IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1260": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Rhuematoid Factor = 'normal' AND p.Birthday > '1950-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1261": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Rhuematoid Factor = 'normal' AND e.Thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1262": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.complement_3 = 'normal' AND e.pattern_observed_in_sheet_of_ANA_examination = 'P'; \t----- bird -----\tthrombosis_prediction",
    "1263": " SELECT p.ID, MAX(h.Hematoclit) AS highest_Hematoclit FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Hematoclit NOT IN (SELECT Hematoclit FROM Patient) GROUP BY p.ID HAVING MAX(h.Hematoclit) = l.Hematoclit; \t----- bird -----\tthrombosis_prediction",
    "1264": " SELECT COUNT(*) FROM Patient WHERE Thrombosis = 1 AND complement_4 = 1; \t----- bird -----\tthrombosis_prediction",
    "1265": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-ribonuclear protein = 'normal' AND Examination.Admission = 'yes'; \t----- bird -----\tthrombosis_prediction",
    "1266": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.anti_ribonuclear_protein IS NOT NULL AND E.anti_ribonuclear_protein < (SELECT MIN(anti_ribonuclear_protein) FROM Examination WHERE E.ID = E.ID) ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": " SELECT COUNT(*) FROM Patient WHERE anti_SM = 'normal' AND Thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1268": " SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.anti_SM IS NOT NULL AND e.anti_SM!= 'Normal' AND e.anti_SM IN ('Abnormal') GROUP BY p.ID ORDER BY p.Birthday ASC LIMIT 3; \t----- bird -----\tthrombosis_prediction",
    "1269": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date > '1997-01-01' AND e.anti-scl70 = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1270": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti-scl70 = 'normal' AND p.SEX = 'female' AND p.Symptoms = ''; \t----- bird -----\tthrombosis_prediction",
    "1271": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti_SSA < 1 AND Examination.Examination_Date < '2000-01-01'; \t----- bird -----\tthrombosis_prediction",
    "1272": " SELECT P.ID, MIN(L.Admission) AS First_Abnormal_Anti_SSA FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.anti-SSA IS NOT NULL AND L.anti-SSA < 100; -- Adjust the threshold as needed GROUP BY P.ID; \t----- bird -----\tthrombosis_prediction",
    "1273": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.anti_SSB = 'normal' AND e.Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1274": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti_SSB = 'normal' AND Examination.Symptoms!= ''; \t----- bird -----\tthrombosis_prediction",
    "1275": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.anti_centromere = 0 AND e.anti_SSB = 0 AND p.SEX = 'Male'; \t----- bird -----\tthrombosis_prediction",
    "1276": " SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.anti-DNA = 'abnormal' \t----- bird -----\tthrombosis_prediction",
    "1277": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis IS NOT NULL AND Patient.anti_DNA = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1278": " SELECT COUNT(DISTINCT Patient.ID) AS admitted_patients FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.anti-Cardiolipin antibody (IgG) = 'normal' AND Examination.Diagnosis = 'admitted'; \t----- bird -----\tthrombosis_prediction",
    "1279": " SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient) AS percentage FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.AST glutamic oxaloacetic transaminase > 30 AND Patient.Diagnosis = 'SLE'; \t----- bird -----\tthrombosis_prediction",
    "1280": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.AST glutamic oxaloacetic transaminase BETWEEN 10 AND 40; \t----- bird -----\tthrombosis_prediction",
    "1281": " SELECT MIN(Patient.Birthday) AS youngest_born FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.AST glutamic oxaloacetic transaminase > 30; \t----- bird -----\tthrombosis_prediction",
    "1282": " SELECT P.ID, P.SEX, P.Birthday, L.ALT FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.ALT BETWEEN 10 AND 40 GROUP BY P.ID, P.SEX, P.Birthday ORDER BY MAX(L.ALT) DESC LIMIT 3; \t----- bird -----\tthrombosis_prediction",
    "1283": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.AST glutamic oxaloacetic transaminase = 0 AND Examination.SEX = 'Male'; \t----- bird -----\tthrombosis_prediction",
    "1284": " SELECT * FROM Laboratory WHERE AST glutamic oxaloacetic transaminase BETWEEN 0 AND 100 AND ALT glutamic pyruvic transaminase BETWEEN 0 AND 100 AND lactate dehydrogenase BETWEEN 100 AND 250; \t----- bird -----\tthrombosis_prediction",
    "1285": " SELECT P.ID, P.SEX, P.Birthday, L.Date, L.lactate_dehydrogenase, E.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID JOIN Examination E ON L.ID = E.ID WHERE L.lactate_dehydrogenase > 200 -- Assuming abnormal level is > 200 GROUP BY P.ID, L.Date ORDER BY P.ID, L.Date DESC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1286": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.alkaliphophatase > 0 AND Examination.Diagnosis = 'abnormal'; \t----- bird -----\tthrombosis_prediction",
    "1287": " SELECT COUNT(*) FROM Patient WHERE Laboratory.alkaliphophatase = 'normal'; \t----- bird -----\tthrombosis_prediction",
    "1288": " SELECT p.SEX, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.total_protein < (SELECT AVG(total_protein) FROM Patient) AND e.Diagnosis IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1289": " SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SJS' AND Examination.total_protein > 6; \t----- bird -----\tthrombosis_prediction",
    "1290": " SELECT E.Examination_Date FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID WHERE P.Albumin >= 3.5 AND P.Albumin <= 5.5; \t----- bird -----\tthrombosis_prediction",
    "1291": " SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE p.SEX = 'Male' AND e.albumin >= 4.0 AND e.total_protein >= 6.0; \t----- bird -----\tthrombosis_prediction",
    "1292": " SELECT T1.anti_Cardiolipin_antibody_concentration FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND T2.uric_acid BETWEEN 3.5 AND 8.0;  -- To find the patient with the highest anti-Cardiolipin antibody concentration, -- we need to use a subquery with the MAX function.  SELECT MAX(T1.anti_Cardiolipin_antibody_concentration) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'Female' AND T2.uric_acid BETWEEN 3.5 AND 8.0; \t----- bird -----\tthrombosis_prediction",
    "1293": " SELECT MAX(anti_nucleus_antibody) FROM Examination WHERE creatinine = 'normal' AND Diagnosis IN (     SELECT Diagnosis     FROM Patient     WHERE creatinine = 'normal' );\t----- bird -----\tthrombosis_prediction",
    "1294": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.creatinine = 'Normal' AND e.anti_Cardiolipin_antibody_concentration = (     SELECT MAX(anti_Cardiolipin_antibody_concentration)     FROM Examination ) \t----- bird -----\tthrombosis_prediction",
    "1295": " SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.total_bilirubin > 'normal range' AND Examination.pattern_observed_in_sheet_of_ANA_examination = 'peripheral'; \t----- bird -----\tthrombosis_prediction",
    "1296": " SELECT MAX(anti_nucleus_antibody) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.total_bilirubin BETWEEN 0.4 AND 1.2; \t----- bird -----\tthrombosis_prediction",
    "1297": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.total_cholesterol > 'normal_value' AND Examination.measure_of_degree_of_coagulation = 'negative'; \t----- bird -----\tthrombosis_prediction",
    "1298": " SELECT COUNT(*) FROM Patient WHERE total_cholesterol BETWEEN 200 AND 240 AND pattern_observed_in_the_sheet_of_ANA_examination = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.triglyceride = 'normal' AND p.Symptoms IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1300": " SELECT P.SEX, P.Description, PAT.Diagnosis FROM Patient P JOIN Examination EX ON P.ID = EX.ID JOIN (     SELECT Patient_ID, MAX(Triglyceride) AS Max_Triglyceride     FROM Examination     WHERE Triglyceride BETWEEN 100 AND 150     GROUP BY Patient_ID ) MAX_TRIGLYCERIDE ON P.ID = MAX_TRIGLYCERIDE.Patient_ID WHERE EX.Triglyceride = MAX_TRIGLYCERIDE.Max_Triglyceride; \t----- bird -----\tthrombosis_prediction",
    "1301": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 0 AND e.Creatinine_Phosphokinase > 100; \t----- bird -----\tthrombosis_prediction",
    "1302": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.AST glutamic oxaloacetic transaminase BETWEEN 30 AND 120 AND e.measure of degree of coagulation = 'Positive'; \t----- bird -----\tthrombosis_prediction",
    "1303": " SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.blood_glucose > 120 ORDER BY P.Birthday ASC LIMIT 1; \t----- bird -----\tthrombosis_prediction",
    "1304": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Blood_Glucose = 'normal' AND Examination.Thrombosis = 0; \t----- bird -----\tthrombosis_prediction",
    "1305": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.White_blood_cell >= 4000 AND Patient.Diagnosis = 'Normal'; \t----- bird -----\tthrombosis_prediction",
    "1306": " SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Diagnosis ON Examination.ID = Diagnosis.ID WHERE Diagnosis.Diagnosis = 'Systemic Lupus Erythematosus' AND Laboratory.White_blood_cell = 'Normal'; \t----- bird -----\tthrombosis_prediction",
    "1307": " SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Red blood cell IS NOT NULL AND e.Diagnosis LIKE '%outpatient clinic%' AND e.Red blood cell < 50 \t----- bird -----\tthrombosis_prediction",
    "1308": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.platelet = 'normal' AND e.Symptoms IS NOT NULL; \t----- bird -----\tthrombosis_prediction",
    "1309": " SELECT p.Platelet FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE p.SEX = 'M' AND p.Diagnosis = 'MCTD' AND e.platelet BETWEEN 150 AND 450; \t----- bird -----\tthrombosis_prediction",
    "1310": " SELECT AVG(prothrombin_time) AS average_prothrombin_time FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Male' AND prothrombin_time = 'Normal'; \t----- bird -----\tthrombosis_prediction",
    "1311": " SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 1 AND l.prothrombin_time = 1; \t----- bird -----\tthrombosis_prediction",
    "1312": " SELECT m.major_name FROM Major m JOIN Member me ON m.major_id = me.link_to_major WHERE me.first_name = 'Angela' AND me.last_name = 'Sanders'; \t----- bird -----\tstudent_club",
    "1313": " SELECT COUNT(DISTINCT Member.member_id) FROM Member JOIN Student_Club ON Member.link_to_major = Student_Club.major_id JOIN Major ON Student_Club.major_id = Major.major_id WHERE Major.college = 'College of Engineering'; \t----- bird -----\tstudent_club",
    "1314": " SELECT m.first_name, m.last_name FROM Member m JOIN Member_Club mc ON m.member_id = mc.member_id JOIN Club c ON mc.club_id = c.club_id WHERE c.club_name = 'Student_Club' AND m.department = 'Art and Design'; \t----- bird -----\tstudent_club",
    "1315": " SELECT COUNT(DISTINCT Attendance.member_id) FROM Attendance JOIN Event ON Attendance.link_to_event = Event.event_id JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Event.event_name = 'Women\\'s Soccer' AND Member.link_to_major.major_name = 'Student_Club'; \t----- bird -----\tstudent_club",
    "1316": " SELECT m.email FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id JOIN Major maj ON e.type = maj.major_name WHERE e.event_name = 'Women's Soccer' AND maj.department = 'Sports'; \t----- bird -----\tstudent_club",
    "1317": " SELECT COUNT(m.member_id) FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer' AND m.t_shirt_size ='medium'; \t----- bird -----\tstudent_club",
    "1318": " SELECT E.event_name, MAX(A.attendance_count) AS max_attendance FROM Event E JOIN Attendance A ON E.event_id = A.link_to_event JOIN Member M ON A.link_to_member = M.member_id JOIN Major Maj ON M.link_to_major = E.major_id WHERE Maj.major_name = 'Student_Club' GROUP BY E.event_name; \t----- bird -----\tstudent_club",
    "1319": " SELECT m.college FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id JOIN Event e ON m_major.event_id = e.event_id WHERE e.event_name = 'Vice President of Student_Club'; \t----- bird -----\tstudent_club",
    "1320": " SELECT E.event_name FROM Event AS E JOIN Attendance AS A ON E.event_id = A.link_to_event JOIN Member AS M ON A.link_to_member = M.member_id WHERE M.first_name = 'Maya' AND M.last_name = 'Mclean'; \t----- bird -----\tstudent_club",
    "1321": " SELECT COUNT(DISTINCT e.event_id) FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND e.type = 'Student_Club' AND YEAR(e.event_date) = 2019; \t----- bird -----\tstudent_club",
    "1322": " SELECT COUNT(DISTINCT e.event_id) FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id JOIN Student_Club sc ON m.link_to_major = sc.major_id WHERE sc.name = 'Student_Club' AND m.zip = (SELECT zip_code FROM Zip_Code WHERE city = 'City_Name' AND county = 'County_Name' AND state = 'State_Name' AND short_state = 'State_Short_Name') GROUP BY e.event_type HAVING COUNT(m.member_id) > 10 AND e.event_type = 'Meeting'; \t----- bird -----\tstudent_club",
    "1323": " SELECT E.event_name FROM Event E JOIN Attendance A ON E.event_id = A.link_to_event JOIN Member M ON A.link_to_member = M.member_id WHERE A.attendance_count > 20 AND E.status!= 'fundraiser' \t----- bird -----\tstudent_club",
    "1324": " SELECT AVG(attendance) AS average_attendance FROM Attendance JOIN Event ON Attendance.link_to_event = Event.event_id WHERE YEAR(Event.event_date) = 2020; \t----- bird -----\tstudent_club",
    "1325": " SELECT MAX(spent) AS most_expensive_item FROM Budget WHERE event_status = 'completed'; \t----- bird -----\tstudent_club",
    "1326": " SELECT COUNT(DISTINCT m.member_id) FROM Member m JOIN Major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'Environmental Engineering'; \t----- bird -----\tstudent_club",
    "1327": " SELECT M.first_name, M.last_name FROM Member M JOIN Attendance A ON M.member_id = A.link_to_member JOIN Event E ON A.link_to_event = E.event_id WHERE E.event_name = 'Laugh Out Loud' AND M.link_to_major IS NOT NULL; \t----- bird -----\tstudent_club",
    "1328": " SELECT m.first_name, m.last_name FROM Member m JOIN Major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Law and Constitutional Studies'; \t----- bird -----\tstudent_club",
    "1329": " SELECT Zip_Code.county FROM Zip_Code WHERE Zip_Code.city = 'Sherri Ramsey grew up city' AND Zip_Code.state = 'Sherri Ramsey grew up state'; \t----- bird -----\tstudent_club",
    "1330": " SELECT Major.college FROM Major JOIN Attendance ON Attendance.link_to_member = Member.member_id JOIN Event ON Event.event_id = Attendance.link_to_event WHERE Member.first_name = 'Tyler' AND Member.last_name = 'Hewitt'; \t----- bird -----\tstudent_club",
    "1331": " SELECT SUM(amount) AS total_funds_received FROM Income WHERE source = 'Vice President'; \t----- bird -----\tstudent_club",
    "1332": " SELECT SUM(cost) FROM Expense WHERE expense_description LIKE '%food%' AND link_to_member LIKE '%Student_Club%' AND expense_date BETWEEN '2022-09-01' AND '2022-09-30'; \t----- bird -----\tstudent_club",
    "1333": " SELECT zip.city, zip.state FROM Zip_Code AS zip JOIN Member AS mem ON zip.zip_code = mem.zip;  WHERE mem.first_name = 'President' AND mem.last_name = 'Student_Club'; \t----- bird -----\tstudent_club",
    "1334": " SELECT Member.first_name, Member.last_name FROM Member JOIN Zip_Code ON Member.zip = Zip_Code.zip_code WHERE Zip_Code.state = 'Illinois'; \t----- bird -----\tstudent_club",
    "1335": " SELECT SUM(spent) FROM Expense WHERE expense_description LIKE '%advertisement%' AND link_to_member LIKE '%Student_Club%' AND expense_date BETWEEN '2022-09-01' AND '2022-09-30'; \t----- bird -----\tstudent_club",
    "1336": " SELECT m.department FROM Major m JOIN Event e ON m.major_id = e.type JOIN Member mi ON e.link_to_member = mi.member_id WHERE mi.first_name = 'Pierce' AND mi.last_name = 'Guidi'; \t----- bird -----\tstudent_club",
    "1337": " SELECT SUM(amount) FROM Budget JOIN Event ON Budget.link_to_event = Event.event_id WHERE Event.event_name = 'October Speaker'; \t----- bird -----\tstudent_club",
    "1338": " SELECT approved FROM Expense WHERE expense_id = 'expense_id_of_October_Meeting' AND expense_date = '2019-10-08'; \t----- bird -----\tstudent_club",
    "1339": " SELECT SUM(cost) AS total_spent FROM Expense JOIN Budget ON Expense.link_to_budget = Budget.budget_id JOIN Event ON Budget.link_to_event = Event.event_id WHERE member_id = 'Elijah Allen' AND EXTRACT(MONTH FROM event_date) BETWEEN 9 AND 10 AND EXTRACT(YEAR FROM event_date) = 2022; \t----- bird -----\tstudent_club",
    "1340": " SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM Budget WHERE event_status = 'Student_Club' AND YEAR(event_date) = 2019 UNION SELECT SUM(spent) AS total_spent_2019, 0 AS total_spent_2020 FROM Budget WHERE event_status = 'Student_Club' AND YEAR(event_date) = 2020 \t----- bird -----\tstudent_club",
    "1341": " SELECT \"location\" FROM \"Event\" WHERE \"event name\" = 'Spring Budget Review'; \t----- bird -----\tstudent_club",
    "1342": " SELECT SUM(cost) AS total_cost FROM Expense WHERE expense_description = 'Posters' AND EXTRACT(YEAR FROM expense_date) = 2019 AND EXTRACT(MONTH FROM expense_date) = 9 AND EXTRACT(DAY FROM expense_date) = 4; \t----- bird -----\tstudent_club",
    "1343": " SELECT b.category, b.remaining FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.type = 'Food' ORDER BY b.remaining DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1344": " SELECT notes FROM Event WHERE event_date = '2019-09-14'; \t----- bird -----\tstudent_club",
    "1345": " SELECT COUNT(DISTINCT major.major_id) FROM Major WHERE college = 'College of Humanities and Social Sciences'; \t----- bird -----\tstudent_club",
    "1346": " SELECT email FROM Member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'; \t----- bird -----\tstudent_club",
    "1347": " SELECT zip.state FROM Zip_Code AS zip JOIN Member AS member ON zip.zip_code = member.zip;  WHERE member.first_name = 'Adela' AND member.last_name = 'O\\'Gallagher';\t----- bird -----\tstudent_club",
    "1348": " SELECT COUNT(*) FROM Budget WHERE event_id = (     SELECT event_id     FROM Event     WHERE event_name = 'November Meeting' ) AND spent > remaining; \t----- bird -----\tstudent_club",
    "1349": " SELECT SUM(amount) AS total_budget_september_speaker FROM Budget WHERE event_id = (     SELECT event_id     FROM Event     WHERE event_name = 'September Speaker' ); \t----- bird -----\tstudent_club",
    "1350": " SELECT e.event_name, e.status FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event WHERE a.link_to_member ='member_id_here' AND e.event_date = '2019-08-20'; \t----- bird -----\tstudent_club",
    "1351": " SELECT m.major_name FROM Major m JOIN Member me ON m.major_id = me.link_to_major WHERE me.first_name = 'Brent' AND me.last_name = 'Thomason'; \t----- bird -----\tstudent_club",
    "1352": " SELECT COUNT(m.member_id) FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Business' AND m.t_shirt_size = 'Medium'; \t----- bird -----\tstudent_club",
    "1353": " SELECT type FROM Zip_Code WHERE city = 'Christof Nielson' AND state = 'Colorado'; \t----- bird -----\tstudent_club",
    "1354": " SELECT m.major_name FROM Major m JOIN Member member ON m.major_id = member.link_to_major WHERE member.first_name = 'Vice President'; \t----- bird -----\tstudent_club",
    "1355": " SELECT Zip_Code.state FROM Zip_Code WHERE Zip_Code.city = 'Sacha Harrison' AND Zip_Code.short_state = 'S'; \t----- bird -----\tstudent_club",
    "1356": " SELECT m.department FROM Major m JOIN Member me ON m.major_id = me.link_to_major WHERE me.first_name = 'President'; \t----- bird -----\tstudent_club",
    "1357": " SELECT \"date paid\" FROM \"Income\" WHERE \"member id\" = 'Connor Hilton'; \t----- bird -----\tstudent_club",
    "1358": " SELECT m.first_name, m.last_name FROM Member m JOIN Income i ON m.member_id = i.link_to_member WHERE i.date_received = 'YYYY-MM-DD' AND i.amount > 0 ORDER BY i.date_received DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1359": " SELECT COUNT(*) FROM Budget WHERE category = 'Advertisement' AND event_id = (     SELECT event_id     FROM Event     WHERE event_name = 'Yearly Kickoff' ) AND spent > (     SELECT spent     FROM Budget     WHERE category = 'October Meeting'     AND event_id = (         SELECT event_id         FROM Event         WHERE event_name = 'October Meeting'     ) );\t----- bird -----\tstudent_club",
    "1360": " SELECT     (SUM(B.spent) / SUM(E.spent)) * 100 AS percentage FROM     Budget B JOIN     Event E ON B.link_to_event = E.event_id WHERE     E.event_name = 'November Speaker' AND     B.category = 'Parking'; \t----- bird -----\tstudent_club",
    "1361": " SELECT SUM(cost) AS total_pizza_cost FROM Expense WHERE expense_description LIKE '%pizza%'; \t----- bird -----\tstudent_club",
    "1362": " SELECT COUNT(DISTINCT city) AS number_of_cities FROM Zip_Code WHERE state = 'Virginia' AND county = 'Orange'; \t----- bird -----\tstudent_club",
    "1363": " SELECT DISTINCT department FROM Major WHERE college = 'College of Humanities and Social Sciences'; \t----- bird -----\tstudent_club",
    "1364": " SELECT Zip_Code.city FROM Zip_Code JOIN Member ON Zip_Code.zip = Member.zip WHERE Member.first_name = 'Amy' AND Member.last_name = 'Firth'; \t----- bird -----\tstudent_club",
    "1365": " SELECT b.category, e.spent, e.remaining FROM Budget b JOIN Expense e ON b.budget_id = e.budget_id ORDER BY e.remaining ASC LIMIT 1; \t----- bird -----\tstudent_club",
    "1366": " SELECT M.member_id, M.first_name, M.last_name FROM Member M JOIN Attendance A ON M.member_id = A.link_to_member WHERE A.link_to_event = 'October Meeting'; \t----- bird -----\tstudent_club",
    "1367": " SELECT zip.state, COUNT(member.member_id) AS member_count FROM member JOIN member_zip ON member.zip = member_zip.zip_code JOIN zip_code ON member_zip.zip_code = zip_code.zip_code JOIN Major ON member.link_to_major = Major.major_id GROUP BY zip.state ORDER BY member_count DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1368": " SELECT m.first_name, m.last_name, m.position FROM Member m JOIN Member_Phone p ON m.member_id = p.member_id WHERE p.phone_number = '809-555-3360'; \t----- bird -----\tstudent_club",
    "1369": " SELECT E.event_id, E.event_name, MAX(B.spent) AS highest_budget FROM Event E JOIN Budget B ON E.event_id = B.link_to_event GROUP BY E.event_id, E.event_name ORDER BY highest_budget DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1370": " SELECT e.expense_description, e.expense_date, e.cost, e.approved FROM Expense e JOIN Member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Vice' AND m.last_name = 'President'; \t----- bird -----\tstudent_club",
    "1371": " SELECT COUNT(DISTINCT Member.member_id) FROM Event JOIN Attendance ON Event.event_id = Attendance.link_to_event JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Event.event_name = 'Women's Soccer'; \t----- bird -----\tstudent_club",
    "1372": " SELECT i.date_received FROM Income i JOIN Member m ON i.link_to_member = m.member_id WHERE m.first_name = 'Casey' AND m.last_name = 'Mason'; \t----- bird -----\tstudent_club",
    "1373": " SELECT COUNT(DISTINCT zip) AS maryland_count FROM Member WHERE state = 'Maryland'; \t----- bird -----\tstudent_club",
    "1374": " SELECT COUNT(DISTINCT Event.event_id) FROM Event JOIN Attendance ON Event.event_id = Attendance.link_to_event JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Member.phone_number = '954-555-6240'; \t----- bird -----\tstudent_club",
    "1375": " SELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major FROM Member m JOIN Major major ON m.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education' AND major.college = 'College of Applied Sciences, Technology and Education'; \t----- bird -----\tstudent_club",
    "1376": " SELECT e.event_id, e.event_name, e.spend, e.budget, (e.spend / e.budget) AS spend_to_budget_ratio FROM Event e JOIN Budget b ON e.event_id = b.event_id WHERE e.status = 'closed' ORDER BY spend_to_budget_ratio DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1377": " SELECT COUNT(*) FROM Member WHERE position = 'president'; \t----- bird -----\tstudent_club",
    "1378": " SELECT MAX(spent) AS highest_budget_spend FROM Budget WHERE event_id IN (SELECT event_id FROM Event); \t----- bird -----\tstudent_club",
    "1379": " SELECT COUNT(*) FROM Event WHERE YEAR(event_date) = 2020 AND type ='meeting'; \t----- bird -----\tstudent_club",
    "1380": " SELECT SUM(spent) AS total_food_spent FROM Budget WHERE category = 'Food'; \t----- bird -----\tstudent_club",
    "1381": " SELECT m.member_id, m.first_name, m.last_name FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id HAVING COUNT(a.link_to_event) > 7; \t----- bird -----\tstudent_club",
    "1382": " SELECT m.member_id, m.first_name, m.last_name FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id JOIN Major maj ON e.type = 'Community Theater' AND maj.major_name = 'Interior Design'; \t----- bird -----\tstudent_club",
    "1383": " SELECT m.first_name, m.last_name FROM Member m JOIN ZipCode z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina'; \t----- bird -----\tstudent_club",
    "1384": " SELECT COUNT(*) FROM Income WHERE link_to_member = 'Grant Gilmour'; \t----- bird -----\tstudent_club",
    "1385": " SELECT m.member_id, m.first_name, m.last_name, i.amount FROM Member m JOIN Income i ON m.member_id = i.link_to_member WHERE i.amount > 40; \t----- bird -----\tstudent_club",
    "1386": " SELECT SUM(cost) AS total_expense FROM Expense WHERE event_id = (SELECT event_id FROM Event WHERE event_name = 'Yearly Kickoff'); \t----- bird -----\tstudent_club",
    "1387": " SELECT m.member_id, m.first_name, m.last_name FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_budget = b.budget_id WHERE b.category = 'Budget for Yearly Kickoff' AND m.link_to_major = 'Major ID for Yearly Kickoff'; \t----- bird -----\tstudent_club",
    "1388": " SELECT m.first_name, i.source FROM Member m JOIN Income i ON m.member_id = i.member_id ORDER BY i.amount DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1389": " SELECT e.event_id, e.event_name, e.cost FROM Event e ORDER BY e.cost ASC LIMIT 1; \t----- bird -----\tstudent_club",
    "1390": " SELECT SUM(spent) AS total_cost_yearly_kickoff, COUNT(*) AS event_count FROM Budget WHERE category = 'Yearly Kickoff' GROUP BY event_id;  SELECT (total_cost_yearly_kickoff / (SELECT SUM(amount) FROM Income)) * 100 AS percentage_of_total_cost FROM Budget WHERE category = 'Yearly Kickoff'; \t----- bird -----\tstudent_club",
    "1391": " SELECT     COUNT(DISTINCT m.major_id) AS finance_students,     COUNT(DISTINCT p.major_id) AS physics_students FROM     Member m JOIN     Major major1 ON m.link_to_major = major1.major_id JOIN     Major major2 ON m.link_to_major = major2.major_id WHERE     major1.major_name = 'Finance' AND     major2.major_name = 'Physics'; \t----- bird -----\tstudent_club",
    "1392": " SELECT source, SUM(amount) AS total_funds FROM Income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_funds DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1393": " SELECT m.first_name, m.email FROM Member m JOIN Member_Position mp ON m.member_id = mp.member_id JOIN Student_Club sc ON mp.club_id = sc.club_id WHERE sc.club_name = 'Student_Club' AND mp.position = 'Secretary'; \t----- bird -----\tstudent_club",
    "1394": " SELECT COUNT(DISTINCT m.member_id) FROM Member m JOIN Major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'Physics Teaching'; \t----- bird -----\tstudent_club",
    "1395": " SELECT COUNT(DISTINCT Member.member_id) FROM Event JOIN Attendance ON Event.event_id = Attendance.link_to_event JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Event.event_name = 'Community Theater' AND YEAR(Event.event_date) = 2019; \t----- bird -----\tstudent_club",
    "1396": " SELECT COUNT(DISTINCT e.member_id) AS total_events_attended FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi'; \t----- bird -----\tstudent_club",
    "1397": " SELECT AVG(SUM(e.cost)) AS average_food_spending FROM Expense e JOIN Event e2 ON e.link_to_event = e2.event_id WHERE e2.type = 'Student_Club' GROUP BY e2.event_id; \t----- bird -----\tstudent_club",
    "1398": " SELECT E.event_name, SUM(B.spent) AS total_spent FROM Event E JOIN Budget B ON E.event_id = B.link_to_event WHERE B.category = 'Advertisement' GROUP BY E.event_id, E.event_name ORDER BY total_spent DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1399": " SELECT * FROM Attendance JOIN Member ON Attendance.link_to_member = Member.member_id WHERE Member.first_name = 'Maya' AND Member.last_name = 'Mclean' AND Event.event_name = 'Women\\'s Soccer'; \t----- bird -----\tstudent_club",
    "1400": " SELECT SUM(CASE WHEN e.type = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage_share FROM Event e JOIN Major m ON e.type = m.major_name JOIN Member me ON e.link_to_member = me.member_id WHERE m.department = 'Student_Club' AND YEAR(e.event_date) = 2019; \t----- bird -----\tstudent_club",
    "1401": " SELECT b.cost FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Speaker'; \t----- bird -----\tstudent_club",
    "1402": " SELECT t_shirt_size, COUNT(*) AS popularity FROM Member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1403": " SELECT e.event_name, MAX(b.spent) AS max_exceeded_budget FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'closed' AND b.spent > b.remaining GROUP BY e.event_name; \t----- bird -----\tstudent_club",
    "1404": " SELECT SUM(cost) AS total_approved_expenses FROM Expense JOIN Budget ON Expense.link_to_budget = Budget.budget_id JOIN Event ON Budget.link_to_event = Event.event_id WHERE Event.event_name = 'October Meeting'; \t----- bird -----\tstudent_club",
    "1405": " SELECT b.category, SUM(b.spent) AS total_budgeted FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' GROUP BY b.category ORDER BY total_budgeted ASC; \t----- bird -----\tstudent_club",
    "1406": " SELECT b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.type = 'Food' ORDER BY b.spent DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1407": " SELECT b.category, SUM(b.spent) AS total_spent, b.remaining FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.category ORDER BY total_spent DESC LIMIT 3; \t----- bird -----\tstudent_club",
    "1408": " SELECT SUM(cost) AS total_cost_spent_for_parking FROM Expense WHERE expense_description = 'Parking'; \t----- bird -----\tstudent_club",
    "1409": " SELECT SUM(cost) AS total_expense_8_20_2019 FROM Expense WHERE expense_date = '2019-08-20'; \t----- bird -----\tstudent_club",
    "1410": " SELECT m.first_name, SUM(e.cost) AS total_cost FROM Member m JOIN Expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id; \t----- bird -----\tstudent_club",
    "1411": " SELECT e.expense_description, i.amount FROM Expense e JOIN Income i ON e.expense_id = i.income_id WHERE e.link_to_member = 'Sacha Harrison'; \t----- bird -----\tstudent_club",
    "1412": " SELECT m.member_id, e.event_name, e.event_date, b.category, e.spent FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_budget = b.budget_id WHERE m.t_shirt_size = 'X-Large'; \t----- bird -----\tstudent_club",
    "1413": " SELECT z.zip, m.member_id FROM ZipCode z JOIN Member m ON z.zip_code = m.zip WHERE m.income.amount < 50; \t----- bird -----\tstudent_club",
    "1414": " SELECT m.major_name FROM Major m JOIN Member me ON m.major_id = me.link_to_major WHERE me.first_name = 'Phillip' AND me.last_name = 'Cullen'; \t----- bird -----\tstudent_club",
    "1415": " SELECT m.first_name, m.last_name, m.position FROM Member m JOIN MemberMajor mm ON m.member_id = mm.member_id JOIN Major maj ON mm.major_id = maj.major_id WHERE maj.major_name = 'Business'; \t----- bird -----\tstudent_club",
    "1416": " SELECT COUNT(*) FROM Member WHERE position = 'Business' AND t_shirt_size = 'Medium'; \t----- bird -----\tstudent_club",
    "1417": " SELECT e.event_name, b.category, b.remaining FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30; \t----- bird -----\tstudent_club",
    "1418": " SELECT e.type FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event WHERE a.link_to_member ='member_id_123'; \t----- bird -----\tstudent_club",
    "1419": " SELECT e.category FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event WHERE a.event_date = '2020-03-24T12:00:00'; \t----- bird -----\tstudent_club",
    "1420": " SELECT m.major_name FROM Major m JOIN Member member ON m.major_id = member.link_to_major WHERE member.first_name = 'Vice President' AND member.last_name = 'Unknown'; \t----- bird -----\tstudent_club",
    "1421": " SELECT COUNT(DISTINCT Member.member_id) * 100.0 / (SELECT COUNT(DISTINCT Member.member_id) FROM Member) AS percentage_major_business_members FROM Member JOIN Major ON Member.link_to_major = Major.major_id WHERE Major.major_name = 'Business'; \t----- bird -----\tstudent_club",
    "1422": " SELECT \"type\" FROM \"Event\" WHERE \"location\" = 'MU 215'; \t----- bird -----\tstudent_club",
    "1423": " SELECT COUNT(*) FROM Income WHERE amount = 50; \t----- bird -----\tstudent_club",
    "1424": " SELECT COUNT(*) FROM Member WHERE t_shirt_size = 'extra large'; \t----- bird -----\tstudent_club",
    "1425": " SELECT COUNT(*) FROM Major WHERE department = 'School of Applied Sciences, Technology and Education'; \t----- bird -----\tstudent_club",
    "1426": " SELECT m.first_name, m.last_name, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major.major_name AS department, m.link_to_major.college_name AS college FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Environmental Engineering' \t----- bird -----\tstudent_club",
    "1427": " SELECT b.category FROM Budget b JOIN Event e ON b.link_to_event = e.event_id JOIN ZipCode z ON e.location = z.city WHERE z.city = 'MU 215' AND z.type = 'guest speaker'; \t----- bird -----\tstudent_club",
    "1428": " SELECT M.first_name, M.last_name, M.city, M.state FROM Member M JOIN ZipCode ZC ON M.zip = ZC.zip_code JOIN Major MA ON M.link_to_major = MA.major_id WHERE MA.department = 'Electrical and Computer Engineering'; \t----- bird -----\tstudent_club",
    "1429": " SELECT e.event_name FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.position = 'Vice President' AND m.link_to_major.major_name = 'Student_Club' AND e.location = '900 E. Washington St'; \t----- bird -----\tstudent_club",
    "1430": " SELECT m.last_name, m.position FROM Member m JOIN Expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10'; \t----- bird -----\tstudent_club",
    "1431": " SELECT m.last_name FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id WHERE e.event_name = 'women\\'s soccer event'; \t----- bird -----\tstudent_club",
    "1432": " SELECT SUM(amount) FROM Income WHERE source = 'Student_Club' AND notes LIKE '%medium%'; \t----- bird -----\tstudent_club",
    "1433": " SELECT zip.state, zip.short_state FROM ZipCode AS zip JOIN Major AS major ON zip.zip = major.zip WHERE major.department = 'Post Office' GROUP BY zip.state, zip.short_state HAVING COUNT(DISTINCT major.college) > 0; \t----- bird -----\tstudent_club",
    "1434": " SELECT Zip_Code.zip FROM Zip_Code JOIN Major ON Zip_Code.zip = Major.college JOIN Event ON Event.location = Zip_Code.city JOIN Member ON Member.zip = Zip_Code.zip WHERE Major.college = 'San Juan Municipio' AND Major.state = 'Puerto Rico' AND Zip_Code.type = 'PO Box'; \t----- bird -----\tstudent_club",
    "1435": " SELECT e.event_name FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'closed' AND e.event_name = 'game' AND b.event_date BETWEEN '2019-03-15' AND '2020-03-20'; \t----- bird -----\tstudent_club",
    "1436": " SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN Member m ON a.link_to_member = m.member_id WHERE m.zip = (SELECT zip_code FROM Zip_Code WHERE city = 'New York' AND county = 'New York') AND m.position = 'Member' AND m.phone = '123-456-7890' AND m.email ='member@example.com'; \t----- bird -----\tstudent_club",
    "1437": " SELECT m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location FROM Member m JOIN Attendance a ON m.member_id = a.link_to_member JOIN Event e ON a.link_to_event = e.event_id WHERE m.approved = 'true' AND a.attendance_date BETWEEN '2019-01-10' AND '2019-11-19' AND e.status = 'approved'; \t----- bird -----\tstudent_club",
    "1438": " SELECT M.college FROM Member M JOIN Member.link_to_major LM ON LM.major_id ='rec1N0upiVLy5esTO' JOIN Major M2 ON M2.major_id = LM.major_id WHERE M.first_name = 'Katy'; \t----- bird -----\tstudent_club",
    "1439": " SELECT m.email FROM Member m JOIN Major m_major ON m.link_to_major = m_major.major_id JOIN ZipCode z ON m.zip = z.zip_code WHERE m_major.major_name = 'Business' AND z.city = 'College of Agriculture and Applied Sciences'; \t----- bird -----\tstudent_club",
    "1440": " SELECT m.email FROM Member m JOIN Income i ON m.member_id = i.member_id JOIN Expense e ON i.income_id = e.income_id JOIN Budget b ON e.link_to_budget = b.budget_id JOIN Event e2 ON b.link_to_event = e2.event_id WHERE e2.event_date BETWEEN '2019-09-10' AND '2019-11-19' AND b.spent > 20 AND i.amount > 20 GROUP BY m.email; \t----- bird -----\tstudent_club",
    "1441": " SELECT COUNT(DISTINCT m.member_id) FROM Member m JOIN Major maj ON m.link_to_major = maj.major_id WHERE maj.college = 'College of Education & Human Services'; \t----- bird -----\tstudent_club",
    "1442": " SELECT     (COUNT(*) * 100.0 / SUM(COUNT(*))) AS percentage_over_budget FROM     Event JOIN     Budget ON Event.event_id = Budget.link_to_event WHERE     spent > remaining; \t----- bird -----\tstudent_club",
    "1443": " SELECT e.event_id, e.location, e.status FROM Event e JOIN ZipCode z ON e.location = z.city WHERE z.state = 'California' AND z.county = 'San Francisco' AND e.event_date BETWEEN '2019-11-01' AND '2020-03-31'; \t----- bird -----\tstudent_club",
    "1444": " SELECT e.expense_id, e.expense_description, AVG(e.cost) AS average_cost FROM Expense e JOIN Budget b ON e.expense_id = b.expense_id WHERE b.spent > 50 GROUP BY e.expense_id, e.expense_description HAVING average_cost > 50; \t----- bird -----\tstudent_club",
    "1445": " SELECT first_name, last_name FROM Member WHERE t_shirt_size = 'extra large'; \t----- bird -----\tstudent_club",
    "1446": " SELECT COUNT(DISTINCT zip) * 100.0 / (SELECT COUNT(*) FROM Zip Code) AS percentage_po_boxes FROM Zip Code WHERE type = 'PO Box'; \t----- bird -----\tstudent_club",
    "1447": " SELECT e.event_name, e.location FROM Event e JOIN Budget b ON e.event_id = b.event_id WHERE b.spent < b.remaining \t----- bird -----\tstudent_club",
    "1448": " SELECT e.event_name, e.event_date FROM Event e JOIN Expense e_expense ON e.event_id = e_expense.link_to_event JOIN Budget b ON e_expense.link_to_event = b.link_to_event WHERE e_expense.expense_description LIKE '%pizza%' AND b.category = 'Food' AND (b.spent - b.remaining) BETWEEN 50 AND 99 AND e.status = 'Active'; \t----- bird -----\tstudent_club",
    "1449": " SELECT m.first_name, m.last_name, m.major_name FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event WHERE b.spent > 100; \t----- bird -----\tstudent_club",
    "1450": " SELECT e.city, e.state, e.short_state FROM Event e JOIN Attendance a ON e.event_id = a.link_to_event JOIN ZipCode z ON e.location = z.zip_code WHERE a.member_id IN (     SELECT m.member_id     FROM Member m     GROUP BY m.member_id     HAVING COUNT(i.income_id) > 40 ) \t----- bird -----\tstudent_club",
    "1451": " SELECT m1.member_id, m1.first_name, m1.last_name, SUM(e1.cost) AS total_expense FROM Expense e1 JOIN Member m1 ON e1.link_to_member = m1.member_id JOIN Expense e2 ON e1.link_to_member = e2.link_to_member AND e1.expense_date < e2.expense_date JOIN Event e2 ON e2.event_id = e1.link_to_event AND e2.event_id = e2.link_to_event WHERE e1.approved = 'true' AND e2.approved = 'true' GROUP BY m1.member_id, m1.first_name, m1.last_name HAVING COUNT(DISTINCT e2.event_id) > 1 ORDER BY total_expense DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1452": " SELECT AVG(amount) AS average_amount_paid FROM Income WHERE member_id NOT IN (     SELECT member_id     FROM Member ); \t----- bird -----\tstudent_club",
    "1453": " SELECT e.event_name FROM Event e JOIN (     SELECT event_id, AVG(cost) AS avg_cost     FROM Expense     GROUP BY event_id ) avg_cost ON e.event_id = avg_cost.event_id WHERE e.cost < avg_cost.avg_cost; \t----- bird -----\tstudent_club",
    "1454": " SELECT AVG(cost) * 100 AS percentage_of_cost_for_meeting_events FROM Expense WHERE event_status ='meeting' \t----- bird -----\tstudent_club",
    "1455": " SELECT b.category, SUM(e.cost) AS total_spent FROM Budget b JOIN Expense e ON b.budget_id = e.budget_id JOIN ZipCode z ON b.zip_code = z.zip_code WHERE z.type = 'Zip Code' AND e.expense_description LIKE '%water%' AND e.expense_description LIKE '%chips%' AND e.expense_description LIKE '%cookies%' GROUP BY b.category ORDER BY total_spent DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1456": " SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event JOIN Event e2 ON b.link_to_event = e2.event_id GROUP BY m.member_id ORDER BY total_spent DESC LIMIT 5; \t----- bird -----\tstudent_club",
    "1457": " SELECT m.first_name, m.phone FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event JOIN (     SELECT category, AVG(cost) AS avg_cost     FROM Expense     GROUP BY category ) avg_cost ON e.category = avg_cost.category WHERE e.cost > avg_cost.avg_cost \t----- bird -----\tstudent_club",
    "1458": " SELECT     (SUM(CASE WHEN Zip_Code.state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_nj,     (SUM(CASE WHEN Zip_Code.state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_vt FROM     Member JOIN     Zip_Code ON Member.zip = Zip_Code.zip_code GROUP BY     1; \t----- bird -----\tstudent_club",
    "1459": " SELECT m.major_name, m.department FROM Major m JOIN Member me ON m.major_id = me.link_to_major WHERE me.email = 'garrett.gerke@example.com'; \t----- bird -----\tstudent_club",
    "1460": " SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM Member m JOIN Expense e ON m.member_id = e.link_to_member JOIN Budget b ON e.link_to_event = b.link_to_event JOIN Event e2 ON b.link_to_event = e2.event_id WHERE e2.event_type = 'water, veggie tray and supplies' GROUP BY m.member_id LIMIT 1; \t----- bird -----\tstudent_club",
    "1461": " SELECT m.first_name, m.last_name, m.phone FROM Member m JOIN Major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Elementary Education'; \t----- bird -----\tstudent_club",
    "1462": " SELECT b.category, b.amount FROM Budget b JOIN Event e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker'; \t----- bird -----\tstudent_club",
    "1463": " SELECT e.event_name FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food'; \t----- bird -----\tstudent_club",
    "1464": " SELECT m.first_name, m.last_name, i.amount FROM Member m JOIN Income i ON m.member_id = i.member_id WHERE i.date_received = '2019-09-09' AND i.amount IS NOT NULL; \t----- bird -----\tstudent_club",
    "1465": " SELECT category FROM Budget WHERE expense_description = 'Posters'; \t----- bird -----\tstudent_club",
    "1466": " SELECT m.first_name, m.last_name, m.position, m.college FROM Member m JOIN Event e ON m.member_id = e.member_id JOIN Budget b ON e.event_id = b.event_id JOIN Expense e2 ON b.expense_id = e2.expense_id JOIN Income i ON e2.income_id = i.income_id WHERE m.position = 'Secretary'; \t----- bird -----\tstudent_club",
    "1467": " SELECT e.event_name, SUM(b.spent) AS total_spent FROM Event e JOIN Budget b ON e.event_id = b.link_to_event WHERE b.category ='speaker gifts' GROUP BY e.event_id, e.event_name ORDER BY total_spent DESC LIMIT 1; \t----- bird -----\tstudent_club",
    "1468": " SELECT zip.city FROM Zip_Code AS zip JOIN Member AS mem ON zip.zip_code = mem.zip;  WHERE mem.first_name = 'Garrett' AND mem.last_name = 'Gerke'; \t----- bird -----\tstudent_club",
    "1469": " SELECT M.first_name, M.last_name, M.position FROM Member M JOIN ZipCode ZC ON M.zip = ZC.zip_code WHERE ZC.city = 'Lincolnton' AND ZC.county = 'Lincoln' AND ZC.state = 'North Carolina' AND ZC.short_state = 'NC' AND ZC.zip_code = 28092; \t----- bird -----\tstudent_club",
    "1470": " SELECT COUNT(DISTINCT gas_stations.Gas_Station_ID) FROM gas_stations JOIN products ON gas_stations.Gas_Station_ID = products.Product_ID WHERE gas_stations.Country = 'CZE' AND products.Description LIKE '%Premium%'; \t----- bird -----\tdebit_card_specializing",
    "1471": " SELECT     (         SELECT             COUNT(*)         FROM             transactions         WHERE             Currency = 'EUR'     ) AS eu_customers,     (         SELECT             COUNT(*)         FROM             transactions         WHERE             Currency = 'CZK'     ) AS czk_customers,     (eu_customers / czk_customers) AS ratio FROM     customers; \t----- bird -----\tdebit_card_specializing",
    "1472": " SELECT c.client_segment, ym.Consumption FROM customers c JOIN year_and_month ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'LAM' AND ym.Date LIKE '2012-%' ORDER BY ym.Consumption ASC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1473": " SELECT AVG(Consumption) AS average_monthly_consumption FROM year_and_month WHERE CustomerID IN (     SELECT CustomerID     FROM customers     WHERE client_segment = 'SME' ) AND YEAR(Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1474": " SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE c.Currency = 'CZK' AND YEAR(t.Date) = 2011 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1475": " SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE customers.client_segment = 'KAM' AND year_and_month.Date LIKE '2012-%' AND year_and_month.Consumption < 30000; \t----- bird -----\tdebit_card_specializing",
    "1476": " SELECT     c.client_segment,     SUM(t.Amount) AS total_consumption_czk,     SUM(t.Amount) AS total_consumption_eur,     (SUM(t.Amount) - SUM(t.Amount)) AS consumption_difference FROM     transactions t JOIN     customers c ON t.CustomerID = c.CustomerID WHERE     t.Date BETWEEN '2012-01-01' AND '2012-12-31'     AND t.CardID IN (         SELECT CardID         FROM transactions         WHERE Currency = 'CZK'     )     AND t.CardID IN (         SELECT CardID         FROM transactions         WHERE Currency = 'EUR'     ) GROUP BY     c.CustomerID,     c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1477": " SELECT year, SUM(consumption) AS total_consumption FROM year_and_month JOIN customers ON year_and_month.CustomerID = customers.CustomerID JOIN transactions ON year_and_month.CustomerID = transactions.Customer ID JOIN products ON transactions.ProductID = products.ProductID JOIN gas_stations ON transactions.GasStationID = gas_stations.GasStationID WHERE products.Currency = 'EUR' GROUP BY year ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1478": " SELECT c.client_segment, MIN(t.consumption) AS least_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1479": " SELECT ym.Date, SUM(t.Amount) AS total_consumption FROM year_and_month ym JOIN transactions t ON ym.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations gs ON t.GasStationID = gs.GasStationID JOIN customers c ON ym.CustomerID = c.CustomerID WHERE p.Description LIKE '%gas%' AND c.Currency = 'CZK' GROUP BY ym.Date ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1480": " SELECT CustomerID FROM customers WHERE client_segment = 'SME' AND YEAR(Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1481": " SELECT     c.client_segment,     AVG(y.Consumption) AS avg_annual_consumption FROM     customers c JOIN     year_and_month y ON c.CustomerID = y.CustomerID WHERE     y.Date BETWEEN '2013-01-01' AND '2013-12-31' GROUP BY     c.client_segment ORDER BY     avg_annual_consumption ASC LIMIT 1;  -- For SME vs LAM SELECT     AVG(y1.Consumption) - AVG(y2.Consumption) FROM     (SELECT * FROM year_and_month WHERE c.client_segment = 'SME' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y1 JOIN     (SELECT * FROM year_and_month WHERE c.client_segment = 'LAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y2 ON     y1.CustomerID = y2.CustomerID WHERE     y1.Date = (SELECT MIN(Date) FROM year_and_month WHERE c.client_segment = 'SME' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31');  -- For LAM vs KAM SELECT     AVG(y1.Consumption) - AVG(y2.Consumption) FROM     (SELECT * FROM year_and_month WHERE c.client_segment = 'LAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y1 JOIN     (SELECT * FROM year_and_month WHERE c.client_segment = 'KAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y2 ON     y1.CustomerID = y2.CustomerID WHERE     y1.Date = (SELECT MIN(Date) FROM year_and_month WHERE c.client_segment = 'LAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31');  -- For KAM vs SME SELECT     AVG(y1.Consumption) - AVG(y2.Consumption) FROM     (SELECT * FROM year_and_month WHERE c.client_segment = 'KAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y1 JOIN     (SELECT * FROM year_and_month WHERE c.client_segment = 'SME' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31') y2 ON     y1.CustomerID = y2.CustomerID WHERE     y1.Date = (SELECT MIN(Date) FROM year_and_month WHERE c.client_segment = 'KAM' AND y.Date BETWEEN '2013-01-01' AND '2013-12-31'); \t----- bird -----\tdebit_card_specializing",
    "1482": " SELECT     c.client_segment,     (SUM(CASE WHEN t.Date = '2013-01-01' THEN t.Amount ELSE 0 END) - SUM(CASE WHEN t.Date = '2012-01-01' THEN t.Amount ELSE 0 END)) /        (SUM(CASE WHEN t.Date = '2012-01-01' THEN t.Amount ELSE 0 END) IFNULL(SUM(CASE WHEN t.Date = '2013-01-01' THEN t.Amount ELSE 0 END), 0)) * 100 AS percentage_increase FROM     customers c JOIN     transactions t ON c.CustomerID = t.CustomerID WHERE     t.Date BETWEEN '2012-01-01' AND '2013-01-01' GROUP BY     c.client_segment ORDER BY     percentage_increase DESC,     c.client_segment ASC LIMIT 3; \t----- bird -----\tdebit_card_specializing",
    "1483": " SELECT SUM(transactions.Amount) FROM year_and_month JOIN customers ON year_and_month.CustomerID = customers.CustomerID JOIN transactions ON year_and_month.TransactionID = transactions.TransactionID WHERE customers.CustomerID = 6 AND year_and_month.Date BETWEEN '2013-08-01' AND '2013-11-30'; \t----- bird -----\tdebit_card_specializing",
    "1484": " SELECT     COUNT(*) FILTER (WHERE country = 'Czech Republic') AS czech_republic_count,     COUNT(*) FILTER (WHERE country = 'Slovakia') AS slovakia_count FROM     gas_stations WHERE     chain_segment = 'discount';  SELECT     (czech_republic_count - slovakia_count) AS discount_station_difference; \t----- bird -----\tdebit_card_specializing",
    "1485": " SELECT c1.client_segment, c2.chain_segment, SUM(t1.amount) AS total_consumption FROM customers c1 JOIN gas_stations g1 ON c1.client_segment = g1.chain_segment JOIN transactions t1 ON c1.CustomerID = t1.Customer_ID JOIN year_and_month ym1 ON c1.CustomerID = ym1.Customer_ID JOIN customers c2 ON g1.Chain_ID = c2.Client_Segment JOIN gas_stations g2 ON c2.Chain_ID = g2.Chain_ID JOIN transactions t2 ON c2.CustomerID = t2.Customer_ID JOIN year_and_month ym2 ON c2.CustomerID = ym2.Customer_ID WHERE ym1.Date = '2013-04-01' AND ym2.Date = '2013-04-30' AND c1.CustomerID = 7 AND c2.CustomerID = 5 GROUP BY c1.client_segment, c2.chain_segment; \t----- bird -----\tdebit_card_specializing",
    "1486": " SELECT SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS num_czk_transactions,            SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS num_eur_transactions FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE customers.client_segment = 'SME'; \t----- bird -----\tdebit_card_specializing",
    "1487": " SELECT c.CustomerID, c.client_segment, ym.Consumption FROM customers c JOIN year_and_month ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '2013-10%' ORDER BY ym.Consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1488": " SELECT c.client_segment, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID GROUP BY c.client_segment ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1489": " SELECT SUM(consumption) FROM year_and_month WHERE CustomerID = (SELECT CustomerID FROM customers WHERE client_segment = 'KAM') AND Date LIKE '2013-05-%'; \t----- bird -----\tdebit_card_specializing",
    "1490": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE client_segment = 'LAM') AS percentage_consuming_more_than_46_73 FROM year_and_month WHERE consumption > 46.73 AND CustomerID IN (SELECT CustomerID FROM customers WHERE client_segment = 'LAM'); \t----- bird -----\tdebit_card_specializing",
    "1491": " CREATE TEMPORARY TABLE gas_stations_value_for_money AS SELECT     g.Gas_Station_ID,     g.Country,     p.Price AS product_price,     t.Amount AS transaction_amount,     CASE         WHEN p.Price <= t.Amount THEN 1         ELSE 0     END AS value_for_money FROM     gas_stations g JOIN     products p ON g.Gas_Station_ID = p.Product_ID JOIN     transactions t ON g.Gas_Station_ID = t.Gas_Station_ID; \t----- bird -----\tdebit_card_specializing",
    "1492": " SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers WHERE client_segment = 'KAM') AS percentage_euros_payers FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE customers.Currency = 'euros'; \t----- bird -----\tdebit_card_specializing",
    "1493": " SELECT AVG(consumption) * 100 AS percentage FROM year_and_month WHERE MONTH(Date) = 2 AND YEAR(Date) = 2012 AND consumption > 528.3 AND CustomerID IN (SELECT CustomerID FROM customers); \t----- bird -----\tdebit_card_specializing",
    "1494": " SELECT COUNT(DISTINCT gas_stations.Gas_Station_ID) * 100.0 / (SELECT COUNT(*) FROM gas_stations) AS percentage_premium_stations FROM gas_stations JOIN chain_segments ON gas_stations.chain_segment = chain_segments.segment JOIN countries ON gas_stations.Country = countries.name WHERE countries.name = 'Slovakia' AND chain_segments.segment = 'premium'; \t----- bird -----\tdebit_card_specializing",
    "1495": " SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 9 AND YEAR(t.Date) = 2013 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1496": " SELECT c.client_segment, MIN(t.Amount) AS least_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE MONTH(t.Date) = 9 AND YEAR(t.Date) = 2013 GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1497": " SELECT c.client_segment, cm.Consumption FROM customers c JOIN year_and_month cm ON c.CustomerID = cm.CustomerID JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations gs ON t.GasStationID = gs.GasStationID WHERE MONTH(t.Date) = 6 AND YEAR(t.Date) = 2012 ORDER BY cm.Consumption ASC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1498": " SELECT MAX(Consumption) AS highest_monthly_consumption_2012 FROM year_and_month WHERE YEAR(Date) = 2012 AND CustomerID IN (SELECT CustomerID FROM customers); \t----- bird -----\tdebit_card_specializing",
    "1499": " SELECT c.client_segment, MAX(tm.Consumption) AS biggest_monthly_consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN year_and_month tm ON t.CustomerID = tm.Customer_ID WHERE c.Currency = 'euro' GROUP BY c.client_segment; \t----- bird -----\tdebit_card_specializing",
    "1500": " SELECT p.Description FROM products p JOIN year_and_month ym ON p.ProductID = ym.ProductID WHERE MONTH(ym.Date) = 9 AND YEAR(ym.Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1501": " SELECT gas_stations.Country FROM gas_stations JOIN transactions ON gas_stations.Gas_Station_ID = transactions.Gas_Station_ID WHERE MONTH(transactions.Date) = 6 AND YEAR(transactions.Date) = 2013; \t----- bird -----\tdebit_card_specializing",
    "1502": " SELECT g.chain_segment, g.Chain_ID FROM gas_stations g JOIN transactions t ON g.Gas_Station_ID = t.Gas_Station_ID JOIN products p ON t.Product_ID = p.Product_ID WHERE t.Amount IN (SELECT Amount FROM transactions WHERE Price IN (SELECT Price FROM products WHERE Currency = 'EUR')) GROUP BY g.chain_segment, g.Chain_ID; \t----- bird -----\tdebit_card_specializing",
    "1503": " SELECT p.Description FROM products p JOIN transactions t ON p.ProductID = t.ProductID JOIN year_and_month ym ON t.CustomerID = ym.CustomerID WHERE t.Amount * ym.Consumption = (SELECT SUM(t2.Amount * t2.Consumption) FROM transactions t2 WHERE t2.ProductID = p.ProductID) AND t.Price * ym.Consumption = (SELECT SUM(t2.Price * t2.Consumption) FROM transactions t2 WHERE t2.ProductID = p.ProductID) AND t.Currency = 'EUR'; \t----- bird -----\tdebit_card_specializing",
    "1504": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN year_and_month ym ON t.CustomerID = ym.CustomerID WHERE MONTH(t.Date) = 1 AND YEAR(t.Date) = 2012; \t----- bird -----\tdebit_card_specializing",
    "1505": " SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN transactions ON customers.CustomerID = transactions.CustomerID JOIN products ON transactions.ProductID = products.ProductID JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE customers.Currency = 'euro' AND year_and_month.Consumption > 1000; \t----- bird -----\tdebit_card_specializing",
    "1506": " SELECT p.Description FROM transactions t JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'Czech Republic'; \t----- bird -----\tdebit_card_specializing",
    "1507": " SELECT gas_stations.Gas_Station_ID, transactions.Date, transactions.Time FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID WHERE gas_stations.Chain_ID = 11 \t----- bird -----\tdebit_card_specializing",
    "1508": " SELECT COUNT(*) FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID JOIN customers ON transactions.Customer_ID = customers.Customer_ID WHERE gas_stations.Country = 'Czech Republic' AND transactions.Price > 1000; \t----- bird -----\tdebit_card_specializing",
    "1509": " SELECT COUNT(*) FROM transactions JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID JOIN customers ON transactions.Customer_ID = customers.Customer_ID WHERE gas_stations.Country = 'Czech Republic' AND transactions.Date >= '2012-01-01'; \t----- bird -----\tdebit_card_specializing",
    "1510": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN gas_stations gs ON t.Gas_Station_ID = gs.Gas_Station_ID WHERE gs.Country = 'Czech Republic'; \t----- bird -----\tdebit_card_specializing",
    "1511": " SELECT AVG(t.Price) AS average_total_price FROM transactions t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Currency = 'euro'; \t----- bird -----\tdebit_card_specializing",
    "1512": " SELECT c.CustomerID, c.client_segment, c.Currency, t.Amount FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-25' AND t.Time = '22:00:00' AND c.Currency = 'USD' ORDER BY t.Amount DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1513": " SELECT t.*, c.*, g.* FROM transactions t JOIN customers c ON t.CustomerID = c.CustomerID JOIN gas_stations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-25' AND (SELECT COUNT(*) FROM transactions WHERE t.Date = (SELECT MAX(Date) FROM transactions WHERE t.Date < (SELECT MAX(Date) FROM transactions))) = 1; \t----- bird -----\tdebit_card_specializing",
    "1514": " SELECT transactions.Currency FROM transactions WHERE transactions.Date = '2012-08-24 16:25:00' AND transactions.CustomerID = (     SELECT customers.CustomerID     FROM customers     WHERE customers.Currency = transactions.Currency ); \t----- bird -----\tdebit_card_specializing",
    "1515": " SELECT c.client_segment FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-23 21:20:00' LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1516": " SELECT COUNT(*) FROM transactions WHERE Amount IN (SELECT Amount FROM products WHERE Description = 'CZK') AND Time LIKE '06:00:%' AND Date = '2012-08-26' AND Currency = 'CZK'; \t----- bird -----\tdebit_card_specializing",
    "1517": " SELECT client_segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers); \t----- bird -----\tdebit_card_specializing",
    "1518": " SELECT gas_stations.Country FROM transactions JOIN year_and_month ON transactions.Customer_ID = year_and_month.Customer_ID JOIN gas_stations ON transactions.Gas_Station_ID = gas_stations.Gas_Station_ID WHERE transactions.Date = '2012-08-24 12:42:00'; \t----- bird -----\tdebit_card_specializing",
    "1519": " SELECT transactions.ProductID FROM transactions WHERE transactions.Date = '2012-08-23 21:20:00'; \t----- bird -----\tdebit_card_specializing",
    "1520": " SELECT SUM(transactions.Amount) AS total_2012_aug_24_spending FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE transactions.Date = '2012-08-24' AND transactions.Amount = 124.05 AND customers.Currency = 'USD';  SELECT SUM(transactions.Amount) AS jan_2012_spending FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE customers.Currency = 'USD' AND transactions.Date BETWEEN '2012-01-01' AND '2012-01-31';  SELECT transactions.Date, transactions.Amount FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE transactions.Date BETWEEN '2012-01-01' AND '2012-01-31' AND customers.Currency = 'USD' ORDER BY transactions.Date ASC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1521": " SELECT COUNT(*) FROM transactions JOIN year_and_month ON transactions.CustomerID = year_and_month.CustomerID WHERE transactions.Date BETWEEN '2012-08-26 08:00:00' AND '2012-08-26 09:00:00' AND year_and_month.Country = 'CZE'; \t----- bird -----\tdebit_card_specializing",
    "1522": " SELECT t.Currency FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID WHERE t.Date = '2013-06-01' AND t.Amount = 214582.17; \t----- bird -----\tdebit_card_specializing",
    "1523": " SELECT T2.Country FROM transactions AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CardID = 667467; \t----- bird -----\tdebit_card_specializing",
    "1524": " SELECT c.client_segment, g.chain_segment, p.description, t.Amount FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gas_stations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4; \t----- bird -----\tdebit_card_specializing",
    "1525": " SELECT COUNT(DISTINCT customers.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT customers.CustomerID) FROM customers) AS percentage FROM customers JOIN transactions ON customers.CustomerID = transactions.CustomerID JOIN year_and_month ON customers.CustomerID = year_and_month.CustomerID WHERE transactions.Date = '2012-08-25' AND customers.Currency = 'EUR'; \t----- bird -----\tdebit_card_specializing",
    "1526": " SELECT     c.client_segment,     ym.Consumption,     (ym.Consumption - (         SELECT             SUM(Amount)         FROM             transactions t         WHERE             t.CustomerID = c.CustomerID             AND YEAR(t.Date) = 2012             AND MONTH(t.Date) = 8             AND t.Amount < 634.8     )) / (         SELECT             SUM(Amount)         FROM             transactions t2         WHERE             t2.CustomerID = c.CustomerID             AND YEAR(t.Date) = 2013             AND MONTH(t.Date) = 8     ) AS consumption_decrease_rate FROM     customers c JOIN     year_and_month ym ON c.CustomerID = ym.CustomerID WHERE     ym.Date = '2012-08-25'     AND ym.Consumption > 0; \t----- bird -----\tdebit_card_specializing",
    "1527": " SELECT g.Gas Station ID, g.Country, SUM(t.Amount) AS Total Revenue FROM transactions t JOIN gas_stations g ON t.Gas Station ID = g.Gas Station ID GROUP BY g.Gas Station ID, g.Country ORDER BY Total Revenue DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1528": " SELECT     (SUM(CASE WHEN \"client segment\" = 'premium' THEN 1 ELSE 0 END) / SUM(1)) * 100 FROM     customers WHERE     \"Country\" = 'SVK'; \t----- bird -----\tdebit_card_specializing",
    "1529": " SELECT SUM(transactions.Amount) AS total_spent FROM transactions JOIN customers ON transactions.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508; \t----- bird -----\tdebit_card_specializing",
    "1530": " SELECT products.Description, COUNT(transactions.ProductID) AS product_sales FROM products JOIN transactions ON products.ProductID = transactions.ProductID GROUP BY products.Description ORDER BY product_sales DESC LIMIT 5; \t----- bird -----\tdebit_card_specializing",
    "1531": " SELECT     c.client_segment,     MAX(t.Amount) AS top_spending_amount,     AVG(t.Price) AS avg_price_per_item,     g.Currency FROM     customers c JOIN     transactions t ON c.CustomerID = t.CustomerID JOIN     gas_stations g ON t.GasStationID = g.GasStationID WHERE     t.Date = '2022-12-31' GROUP BY     c.client_segment,     g.Currency ORDER BY     top_spending_amount DESC LIMIT 1; \t----- bird -----\tdebit_card_specializing",
    "1532": " SELECT     g.Country,     MAX(y.Consumption) AS max_consumption FROM     transactions t JOIN     products p ON t.ProductID = p.ProductID JOIN     gas_stations g ON t.GasStationID = g.GasStationID JOIN     year_and_month y ON t.CustomerID = y.CustomerID WHERE     p.ProductID = 2 GROUP BY     g.Country,     y.Date \t----- bird -----\tdebit_card_specializing",
    "1533": " SELECT c.client_segment, ym.Consumption FROM customers c JOIN transactions t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN year_and_month ym ON c.CustomerID = ym.Customer_ID WHERE p.ProductID = 5 AND t.Amount > 29.00 AND ym.Date LIKE '2012-08-%' GROUP BY c.client_segment, ym.Consumption; \t----- bird -----\tdebit_card_specializing"
}