{
    "0": "SELECT MAX(FRPM_Percent_Eligible_Free_K12) AS Highest_Eligible_Free_Rate FROM ( SELECT f.CDSCode, f.AcademicYear, s.cds, s.sname, s.rtype, s.enroll12, s.NumTstTakr, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.County = 'Alameda' ) AS Subquery;\t----- bird -----\tcalifornia_schools",
    "1": "SELECT cds, (FreeMealCount(Ages5_17) / Enrollment(Ages5_17)) * 100 AS eligible_free_rate FROM schools WHERE SchoolType = 'Continuation' AND DistrictType = 'Continuation' ORDER BY eligible_free_rate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT s.Zip FROM schools s JOIN fprm f ON s.CDSCode = f.CDSCode WHERE f.Charter = 1 AND f.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, COUNT(*) AS FRPMCountK12 FROM frpm GROUP BY CDSCode ) frp ON s.CDSCode = frp.CDSCode WHERE sc.rtype = 'K-12' ORDER BY frp.FRPMCountK12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND sc.rtype = 'Charter' AND sc.dname = 'Direct Charter' AND s.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 1 OR s.GSserved = 1)\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead > 1500 AND sc.AvgScrMath > 1500 AND sc.AvgScrWrite > 1500 GROUP BY s.CDSCode ORDER BY COUNT(sc.cds) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT MAX(satscores.NumTstTakr) AS max_sat_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.DistrictType = 'Public' AND schools.SchoolType = 'High School' AND schools.FRPMCount(K-12) = (SELECT MAX(FRPMCount(K-12)) FROM frpm)\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'charter';\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.Enrollment (Ages 5-17), s.FRPM Count (Ages 5-17) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE sc.rtype = 'SAT' AND sc.sname = 'Reading' ORDER BY sc.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM schools WHERE ( ENROLLMENT (K-12) + ENROLLMENT (Ages 5-17) > 500 )\t----- bird -----\tcalifornia_schools",
    "12": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.ExcellenceRate > 0.3 GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate HAVING MAX(sc.NumGE1500 / sc.NumTstTakr) > 0.3\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools s JOIN ( SELECT CDSCode, NumGE1500 / NumTstTakr AS excellence_rate FROM satscores GROUP BY CDSCode ORDER BY excellence_rate DESC LIMIT 3 ) ex ON s.CDSCode = ex.CDSCode\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.CDSCode, s.NCESSchool, s.Enrollment (Ages 5-17) AS enrollment_age5_7 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode, s.NCESSchool ORDER BY enrollment_age5_7 DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.CDSCode, s.sname, s.AvgScrRead FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.StatusType = 'Active' AND s.rtype = 'District' AND s.sname = 'Reading' ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.CharterNum FROM satscores AS s JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.AvgScrWrite > 499 AND sc.Charter = 1 ORDER BY s.AvgScrWrite DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.NCESSchool = 'Fresno' AND schools.FundingType = 'Directly Funded' AND schools.Charter = 0 AND satscores.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) AND sch.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.LowGrades = '9' AND frpm.HighGrades = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Los Angeles' AND schools.District = 'Public' AND satscores.sname = 'Satscores for K-12' AND satscores.AvgScrRead > 500 AND satscores.AvgScrMath > 500 AND satscores.AvgScrWrite > 500 AND satscores.NumGE1500 < 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.sType, s.County, s.District, s.School, MAX(s.NumTstTakr) AS max_test_takers FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'Contra Costa' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.sType, s.County, s.District, s.School HAVING MAX(s.NumTstTakr) = (SELECT MAX(NumTstTakr) FROM (SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.sType, s.County, s.District, s.School, s.NumTstTakr FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'Contra Costa' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.sType, s.County, s.District, s.School) AS subquery)\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.CDSCode, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE (ABS(sc.enroll12 - sc.enroll571) > 30) ORDER BY ABS(sc.enroll12 - sc.enroll571) DESC;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.SchoolName, s.NumTstTakr, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.AvgScrMath >= 1500 AND sc.AvgScrWrite >= 1500 AND sc.NumGE1500 > 0.1\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.CDSCode, s.FundingType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'SAT' AND s.NCESDist = 'Riverside' GROUP BY s.CDSCode HAVING AVG(sc.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.CDSCode, s.NCESSchool, s.Street, s.City, s.State, s.Zip, s.Phone, s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active' AND s.County = 'Monterey' AND sc.dname = 'High School' AND sc.enroll12 > 800 ORDER BY sc.enroll12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.school, s.AvgScrWrite, COALESCE(s.phone, 'N/A') AS communication_number FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OpenDate < '1991-01-01' OR s.ClosedDate > '2000-12-31';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT CDSCode, (Enrollment(K-12) - Enrollment(Ages 5-17)) AS enrollment_diff FROM frpm WHERE DistrictType = 'Locally Funded';\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City, s.Zip, s.Enrollment FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'SAT' AND s.GradeLevel = 1 AND s.GradeLevel = 12 ORDER BY s.Enrollment ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT s.CDSCode, s.Enrollment (K-12), s.FreeMealCount (K-12), s.Percent (Eligible Free (K-12)), ss.AvgScrRead, ss.AvgScrMath, ss.AvgScrWrite FROM frpm s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.SchoolType = 'Public' AND s.DistrictType = 'K-12' ORDER BY s.Enrollment (K-12) DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT s.CDSCode, s.SchoolName, s.FRPMCount_K12 / s.Enrollment_K12 AS eligible_FRPM_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.SchoolName ORDER BY eligible_FRPM_rate DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.website, s.school FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.enroll12 BETWEEN 1900 AND 2000 AND sc.rtype = 'Free Meal' AND s.State = 'California' AND s.District = 'Los Angeles' AND s.School = 'X' -- Replace 'X' with the actual school name\t----- bird -----\tcalifornia_schools",
    "34": "SELECT s.Enrollment (Ages 5-17) AS total_enrollment, s.Free_Meal_Count (Ages 5-17) AS total_free_meals, (s.Free_Meal_Count (Ages 5-17) / s.Enrollment (Ages 5-17)) * 100 AS free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.School = 'Kacey Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.email FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE frpm.Charter = 1 GROUP BY s.CDSCode HAVING COUNT(frpm.Enrollment (K-12)) = ( SELECT MIN(COUNT(frpm.Enrollment (K-12))) FROM frpm WHERE frpm.Charter = 1 ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 150 AND sc.AvgScrMath >= 150 AND sc.AvgScrWrite >= 150 AND sc.NumGE1500 >= 1 ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM ( SELECT ss.cds, ss.sname AS school_name, ss.sname AS excellence_rate_field, ss.NumGE1500 AS num_ge1500, ss.NumTstTakr AS num_tst_takr FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode ) AS subquery JOIN schools s ON subquery.cds = s.CDSCode WHERE subquery.excellence_rate_field = ( SELECT MIN(excellence_rate_field) FROM ( SELECT ss.cds, ss.sname AS school_name, ss.NumGE1500 AS num_ge1500, ss.NumTstTakr AS num_tst_takr FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode ) AS min_excellence_subquery )\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.County = 'Los Angeles' AND s.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.NCESDist = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT cds, AVG(AvgScrRead) as avg_reading_score FROM satscores GROUP BY cds ) sub ON sc.cds = sub.cds WHERE s.NCESDist = 'Fresno Unified' ORDER BY sub.avg_reading_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.County, s.School, s.AvgScrRead FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' GROUP BY s.County, s.School ORDER BY s.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.StatusType, MAX(ss.AvgScrMath) AS Highest_Math_Average FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.sname = 'Math' GROUP BY s.StatusType ORDER BY Highest_Math_Average DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT ss.sname AS school_name, sch.county, AVG(ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite) AS avg_math_score FROM satscores ss JOIN schools sch ON ss.cds = sch.CDSCode WHERE ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite = ( SELECT MIN(AvgScrMath + AvgScrRead + AvgScrWrite) FROM satscores ss2 ) GROUP BY ss.sname, sch.county LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.city, AVG(ss.AvgScrWrite) AS avg_writing_score FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE (ss.NumTstTakr + ss.NumGE1500) >= 1500 GROUP BY s.city ORDER BY avg_writing_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.School, AVG(satscores.AvgScrWrite) AS avg_writing_score FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci Ulrich' GROUP BY schools.School ORDER BY avg_writing_score DESC;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.CDSCode, s.School, SUM(f.enroll12 + f.enroll517) AS total_enrollment FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode GROUP BY s.CDSCode, s.School HAVING total_enrollment = (SELECT MAX(total_enrollment) FROM (SELECT s.CDSCode, SUM(f.enroll12 + f.enroll517) AS total_enrollment FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode GROUP BY s.CDSCode, s.School))\t----- bird -----\tcalifornia_schools",
    "47": "SELECT AVG(count) AS avg_schools_opened FROM ( SELECT COUNT(*) AS count FROM schools WHERE schools.NCESDist = '52' AND schools.District = 'Elementary School District' AND schools.County = 'Alameda' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' ) AS subquery;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(DISTINCT s.CDSCode) AS merged_unified_schools, COUNT(DISTINCT s.CDSCode) AS merged_elementary_schools FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.NCESSchool IN ('Unified School District', 'Elementary School District') AND s.County = 'Orange County';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.CDSCode, s.County, COUNT(s.CDSCode) AS ClosedSchoolsCount FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.CDSCode, s.County ORDER BY ClosedSchoolsCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.Street, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'AvgScrMath' ORDER BY sc.AvgScrMath DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.CDSCode, AVG(ss.AvgScrRead) AS AvgReadingScore FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode GROUP BY s.CDSCode;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE NumGE1500 >= 1500 AND schools.City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(NumTstTakr) AS total_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(schools.CDSCode) / COUNT(schools.CDSCode) AS ratio FROM schools WHERE schools.State = 'CA' AND (schools.County = 'Colusa' OR schools.County = 'Humboldt') AND schools.Street = '';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND Zip LIKE '%953%' AND State = 'California' AND City = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext FROM satscores sc JOIN schools s ON sc.cds = s.CDSCode WHERE sc.sname = 'Writing' GROUP BY s.CDSCode ORDER BY sc.AvgScrWrite DESC LIMIT 333;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704' AND s.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s.website FROM schools s JOIN admins a ON s.CDSCode = a.CDSCode WHERE a.admin_name IN ('Mike Larson', 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON sc.cds = f.CDSCode WHERE f.DistrictType = 'Charter' AND f.SchoolType = 'Charter' AND f.EducationalOptionType = 'Partially Virtual' AND s.County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.DOC = 52 AND schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.County = 'Los Angeles' AND frpm.DistrictType = 'Public' AND schools.Charter = 0 AND frpm.Percent (%) Eligible Free (K-12) < 0.0018;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND sc.CharterNum = '00D2' AND (s.School, s.City) IN ( SELECT School, City FROM schools WHERE Charter = 1 );\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND satscores.CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(*) FILTER (WHERE schools.FundingType = 'Locally Funded') * 100.0 / COUNT(*)) AS ratio_percentage FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate >= '2000-01-01' AND schools.OpenDate <= '2005-12-31' AND schools.FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(charter) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'San Francisco' AND satscores.rtype = 'Community College District' AND saturdays.ClosedDate = '1989-01-01';\t----- bird -----\tcalifornia_schools",
    "68": "To find the county that reported the most school closures in the 1980s with school ownership code belonging to Youth Authority Facilities (CEA), we need to join the `satscores` and `schools` tables, filter the data for the 1980s, and Youth Authority Facilities (CEA), then count the school closures. Here's how to build the SQL statement: 1. Identify the relevant tables and columns: - `satscores` table for test scores and school information. - `schools` table for school details, including ownership code. 2. Filter the data for the 1980s: - Use the `CDSCode` and `yr` columns from the `satscores` table and the `OpenDate` and `ClosedDate` columns from the `schools` table to determine if a school was closed during the 1980s. 3. Filter for Youth Authority Facilities (CEA): - Use the `StatusType` column from the `schools` table to check if the school ownership code is Youth Authority Facilities (CEA). 4. Count the school closures: - Group the data by `CDSCode` and count the distinct school closures (i.e., the number of `ClosedDate` values). 5. Find the county with the most closures: - Use a subquery to find the county with the highest closure count, then join the results with the `schools` table to get the county name. Here's the final SQL statement: [SQL] SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, COUNT(DISTINCT s.ClosedDate) AS closure_count FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.yr BETWEEN 1980 AND 1989 AND sc.StatusType = 'Youth Authority Facilities (CEA)' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet HAVING closure_count = (SELECT MAX(closure_count) FROM (SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, COUNT(DISTINCT s.ClosedDate) AS closure_count FROM satscores s JOIN schools\t----- bird -----\tcalifornia_schools",
    "69": "SELECT s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SOC = 31\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT s.CDSCode) AS active_closed_district_community_day_schools FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active/Closed' AND s.School = 'District Community Day School' AND s.County = 'Alpine';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT s.CDSCode, s.DistrictName, s.MagnetProgram FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Magnet = 0 AND s.City = 'Fresno' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT s.enroll12 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.State = 'CA' AND s.NCESDist = '061' AND s.NCESSchool = 'Fremont' AND s.StatusType = 'K-12' AND sc.rtype = 'S' AND sc.sname = 'SAT' AND sc.dname = 'California' AND sc.cname = 'State Special School' AND sc.enroll12 > 0 AND sc.dname = '2014-2015';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT s.enroll12 FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Street = 'PO Box 1040' AND sc.Zip = '00000' AND sc.State = 'CA' AND sc.School = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.low_grade FROM frpm AS f JOIN satscores AS s ON f.CDSCode = s.cds JOIN schools AS sch ON f.CDSCode = sch.CDSCode WHERE f.NCESDist = '0613360' AND f.SchoolType = 'District Special Education Consortia' AND sch.EdOpsCode = 'SPECON' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.school_name, s.school_type FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.County = '37' AND s.FRPM_Count = 2;\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.Street FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON sc.cds = f.CDSCode WHERE f.AcademicYear = '2021-2022' AND f.DistrictType = 'High School' AND sc.rtype = 'Lunch Provision 2' AND f.LowGrade = '9' AND f.HighGrade = '12' AND f.County = 'Merced';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.County, s.District, s.School, s.Percent (%) Eligible FRPM (Ages 5-17) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'Los Angeles' AND f.AcademicYear = '2019-2020' AND f.SchoolType = 'Public' AND f.GradeSpan = 'K-9' GROUP BY s.CDSCode, s.County, s.District, s.School;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT COUNT(DISTINCT grade_span) AS most_common_grade_span, grade_span FROM schools WHERE city = 'Adelanto' GROUP BY grade_span ORDER BY most_common_grade_span DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT s.County, COUNT(s.School) AS school_count FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County IN ('San Diego', 'Santa Barbara') AND f.Virtual = 1 GROUP BY s.County ORDER BY school_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN ( SELECT CDSCode, MAX(latitude) AS max_latitude FROM schools GROUP BY CDSCode ) max_latitudes ON s.CDSCode = max_latitudes.CDSCode AND s.latitude = max_latitudes.max_latitude;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.City, s.LowestGrade FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MIN(Latitude) AS MinLatitude FROM frpm WHERE state = 'CA' GROUP BY CDSCode ) min_lat ON s.CDSCode = min_lat.CDSCode ORDER BY s.MinLatitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT schools.County, schools.District, schools.School, MAX(schools.Longitude) AS highest_longitude FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Longitude = (SELECT MAX(Longitude) FROM schools) GROUP BY schools.County, schools.District, schools.School;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(DISTINCT s.CDSCode) AS num_schools_offering_magnet, COUNT(DISTINCT s.City) AS num_cities, SUM(CASE WHEN s.EILCode = 'Multiple Provision Types' THEN 1 ELSE 0 END) AS num_schools_with_multiple_provision_types FROM schools s WHERE s.Magnet = 1 AND s.EILCode IN ('Multiple Provision Types', 'None') AND s.GradeSpan = 'Kindergarten to 8th grade' GROUP BY s.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT s.CDSCode, s.NCESDist, COUNT(s.AdmFName1) AS first_name_1_popularity, COUNT(s.AdmFName2) AS first_name_2_popularity FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE (sc.rtype = 'Administrator' OR sc.cname = 'Administrator') GROUP BY s.CDSCode, s.NCESDist ORDER BY first_name_1_popularity DESC, first_name_2_popularity DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.CDSCode, s.DistrictCode FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.AdmFName1 = 'Alusine' AND sc.rtype = 'Free & Reduced Lunch';\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.CDSCode, s.NCESDist, s.County, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.sname = '40' AND s.Charter = 1 LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT s.AdmEmail1, s.AdmEmail2, s.AdmEmail3 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'San Bernardino' AND f.District = 'City Unified' AND f.AcademicYear BETWEEN '2009-01-01' AND '2010-12-31' AND (f.SchoolType = 'Intermediate/Middle Schools' OR f.SchoolType = 'Unified Schools') AND sc.sname = 'SATs' AND sc.rtype = 'Regular' AND sc.dname = 'California Statewide Testing Program' AND sc.cname = 'CSAT' AND sc.enroll12 > 0 AND s.Charter = 0 AND s.OpenDate < '2011-01-01' AND s.ClosedDate > '2010-12-31';\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 >= 1 ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK PO OBRATU' AND district_id IN ( SELECT district_id FROM district WHERE A3 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A3 = 'Prague' AND EXISTS ( SELECT 1 FROM loan AS l WHERE l.account_id = a.account_id AND l.status = 'eligible' );\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000 AND gender = 'F';\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'North Bohemia' AND client.gender = 'M' AND district.A11 > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id, D.A11, L.A15, (L.A15 - G.A11) AS age_gap FROM account a JOIN client c ON a.district_id = c.district_id JOIN district D ON a.district_id = D.district_id JOIN (SELECT client_id, AVG(age) AS A11, AVG(income) AS A15 FROM client GROUP BY client_id) L ON c.client_id = L.client_id JOIN (SELECT client_id, MIN(age) AS A11, MAX(income) AS A15 FROM client GROUP BY client_id) G ON c.client_id = G.client_id WHERE c.gender = 'F';\t----- bird -----\tfinancial",
    "95": "SELECT c.client_id, c.gender, c.birth_date, d.A11, RANK() OVER (ORDER BY c.birth_date ASC, d.A11 DESC) AS youngest_rank, AVG(d.A11) OVER (PARTITION BY d.district_id) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date < c.birth_date; -- This condition is redundant and can be removed SELECT client_id, gender, birth_date, A11 FROM ( SELECT c.client_id, c.gender, c.birth_date, d.A11, RANK() OVER (ORDER BY c.birth_date ASC, d.A11 DESC) AS youngest_rank, AVG(d.A11) OVER (PARTITION BY d.district_id) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id ) subquery WHERE youngest_rank = 1 AND avg_salary = (SELECT MAX(A11) FROM district d);\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT client_id) FROM account JOIN client ON account.district_id = client.district_id WHERE frequency ='statement of weekly issuance' AND gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT c.client_id FROM client c JOIN trans t ON c.client_id = t.account_id WHERE t.type = 'issuance' AND t.operation = 'after transaction' AND t.bank = 'Disponent';\t----- bird -----\tfinancial",
    "98": "SELECT account.district_id, MIN(loan.amount) AS lowest_approved_amount FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.date = '1997-01-01' GROUP BY account.district_id HAVING COUNT(DISTINCT loan.loan_id) = 1 ORDER BY lowest_approved_amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, a.frequency, a.date, MAX(t.amount) AS max_approved_amount FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date BETWEEN '1993-01-01' AND '1993-12-31' GROUP BY a.account_id, a.district_id, a.frequency, a.date ORDER BY max_approved_amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE d.A2 = 'Sokolov' AND c.gender = 'F' AND c.birth_date < '1950-01-01';\t----- bird -----\tfinancial",
    "101": "SELECT t1.account_id, t1.date FROM account t1 JOIN trans t2 ON t1.account_id = t2.account_id WHERE t2.date = (SELECT MIN(date) FROM trans WHERE trans.date >= '1995-01-01') AND t1.district_id = (SELECT district_id FROM client WHERE client.district_id = (SELECT district_id FROM account WHERE account.account_id = t1.account_id));\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date FROM account AS a JOIN client AS c ON a.district_id = c.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE a.date < '1997-01-01' AND l.amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03' AND card.type = 'card';\t----- bird -----\tfinancial",
    "104": "SELECT d.A2 FROM district d JOIN account a ON d.district_id = a.district_id JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.amount = 840 AND t.date = ( SELECT MAX(date) FROM trans WHERE account_id = a.account_id );\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25' AND type = 'loan' AND status = 'approved';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction FROM trans WHERE account_id = (SELECT client_id FROM client WHERE birth_date = '1996-10-21') AND trans_id IN (SELECT trans_id FROM order WHERE account_id = (SELECT client_id FROM client WHERE birth_date = '1996-10-21'));\t----- bird -----\tfinancial",
    "107": "SELECT c.gender, d.A11 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) AND d.A11 = (SELECT MAX(A11) FROM district) ORDER BY c.client_id;\t----- bird -----\tfinancial",
    "108": "SELECT t.trans_id, t.amount FROM trans t JOIN loan l ON t.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.trans_id LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "110": "SELECT disp_id FROM client JOIN trans ON client.client_id = trans.account_id JOIN account ON trans.account_id = account.account_id WHERE account.date = '1998-09-02' AND trans.amount = 5100;\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "112": "SELECT d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date FROM client JOIN disp ON client.client_id = disp.client_id JOIN loan ON loan.account_id = account.account_id WHERE loan.amount = 98832 AND loan.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id FROM account AS a JOIN client AS c ON a.district_id = c.district_id WHERE c.gender = 'client_1' AND c.birth_date = '2022-01-01' AND c.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "115": "SELECT district_id FROM district WHERE A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "116": "WITH loan_approval AS ( SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' LIMIT 1 ), account_balance AS ( SELECT t.account_id, t.date, t.balance FROM trans t JOIN loan l ON t.account_id = l.account_id JOIN loan_approval la ON l.client_id = la.client_id WHERE t.date IN ('1993-03-22', '1998-12-27') ) SELECT ((balance_at_A - balance_at_B) / balance_at_B) * 100 AS increase_rate FROM account_balance WHERE account_id = [specific_account_id];\t----- bird -----\tfinancial",
    "117": "SELECT AVG(payments) * 100 AS percentage_fully_paid FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT COUNT(*) * 100.0 / (SELECT SUM(amount) FROM loan WHERE amount < 100000) AS percentage FROM loan WHERE status = 'C' AND amount < 100000;\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2, d.A3 FROM account a JOIN district d ON a.district_id = d.district_id WHERE EXTRACT(YEAR FROM a.date) = 1993 AND EXISTS ( SELECT 1 FROM trans t JOIN order o ON t.account_id = o.account_id JOIN client c ON o.client_id = c.client_id JOIN disp d ON c.client_id = d.client_id WHERE t.trans_id = o.order_id AND o.account_to = a.account_id AND t.date > o.date );\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.district_id = c.district_id WHERE a.district_id = (SELECT district_id FROM district WHERE A2 = 'East Bohemia') AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM district d INNER JOIN loan l ON d.district_id = l.account_id WHERE l.loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT loan.*, account.* FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT t1.loan_id, t2.district, AVG(t3.A11) AS avg_salary FROM trans t1 JOIN loan t2 ON t1.account_id = t2.account_id JOIN district t3 ON t2.district_id = t3.district_id WHERE t2.duration = 60 GROUP BY t1.loan_id, t2.district;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, d.A12 AS state, ( (1996_unemployment_rate - 1995_unemployment_rate) / 1995_unemployment_rate * 100 ) AS unemployment_increment_percentage FROM account a JOIN district d ON a.district_id = d.district_id JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id JOIN (SELECT loan_id, unemployment_rate FROM loan WHERE status = 'D' AND YEAR(date) = 1996) l ON t.account_id = l.loan_id WHERE l.unemployment_rate IS NOT NULL;\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE district_id = 'Decin' AND YEAR(date) = 1993) AS percentage FROM account WHERE district_id = 'Decin' AND YEAR(date) = 1993;\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT a.account_id FROM account AS a JOIN trans AS t ON a.account_id = t.account_id WHERE t.type ='statement' GROUP BY a.account_id HAVING COUNT(t.trans_id) >= 1;\t----- bird -----\tfinancial",
    "128": "SELECT d.district_id, d.A2 AS district_name, COUNT(a.account_id) AS female_count FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY d.district_id, d.A2 ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.district_name, SUM(t.amount) AS total_withdrawal FROM trans t JOIN account a ON t.account_id = a.account_id JOIN district d ON a.district_id = d.district_id WHERE t.type = 'VYDAJ' AND t.date BETWEEN '1996-01-01' AND '1996-01-31' GROUP BY d.district_name ORDER BY total_withdrawal DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id WHERE district.A3 = 'South Bohemia' AND card.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT district_id, MAX(amount) AS max_active_loan FROM account JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'C' GROUP BY district_id;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loans.amount) AS average_loan_amount_by_male_borrowers FROM loans JOIN clients ON loans.account_id = clients.account_id JOIN district ON clients.district_id = district.district_id WHERE clients.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT d.district_id, d.A13 AS unemployment_rate, d.A2 AS branch_location FROM district d JOIN loan l ON d.district_id = l.account_id WHERE YEAR(l.date) = 1996 ORDER BY unemployment_rate DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT district_id, MAX(crimes_1996) AS max_crimes FROM district GROUP BY district_id;\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN trans t ON a.account_id = t.account_id JOIN card c ON t.card_id = c.card_id JOIN client client ON a.district_id = client.district_id JOIN disp d ON a.account_id = d.account_id WHERE t.type = 'VYBER KARTOU' AND c.type = 'KARTA' AND a.frequency = 'POPLATEK MESICNE' AND t.amount < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(DISTINCT loan.loan_id) FROM loan JOIN account ON loan.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE account.frequency = 'POPLATEK MESICNE' AND loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount >= 250000 AND loan.status = 'APPROVED';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'C' AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id IN ( SELECT district_id FROM district WHERE A15 = ( SELECT MAX(A15) FROM district WHERE gender = 'M' ) );\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER' AND disp_id = (SELECT disp_id FROM disp WHERE client_id = (SELECT client_id FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'High-level')));\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(DISTINCT account_id) AS total_accounts FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT a.district_id, d.district_name FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.date >= '1997-01-01' AND t.date < '1998-01-01' AND t.amount > 10000 GROUP BY a.district_id, d.district_name;\t----- bird -----\tfinancial",
    "142": "SELECT t1.account_id FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN order AS t3 ON t2.account_id = t3.account_akount_id WHERE t3.k_symbol = 'SIPO' AND t1.district_id = (SELECT district_id FROM district WHERE district_name = 'Pisek');\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM account JOIN card ON account.account_id = card.disp_id JOIN client ON client.district_id = account.district_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount) AS avg_credit_card_withdrawal_2021 FROM account JOIN trans ON account.account_id = trans.account_id JOIN client ON account.district_id = client.district_id WHERE trans.type = 'VYBER KARTOU' AND YEAR(trans.date) = 2021 GROUP BY account.account_id;\t----- bird -----\tfinancial",
    "145": "SELECT t.account_id, t.date, t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE t.type = 'VYBER KARTOU' AND l.date BETWEEN '1998-01-01' AND '1998-12-31' AND t.amount < ( SELECT AVG(t2.amount) FROM trans t2 WHERE t2.account_id = a.account_id AND t2.date BETWEEN '1998-01-01' AND '1998-12-31' AND t2.type = 'VYBER KARTOU' )\t----- bird -----\tfinancial",
    "146": "SELECT c.client_id, c.gender, c.birth_date, a.district_id FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE c.gender = 'F' AND EXISTS ( SELECT 1 FROM card ct WHERE ct.card_id = c.client_id ) AND EXISTS ( SELECT 1 FROM loan l WHERE l.account_id = a.account_id );\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT c.client_id) FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE c.gender = 'F' AND d.A3 ='south Bohemia';\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Tabor') AND frequency = 'OWNER';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT account_type FROM account WHERE account_type!= 'OWNER'; SELECT d.district_id, AVG(c.income) AS avg_income FROM district d JOIN client c ON d.district_id = c.district_id WHERE c.account_id IN ( SELECT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id JOIN order o ON a.account_id = o.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON a.account_id = c.account_id ) AND t.amount > 0 AND c.income > 8000 AND c.income <= 9000 AND d.A11 > 0 AND d.A11 <= 9000 GROUP BY d.district_id;\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN order ON account.account_id = order.account_id WHERE district_id IN (SELECT district_id FROM district WHERE A3 = 'North Bohemia') AND bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account JOIN trans ON account.account_id = trans.account_id JOIN loan ON account.account_id = loan.account_id WHERE trans.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A10) AS avg_crimes_1995 FROM district JOIN loan ON district.district_id = loan.account_id WHERE A10 > 4000 AND date >= '1997-01-01';\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(DISTINCT c.card_id) FROM card c JOIN account a ON c.disp_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE c.type = 'classic' AND l.status = 'eligible for loan';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha');\t----- bird -----\tfinancial",
    "155": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM card WHERE type = 'gold')) AS percent_gold_before_1998 FROM card WHERE type = 'gold' AND issued_date < '1998-01-01';\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id, c.gender, c.birth_date, a.district_id, SUM(l.amount) AS total_loan_amount FROM account AS a JOIN loan AS l ON a.account_id = l.account_id JOIN client AS c ON a.district_id = c.district_id GROUP BY a.account_id, c.client_id, c.gender, c.birth_date, a.district_id ORDER BY total_loan_amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT A15 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = (SELECT client_id FROM disp WHERE disp_id = (SELECT disp_id FROM card WHERE card_id = (SELECT card_id FROM account WHERE account_id = 532))));\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = ( SELECT id FROM order WHERE order_id = 33333 );\t----- bird -----\tfinancial",
    "159": "SELECT t1.trans_id, t1.date, t1.amount, t1.operation, t1.type, t1.balance, t1.k_symbol, t1.bank, t1.account FROM trans t1 JOIN order o ON t1.account_id = o.account_id JOIN client c ON o.client_id = c.client_id WHERE c.client_id = 3356 AND t1.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT t1.account_id) FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan AS t3 ON t1.account_id = t3.account_id WHERE t1.frequency = 'POPLATEK TYDNE' AND t3.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT c.type FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card cr ON d.card_id = cr.card_id WHERE c.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM district WHERE district.district_id = ( SELECT client.district_id FROM client WHERE client.client_id = 3541 );\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id, d.A2, COUNT(a.account_id) AS account_count FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.A2 ORDER BY account_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT client.client_id, client.gender, client.birth_date, client.district_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN trans ON disp.account_id = trans.account_id WHERE trans.trans_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(DISTINCT account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card cc ON d.disp_id = cc.disp_id WHERE cc.type = 'credit' AND d.account_id IN ( SELECT account_id FROM trans WHERE date >= '1997-01-01' )\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(*) * 100.0 / ( SELECT COUNT(*) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A11 > 10000 ) ) AS percentage_of_women_clients FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A11 > 10000 );\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(l.amount) - SUM(l.amount)) / SUM(l.amount) * 100 AS growth_rate FROM account AS a JOIN client AS c ON a.district_id = c.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE c.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(A16) AS total_crimes_north_bohemia, SUM(A16) AS total_crimes_east_bohemia FROM district WHERE A3 = 'North Bohemia' AND A3 = 'East Bohemia' AND A15 = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT account_id) FROM disp WHERE account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT frequency, COUNT(*) as request_count FROM account WHERE account_id = 3 GROUP BY frequency;\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id JOIN trans ON account.account_id = trans.account_id WHERE trans.type = 'POPLATEK PO OBRATU' AND trans.operation = 'GENERUJ STAVKU';\t----- bird -----\tfinancial",
    "176": "SELECT SUM(trans.amount) AS total_debt, loan.status FROM trans JOIN trans AS t ON trans.trans_id = t.trans_id AND trans.operation = 'payment' JOIN loan ON trans.account_id = loan.account_id JOIN client ON trans.account_id = client.account_id WHERE client.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT t.balance FROM trans AS t JOIN account AS a ON t.account_id = a.account_id WHERE t.trans_id = 851 AND a.client_id = 4; SELECT a.gender FROM client AS a JOIN account AS ac ON a.client_id = ac.client_id WHERE ac.account_id = ( SELECT t.account_id FROM trans AS t JOIN account AS a ON t.account_id = a.account_id WHERE t.trans_id = 851 );\t----- bird -----\tfinancial",
    "178": "SELECT * FROM client JOIN card ON client.client_id = card.client_id WHERE client.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND EXTRACT(YEAR FROM date) = 1998;\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, l.amount FROM client c JOIN loan l ON c.client_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.client_id = l.account_id WHERE c.gender = 'M' AND d.A3 BETWEEN '1974' AND '1976' AND l.amount > 4000 AND l.status = 'SIPO';\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND type = 'junior_credit_card';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(DISTINCT c.client_id) * 100.0 / COUNT(DISTINCT a.account_id) AS female_percentage FROM client c JOIN account a ON c.district_id = a.district_id WHERE a.district_id = (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT COUNT(DISTINCT client_id) * 100.0 / COUNT(DISTINCT * FROM client WHERE gender = 'M' AND (SELECT type FROM order WHERE account_id = client_id) = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'Owner' AND district_id IN ( SELECT district_id FROM account WHERE frequency = 'POPLATEK TYDNE' );\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, a.district_id, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A14 >= 24 AND a.date < '1997-01-01' GROUP BY a.account_id, a.district_id HAVING lowest_approved_amount = (SELECT MIN(l.amount) FROM loan l WHERE l.account_id = a.account_id);\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id, c.gender, AVG(d.A11) AS avg_salary FROM account a JOIN client c ON a.district_id = c.district_id JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY a.account_id, c.gender ORDER BY avg_salary ASC, c.birth_date DESC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE duration = 24 AND frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loan.amount) FROM account JOIN loan ON account.account_id = loan.account_id JOIN trans ON account.account_id = trans.account_id WHERE loan.status = 'C' AND trans.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.account_id IN ( SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'active' AND l.duration > 12 ) AND c.gender = 'M' AND c.birth_date < '1980-01-01';\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, c.age FROM client AS c JOIN trans AS t ON c.client_id = t.account_id JOIN account AS a ON c.district_id = a.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE c.card.type = 'gold' AND t.type = 'payment' AND l.status = 'approved'\t----- bird -----\tfinancial",
    "195": "SELECT b.bond_type FROM bond b GROUP BY b.bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(element) AS avg_oxygen_atoms FROM atom WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS average_single_bonded_carcinogens FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id2 WHERE molecule.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT atom.molecule_id, atom.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT m.molecule_id, (COUNT(a.element = 'c')::FLOAT / SUM(a.element = 'c')::FLOAT) * 100.0 AS carbon_percentage FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.label = 'double-bond molecules' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(DISTINCT bond_type) AS triple_bond_count FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR099';\t----- bird -----\ttoxicology",
    "205": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM connected WHERE bond_type = 'double' );\t----- bird -----\ttoxicology",
    "208": "SELECT atom.element, COUNT(connected.label) AS popularity FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE atom.element = 'h' GROUP BY atom.element ORDER BY popularity DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT a1.atom_id, a2.atom_id FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id IN ( SELECT m.molecule_id FROM molecule AS m WHERE m.label = '-' ) AND a2.molecule_id IN ( SELECT m.molecule_id FROM molecule AS m WHERE m.label = '-' );\t----- bird -----\ttoxicology",
    "212": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id AND T1.atom_id = T2.atom_id2 JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '-';\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR004_8' AND a2.molecule_id = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'Sn' ) );\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a1.atom_id) AS iodine_atoms, COUNT(DISTINCT a2.atom_id) AS sulfur_atoms FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 JOIN atom a2 ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE m.label = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT AVG(percentage) * 100 AS fluorine_percentage_without_carcinogenicity FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "219": "SELECT label, percent FROM molecule, connected, bond WHERE molecule.molecule_id = connected.molecule_id AND connected.atom_id = bond.atom_id AND bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE a1.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT b.bond_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_2' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR000_2' WHERE c1.atom_id2 = c2.atom_id;\t----- bird -----\ttoxicology",
    "225": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT 100.0 * SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(DISTINCT bond_id) AS percentage FROM connected WHERE atom_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id)) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT m.label, SUM(a.element = 'h') AS total_hydrogen_atoms, AVG(a.element = 'h') AS average_hydrogen_atom, (SUM(a.element = 'h') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206')) * 100 AS percentage_hydrogen FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'TR206' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "229": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000' LIMIT 1;\t----- bird -----\ttoxicology",
    "230": "SELECT m.label AS \"Toxicology of molecule TR060\", m.label AS \"Label of molecule TR060\" FROM molecule m WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON c1.atom_id = m.molecule_id JOIN connected c2 ON c2.atom_id2 = m.molecule_id JOIN bond b ON b.bond_id = c1.bond_id AND b.bond_type = '-' JOIN atom a1 ON a1.atom_id = c1.atom_id AND a1.element = 'C' JOIN atom a2 ON a2.atom_id = c2.atom_id AND a2.element = 'C' WHERE c1.bond_id = c2.bond_id GROUP BY m.molecule_id, m.label HAVING COUNT(DISTINCT a1.atom_id) = 2 AND COUNT(DISTINCT a2.atom_id) = 2 AND b.bond_type = '-' AND m.label = '-';\t----- bird -----\ttoxicology",
    "233": "SELECT b.bond_type, b.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.molecule_id = 'TR006' ORDER BY b.bond_type ASC, b.molecule_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(b.bond_id) FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id AND a1.atom_id = 'TR009_12' JOIN connected AS c2 ON b.bond_id = c2.bond_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id AND a2.atom_id = 'TR009_12';\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_br_molecules FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'br' AND m.label = '+';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, a1.element, a2.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected AS c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "237": "SELECT m.label AS is_carcinogenic FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19' AND atom_id2 = atom_id;\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT m.label FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type ='= ' GROUP BY m.label ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(b.bond_id) AS average_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT atom.element FROM atom WHERE atom.atom_id NOT IN ( SELECT atom_id2 FROM connected );\t----- bird -----\ttoxicology",
    "248": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 JOIN atom a2 ON c.bond_id = a2.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id, m.label ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT molecule_id FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "252": "SELECT atom.atom_id FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond ON c2.bond_id = bond.bond_id WHERE atom.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT bond_type, COUNT(*) AS frequency FROM bond GROUP BY bond_type ORDER BY frequency DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT AVG(proportion) AS carcinogenic_proportion FROM (SELECT b.bond_id, COUNT(CASE WHEN a.label = '+' THEN 1 END) AS label_count FROM bond b JOIN atom a ON b.molecule_id = a.molecule_id GROUP BY b.bond_id) subquery WHERE subquery.bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE atom.element IN ('c', 'h');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element ='s' )\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) AS num_elements_for_single_bond_molecules FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id2 WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id JOIN bond AS b ON a.atom_id = b.atom_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_type = '#3' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT m.molecule_id FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "263": "SELECT m.molecule_id, m.label, (COUNT(a.atom_id) * 100.0 / (SELECT COUNT(*) FROM atom)) AS percent_chlorine FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_type = '-' GROUP BY m.molecule_id, m.label\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT \"molecule_id\" FROM \"molecule\" WHERE \"label\" = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT m.molecule_id, m.label FROM molecule m WHERE m.molecule_id BETWEEN 'TR000' AND 'TR030' AND m.label = '+';\t----- bird -----\ttoxicology",
    "267": "SELECT m.label, b.bond_type FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label, MAX(label) FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'ca' ) AND atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'ca' );\t----- bird -----\ttoxicology",
    "271": "SELECT b.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id WHERE c2.atom_id2 = 'TR001_1_8' AND b.element = 'chlorine'\t----- bird -----\ttoxicology",
    "272": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'c' AND b.bond_type = '#3' AND m.label = '-';\t----- bird -----\ttoxicology",
    "273": "SELECT M.label, (COUNT(A.element = 'cl') * 100.0 / COUNT(DISTINCT M.molecule_id)) AS percentage FROM molecule M JOIN connected C ON M.molecule_id = C.molecule_id JOIN atom A ON C.atom_id = A.atom_id WHERE M.label = '+' GROUP BY M.label;\t----- bird -----\ttoxicology",
    "274": "SELECT a1.element FROM molecule AS m0 JOIN connected AS c0 ON c0.atom_id = m0.molecule_id AND c0.atom_id2 = m0.molecule_id JOIN atom AS a1 ON a1.molecule_id = m0.molecule_id WHERE m0.molecule_id = 'TR001' LIMIT 1;\t----- bird -----\ttoxicology",
    "275": "SELECT \"molecule_id\" FROM \"molecule\" WHERE \"label\" = 'double bond type';\t----- bird -----\ttoxicology",
    "276": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT a.element FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON c1.atom_id = molecule.molecule_id AND c1.bond_id = bond.bond_id JOIN connected AS c2 ON c2.atom_id2 = c1.atom_id AND c2.bond_id = bond.bond_id JOIN bond ON bond.molecule_id = molecule.molecule_id AND bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT \"label\" FROM \"molecule\" WHERE \"molecule_id\" IN ( SELECT \"molecule_id\" FROM \"connected\" WHERE \"atom_id\" = 'TR001_10' AND \"atom_id2\" = 'TR001_11' );\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT m.molecule_id, substr(a.element, 7, 1) AS toxicology_element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' LIMIT 1;\t----- bird -----\ttoxicology",
    "282": "SELECT label, ratio AS h_ratio FROM (SELECT 'TR006' AS molecule_id, COUNT(CASE WHEN element = 'h' THEN 1 END) AS count_h, COUNT(*) AS count_total FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id1 AND atom.atom_id = connected.atom_id2 INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR006' GROUP BY molecule_id) subquery WHERE count_h > 0;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN connected c ON m.atom_id = c.atom_id AND m.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE m.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT atom_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'c' ) )\t----- bird -----\ttoxicology",
    "285": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_10_11' LIMIT 1;\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) AS triple_bond_count FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT molecule_id, COUNT(bond_id) AS double_bond_count, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM connected WHERE molecule_id = 'TR047') AS double_bond_percentage FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR047') AND atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR047') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR047') AND bond_type ='= ' GROUP BY molecule_id\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'TR' AND a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM connected WHERE atom_id = 'TR151' AND atom_id2 = 'TR151');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE substr(m.molecule_id, 3, 3) BETWEEN 'TR010' AND 'TR050' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic compounds';\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE m.label = '+' AND b.bond_type = '=';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE a.atom_id = 'TR000_1' AND b.bond_type = 'TR000_1_2' AND d.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "297": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'c' AND bond.bond_type NOT IN ('C-C', 'C=C', 'C#C', 'C-N', 'C-O', 'C-S', 'C-P', 'C-F', 'C-Cl', 'C-Br', 'C-I');\t----- bird -----\ttoxicology",
    "298": "SELECT (SUM(CASE WHEN label = '+' AND element = 'h' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id)) * 100.0 FROM molecule WHERE label = '+' AND element = 'h';\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT a.atom_id, e.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN connected c2 ON c.atom_id2 = c2.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom e ON b.molecule_id = e.molecule_id WHERE c2.bond_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE molecule_id = ( SELECT molecule_id FROM connected WHERE bond_id = 'TR001_2_4' );\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(DISTINCT b.bond_id) AS double_bonds_count FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON b.atom_id = a.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT a.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT bond.bond_id) AS chlorine_bonds FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE a.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(b.bond_id) AS bond_types FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS double_bonds_count, COUNT(m.molecule_id) AS carcinogenic_double_bonds_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type ='= ' AND EXISTS ( SELECT 1 FROM molecule m2 WHERE m.molecule_id = m2.molecule_id AND m2.label = '+' );\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(*) FROM molecule WHERE element!='s' AND bond_id NOT IN (SELECT bond_id FROM connected WHERE bond_type ='= ');\t----- bird -----\ttoxicology",
    "312": "SELECT label FROM connected WHERE atom_id = 'TR001_2_4' AND atom_id2 = 'TR001_2_4' AND bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'Cl' AND EXISTS ( SELECT 1 FROM connected c2 JOIN atom a3 ON c2.atom_id = a3.atom_id JOIN atom a4 ON c2.atom_id2 = a4.atom_id JOIN bond b2 ON c2.bond_id = b2.bond_id WHERE a3.element = 'C' AND a4.element = 'O' );\t----- bird -----\ttoxicology",
    "316": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'C' AND b.bond_type = 'Single' AND NOT EXISTS ( SELECT 1 FROM connected con WHERE con.atom_id = a.atom_id AND con.atom_id2 = a.atom_id AND con.bond_id = b.bond_id AND m.label = '-' );\t----- bird -----\ttoxicology",
    "317": "SELECT (SUM(CASE WHEN a.element = 'Cl' AND m.label = '+' THEN 1 ELSE 0 END) / COUNT(DISTINCT m.molecule_id)) * 100 AS percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id;\t----- bird -----\ttoxicology",
    "318": "SELECT m.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) AS element_count FROM connected WHERE bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id2 WHERE c2.atom_id = 'TR000_2' AND c1.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id AND m.molecule_id = 'TR000_2' JOIN connected c2 ON m.molecule_id = c2.atom_id2 AND m.molecule_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT \"element\" FROM \"atom\" WHERE \"atom_id\" = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT m.label, AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 100.0 AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id GROUP BY m.label;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id WHERE m.label ='sulphur' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT c1.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT MAX(connected.COUNT(atom.molecule_id)) AS max_atoms FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.label = '+';\t----- bird -----\ttoxicology",
    "330": "SELECT AVG(percentage) FROM ( SELECT m.molecule_id, COUNT(c.atom_id) AS label_count, COUNT(b.bond_id) AS triple_bond_count FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' AND b.element = 'h' AND b.bond_type = '#' GROUP BY m.molecule_id ) AS subquery\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(DISTINCT label) AS num_carcinogenic_molecules FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN ( SELECT molecule_id FROM molecule WHERE label BETWEEN 'TR004' AND 'TR010' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(DISTINCT a.atom_id) AS carbon_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '-' AND a.atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id JOIN connected AS connected2 ON molecule.molecule_id = connected2.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#';\t----- bird -----\ttoxicology",
    "337": "SELECT atom.element, bond.bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a1.atom_id FROM atom AS a1 JOIN bond AS b ON a1.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'c' AND b.bond_type ='= ' AND c.atom_id = a2.atom_id;\t----- bird -----\ttoxicology",
    "339": "SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT c.id, c.name, c.borderColor, c.faceConvertedManaCost, c.faceName FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%borderless%' AND c.cardKingdomFoilId IS NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT c.name, MAX(c.faceConvertedManaCost) AS max_converted_mana FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'English' GROUP BY c.name HAVING MAX(c.faceConvertedManaCost) > 0;\t----- bird -----\tcard_games",
    "343": "SELECT c.name, c.availability, c.convertedManaCost, c.edhrecRank FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE s.frameVersion = 2015 AND l.status = 'legal' AND c.edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.type, c.rarity, c.status, c.format FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity ='mythic' AND l.status = 'Banned' AND fd.language = 'English' AND c.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.type = 'Artifact' AND (c.side IS NULL OR c.side = '');\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.keywords LIKE '%unknown%' AND c.power IS NULL AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text AS ruling_text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE f.flavorText LIKE '%Stephen Daniel%' AND l.status = 'legal' ORDER BY c.id;\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text FROM rulings WHERE rulings.uuid = 'YOUR_CARD_UUID_HERE';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, CASE WHEN c.isPromo = 1 THEN 'Promotional Printing' ELSE '' END AS card_type FROM cards c JOIN ( SELECT uuid, COUNT(*) AS ruling_count FROM rulings GROUP BY uuid ) r ON c.uuid = r.uuid WHERE r.ruling_count = ( SELECT MAX(count) FROM ( SELECT COUNT(*) AS count FROM rulings GROUP BY uuid ) subquery )\t----- bird -----\tcard_games",
    "350": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Annul numbered 29';\t----- bird -----\tcard_games",
    "351": "SELECT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT (SUM(CASE WHEN foreign_data.language = 'Chinese Simplified' THEN 1 ELSE 0 END) / COUNT(foreign_data.id)) * 100 AS percentage FROM foreign_data\t----- bird -----\tcard_games",
    "353": "SELECT s.name, SUM(c.totalSetSize) AS total_cards FROM sets s JOIN cards c ON s.code = c.setCode WHERE s.language = 'Italian' GROUP BY s.name ORDER BY total_cards DESC;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE keywords = 'infinite power';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT asciiName FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT language FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities AS l JOIN cards AS c ON l.uuid = c.uuid WHERE l.status ='restricted' AND c.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text AS ruling_description FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Condemn' );\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities JOIN sets ON legalities.uuid = sets.mcmId JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE sets.isStarter = 1 AND legalities.status ='restricted';\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT \"type\" FROM \"cards\" WHERE \"name\" = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE name = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(*) FILTER (WHERE borderColor = 'borderless')) * 100.0 / COUNT(*) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT SUM(isReprint = 1) AS reprinted_cards FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German';\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(c.id) FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.borderColor = 'borderless' AND fd.language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(french_cards.id) / COUNT(story_spotlight_cards.id)) * 100 AS percentage FROM cards AS story_spotlight_cards INNER JOIN foreign_data AS french_cards ON story_spotlight_cards.uuid = french_cards.uuid AND story_spotlight_cards.isStorySpotlight = 1 AND french_cards.language = 'French';\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%Aaron Boyd%' AND fd.language = 'English';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT cards.id FROM cards WHERE cards.convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT cards.name, cards.layout FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.keywords LIKE '%flying%' AND foreign_data.language = 'English';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND type!= 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT c.id, c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.foil = 'true' AND f.language = 'English' AND ( (c.rarity = 'Rare' AND f.rarity = 'Common') OR (c.rarity = 'Common' AND f.rarity = 'Rare') ) AND c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText = 'duel deck a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE flavorText LIKE '%Chinese Simplified%'\t----- bird -----\tcard_games",
    "382": "SELECT c.name, c.availability FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%available in paper%' AND fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE keywords LIKE '%banned%' AND borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT foreign_data.uuid, foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT uuid FROM cards WHERE name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(DISTINCT c.uuid) AS num_cards FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future';\t----- bird -----\tcard_games",
    "387": "SELECT c.name, c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'English' AND fd.name = 'OGW' AND c.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "388": "SELECT f.flavorText, s.language, s.translation FROM foreign_data f JOIN set_translations st ON f.uuid = st.setCode JOIN sets s ON st.setCode = s.code WHERE s.name = '10E' AND s.baseSetSize = 10 AND st.translation LIKE '%converted mana of 5%';\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards AS c JOIN rulings AS r ON c.uuid = r.uuid WHERE c.type = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.id BETWEEN 1 AND 20 GROUP BY c.colorIdentity HAVING COUNT(*) > 0;\t----- bird -----\tcard_games",
    "391": "SELECT c.name, c.colors, f.flavorText, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomFoilId IS NULL OR cardKingdomFoilId = '');\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE artist = 'UDON' AND availability ='mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1993' AND cards.availability = 'paper' AND legalities.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT SUM(convertedManaCost) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND (availability ='mtgo,paper' OR availability = 'paper')\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana_cost FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT DIVIDE(COUNT(CASE WHEN frameEffects = 'legendary' AND isOnlineOnly = 1 THEN 1 END), COUNT(id)) AS percentage FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT SUM(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS story_spotlight_without_text, COUNT(id) AS total_cards FROM cards WHERE isStorylight = 1 AND isTextless = 0 SELECT id FROM cards WHERE story_spotlight_without_text = SUM(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN 1 ELSE 0 END)\t----- bird -----\tcard_games",
    "403": "SELECT f.name, COUNT(f.id) AS card_count, (COUNT(f.id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM foreign_data f WHERE f.language = 'Spanish' GROUP BY f.name ORDER BY card_count DESC;\t----- bird -----\tcard_games",
    "404": "SELECT flavorText FROM foreign_data JOIN sets ON sets.code = foreign_data.multiverseid WHERE sets.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT DISTINCT setCode FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation LIKE '%Portuguese (Brasil)%' AND sets.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.types = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM cards WHERE language = 'German' AND (subtypes IS NOT NULL AND supertypes IS NOT NULL);\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text LIKE '%This is a triggered mana ability.%' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.artist = 'Erica Yang' AND (l.format = 'pauper' OR l.format IS NULL) AND (c.availability = 'paper' OR c.availability = 'unknown');\t----- bird -----\tcard_games",
    "411": "SELECT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name LIKE '%Matthew D. Wilson%' AND c.type = 'Creature' AND c.layout = 'Normal' AND c.borderColor = 'black';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND EXISTS (SELECT 1 FROM rulings WHERE date = '2007-02-01' AND uuid = cards.uuid);\t----- bird -----\tcard_games",
    "414": "SELECT code FROM sets WHERE block = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT ( SELECT COUNT(*) FROM foreign_data WHERE hasContentWarning = 0 AND flavorText LIKE '%Commander%' AND status = 'legal' ) AS no_content_warning_count , ( SELECT COUNT(*) FROM foreign_data WHERE hasContentWarning = 1 AND flavorText LIKE '%Commander%' AND status = 'legal' ) AS has_content_warning_count , ( SELECT COUNT(*) FROM foreign_data WHERE hasContentWarning = 0 AND flavorText LIKE '%Commander%' AND status = 'legal' ) * 100.0 / ( SELECT COUNT(*) FROM foreign_data WHERE hasContentWarning = 0 AND flavorText LIKE '%Commander%' AND status = 'legal' ) AS percentage FROM legalities WHERE format = 'commander' AND status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT ( SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL AND fd.language = 'French' ) / ( SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL ) * 100 AS percentage_cards_without_power_in_french;\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(CASE WHEN flavorText LIKE '%Japanese%' AND status = 'expansion' THEN 1 END) / COUNT(CASE WHEN flavorText LIKE '%Japanese%' THEN 1 END)) * 100 AS percentage_of_japanese_expansion_sets FROM foreign_data JOIN legalities ON foreign_data.uuid = legalities.uuid JOIN sets ON sets.code = legalities.format;\t----- bird -----\tcard_games",
    "418": "SELECT \"availability\" FROM \"cards\" WHERE \"artist\" = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT c.name, c.power, l.format, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.power IS NULL AND l.status = 'promotional' AND fd.name LIKE '%Arena League%' ORDER BY c.name, l.format, l.status LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT flavorText FROM foreign_data WHERE uuid = ( SELECT cards.uuid FROM cards WHERE multiverse = 149934 );\t----- bird -----\tcard_games",
    "423": "SELECT c1.cardKingdomFoilId, c1.cardKingdomId, c1.faceName, c2.faceName FROM cards c1 JOIN cards c2 ON c1.cardKingdomFoilId = c2.cardKingdomId WHERE c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL ORDER BY c1.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT (COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) / COUNT(*)) * 100 AS proportion FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT DISTINCT c.number FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND fd.flavorText IS NULL\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets LEFT JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE mtgoCode IS NULL OR mtgoCode = '' ORDER BY name LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT flavorText.language FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name AS set_name, t.translation AS set_translation FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT s.language, t.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN sets t ON tr.setCode = t.code WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Italian' AND s.block LIKE 'Shadowmoor%' ORDER BY s.name ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id, s.name FROM sets s JOIN foreign_data f ON s.uuid = f.uuid JOIN legalities l ON s.uuid = l.uuid WHERE s.isForeignOnly = 1 AND l.status = 'legal' AND f.language = 'Japanese' AND s.isFoilOnly = 1;\t----- bird -----\tcard_games",
    "432": "SELECT s.name, MAX(s.baseSetSize) AS max_base_set_size FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.language = 'Russian' GROUP BY s.name;\t----- bird -----\tcard_games",
    "433": "SELECT COUNT(DISTINCT foreign_data.uuid) AS total_cards, SUM(CASE WHEN foreign_data.language = 'zh-CN' AND isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_chinese_simplified, (SUM(CASE WHEN foreign_data.language = 'zh-CN' AND isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT foreign_data.uuid)) * 100 AS percentage FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.id) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.mtgoCode IS NOT NULL AND set_translations.language = 'Japanese';\t----- bird -----\tcard_games",
    "435": "SELECT c.id, c.borderColor FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavorText LIKE '%border with black color%' AND c.borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE colorIdentity = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT SET_TRANSLATIONS.language FROM SET_TRANSLATIONS JOIN SETS ON SET_TRANSLATIONS.setCode = SETS.code WHERE SETS.id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name AS set_name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation LIKE '%2007-07-13%';\t----- bird -----\tcard_games",
    "442": "SELECT s.baseSetSize, s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.block LIKE '%Masques%' AND s.block LIKE '%Mirage%';\t----- bird -----\tcard_games",
    "443": "SELECT s.code, s.name, s.block, s.booster, s.code, s.isFoilOnly, s.isForeignOnly, s.isNonFoilOnly, s.isOnlineOnly, s.isPartialPreview, s.keyruneCode, s.mcmId, s.mcmIdExtras, s.mcmName, s.mtgoCode, s.name, s.parentCode, s.releaseDate, s.tcgplayerGroupId, s.totalSetSize, s.type FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie' LIMIT 1;\t----- bird -----\tcard_games",
    "446": "SELECT * FROM cards WHERE setCode ='set_of_abysal_horror' AND convertedManaCost = 10;\t----- bird -----\tcard_games",
    "447": "SELECT sets.code FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation LIKE '%Commander%';\t----- bird -----\tcard_games",
    "448": "SELECT f.flavorText, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'abzan' LIMIT 1;\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT converted_mana_cost AS unconverted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.borderColor = 'white' AND cards.power = '*';\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE isPromo = 1 AND side IS NOT NULL GROUP BY c.name HAVING COUNT(DISTINCT fd.flavorText) > 1;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND (availability LIKE '%arena,mtgo%' OR availability LIKE '%mtgo,arena%') AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "459": "SELECT \"name\", \"convertedManaCost\" FROM \"cards\" WHERE \"name\" IN ('Serra Angel', 'Shrine Keeper') ORDER BY \"convertedManaCost\" DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.frameVersion = '2003' AND c.frameEffects = '2003' ORDER BY c.convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT name FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "463": "SELECT id FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "464": "SELECT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT t.flavorText FROM cards AS c JOIN foreign_data AS f ON c.uuid = f.uuid WHERE c.name = 'Ancestor''s Chosen' AND f.language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex' AND setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT SUM(baseSetSize) AS base_set_size FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT SET_TRANSLATIONS.translation FROM SET_TRANSLATIONS JOIN SETS ON SET_TRANSLATIONS.setCode = SETS.code WHERE SETS.name = 'Eighth Edition' AND SET_TRANSLATIONS.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT 1 FROM foreign_data WHERE flavorText = 'Angel of Mercy' AND mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor's Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT s.type AS expansion_type FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND language = 'Italian' AND translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE language = 'Italian' AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.setCode = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT \"name\" AS card_number_4_in_coldsnap FROM \"cards\" JOIN \"foreign_data\" ON \"cards\".\"uuid\" = \"foreign_data\".\"uuid\" WHERE \"sets\".\"name\" = 'Coldsnap' AND \"cards\".\"number\" = 4\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR legalities.status = 'UNKNOWN');\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT \"name\" AS \"German_Type\" FROM \"cards\" WHERE \"name\" = 'Ancestor''s Chosen' AND \"language\" = 'German';\t----- bird -----\tcard_games",
    "483": "SELECT c.uuid, r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.name = 'Coldsnap' AND r.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT f.flavorText AS italian_name, c.name AS card_name, c.convertedManaCost FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.setCode = 'Coldsnap' AND f.language = 'Italian' AND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'Coldsnap');\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Reminisce' );\t----- bird -----\tcard_games",
    "486": "SELECT AVG(convertedManaCost = 7) * 100 FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT COUNT(*) * 100.0 / ( SELECT SUM(CASE WHEN flavorText LIKE '%incredibly powerful%' THEN 1 ELSE 0 END) FROM foreign_data ) AS percentage_incredibly_powerful FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND s.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.id, c.artist, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Jim Pavelec%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "495": "SELECT releaseDate FROM sets WHERE name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT SUM(baseSetSize) AS total_cards_in_set FROM sets WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'French' AND tr.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT s.name AS set_name, st.translation AS translated_name FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name LIKE '%Tendo Ice Bridge%';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT language) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.name = 'Fellwar Stone' AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "501": "SELECT c.name AS card_name, c.convertedManaCost AS converted_mana_cost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.setCode = 'Journey into Nyx Hero''s Path' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT sets.expansion_type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON foreign_data.multiverseid = sets.id WHERE cards.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN legalities AS l ON c.uuid = l.uuid JOIN sets AS s ON c.uuid = s.uuid WHERE s.name = 'World Championship Decks 2004' AND c.convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT foreign_data.flavorText FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Mirrodin' AND cards.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT s.name AS set_name, COUNT(c.id) AS total_cards, SUM(CASE WHEN c.isNonFoilOnly = 1 AND s.language = 'Japanese' THEN 1 ELSE 0 END) AS japanese_non_foil_only_cards, (SUM(CASE WHEN c.isNonFoilOnly = 1 AND s.language = 'Japanese' THEN 1 ELSE 0 END) / COUNT(c.id)) * 100 AS percentage FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid JOIN cards c ON s.code = c.mcmId WHERE s.language = 'Japanese' GROUP BY s.name HAVING total_cards > 0;\t----- bird -----\tcard_games",
    "507": "SELECT s.name, COUNT(c.uuid) AS total_cards, SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_cards, SUM(CASE WHEN s.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) AS brazil_portuguese_cards, (SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN s.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END)) * 100 AS percentage_online_only_brazil_portuguese FROM sets s JOIN foreign_data f ON s.code = f.uuid JOIN cards c ON f.uuid = c.uuid WHERE s.language = 'Portuguese (Brazil)' GROUP BY s.name ORDER BY total_cards DESC;\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT sets.code, sets.name FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid JOIN cards ON sets.uuid = cards.uuid WHERE cards.artist = 'Aleksi Briclot' AND cards.isTextless = 1 AND (foreign_data.flavorText IS NULL OR foreign_data.flavorText = '')\t----- bird -----\tcard_games",
    "509": "SELECT id FROM foreign_data JOIN legalities ON foreign_data.uuid = legalities.uuid JOIN sets ON sets.uuid = legalities.uuid WHERE sets.isForeignOnly = 0 ORDER BY sets.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT c.artist, MAX(c.convertedManaCost) AS highest_cost_art FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.isMultiFace = 0 AND c.isReprint = 0 AND c.rarity = 'Rare' GROUP BY c.artist ORDER BY highest_cost_art DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effect FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND setCode = ( SELECT code FROM sets WHERE baseSetSize = ( SELECT MAX(baseSetSize) FROM sets ) AND isFoilOnly = 1 )\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.type = 'commander' GROUP BY s.id;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.convertedManaCost FROM cards c JOIN ( SELECT name, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE format = 'duel' GROUP BY name ) subquery ON c.name = subquery.name ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' AND status = 'legal';\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(c.id) FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.artist = 'Volkan Ba\u00c7\u00b5a' AND fd.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE type = 'Rare' AND subtypes = 'Enchantment' AND name = 'Abundance' AND status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT s.name, c.faceName FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN cards c ON fd.uuid = c.uuid WHERE s.format = 'play' AND c.status = 'Banned' GROUP BY s.name, c.faceName ORDER BY MAX(COUNT(c.status = 'Banned')) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM foreign_data WHERE name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT MIN(artist) AS illustrator_with_least_cards, sets.format FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE foreign_data.language = 'English' GROUP BY sets.format ORDER BY illustrator_with_least_cards ASC LIMIT 1;\t----- bird -----\tcard_games",
    "521": "SELECT c.name, c.status FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid WHERE s.frameVersion = '1997' AND fd.flavorText LIKE '%illustrated by D. Alexander Gregory%' AND (l.format = 'legacy' OR l.format = 'Wizards of the Coast') AND (l.hasContentWarning = 1 OR l.status ='sensitive content');\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND c.edhrecRank = 1\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS annual_average_sets, AVG(legalities.status) AS common_language FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.borderColor = 'black' AND fd.flavorText LIKE '%arena%';\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.format IN ('oldschool','restricted') AND l.status IN ('banned','restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = fd.language WHERE tr.language NOT LIKE '%Japanese%' AND fd.text IS NOT NULL AND tr.language = 'Korean';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersions.frameVersion FROM frameVersions JOIN cards ON frameVersions.cardId = cards.id JOIN artists ON cards.artist = artists.name WHERE artists.name = 'Allen Williams' UNION SELECT DISTINCT rulings.uuid FROM rulings WHERE rulings.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT MAX(Reputation) AS max_reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "532": "SELECT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId WHERE YEAR(votes.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT u.DisplayName FROM users u JOIN ( SELECT OwnerUserId, SUM(Views) AS TotalViews FROM posts GROUP BY OwnerUserId ) sub ON u.Id = sub.OwnerUserId WHERE sub.TotalViews = ( SELECT MAX(TotalViews) FROM ( SELECT OwnerUserId, SUM(Views) AS TotalViews FROM posts GROUP BY OwnerUserId ) sub2 )\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 AND u.UpVotes > 100 GROUP BY u.Id HAVING COUNT(v.Id) > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Views > 10 AND YEAR(votes.CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(DISTINCT posts.Id) AS num_posts FROM posts WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 2 -- Assuming bounty vote has ID 2 GROUP BY u.Id ORDER BY MAX(v.UpVotes) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(comments.CommentCount) FROM posts JOIN comments ON posts.Id = comments.PostId WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answer_count FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.UserId = ( SELECT u2.Id FROM users u2 JOIN votes v2 ON u2.Id = v2.UserId WHERE v2.PostId = ( SELECT p2.Id FROM posts p2 WHERE p2.Title = 'Examples for teaching: Correlation does not mean causation' ) )\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE ph.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(DISTINCT p.Id) FROM posts p JOIN ( SELECT Id FROM users WHERE Age > 65 ) eu ON p.OwnerUserId = eu.Id WHERE p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT Location FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE Title = 'Eliciting priors from experts' );\t----- bird -----\tcodebase_community",
    "549": "SELECT t1.Title, t1.Body FROM posts AS t1 JOIN tags AS t2 ON t1.Id = t2.PostId WHERE t2.TagName = 'bayesian' AND t2.ExcerptPostId = ( SELECT t3.Id FROM posts AS t3 JOIN tags AS t4 ON t3.Id = t4.ExcerptPostId WHERE t4.TagName = 'bayesian' )\t----- bird -----\tcodebase_community",
    "550": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(Count) FROM tags) ORDER BY t.TagName DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(DISTINCT \"badges\".\"Id\") AS total_badges FROM \"badges\" JOIN \"users\" ON \"badges\".\"UserId\" = \"users\".\"Id\" WHERE \"users\".\"DisplayName\" = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges AS b JOIN posts AS p ON b.Id = p.OwnerUserId JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE DisplayName = 'csgillespie' AND Year(Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id GROUP BY users.Id ORDER BY COUNT(badges.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(p.Score) AS average_score FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(b.Views) AS average_badges FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN badges AS b ON p.Id = b.PostId WHERE u.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN users.Age > 65 AND posts.Score > 5 THEN 1 END) / COUNT(posts.Id)) * 100 FROM posts JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(votes.Count) AS max_creation_date FROM votes WHERE votes.PostId IN (SELECT Id FROM posts WHERE posts.OwnerUserId IN (SELECT Id FROM badges)))\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN ( SELECT c1.PostId, MAX(c1.Score) AS max_score FROM comments c1 JOIN comments c2 ON c1.PostId = c2.PostId AND c1.Score < c2.Score GROUP BY c1.PostId ) highest_score_comments ON p.Id = highest_score_comments.PostId WHERE highest_score_comments.max_score = ( SELECT MAX(comments.Score) FROM comments );\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS comment_count FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(posts.FavoriteCount) AS favorite_count_amount FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE users.Id = 3025 AND votes.CreationDate LIKE '2014/4/%';\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN posts parent ON p.ParentId = parent.Id WHERE parent.Id = 107829;\t----- bird -----\tcodebase_community",
    "565": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE OwnerUserId = 23853) AND CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(DISTINCT p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(votes.VoteTypeId) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT posts.Id) AS num_posts, COUNT(votes.Id) AS num_votes FROM users AS u JOIN posts ON u.Id = posts.OwnerUserId JOIN votes ON posts.Id = votes.PostId WHERE u.Id = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT SUM(ViewCount) AS total_views FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT comments.Text FROM comments JOIN votes ON comments.Id = votes.PostId JOIN users ON votes.UserId = users.Id JOIN posts ON posts.Id = comments.PostId WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'John Doe') AND votes.VoteTypeId = 17 AND users.Reputation > 0;\t----- bird -----\tcodebase_community",
    "574": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%Stack%Overflow%' AND v.VoteTypeId = 2 -- Upvote AND u.WebsiteUrl LIKE 'http://%s%s';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments AS c JOIN users AS u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE u.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT DISTINCT c.Text FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Necromancer';\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa' AND v.CreationDate > p.CreaionDate;\t----- bird -----\tcodebase_community",
    "583": "SELECT p.Id AS PostId, SUM(v.Score) AS TotalScore, u.WebsiteUrl FROM posts p JOIN votes v ON p.Id = v.PostId JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Yevgeny' GROUP BY p.Id\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) AS total_bounty_amount FROM posts JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%about data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName, v.BountyAmount FROM votes AS v JOIN users AS u ON v.UserId = u.Id JOIN posts AS p ON v.PostId = p.Id JOIN badges AS b ON p.Id = b.UserId WHERE p.Title LIKE '%variance%' AND v.BountyAmount = 50 AND b.Id = (SELECT Id FROM badges WHERE DisplayName = (SELECT DisplayName FROM users WHERE Id = v.UserId));\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount FROM posts AS p JOIN post_tags AS pt ON p.Id = pt.PostId JOIN tags AS t ON pt.TagId = t.Id WHERE t.TagName = 'humor' GROUP BY p.Title, c.Text\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(c.Id) FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.Id = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT u.Id AS userId FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY MAX(v.VoteTypeId) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(Views) AS lowest_views FROM users WHERE Id IN (SELECT UserId FROM comments);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT posts.UserId) FROM badges JOIN posts ON badges.UserId = posts.Id WHERE badges.Name = 'Supporter' AND EXTRACT(YEAR FROM posts.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT UserId) FROM users INNER JOIN badges ON users.Id = badges.UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND badges.Name IN ('Teacher', 'Supporter');\t----- bird -----\tcodebase_community",
    "594": "SELECT u.Id, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.UserId, u.DisplayName, p.PostId, p.Title, p.ViewCount FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN ( SELECT PostId, COUNT(*) AS history_count FROM postHistory GROUP BY PostId ) ph_count ON p.Id = ph_count.PostId WHERE ph_count.history_count = 1 AND p.ViewCount >= 1000 GROUP BY u.UserId, p.PostId, p.Title, p.ViewCount HAVING COUNT(DISTINCT p.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id, u.DisplayName, COUNT(c.Id) AS comment_count FROM users u JOIN comments c ON u.Id = c.UserId GROUP BY u.Id ORDER BY comment_count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT u.Id) AS user_count FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Teacher' AND u.Location = 'India';\t----- bird -----\tcodebase_community",
    "598": "SELECT (COUNT(CASE WHEN YEAR(Date) = 2010 AND Name = 'Student' THEN 1 END) / COUNT(*) * 100) - (COUNT(CASE WHEN YEAR(Date) = 2011 AND Name = 'Student' THEN 1 END) / COUNT(*) * 100) FROM badges;\t----- bird -----\tcodebase_community",
    "599": "SELECT pht.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS unique_commenters FROM postHistory AS pht JOIN comments AS c ON pht.PostId = c.PostId WHERE pht.PostId = 3720 GROUP BY pht.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Title, p.ViewCount FROM posts p JOIN postLinks l ON p.Id = l.PostId JOIN postLinks rl ON rl.RelatedPostId = p.Id WHERE l.RelatedPostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "SELECT c.Score, th.PostHistoryTypeId FROM comments c JOIN postHistory th ON c.PostId = th.PostId WHERE th.PostId = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(v.Score) AS favorite_count_2011 FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.OwnerUserId = 686 AND EXTRACT(YEAR FROM p.CreaitionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes.UpVotes) AS average_up_votes, AVG(users.Age) AS average_age FROM votes JOIN users ON votes.UserId = users.Id WHERE users.Id IN ( SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(*) > 10 );\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges b JOIN votes v ON b.Id = v.PostId JOIN posts p ON v.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:39:08' GROUP BY b.Name HAVING COUNT(DISTINCT v.VoteTypeId) = 1;\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT badges.Name FROM badges JOIN ( SELECT UserId, MAX(Reputation) AS max_reputation FROM users GROUP BY UserId ) AS user_max_reputation ON badges.UserId = user_max_reputation.UserId;\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Id, u.Reputation FROM votes v JOIN users u ON v.UserId = u.Id WHERE v.CreationDate = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM users AS u JOIN badges AS b ON u.Id = b.UserId WHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date FROM users u JOIN badges b ON u.Id = b.UserId WHERE u.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT (COUNT(DISTINCT u.Id) * 100.0 / (SELECT COUNT(DISTINCT b.Id) FROM badges AS b WHERE b.Name = 'Teacher')) AS percentage_of_teachers FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN badges AS b ON v.PostId = b.Id WHERE b.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users)) AS percentage_teenagers FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments JOIN postHistory ON comments.PostId = postHistory.PostId JOIN posts ON postHistory.PostId = posts.Id WHERE posts.CreaionDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Id, u.DisplayName, u.Location, u.Age FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN badges AS b ON v.PostId = b.Id WHERE b.Name = 'Vienna, Austria' GROUP BY u.Id, u.DisplayName, u.Location, u.Age HAVING COUNT(DISTINCT b.Id) = 1;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId INNER JOIN tags ON badges.Id = tags.ExcerptPostId WHERE users.Age BETWEEN 19 AND 65 AND badges.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(p.ViewCount) AS badge_views FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN badges b ON u.Id = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges AS b LEFT JOIN votes AS v ON b.UserId = v.UserId AND b.Id = v.PostId LEFT JOIN tags AS t ON v.ExcerptPostId = t.Id WHERE v.BountyAmount IS NULL GROUP BY b.Id ORDER BY MIN(v.Reputation) ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b JOIN comments AS c1 ON b.Id = c1.PostId JOIN comments AS c2 ON c1.Id = c2.PostId JOIN users AS u ON c2.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT users.DisplayName FROM users WHERE users.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT users.Id) AS num_users_from_new_york FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(DISTINCT users.Id) AS adult_count FROM users WHERE users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.DisplayName FROM users u WHERE u.Views = (SELECT MAX(Views) FROM users);\t----- bird -----\tcodebase_community",
    "629": "SELECT (COUNT(Id WHERE YEAR(CreationDate) = 2010) / COUNT(Id WHERE YEAR(CreationDate) = 2011)) AS ratio_of_votes_2010_and_2011 FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS v JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT P.Id AS PostId FROM posts P INNER JOIN users U ON P.OwnerUserId = U.Id WHERE U.DisplayName ='slashnick' ORDER BY P.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(posts.ViewCount) AS max_popularity FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY posts.Id;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Matt Parker' AND posts.Score > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT SUM(score) FROM comments WHERE UserDisplayName = 'Neil McGuigan' AND score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT t.TagName FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id JOIN votes v ON p.Id = v.PostId JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Mark Meckes' AND NOT EXISTS ( SELECT 1 FROM comments c WHERE c.PostId = p.Id )\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM posts WHERE DisplayName = 'Community')) AS percentage FROM posts WHERE TagName = 'r';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) - SUM(ViewCount) FROM posts WHERE DisplayName = 'Mornington' AND DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'commentator' AND YEAR(votes.CreationDate) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT u.DisplayName, u.Age FROM users u JOIN ( SELECT UserId, MAX(Views) AS max_views FROM posts GROUP BY UserId ) sub ON u.Id = sub.UserId WHERE sub.max_views = (SELECT MAX(Views) FROM posts);\t----- bird -----\tcodebase_community",
    "644": "SELECT p.CreationDate, p.OwnerUserId FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Detecting a given face in a database of facial images' ORDER BY p.CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c1.PostId JOIN comments c2 ON p.Id = c2.PostId JOIN users u1 ON c1.UserId = u1.Id JOIN users u2 ON c2.UserId = u2.Id WHERE c1.Score > 60 AND c2.Score > 60 GROUP BY p.Id, u1.Id, u2.Id HAVING COUNT(DISTINCT c1.UserId) > 1 AND COUNT(DISTINCT c2.UserId) > 1;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Location LIKE '%North Pole%' AND b.Date >= '2011-01-01' AND b.Date <= '2011-12-31';\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT ph.PostHistoryTypeId, COUNT(ph.Id) AS post_history_count, ph.CreationDate AS last_edit_date FROM postHistory ph JOIN posts p ON ph.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY ph.PostHistoryTypeId ORDER BY ph.CreationDate DESC;\t----- bird -----\tcodebase_community",
    "650": "SELECT users.Id, users.DisplayName, users.LastAccessDate, users.Location FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON posts.Id = votes.PostId JOIN badges ON posts.OwnerUserId = badges.Id AND badges.Name = 'outliers' WHERE badges.Name = 'outliers' AND votes.CreationDate = (SELECT MAX(votes.CreationDate) FROM votes WHERE badges.Name = 'outliers');\t----- bird -----\tcodebase_community",
    "651": "SELECT p.Id AS post_id, p.Body AS post_title FROM posts p WHERE p.Body LIKE '%How to tell if something happened in a data set which monitors a value over time%' LIMIT 1;\t----- bird -----\tcodebase_community",
    "652": "SELECT posts.PostId, badges.Name FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId JOIN badges ON votes.UserId = badges.Id WHERE users.DisplayName = 'Samuel' AND YEAR(posts.CreaionDate) = 2013\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount = (SELECT MAX(ViewCount) FROM posts) LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.TagIds = t.Id WHERE t.TagName = 'hypothesis-testing' AND p.ExcerptPostId = u.Id\t----- bird -----\tcodebase_community",
    "655": "SELECT \"tags\".\"TagName\" AS tag_name, \"tags\".\"Count\" AS count, \"tags\".\"ExcerptPostId\" AS excerpt_post_id FROM \"tags\" JOIN \"posts\" ON \"tags\".\"ExcerptPostId\" = \"posts\".\"Id\" WHERE \"posts\".\"Title\" = 'What are principal component scores?';\t----- bird -----\tcodebase_community",
    "656": "SELECT p.DisplayName AS ParentDisplayName, co.PostId AS ChildPostId FROM posts AS p JOIN postHistory AS co ON p.Id = co.PostId JOIN (SELECT PostId, MAX(Score) AS MaxScore FROM posts GROUP BY PostId) AS top_posts ON p.Id = top_posts.PostId AND p.Score = top_posts.MaxScore JOIN comments AS c ON co.PostId = c.PostId JOIN users AS u ON c.UserId = u.Id JOIN tags AS t ON p.Id = t.ExcerptPostId WHERE p.ParentId IS NOT NULL\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts WHERE ViewCount = (SELECT MAX(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT tags.Id) FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE posts.Score BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT posts.OwnerUserId FROM posts JOIN ( SELECT MAX(FavoriteCount) AS max_favorite_count FROM posts ) AS most_valuable_post ON posts.FavoriteCount = most_valuable_post.max_favorite_count AND posts.Id = most_valuable_post.max_favorite_count;\t----- bird -----\tcodebase_community",
    "661": "SELECT u.Id, u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 -- Assuming upvote has id 1 GROUP BY u.Id, u.DisplayName ORDER BY u.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Age) AS youngest_user_id FROM users;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(score) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19') AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(COUNT(post_links.Id)) AS average_monthly_links FROM post_links JOIN posts ON post_links.PostId = posts.Id JOIN votes ON votes.PostId = posts.Id WHERE YEAR(posts.CreationDate) = 2010 AND posts.AnswerCount <= 2 GROUP BY MONTH(posts.CreationDate);\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id AS post_id, p.FavoriteCount AS post_value FROM posts p JOIN votes v ON p.Id = v.PostId WHERE v.UserId = 1465 GROUP BY p.Id ORDER BY post_value DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT t1.Title FROM posts AS t1 JOIN postLinks AS t2 ON t1.Id = t2.PostId JOIN users AS t3 ON t2.RelatedPostId = t3.Id WHERE t2.CreationDate = (SELECT MIN(CreationDate) FROM postLinks) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.Id ORDER BY COUNT(b.Name) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) AS first_vote_date FROM votes JOIN users ON votes.UserId = users.Id JOIN posts ON votes.PostId = posts.Id WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(users.CreationDate) AS youngest_first_post_date FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Age = (SELECT MIN(users.Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' GROUP BY u.Id ORDER BY MIN(v.CreationDate) LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT SUM(posts.FavoriteCount) AS total_favorite_count FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN tags ON posts.PostTypeId = tags.Id WHERE users.Location = 'United Kingdom' GROUP BY users.Id HAVING SUM(posts.FavoriteCount) >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(votes.PostId) AS average_posts_voted_by_oldest_users FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id WHERE users.Age = (SELECT MAX(Age) FROM users) GROUP BY users.Id;\t----- bird -----\tcodebase_community",
    "674": "SELECT u.DisplayName FROM users u WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE votes.PostId IN ( SELECT posts.Id FROM posts JOIN tags ON posts.Id = tags.PostId JOIN post_links ON posts.Id = post_links.PostId JOIN post_history ON posts.Id = post_history.PostId GROUP BY posts.Id HAVING SUM(post_history.Score) > 1000 ) AND users.Reputation > 2000;\t----- bird -----\tcodebase_community",
    "676": "SELECT users.DisplayName FROM users WHERE users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(DISTINCT p.PostId) FROM posts p JOIN users u ON p.OwnerUserId = u.Id OR p.LastEditorUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND YEAR(p.CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' AND p.ViewCount = ( SELECT MAX(ViewCount) FROM posts WHERE OwnerUserId = p.OwnerUserId );\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts AS p JOIN votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvote has a type of 1 GROUP BY p.Id, p.Title ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN postHistory AS ph ON p.Id = ph.PostId WHERE ph.CreationDate >= '2011-01-01' AND ph.CreationDate < '2012-01-01' AND p.ViewCount > 20000 GROUP BY u.DisplayName HAVING COUNT(DISTINCT ph.PostId) > 0;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 GROUP BY p.Id, u.DisplayName HAVING MAX(p.FavoriteCount) = ( SELECT MAX(favorite_count) FROM ( SELECT p.Id, p.FavoriteCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 GROUP BY p.Id, u.DisplayName ) AS subquery );\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(DISTINCT posts.Id) * 100.0 / COUNT(DISTINCT users.Id)) AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE YEAR(posts.CreationDate) = 2011 AND users.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT AVG(age) as teen_percentage FROM users WHERE age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "[SQL] SELECT posts.ViewCount FROM posts WHERE posts.Text = 'Computer Game Datasets' AND posts.OwnerUserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes WHERE PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes WHERE PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v2 WHERE v2.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v2.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes WHERE PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v3 WHERE v3.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v3.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v4 ) AND v4.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v4.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v5 ) AND v5.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v5.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v6 ) AND v6.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v6.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v7 ) AND v7.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v7.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v8 ) AND v8.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v8.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) v9 ) AND v9.PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND v9.UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes ) ) ) ) ) ) ) ) ) FROM votes WHERE PostId = ( SELECT Id FROM badges WHERE Name = 'Computer Game Datasets' ) AND UserId = ( SELECT MIN(user_id) FROM ( SELECT user_id, LAST_VALUE(CreationDate) OVER (PARTITION BY OwnerUserId ORDER BY CreationDate) AS CreationDate FROM votes WHERE PostId = ( SELECT Id\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(p.Id) FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId JOIN users voter_u ON v.UserId = voter_u.Id WHERE p.ViewCount > (SELECT AVG(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "687": "SELECT PostId, MAX(Score) AS max_score FROM comments GROUP BY PostId;\t----- bird -----\tcodebase_community",
    "688": "SELECT p.Id, p.ViewCount, p.CommentCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount > 35000 AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT users.DisplayName, users.Location FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id WHERE posts.Id = 183 AND votes.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE votes.PostId = 183) LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, b.Date FROM badges b JOIN ( SELECT UserId, MAX(Date) AS max_date FROM badges GROUP BY UserId ) latest_badges ON b.UserId = latest_badges.UserId WHERE b.Name = 'Emmett';\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MIN(stats_badges.Date) - MIN(users.CreationDate) FROM badges AS stats_badges JOIN users ON stats_badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT u.Id, COUNT(p.Id) AS post_count, COUNT(c.Id) AS comment_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId WHERE u.CreationDate = (SELECT MAX(u.CreationDate) FROM users u) GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' AND c.CreationDate = (SELECT MAX(c2.CreationDate) FROM comments c2 WHERE c2.PostId = p.Id) LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE EXISTS ( SELECT 1 FROM tags WHERE tags.TagName = 'careers' AND posts.Id = tags.ExcerptPostId );\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.Id) AS comments, COUNT(DISTINCT a.Id) AS answers FROM posts p JOIN comments c ON p.Id = c.PostId JOIN posts a ON c.PostId = a.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT max(CreationDate) FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT MAX(percentage) AS max_percentage FROM ( SELECT COUNT(stats_posts.Id) AS influence_count, COUNT(stats_posts.Id) OVER() AS total_posts FROM stats_posts WHERE Score > 50 AND MAX(Reputation) = (SELECT MAX(Reputation) FROM users) GROUP BY MAX(Reputation) ) AS user_influence;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(DISTINCT t.Id) FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Id < 15 GROUP BY t.Id HAVING COUNT(p.Id) <= 20 AND COUNT(p.Id) <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, SUM(v.UpVotes) AS UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostContent LIKE '%fine, you win :%';\t----- bird -----\tcodebase_community",
    "706": "SELECT TEXT FROM comments WHERE post_history_type_id = ( SELECT id FROM post_history_types WHERE description LIKE '%linear regression%' ) AND post_id = ( SELECT id FROM posts WHERE title LIKE '%linear regression%' )\t----- bird -----\tcodebase_community",
    "707": "SELECT p.Title, c.Text, c.Score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 ORDER BY c.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "708": "SELECT u.DisplayName, u.Reputation, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age, c.CreationDate FROM users u JOIN votes v ON u.Id = v.UserId JOIN comments c ON v.PostId = c.PostId WHERE c.Text LIKE '%http://%' GROUP BY u.Id, u.DisplayName, u.Reputation, c.CreationDate;\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(*) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT u.Id, u.DisplayName, u.Age FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN comments c ON p.Id = c.PostId WHERE c.Score = 0 GROUP BY u.Id, u.DisplayName, u.Age HAVING u.Age >= 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id AS PostId, c.Id AS CommentId, c.Text AS CommentText FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT c.UserId, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT PERCENTAGE FROM ( SELECT COUNT(DISTINCT comments.UserId) AS Count_0_up_votes, COUNT(comments.UserId) AS Count_5_10_score FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Score BETWEEN 5 AND 10 GROUP BY comments.UserId ) AS subquery CROSS JOIN (SELECT 1 AS percentage) AS constant_percentage;\t----- bird -----\tcodebase_community",
    "717": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT hero_id) AS superhero_count FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(sp.id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN superhero ON alignment.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Blue' AND hero_attribute.attribute_value = 1 AND superpower.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT superhero_name FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'Blue' ) AND hair_colour_id = ( SELECT id FROM colour WHERE colour = 'Blond' );\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT s.superhero_name, s.height_cm FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT superhero.superhero_name, COUNT(superhero.id) AS popularity FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.publisher_name = 'Marvel Comics' GROUP BY superhero.superhero_name ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(id) FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Speed' GROUP BY s.publisher_id ORDER BY MIN(attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Gold'; JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher_name FROM superhero WHERE superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute WHERE attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race.race AS copycat_race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name, h.attribute_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND h.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100 AND superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name, COUNT(hp.power_id) AS power_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics')) AS percentage, COUNT(*) AS number_of_superheroes FROM superhero WHERE alignment = 'Bad';\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(superhero_id) AS total_superheroes_dc, SUM(superhero_id) AS total_superheroes_marvel FROM superhero WHERE publisher_name = 'DC Comics' AND publisher_name = 'Marvel Comics'; SELECT (total_superheroes_dc - total_superheroes_marvel) AS difference FROM ( SELECT SUM(superhero_id) AS total_superheroes_dc, SUM(superhero_id) AS total_superheroes_marvel FROM superhero WHERE publisher_name = 'DC Comics' AND publisher_name = 'Marvel Comics' );\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT h.power_name FROM superpower h JOIN hero_power hp ON h.id = hp.power_id JOIN superhero s ON hp.hero_id = s.id WHERE s.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Male');\t----- bird -----\tsuperhero",
    "752": "SELECT s.superhero_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 'Bad';\t----- bird -----\tsuperhero",
    "757": "SELECT id FROM superhero WHERE weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT colour.attribute_name FROM superhero JOIN race ON superhero.race_id = race.id JOIN hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE race.race = 'human' AND superhero.height_cm = 185;\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour FROM colour c JOIN hero_power hp ON c.id = hp.colour_id JOIN superpower sp ON hp.power_id = sp.id JOIN hero h ON sp.hero_id = h.id WHERE h.weight_kg = (SELECT MAX(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "760": "SELECT ( SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics' ) * 100.0 / ( SELECT COUNT(*) FROM superhero ) AS percentage\t----- bird -----\tsuperhero",
    "761": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT superpower.power_name, COUNT(hero_power.hero_id) AS power_count FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id GROUP BY superpower.power_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM superhero WHERE hero_power.power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='strength' GROUP BY superhero.full_name HAVING MAX(hero_attribute.attribute_value) = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute.attribute_name ='strength' );\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(skin_colour_id) AS average_no_skin_colour FROM superhero WHERE skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(DISTINCT hero_id) FROM superhero WHERE publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(h.attribute_value) AS max_durability FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'durability' AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') GROUP BY s.superhero_name ORDER BY max_durability DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM alignment AS colour WHERE alignment.alignment = ( SELECT alignment.id FROM superhero WHERE superhero.superhero_name = 'Abraham Sapien' )\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT a.attribute_name, c.colour FROM attribute a JOIN hero_attribute h ON a.id = h.attribute_id JOIN superhero s ON h.hero_id = s.id JOIN colour c ON s.eye_colour_id = c.id WHERE s.gender_id = 1 AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = ( SELECT c2.colour FROM colour c2 WHERE c1.hair_colour_id = c2.id AND c1.skin_colour_id = c2.id AND c1.eye_colour_id = c2.id ) AND c.colour = ( SELECT c2.colour FROM colour c2 WHERE s.hair_colour_id = c2.id AND s.skin_colour_id = c2.id AND s.eye_colour_id = c2.id ) JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IS NOT NULL;\t----- bird -----\tsuperhero",
    "774": "SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT 100.0 * SUM(CASE WHEN colour = 'Blue' AND gender = 'Female' THEN 1 ELSE 0 END) / COUNT(gender = 'Female') AS percentage FROM superhero\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT superhero.gender_id FROM superhero WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT power_id) AS power_count FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT s.power_name FROM superhero AS h JOIN hero_power AS hp ON h.id = hp.hero_id JOIN superpower AS s ON hp.power_id = s.id WHERE h.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT hero_attribute.height_cm FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.attribute_name = 'eye_colour' AND colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN colour c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Black' AND c2.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT full_name FROM superhero WHERE race_id = ( SELECT id FROM race WHERE race = 'Vampire' );\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, superhero.alignment FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN gender = 'Female' AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(publisher_name = 'Marvel Comics')) * 100 AS percentage FROM superhero;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg) AS average_weight FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON attribute.attribute_name = 'race' AND hero_attribute.attribute_value = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) - SUM(weight_kg) AS difference FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_id, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_id;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender.id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name ORDER BY h.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT h.attribute_name, h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute a1 ON s.id = a1.hero_id JOIN hero_attribute a2 ON s.id = a2.hero_id JOIN colour c1 ON a1.attribute_id = c1.id AND c1.colour = 'Blue' JOIN colour c2 ON a2.attribute_id = c2.id AND c2.colour = 'Brown' WHERE a1.attribute_value = 1 AND a2.attribute_value = 2;\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT PERCENTAGE FROM superhero, hero_attribute, colour, alignment WHERE superhero.id = hero_attribute.hero_id AND hero_attribute.attribute_id = colour.id AND colour.colour = 'Blue' AND alignment.id = hero_attribute.attribute_id\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name, MAX(height_cm) FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id FROM superpower WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT s.superhero_name FROM superhero s WHERE s.id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT superhero.full_name FROM superhero WHERE superhero.weight_kg = 0 OR superhero.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour_name FROM colour c JOIN hero_attribute h_a ON c.id = h_a.colour_id JOIN hero_power hp ON h_a.attribute_id = hp.power_id JOIN superpower sp ON hp.power_id = sp.id JOIN superhero s ON s.id = hp.hero_id WHERE s.full_name = 'Karen Beecher-Duncan' LIMIT 1;\t----- bird -----\tsuperhero",
    "807": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT r.race FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = 'black' AND s.weight_kg = 108 AND s.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT r.race_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN race r ON s.race_id = r.id WHERE ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE hero_id = s.id) LIMIT 1;\t----- bird -----\tsuperhero",
    "811": "SELECT a.attribute_name, s.power_name FROM superhero AS s JOIN hero_attribute AS a ON s.id = a.hero_id JOIN alignment AS al ON a.attribute_id = al.id JOIN superpower AS p ON s.id = p.hero_id WHERE s.full_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT superhero_name, full_name FROM superhero WHERE eye_colour_id IN ( SELECT id FROM colour WHERE colour = 'Blue' );\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(hero_attribute.attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT c.colour FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE ha.attribute_value = 100 GROUP BY c.colour;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name IN ('attribute_75', 'attribute_80') AND h.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT s.full_name, r.race FROM superhero s JOIN hero_attribute h_a ON s.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = 'blue' AND a.attribute_name = 'hair_colour' AND s.gender_id = (SELECT id FROM gender WHERE gender ='male') AND s.alignment_id = (SELECT id FROM alignment WHERE alignment = 'blue-haired');\t----- bird -----\tsuperhero",
    "818": "SELECT 100.0 * COUNT(DISTINCT hero.id) / COUNT(DISTINCT alignment.id) AS percentage FROM superhero AS hero JOIN alignment AS alignment ON hero.alignment_id = alignment.id WHERE alignment.id = 2 AND hero.gender_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN hero_power.power_id = (SELECT id FROM superpower WHERE power_name = 'Blue Eyes') THEN 1 ELSE 0 END) AS blue_eyes, SUM(CASE WHEN hero_power.power_id = (SELECT id FROM superpower WHERE power_name = 'No Eye Color') THEN 1 ELSE 0 END) AS no_eye_color FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Strength' AND superhero_name = 'Hulk';\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name FROM superpower JOIN hero_power ON hero_power.hero_id = superpower.id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id JOIN superhero ON alignment.id = superhero.alignment_id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control';\t----- bird -----\tsuperhero",
    "825": "SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') AND h.attribute_name IN ('weight_kg') ORDER BY h.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(s.height_cm) AS avg_height FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN race r ON ha.attribute_id = r.id JOIN publisher p ON s.publisher_id = p.id WHERE r.race <> 'Human' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT s.superhero_name, h.attribute_value AS fastest_speed FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name ORDER BY fastest_speed DESC LIMIT 10;\t----- bird -----\tsuperhero",
    "829": "CREATE TEMPORARY TABLE publisher_counts AS SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero GROUP BY publisher_name;\t----- bird -----\tsuperhero",
    "830": "SELECT attribute_name FROM attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Black Panther' ) );\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM alignment AS superhero JOIN hero_attribute AS hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment AS eye_colour ON hero_attribute.attribute_id = eye_colour.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, MAX(height_cm) AS tallest_height FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT 100.0 * SUM(CASE WHEN superhero.gender = 'Female' AND superhero.publisher_name = 'George Lucas' THEN 1 ELSE 0 END) / COUNT(DISTINCT superhero.publisher_name = 'George Lucas')\t----- bird -----\tsuperhero",
    "835": "SELECT PERCENTAGE( SUM( CASE WHEN superhero.alignment = 'Good' AND superhero.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END ), COUNT( superhero.publisher_name = 'Marvel Comics' ) ) FROM superhero\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(DISTINCT id) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT superhero.id, MIN(hero_attribute.attribute_value) AS lowest_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id GROUP BY superhero.id;\t----- bird -----\tsuperhero",
    "838": "SELECT superhero_name, full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.weight_kg < 100 AND a.attribute_name = 'brown_eyes' AND h.attribute_value = 1;\t----- bird -----\tsuperhero",
    "840": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT h.weight, r.race FROM superhero AS h JOIN hero_attribute AS ha ON h.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id JOIN colour AS co ON a.attribute_value = co.id JOIN race AS r ON co.colour_id = r.id WHERE h.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero WHERE superhero.gender_id = ( SELECT id FROM alignment WHERE alignment = 'neutral' );\t----- bird -----\tsuperhero",
    "843": "SELECT s.id AS hero_id FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.attribute_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.attribute_id JOIN colour ON ha1.attribute_value = colour.id AND ha2.attribute_value = colour.id JOIN superhero ON alignment.id = superhero.gender_id WHERE superhero.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.height_cm > (SELECT AVG(h2.height_cm) FROM superhero h2) * 0.8;\t----- bird -----\tsuperhero",
    "846": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 20 AND q.position = 5\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'Race number 19' AND r.round = 2 AND l.lap = (SELECT MIN(lap) FROM lapTimes WHERE raceId = r.raceId AND q2 = true) ORDER BY d.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT r.year FROM races AS r JOIN circuits AS circ ON r.circuitId = circ.circuitId WHERE circ.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT \"races\".\"name\" FROM \"races\" INNER JOIN \"seasons\" ON \"races\".\"year\" = \"seasons\".\"year\" WHERE \"seasons\".\"url\" LIKE '%Circuit de Barcelona-Catalunya%' AND \"races\".\"circuitId\" = '123';\t----- bird -----\tformula_1",
    "850": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE con.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT races.raceId) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.location NOT LIKE 'Asia%' AND circuits.location NOT LIKE 'Europe%';\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE cr.points = 1 AND cr.raceId = 24;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = 'Bruno Senna';\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE q.q2_time = '0:01:40' AND r.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT d.forename, d.surname, r.number, r.position FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.number = 903 AND r.q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM races JOIN seasons ON races.year = seasons.year WHERE races.name = 'Bahrain Grand Prix' AND seasons.year = 2007 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons AS s JOIN races AS r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT drivers.driverId) AS num_drivers_finished FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE r.raceId = 592 AND r.time IS NOT NULL ORDER BY DOB DESC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 161 AND lt.time = '0:01:27';\t----- bird -----\tformula_1",
    "867": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.raceId = 933 ORDER BY cr.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = 'Lucas di Grassi';\t----- bird -----\tformula_1",
    "871": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE q.q2_time = '0:01:15' AND r.raceId = 347;\t----- bird -----\tformula_1",
    "872": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 45 AND q.q3 LIKE '0:01:33%' ORDER BY forename;\t----- bird -----\tformula_1",
    "873": "SELECT l.time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE d.forename = 'Bruce' AND d.surname = 'McLaren' AND r.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname, r.name, r.date, r.time FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = 'San Marino Grand Prix' AND r.year = 2006 ORDER BY ds.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId WHERE races.date = '2015-11-29' AND position IS NULL;\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 872 AND lt.time IS NOT NULL AND lt.milliseconds IS NOT NULL ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 348 ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId -- Optional: JOIN constructors c ON r.constructorId = c.constructorId WHERE r.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results )\t----- bird -----\tformula_1",
    "880": "SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853) * 100 FROM results WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 853);\t----- bird -----\tformula_1",
    "881": "SELECT d.driverId, d.forename, d.surname, COUNT(lt.lap) AS laps_completed, (COUNT(lt.lap) * 100.0 / COUNT(r.raceId)) AS completion_rate FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes lt ON d.driverId = lt.driverId AND r.raceId = lt.raceId WHERE r.date = '1983-07-16' GROUP BY d.driverId, d.forename, d.surname;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(races.year) AS first_singapore_grand_prix_year FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Singapore';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT r.name FROM races r JOIN seasons s ON r.year = s.year WHERE (s.year, s.month) = (SELECT MIN(YEAR, MONTH) FROM seasons) LIMIT 1;\t----- bird -----\tformula_1",
    "885": "SELECT r.name, r.date FROM races r JOIN seasons s ON r.year = s.year WHERE s.year = 1999 ORDER BY r.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT s.year FROM seasons s JOIN races r ON s.year = r.year GROUP BY s.year ORDER BY COUNT(r.raceId) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.year = 2017 AND s.url NOT LIKE '%2000%';\t----- bird -----\tformula_1",
    "888": "SELECT c.country, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = (SELECT MIN(year) FROM races);\t----- bird -----\tformula_1",
    "889": "SELECT circuitId FROM circuits WHERE name = 'Brands Hatch';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) FROM races JOIN seasons ON races.year = seasons.year WHERE races.name = 'British Grand Prix' AND seasons.url LIKE '%United Kindom%';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname, rs.position FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN results r ON rs.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE e.name = '2010 Singapore Grand Prix' ORDER BY rs.position;\t----- bird -----\tformula_1",
    "892": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN constructorResults cr ON r.constructorId = cr.constructorId JOIN constructors con ON cr.constructorId = con.constructorId WHERE r.points = (SELECT MAX(points) FROM results);\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, SUM(r.points) AS total_points FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = '2017 Chinese Grand Prix' GROUP BY d.driverId ORDER BY total_points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT races.name AS race, drivers.forename ||'' || drivers.surname AS driver, MIN(lapTimes.milliseconds) AS best_lap_time FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId GROUP BY races.raceId, drivers.driverId ORDER BY best_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "896": "SELECT ( SELECT COUNT(raceId) FROM races WHERE surname = 'Hamilton' AND position > 1 ) AS hamilton_not_first, ( SELECT COUNT(raceId) FROM races WHERE surname = 'Hamilton' AND position = 1 ) AS hamilton_first, ( SELECT COUNT(raceId) FROM races WHERE surname = 'Hamilton' AND year >= 2010 ) AS hamilton_total_since_2010 FROM circuits\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, c.nationality, MAX(rs.points) AS max_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT drivers.forename, drivers.surname, drivers.dob, drivers.nationality FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url FROM circuits c WHERE ( SELECT COUNT(DISTINCT r.raceId) FROM races r WHERE r.year BETWEEN 1990 AND 2000 AND r.circuitId = c.circuitId ) >= 4;\t----- bird -----\tformula_1",
    "900": "SELECT c.name, c.location, r.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name, c.name AS circuit, l.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN locations l ON c.location = l.location WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT r.name AS race_name, d.forename AS driver_forename, l.position AS track_number FROM races AS r JOIN lapTimes AS l ON r.raceId = l.raceId JOIN drivers AS d ON l.driverId = d.driverId WHERE d.driverRef = 'Alex Yoong' AND l.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS circ ON r.circuitId = circ.circuitId WHERE circ.location = 'Sepang International Circuit' AND r.driverId = (SELECT DISTINCT driverId FROM results WHERE results.status = 'win');\t----- bird -----\tformula_1",
    "904": "SELECT r.name AS race_name, r.year FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher';\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2000 AND drivers.forename = 'Eddie' AND drivers.surname = 'Irvine';\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS first_race, d.forename, d.surname, r.points FROM races r JOIN drivers d ON r.driverId = d.driverId WHERE r.raceId = (SELECT MIN(raceId) FROM races) AND d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "907": "SELECT r.name, s.country, r.date FROM races r JOIN seasons s ON r.year = s.year ORDER BY r.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN seasons s ON r.year = s.year WHERE r.laps = (SELECT MAX(laps) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT 100.0 * COUNT(*) FILTER (WHERE country = 'Germany' AND name = 'European Grand Prix') / COUNT(*) FROM races;\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE location = 'Silverstone Circuit' OR location = 'Hockenheimring' OR location = 'Hungaroring';\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Marina Bay Street Circuit' LIMIT 1;\t----- bird -----\tformula_1",
    "913": "SELECT c.country, max(c.alt) AS highest_altitude FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.alt = (SELECT MAX(alt) FROM circuits) GROUP BY c.country ORDER BY highest_altitude DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT c.country FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN seasons s ON r.year = s.year JOIN circuits ci ON r.circuitId = ci.circuitId WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY d.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT d.forename, d.surname FROM drivers d JOIN seasons s ON d.driverId = s.driverId JOIN races r ON r.driverId = d.driverId AND r.year = s.year WHERE s.country = 'Italy' AND d.nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT * FROM drivers WHERE forename LIKE '%Davidson%' AND surname = 'Anthony';\t----- bird -----\tformula_1",
    "918": "SELECT forename FROM drivers WHERE forename = 'Lewis';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Spanish Grand Prix 2009';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT races.name, seasons.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId JOIN seasons ON races.year = seasons.year WHERE circuits.location = 'Silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Abu Dhabi Circuit' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(DISTINCT races.raceId) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT circuitRef, name, location, country, lat, lng, alt, url FROM circuits WHERE year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT driverId, forename, surname FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN results r ON d.driverId = r.driverId JOIN races c ON r.raceId = c.raceId WHERE l.time = (SELECT MAX(time) FROM lapTimes WHERE driverId = d.driverId) AND r.statusId = (SELECT statusId FROM status WHERE status = 'Fastest Lap');\t----- bird -----\tformula_1",
    "928": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races races ON r.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' AND r.year = 2007 ORDER BY r.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT r.name FROM races r JOIN drivers d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name AS race_name, MAX(ds.points) AS highest_points FROM races r JOIN driverStandings ds ON r.raceId = ds.raceId JOIN drivers d ON ds.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' GROUP BY r.raceId HAVING MAX(ds.points) = (SELECT MAX(points) FROM (SELECT points FROM driverStandings WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') GROUP BY raceId) AS subquery)\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = (SELECT year FROM seasons WHERE url = 'http://example.com/2009-spanish-grand-prix');\t----- bird -----\tformula_1",
    "932": "SELECT r.year FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON d.constructorId = c.constructorId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder AS final_rank FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.year = 1989 AND r.name = 'Australian Grand Prix' AND ps.stop = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE races.raceId = 2008 AND lapTimes.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT l.time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE r.name = '2008 Australian Grand Prix' AND d.forename = 'Lewis';\t----- bird -----\tformula_1",
    "937": "SELECT r.time FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE r.name = 'AustChineseralian Grand Prix' AND r.year = 2008 AND res.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT * FROM races WHERE name = 'Australian Grand Prix' AND year = 2008;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN seasons ON races.year = seasons.year WHERE seasons.url LIKE '%2008 Australian Grand Prix%' AND drivers.nationality = 'UN';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT drivers.driverId) AS number_of_drivers_participated FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN seasons ON races.year = seasons.year WHERE races.name = '2008 Chinese Grand Prix' AND races.status = 'finished' AND seasons.year = 2008;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(results.points) FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE drivers.driverRef = 'LHM';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(d.fastestLapTime) AS avg_fastest_lap_time FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT raceId FROM races WHERE year = 2008;\t----- bird -----\tformula_1",
    "944": "SELECT ( ( SELECT SUM(incremental_time - champion_time) FROM lap_times WHERE race_id = (SELECT id FROM races WHERE name = '2008 Australian Grand Prix') AND driver_id = (SELECT id FROM drivers WHERE forename = 'Last Driver') AND lap = (SELECT MAX(lap) FROM lap_times WHERE race_id = (SELECT id FROM races WHERE name = '2008 Australian Grand Prix') AND driver_id = (SELECT id FROM drivers WHERE forename = 'Last Driver')) ) / ( SELECT SUM(time) FROM races WHERE name = '2008 Australian Grand Prix' AND driver_id = (SELECT id FROM drivers WHERE forename = 'Last Driver') ) * 100 ) AS percentage_faster FROM status WHERE status_id = (SELECT status_id FROM status WHERE status = 'Champion');\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.name, circuits.location, circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND DOB > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) AS max_points FROM results JOIN constructors ON results.constructorId = constructors.constructorId WHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.constructorId, SUM(cr.points + cs.points) AS total_points FROM constructorResults cr JOIN constructorStandings cs ON cr.constructorId = cs.constructorId JOIN constructors c ON cr.constructorId = c.constructorId GROUP BY c.constructorId ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE r.raceId = 291 AND rr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT c.constructorRef, COUNT(r.raceId) AS races_with_0_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE c.nationality = 'Japanese' AND rr.points = 0 GROUP BY c.constructorRef HAVING races_with_0_points = 2;\t----- bird -----\tformula_1",
    "952": "SELECT c.constructorRef, c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT c.constructorId) FROM constructors c JOIN races r ON c.constructorId = r.constructorId JOIN lapTimes lt ON r.raceId = lt.raceId AND c.constructorId = lt.constructorId WHERE r.year =? AND lt.lap >= 50 AND c.nationality = 'French';\t----- bird -----\tformula_1",
    "954": "SELECT COUNT(DISTINCT drivers.driverId) AS japanese_drivers, COUNT(races.raceId) AS races_completed, (COUNT(DISTINCT drivers.driverId) / COUNT(races.raceId)) * 100 AS completion_percentage FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 GROUP BY races.year;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(CAST(rt.time AS REAL)) AS avg_time_in_seconds FROM races r JOIN results rt ON r.raceId = rt.raceId WHERE rt.statusId = 1 -- Assuming status 1 represents the champion AND r.date >= '1975-01-01' -- Before year 1975 GROUP BY r.year ORDER BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year > 1975 AND ds.position = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN results ON drivers.driverId = results.driverId WHERE results.position IS NULL AND drivers.nationality = 'Italian';\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE lt.time = ( SELECT MAX(time) FROM lapTimes WHERE driverId = d.driverId )\t----- bird -----\tformula_1",
    "959": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009;\t----- bird -----\tformula_1",
    "961": "SELECT r.name, se.year FROM races r JOIN seasons se ON r.year = se.year WHERE se.year = (SELECT MIN(year) FROM seasons);\t----- bird -----\tformula_1",
    "962": "SELECT 100.0 * COUNT(t1.driverId) AS percentage FROM drivers t1 JOIN qualifying t2 ON t1.driverId = t2.driverId JOIN seasons s ON t2.year BETWEEN 2000 AND 2005 JOIN circuits c ON t1.circuitId = c.circuitId WHERE t1.dob < '1985-01-01' AND t1.laps > 50\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN laptimes ON drivers.driverId = laptimes.driverId JOIN races ON laptimes.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE drivers.nationality = 'French' AND laptimes.time < '02:00:00';\t----- bird -----\tformula_1",
    "964": "SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.raceId = drivers.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT d.driverId, d.forename, d.surname, d.country FROM drivers d JOIN ( SELECT driverId, MAX(age) AS youngestAge FROM drivers GROUP BY driverId ) youngestDrivers ON d.driverId = youngestDrivers.driverId WHERE d.country = 'Netherlands' LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT forename FROM drivers WHERE driverRef = 'Robert Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND DOB = '1980-01-01';\t----- bird -----\tformula_1",
    "970": "SELECT d.driverId, d.forename, d.surname, qt.q1, qt.q2, qt.q3, lt.time, lt.milliseconds FROM drivers d JOIN qualifying qt ON d.driverId = qt.driverId JOIN ( SELECT raceId, MIN(time) AS earliest_lap_time FROM lapTimes GROUP BY raceId ) elt ON d.driverId = elt.raceId JOIN lapTimes lt ON d.driverId = lt.driverId AND lt.raceId = elt.raceId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND qt.q1 IS NOT NULL AND qt.q2 IS NOT NULL AND qt.q3 IS NOT NULL ORDER BY earliest_lap_time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT d.forename, d.surname, d.dob, d.nationality FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = ps.raceId JOIN seasons s ON r.year = s.year WHERE s.url LIKE 'http://db.nascar.com/season%' AND d.nationality = 'German' AND r.date >= '1960-01-01' AND r.date <= '1969-12-31' AND ps.stop = 1 AND q.q1 = 'Qualifying 1' AND q.q2 = 'Qualifying 2' AND q.q3 = 'Qualifying 3' ORDER BY r.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.year = (SELECT year FROM seasons WHERE url = 'https://example.com/season') AND d.dob = '1971-01-01' AND lt.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId AND driverId = d.driverId)\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, r.milliseconds FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN circuits c ON r.circuitId = c.circuitId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' AND r.time = (SELECT MAX(time) FROM races WHERE raceId = r.raceId) GROUP BY d.forename, d.surname, r.name, r.date, r.time, r.milliseconds ORDER BY r.milliseconds DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT MAX(races.year) AS fastest_year FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time IS NOT NULL;\t----- bird -----\tformula_1",
    "975": "SELECT r.year, AVG(lt.time) AS avg_lap_time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId WHERE r.year IN (SELECT year FROM seasons) GROUP BY r.year ORDER BY avg_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT d.driverId, l.time, l.milliseconds FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE l.lap = 1 ORDER BY l.time DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT c.name, c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%Austria%' GROUP BY c.name, c.location;\t----- bird -----\tformula_1",
    "979": "SELECT r.name, COUNT(l.driverId) AS finishers_count FROM races r JOIN lapTimes l ON r.raceId = l.raceId GROUP BY r.name ORDER BY finishers_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.forename, d.surname, d.nationality, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 23 AND q.position = 2\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY r.year, r.date;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN seasons ON races.year = seasons.year JOIN circuits ON races.circuitId = circuits.circuitId JOIN constructors ON races.constructorId = constructors.constructorId JOIN status ON driverStandings.statusId = status.statusId WHERE status.status = 'Puncture' AND drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "983": "SELECT c.constructorRef, c.name, SUM(rr.points) AS total_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId WHERE c.nationality = 'Italian' GROUP BY c.constructorRef, c.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.constructorRef, c.url FROM constructors c JOIN ( SELECT constructorId, SUM(points) AS totalPoints FROM constructorResults GROUP BY constructorId ) cr ON c.constructorId = cr.constructorId WHERE cr.totalPoints = ( SELECT MAX(totalPoints) FROM ( SELECT constructorId, SUM(points) AS totalPoints FROM constructorResults GROUP BY constructorId ) cr2 );\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, l.position, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND l.lap = 3 GROUP BY d.driverId, d.forename, d.surname ORDER BY d.forename, d.surname LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name AS race_name, l.time AS fastest_lap_time_ms FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId JOIN drivers dt ON l.driverId = dt.driverId WHERE d.forename = 'Lewis' AND dt.forename = 'Hamilton' AND l.lap = 1 ORDER BY l.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(r.fastestLapTime) AS avg_fastest_lap_time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN qualifying q ON r.driverId = q.driverId AND r.raceId = q.raceId WHERE r.year = 2006 AND r.name = 'United States Grand Prix' GROUP BY d.driverId ORDER BY avg_fastest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, MIN(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverId = p.driverId JOIN races r ON p.raceId = r.raceId JOIN seasons s ON r.year = s.year WHERE d.nationality = 'Germany' AND s.year BETWEEN 1980 AND 1985 AND r.name = 'Race Name' -- Replace 'Race Name' with the actual race name GROUP BY d.forename, d.surname ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.name, r.date, r.time, r.milliseconds FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Canada' AND s.year = 2008 AND r.name = 'Canadian Grand Prix' ORDER BY r.date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, s.url FROM races AS r JOIN constructorResults AS cr ON r.raceId = cr.raceId JOIN constructors AS c ON cr.constructorId = c.constructorId JOIN seasons AS s ON r.year = s.year WHERE r.name = '2009 Singapore Grand Prix' GROUP BY c.constructorRef HAVING MAX(cr.points) = (SELECT MAX(points) FROM constructorResults WHERE raceId = r.raceId) LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN constructors con ON d.constructorRef = con.constructorRef WHERE con.nationality = 'Austrian' AND YEAR(d.dob) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT CONCAT(d.forename,'', d.surname) AS full_name, co.url AS wikipedia_link, d.dob FROM drivers d JOIN status s ON d.driverId = s.driverId JOIN constructors co ON d.constructorId = co.constructorId WHERE d.nationality = 'German' AND d.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY d.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON races.raceId = results.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Turkish Grand Prix' AND drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "996": "SELECT YEAR(races.date) AS year, COUNT(races.raceId) AS races_per_year FROM races WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(races.date) ORDER BY year LIMIT 1;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'DriverName' AND surname = 'DriverSurname');\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN drivers dd ON res.constructorId = dd.driverId WHERE res.position = (SELECT MIN(position) FROM results WHERE res.driverId = d.driverId) GROUP BY r.name HAVING COUNT(DISTINCT res.driverId) = 2;\t----- bird -----\tformula_1",
    "1000": "SELECT c.name, c.location+country AS full_location FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Marina Bay Street Circuit' AND r.year = 2008 AND q.position = 1 LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename, d.surname, c.nationality, r.name AS race_name FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "1003": "SELECT d.driverRef, COUNT(lt.statusId) AS accidents FROM races AS r JOIN lapTimes AS lt ON r.raceId = lt.raceId JOIN pitStops AS ps ON r.raceId = ps.raceId JOIN drivers AS d ON lt.driverId = d.driverId WHERE r.name = 'Canadian Grand Prix' GROUP BY d.driverRef ORDER BY accidents DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(rs.points) AS wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN driverStandings rs ON r.raceId = rs.raceId AND d.driverId = rs.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.driverId, d.forename, d.surname ORDER BY wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_time_at_pitstop FROM pitstops WHERE driverId = (SELECT driverId FROM qualifying WHERE qualifyId = (SELECT qualifyId FROM races WHERE year = (SELECT year FROM seasons ORDER BY year DESC LIMIT 1)));\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(lapTimes.time) AS fastest_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId;\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT p.lap, p.driverId, p.stop, p.lap FROM pitStops AS p WHERE p.raceId = ( SELECT r.raceId FROM races AS r WHERE r.name = '2011 Australian Grand Prix' ) AND p.driverId = ( SELECT d.driverId FROM drivers AS d WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' );\t----- bird -----\tformula_1",
    "1009": "SELECT d.forename, p.time FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.name = '2011 Australian Grand Prix' AND d.driverId = '4' ORDER BY p.time;\t----- bird -----\tformula_1",
    "1010": "SELECT MAX(time) AS lap_record FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId JOIN (SELECT driverId, MIN(time) AS shortest_lap_time FROM lapTimes GROUP BY driverId) sub ON l.driverId = sub.driverId ORDER BY sub.shortest_lap_time ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT r.name AS circuit_name, l.position AS lap_position FROM races AS r JOIN lapTimes AS l ON r.raceId = l.raceId JOIN drivers AS d ON l.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND l.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId) GROUP BY r.circuitId;\t----- bird -----\tformula_1",
    "1013": "SELECT MAX(time) AS lap_record FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix Circuit';\t----- bird -----\tformula_1",
    "1014": "SELECT c.circuitRef, l.time FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1015": "SELECT MAX(time) AS lap_record FROM results WHERE raceId = (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit'));\t----- bird -----\tformula_1",
    "1016": "SELECT ps.duration FROM pitstops ps JOIN drivers d ON ps.driverId = d.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.name = 'Austrian Grand Prix Circuit' AND d.forename = 'Driver Name' AND d.surname = 'Driver Surname';\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.name, circuits.location, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId JOIN results ON results.raceId = races.raceId AND results.driverId = drivers.driverId WHERE lapTimes.time = '1:29.488' GROUP BY circuits.name, circuits.location, circuits.lat, circuits.lng HAVING MAX(results.position) = 1;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) AS average_lap_time_ms FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player WHERE player_name = (SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player));\t----- bird -----\teuropean_football_2",
    "1022": "SELECT pa.player_api_id, pa.preferred_foot FROM Player_Attributes pa JOIN Player p1 ON pa.player_fifa_api_id = p1.player_fifa_api_id JOIN Player p2 ON pa.player_api_id = p2.player_api_id JOIN Player_Attributes p_potential ON p2.player_api_id = p_potential.player_api_id WHERE p_potential.potential = (SELECT MIN(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND ( SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = Player_Attributes.player_api_id ) = 'attacking';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT pa.player_api_id, pa.overall_rating, pa.crossing FROM Player_Attributes pa WHERE pa.crossing = (SELECT MAX(crossing) FROM Player_Attributes) ORDER BY pa.crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name AS league_with_most_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT h.team_long_name, COUNT(m.id) AS lost_matches FROM Team h JOIN Match m ON h.team_api_id = m.home_team_api_id WHERE m.season = '2015/2016' GROUP BY h.team_long_name ORDER BY lost_matches ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT pa.player_name, COUNT(pa.penalties) AS total_penalties FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id GROUP BY pa.player_api_id ORDER BY total_penalties DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT T2.team_long_name FROM League AS T1 JOIN Match AS M1 ON T1.league_id = M1.league_id JOIN Team AS T2 ON M1.away_team_api_id = T2.team_api_id WHERE T1.name = 'Scotland Premier League' AND M1.season = '2009/2010' GROUP BY T2.team_long_name HAVING MAX(CASE WHEN M1.away_team_goal > M1.home_team_goal THEN 1 ELSE 0 END) > 0;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t.team_long_name, t.buildUpPlaySpeed FROM Team_Attributes AS ta JOIN Team AS t ON ta.team_fifa_api_id = t.team_fifa_api_id GROUP BY t.team_long_name ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name, COUNT(*) AS draw_matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' AND (m.home_team_goal = m.away_team_goal OR m.home_team_goal = 0 OR m.away_team_goal = 0) GROUP BY l.name ORDER BY draw_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT P.player_name, P.birthday, P.height, P.weight FROM Player AS P JOIN Team_Attributes AS TA ON P.team_api_id = TA.team_api_id WHERE TA.buildUpPlaySpeed >= 97 AND TA.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT league.name, COUNT(match.league_id) AS matches_played FROM league JOIN match ON league.id = match.league_id GROUP BY league.name ORDER BY matches_played DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id, MAX(overall_rating) AS highest_above_avg_rating FROM Player_Attributes WHERE substr(date,1,4) = '2010' GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT t.team_fifa_api_id FROM Team_Attributes t JOIN Team te ON t.team_fifa_api_id = te.team_fifa_api_id WHERE t.buildUpPlaySpeed > 50 AND t.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id JOIN Player_Attributes AS T3 ON T2.home_player_1 = T3.player_api_id WHERE T3.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE team_fifa_api_id = T1.team_fifa_api_id AND buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T2.date) = '2012';\t----- bird -----\teuropean_football_2",
    "1037": "SELECT BirthYear, COUNT(CASE WHEN preferred_foot = 'left' THEN 1 END) AS left_foot_players, COUNT(*) AS total_players FROM Player_Attributes WHERE BirthYear BETWEEN 1987 AND 1992 GROUP BY BirthYear; [SQL] SELECT (LEFT(SUM(CASE WHEN preferred_foot = 'left' THEN 1 END), 2) / RIGHT(COUNT(*), 2)) * 100 AS percentage_left_foot FROM Player_Attributes WHERE BirthYear BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_fifa_api_id = (SELECT id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name, AVG(pa.heading_accuracy) AS avg_heading_accuracy FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name, COUNT(m.id) AS chance_creation_passing_count, AVG(m.chance_creation_passing) AS average_chance_creation_passing FROM Team t JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE t.buildUpPlayDribblingClass = 'Normal' AND m.date >= '2014-01-01 00:00:00' AND m.date <= '2014-12-31 23:59:59' GROUP BY t.team_long_name HAVING COUNT(m.id) < AVG(COUNT(m.id)) ORDER BY chance_creation_passing_count DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id JOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT `buildUpPlayPositioningClass` FROM `Team_Attributes` WHERE `team_long_name` = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francois Affolter');\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Team WHERE team_long_name = 'Gabriel Tamas' ) AND date = strftime('%Y', date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(Match.id) AS match_count FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' AND League.name = 'Scotland Premier League';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id JOIN Player AS youngest_p ON p.player_api_id = youngest_p.player_api_id JOIN Player_Attributes AS youngest_pa ON youngest_p.player_api_id = youngest_pa.player_api_id WHERE youngest_p.latest_birthday = (SELECT MIN(birthday) FROM Player) AND pa.date = (SELECT MAX(date) FROM Player_Attributes WHERE player_api_id = p.player_api_id);\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_api_id, MAX(potential) AS highest_potential FROM Player_Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT \"defensive_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT MAX(overall_rating) AS max_overall_rating, birthday FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM Country JOIN League ON Country.id = League.country_id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(AVG(finishing)) AS highest_avg_finishing_rate FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height ASC LIMIT 1 ) AND player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height DESC LIMIT 1 )\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name = 'Adam' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating > 80 AND STRFTIME('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran' );\t----- bird -----\teuropean_football_2",
    "1064": "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT TA.buildUpPlayPassingClass FROM Team_Attributes TA JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id WHERE T.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player_Attributes AS t1 JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_api_id WHERE t1.player_api_id IN ( SELECT player_api_id FROM Player WHERE Player.height > 170 ) AND t2.date BETWEEN '2010-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT \"Country\".\"name\" FROM \"Country\" JOIN \"League\" ON \"Country\".\"id\" = \"League\".\"country_id\" WHERE \"League\".\"name\" = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeed = 31 AND ta.buildUpPlayDribbling = 53 AND ta.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10' AND league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga');\t----- bird -----\teuropean_football_2",
    "1074": "SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN Team_Attributes AS ta1 ON t1.team_fifa_api_id = ta1.team_fifa_api_id WHERE m1.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT pa.player_name, pa.balance FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = 61 ORDER BY pa.balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control) FROM (SELECT player_name FROM Player WHERE player_name IN ('Abdou Diallo', 'Aaron Appindangoye'))) AS avg_ball_control_difference\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player FROM Player;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM Country LEFT JOIN League ON Country.id = League.country_id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT DISTINCT league.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE strftime('%Y', birthday)<'1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone'));\t----- bird -----\teuropean_football_2",
    "1086": "SELECT preferred_foot, heading_accuracy FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk' );\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volley_score > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(birthday) AS oldest_birthday FROM Player ORDER BY birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2008/2009' GROUP BY l.name ORDER BY COUNT(m.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE STRFTIME('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel'), SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) FROM Player_Attributes T1 WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Aaron Lennox');\t----- bird -----\teuropean_football_2",
    "1098": "SELECT ta.chanceCreationPassing FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE t.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT id FROM Player WHERE player_name = 'Dorlan Pabon');\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) AS average_goals_away FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT t1.player_name FROM Player AS t1 JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = 77 AND t2.date LIKE '2016-06-23%' ORDER BY t1.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_fifa_api_id = (SELECT id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT player_attributes.attacking_work_rate FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_api_id` IN ( SELECT `player_api_id` FROM `Team_Attributes` WHERE `team_fifa_api_id` = ( SELECT `team_fifa_api_id` FROM `Team` WHERE `team_long_name` = 'Kevin Berigaud' ) AND `date` = '2013-02-22 00:00:00' );\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT t3.buildUpPlaySpeedClass FROM Team_Attributes t1 JOIN Team t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id JOIN Team_Attributes t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'Willem II' AND t1.date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT t1.buildUpPlayDribblingClass FROM Team_Attributes AS t1 JOIN Match AS m ON t1.team_fifa_api_id = m.team_fifa_api_id JOIN Team AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.team_short_name = 'LEI' AND m.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT TA.buildUpPlayPassingClass FROM Team_Attributes TA JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id JOIN Match M ON T.team_api_id = M.team_api_id WHERE T.team_long_name = 'FC Lorient' AND M.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT `chance_creation_passing_class` FROM `Team_Attributes` JOIN `Match` ON `home_team_api_id` = `Match`.`home_team_api_id` AND `away_team_api_id` = `Match`.`away_team_api_id` JOIN `Player_Attributes` ON `home_player_X1` = `Player_Attributes`.`player_api_id` AND `away_player_X1` = `Player_Attributes`.`player_api_id` WHERE `team_long_name` = 'PEC Zwolle' AND `date` = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT t3.chance_creation_crossing_class FROM Team_Attributes t1 JOIN Team t2 ON t1.team_fifa_api_id = t2.team_fifa_ai_id JOIN Team_Attributes t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'Hull City' AND t1.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT T1.defence_aggression_class FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(pa.overall_rating) FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE p.player_name = 'Marko Arnautovic' AND DATE(pa.date) BETWEEN DATE('2007-02-22') AND DATE('2016-04-21');\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ( ( SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' ) - ( SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' ) ) * 100 / ( SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' );\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM ( SELECT player_api_id, weight FROM Player_Attributes WHERE position = 'Heavyweight' ORDER BY weight DESC LIMIT 10 ) AS subquery\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p WHERE p.birthday > datetime(CURRENT_TIMESTAMP,'localtime') - INTERVAL '34 years';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_player_1.goal) FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Player_Attributes ON Team_Attributes.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE home_player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match WHERE SUBSTRING(birthday, 1, 4) < 30 AND team_fifa_api_id IN ( SELECT player_fifa_api_id FROM Player_Attributes WHERE overall_rating >= 60 );\t----- bird -----\teuropean_football_2",
    "1122": "SELECT MAX(overall_rating) AS strongest_player_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name, potential FROM Player ORDER BY potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1125": "SELECT MAX(finishing) AS eldest_player_with_finishing_1 FROM Player_Attributes WHERE finishing = 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT Player.player_name FROM Player JOIN Team_Attributes ON Player.team_api_id = Team_Attributes.team_api_id JOIN League ON Team_Attributes.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT p.player_name, c.name AS country FROM Player_Attributes p JOIN Team_Attributes ta ON p.team_fifa_api_id = ta.team_fifa_api_id JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN Country c ON t.id = c.id WHERE p.vision >= 90;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT MAX(weight) AS heaviest_average_weight FROM Country c JOIN Player_Attributes pa ON c.id = pa.country_id GROUP BY c.id ORDER BY heaviest_average_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name FROM Team t JOIN Match m ON t.team_api_id = m.away_team_api_id JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.chanceCreationPassingClass = 'Safe' GROUP BY t.team_short_name;\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT p.player_name, p.height FROM Player AS p JOIN Team AS t ON p.team_api_id = t.team_api_id JOIN Team_Attributes AS ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN Match AS m ON t.team_api_id = m.home_team_api_id WHERE p.height > 180 ORDER BY p.player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT jumping - jumping FROM Player_Attributes WHERE id = 6 AND id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_fifa_api_id FROM ( SELECT player_fifa_api_id, MIN(potential) OVER (PARTITION BY player_fifa_api_id) AS min_potential FROM Player_Attributes WHERE preferred_foot = 'right' ) AS subquery WHERE min_potential = (SELECT MIN(potential) FROM Player_Attributes) ORDER BY player_fifa_api_id LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage FROM Player_Attributes WHERE stamina > 80 AND strength > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT t.name FROM League t JOIN Country c ON t.country_id = c.id WHERE c.name = 'Poland';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal AS home_score, away_team_goal AS away_score FROM Match WHERE date = '2008-09-24' AND country_id IN (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT pa.sprint_speed, pa.agility, pa.acceleration FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT id FROM Team WHERE team_long_name = 'KSV Cercle Brugge' );\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = ( SELECT id FROM League WHERE name = 'Italian Serie A' );\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT MAX(weight) AS heaviest_weight, (SELECT finishing FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Team WHERE team_api_id = (SELECT home_player_1 FROM Match WHERE shoton = 'goal'))) AS finishing_rate, (SELECT curve FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_api_id = (SELECT home_team_api_id FROM Match WHERE shoton = 'goal'))) AS curve_score FROM Country WHERE MAX(weight) = (SELECT MAX(weight) FROM Country);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS game_count FROM Match JOIN League ON Match.league_id = League.id JOIN Team_Attributes ON Match.home_team_api_id = Team_Attributes.team_api_id OR Match.away_team_api_id = Team_Attributes.team_api_id GROUP BY League.name ORDER BY game_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT t.team_long_name, MAX(m.away_team_goal) AS max_goals_scored FROM Team t JOIN Match m ON t.team_api_id = m.away_team_api_id GROUP BY t.team_long_name ORDER BY max_goals_scored DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id, MAX(overall_rating) AS greatest_overall_strength FROM Player_Attributes GROUP BY player_api_id LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT PERCENTAGE FROM ( SELECT COUNT(*) AS num_players FROM Player_Attributes WHERE height < 180 AND overall_rating > 70 ) AS subquery\t----- bird -----\teuropean_football_2",
    "1149": "SELECT SEX, COUNT(*) AS total, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M')) AS percentage FROM Patient WHERE Admission = '+' GROUP BY SEX UNION ALL SELECT SEX, COUNT(*) AS total, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M')) AS percentage FROM Patient WHERE Admission = '-' GROUP BY SEX ORDER BY percentage DESC;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_born_after_1930 FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE year(Patient.Birthday) > '1930' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940) AS inpatient_percentage FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT COUNT(DISTINCT Examination.ID) AS total_patients, (SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE Examination.Diagnosis = 'SLE' AND Examination.Admission = '+') AS inpatient_count, (SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE Examination.Diagnosis = 'SLE' AND Examination.Admission = '-') AS outpatient_count, (SELECT COUNT(DISTINCT Examination.ID) FROM Examination WHERE Examination.Diagnosis = 'SLE') AS total_patients_count, (inpatient_count::REAL / total_patients_count) AS outpatient_to_inpatient_ratio FROM Patient WHERE Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Examination.Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday FROM Patient WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT p.ID, age = SUBTRACT(year(current_timestamp()), year(p.Birthday)) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Examination Date = (SELECT DATE(MAX(Birthday)) FROM Patient WHERE YEAR(Birthday) = 1937) AND (E.GOT OR E.GPT OR E.LDH OR E.ALP OR E.TP OR E.ALB OR E.UA OR E.UN OR E.CRE OR E.T-BIL OR E.T-CHO OR E.TG OR E.CPK OR E.GLU OR E.WBC OR E.RBC OR E.HGB OR E.HCT OR E.PLT OR E.PT OR E.APTT OR E.FG OR E.PIC OR E.TAT OR E.TAT2 OR E.U-PRO OR E.IGG OR E.IGA OR E.IGM OR E.CRP OR E.RA OR E.RF OR E.C3 OR E.C4 OR E.RNP OR E.SM OR E.SC170 OR E.SSA OR E.SSB OR E.CENTROMEA OR E.DNA OR E.DNA-II) >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT CASE WHEN Patient.SEX = 'F' THEN ID END) FROM Patient) AS percentage_females_with_abnormal_total_protein FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TP < '6.0' OR Laboratory.TP > '8.5' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(L.aCL_IgG) AS average_aCL_IgG FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE SUBTRACT(year(current_timestamp()), year(P.Birthday)) >= 50 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Patient.Description = '1997' AND Laboratory.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(Birthday) AS youngest_birthday FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID JOIN Laboratory AS lab ON e.ID = lab.ID WHERE lab.Thrombosis = 1 AND p.SEX = 'F' AND e.ExaminationDate BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MIN(birthday) AS youngest_birthday, MAX(birthday) AS oldest_birthday, DATEDIFF(day, MIN(birthday), MAX(birthday)) AS age_gap FROM Patient WHERE TG > 200 GROUP BY ID;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT p.Symptoms, d.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.Birthday = (SELECT MIN(p.Birthday) FROM Patient) AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG( COUNT( CASE WHEN p.SEX = 'M' THEN 1 ELSE NULL END ) ) AS avg_monthly_tests FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Examination Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY DATE(e.Examination Date);\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS oldest_laboratory_date, (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS age_at_admission FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT COUNT(DISTINCT P.SEX) AS male_to_female_ratio, AVG(P.UA) AS average_uric_acid, COUNT(DISTINCT CASE WHEN P.SEX = 'M' AND P.UA <= '8.0' THEN P.ID END) AS males_with_abnormal_uric_acid, COUNT(DISTINCT CASE WHEN P.SEX = 'F' AND P.UA <= '6.5' THEN P.ID END) AS females_with_abnormal_uric_acid FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.UA <= '8.0' AND P.SEX = 'M' OR P.UA <= '6.5' AND P.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'underage' AND Examination.Examination Date BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Laboratory AS l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.T-BIL >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT(year(Birthday), 1999)) AS avg_age_1999 FROM Patient WHERE DATE(Admission) BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT p.SEX, p.Birthday, e.HGB, e.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.HGB = (SELECT MAX(HGB) FROM Examination) ORDER BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG, aCL_IgM, ANA_Pattern, RVVT, LAC, Symptoms, Thrombosis FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT TOTAL_CHOLCST FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'AORTITIS' AND e.ID = (SELECT MIN(ID) FROM Examination WHERE e.Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT aCL_IgM FROM Examination WHERE ID = ( SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' ) AND Examination_Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX, L.GOT FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Date = '1992-06-12' AND L.GOT = 9 AND (P.SEX = 'M' OR P.SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBJECT.SEX, PATIENT.ID, PATIENT.Birthday, PATIENT.Description, PATIENT.FirstDate, PATIENT.Admission, PATIENT.Diagnosis, LABORATORY.GOT, LABORATORY.GPT, LABORATORY.LDH, LABORATORY.ALP, LABORATORY.TP, LABORATORY.ALB, LABORATORY.UA, LABORATORY.UN, LABORATORY.CRE, LABORATORY.T_BIL, LABORATORY.T_CHO, LABORATORY.TG, LABORATORY.CPK, LABORATORY.GLU, LABORATORY.WBC, LABORATORY.RBC, LABORATORY.HGB, LABORATORY.HCT, LABORATORY.PLT, LABORATORY.PT, LABORATORY.APTT, LABORATORY.FG, LABORATORY.PIC, LABORATORY.TAT, LABORATORY.TAT2, LABORATORY.U_PRO, LABORATORY.IGG, LABORATORY.IGA, LABORATORY.IGM, LABORATORY.CRP, LABORATORY.RA, LABORATORY.RF, LABORATORY.C3, LABORATORY.C4, LABORATORY.RNP, LABORATORY.SM, LABORATORY.SC170, LABORATORY.SSA, LABORATORY.SSB, LABORATORY.CENTROMEA, LABORATORY.DNA, LABORATORY.DNA_II, SUBJECT.ID AS subject_id, SUBJECT.SEX AS subject_sex FROM Examination AS EX INNER JOIN Patient AS PAT ON EX.ID = PAT.ID INNER JOIN Laboratory AS LAB ON EX.ID = LAB.ID WHERE EX.Date = '1991-10-21' AND LAB.UA = 8.4;\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) AS total_tests FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First_Date = '1991-06-13' AND Patient.Diagnosis = 'SJS' AND YEAR(Examination.Examination_Date) = 1995;\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT p.SEX, p.Description, p.First_Date, d.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE e.Examination_Date = '1997-01-27' AND d.Original_Diagnose = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination WHERE ID = ( SELECT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' );\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT SUBTRACT(SUM(CASE WHEN Examination.Birthday = '1959-02-18' AND Examination.Date LIKE '1981-11-%' THEN Examination.T_CHO END), SUM(CASE WHEN Examination.Birthday = '1959-02-18' AND Examination.Date LIKE '1981-12-%' THEN Examination.T_CHO END)) AS decrease_rate FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Male' AND Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'Behcet' AND e.Examination Date BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND YEAR(p.Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE e.Thrombosis = 2 AND l.ANA = 'S' AND e.aCL IgM = MULTIPLY(AVG(`aCL IgM`), 0.2);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient) AS percentage FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE (U-PRO > 0 AND U-PRO < 30) AND UA <= 6.5;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT 100.0 * COUNT(DISTINCT p.ID) / (SELECT COUNT(DISTINCT p.ID) FROM Patient p WHERE p.SEX = 'M' AND p.FIRST_DATE >= '1981-01-01') AS behcet_percentage FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Diagnosis = 'BEHCET' AND p.SEX = 'M' AND p.FIRST_DATE >= '1981-01-01';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Admission = '-' AND Date LIKE '1991-10%' AND T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ANA Pattern!= 'P' AND Patient.SEX = 'F' AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Diagnosis = 'PSS' AND L.CRP > 2 AND L.CRE = 1 AND L.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(L.ALB) AS average_albumin_level FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.SEX = 'F' AND L.PLT > 400 AND E.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT p.Description, e.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'F' AND E.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT * FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE YEAR(Examination.Examination Date) = 1997 AND tp > 6 AND tp < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT AVG(CASE WHEN Examination.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) * 100.0 / AVG(CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS proportion_with_sles_and_thrombocytopenia FROM Examination JOIN Patient ON Examination.ID = Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT 100.0 * COUNT(*) FILTER (WHERE born_year = 1980 AND diagnosis = 'RA' AND sex = 'F') / COUNT(*) FROM Patient WHERE YEAR(Birthday) = 1980;\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Examination.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND Laboratory.Diagnosis = 'Behcet' AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(\"Examination Date\", \"First Date\") FROM Patient WHERE ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT * FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.ID = 57266 AND ( (Patient.SEX = 'M' AND Examination.UA > 8.0) OR (Patient.SEX = 'F' AND Examination.UA > 6.5) );\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT e.Examination_Date FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.ID = 48473 AND e.AST > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Date = '1994-01-01' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.GPT > 60 AND e.Diagnosis LIKE '%ALT glutamic pylvic transaminase (GPT) exceed the normal range%';\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.GPT > 60 ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(Laboratory.LDH) AS average_ldh FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH < 500 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT P.ID, FLOOR(DATEDIFF(CURDATE(), P.Birthday) / 365) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.LDH BETWEEN 100 AND 300;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.Admission FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.aCL_IgG < 300 AND e.aCL_IgM < 300 AND e.aCL_IgA < 300 AND (p.Admission = '+' OR p.Admission = '-);\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday = '1982-04-01' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT P.SEX, L.TP, (L.TP - 8.5) AS deviation FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.SEX = 'F' AND L.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.ALB NOT BETWEEN 3.5 AND 5.5 ORDER BY p.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT p.ID, p.SEX, p.Birthday, l.ALB FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE YEAR(p.Birthday) = 1982 AND ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(DISTINCT p.ID) * 100.0 / COUNT(*) AS female_percentage FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE (p.SEX = 'F' AND l.UA > 6.5) OR (p.SEX = 'M' AND l.UA > 8.0);\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS average_UA_index FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.SEX IN ('M', 'F') AND UA < 8.0 OR (SEX = 'F' AND UA < 6.5);\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Diagnosis = 'RA' AND L.UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT SUM(CASE WHEN Sex = 'M' AND CRE >= 1.5 THEN 1 ELSE 0 END) AS male_cre_not_normal, SUM(CASE WHEN Sex = 'F' AND CRE >= 1.5 THEN 1 ELSE 0 END) AS female_cre_not_normal FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CRE >= 1.5 GROUP BY Sex ORDER BY male_cre_not_normal - female_cre_not_normal DESC;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT MAX(T-BIL) AS highest_total_bilirubin, Examination.ID, Patient.SEX, Patient.Birthday FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T-BIL IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Examination.ID) AS affected_patients FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-BIL >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, MAX(Laboratory.T-CHO) AS highest_T_CHO FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'oldest patient' AND Laboratory.Date = (SELECT MIN(Birthday) FROM Patient) GROUP BY Patient.ID HAVING MAX(Laboratory.T-CHO) = (SELECT MAX(T-CHO) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT p.SEX, p.Description, e.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.TG > 300 AND l.TG IS NOT NULL GROUP BY p.SEX, p.Description;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG > 200 AND DATEDIFF(year, Patient.Birthday, CURRENT_TIMESTAMP) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND p.Birthday BETWEEN '1936' AND '1956' AND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, P.birthday + INTERVAL '365 days' age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.GLU >= 180 AND E.T_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT P.ID, L.GLU FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Description = '1991' AND L.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.WBC < 3.5 OR l.WBC > 9.0 GROUP BY p.SEX ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, Patient.Sex, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.RBC < 3.5 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT p.SEX, p.Birthday, p.Description, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T-BIL, l.T-CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U-PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA-II FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= SUBSTRING(DATE('now', 'localtime'), -4) AND l.RBC < 3.5 OR l.RBC > 6.0;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND E.HGB >= 10 AND E.HGB < 17 ORDER BY E.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT p.ID, p.age FROM Patient p JOIN Laboratory l ON p.ID = l.ID GROUP BY p.ID HAVING COUNT(l.ID) > 2 AND HCT >= 52\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) FROM Examination WHERE (PLT < 100 OR PLT > 400) AND Diagnosis = 'Abnormal Platelet Level';\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date = '1984-01-01' AND Patient.Age = (EXTRACT(YEAR FROM AGE(CURRENT_DATE, Patient.Birthday))) - 50 AND Examination.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT P.SEX, COUNT(P.ID) AS Number_of_Patients, COUNT(*) FILTER (WHERE P.SEX = 'F') AS Female_Patients, SUM(L.PT > = 14) FILTER (WHERE P.SEX = 'F') AS Abnormal_PT_Patients, (SUM(L.PT > = 14) FILTER (WHERE P.SEX = 'F')::FLOAT / COUNT(*) FILTER (WHERE P.SEX = 'F')) * 100 AS Percentage_Abnormal_PT_Females FROM Patient P JOIN Examination L ON P.ID = L.ID WHERE SUBTRACT(year(current_timestamp()), year(P.Birthday)) > 55 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.First Date > '1992-12-31' AND Examination.Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.WBC > 3.5 AND Examination.WBC < 9.0 AND Examination.FG <= 150 AND Examination.FG >= 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Birthday > '1980-01-01' AND Examination.FG < 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.U_PRO BETWEEN 0 AND 30 AND E.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE aCL_IgG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.aCL IgG > 900 AND e.aCL IgG < 2000 AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Examination e JOIN Laboratory l ON e.ID = l.ID JOIN Patient p ON e.ID = p.ID WHERE l.IGA BETWEEN 80 AND 500 GROUP BY p.ID HAVING MAX(l.IGA) = (SELECT MAX(IGA) FROM (SELECT IGA FROM Laboratory WHERE ID = e.ID AND IGA BETWEEN 80 AND 500) AS subquery);\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE (Laboratory.IGA > 80 AND Laboratory.IGA < 500) AND (YEAR(Patient.FirstDate) >= 1990);\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT P.Diagnosis, COUNT(*) AS frequency FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.IGM <= 40 OR L.IGM >= 400 GROUP BY P.Diagnosis ORDER BY frequency DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE CRP = '+'; AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE creatinine_level > 1.5 AND (YEAR(CURDATE()) - YEAR(Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.RF = 'normal' AND l.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT p.SEX, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.Birthday >= '1985-01-01' AND l.RA IN ('-', '+-') AND p.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT P.ID FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RF < 20 AND (YEAR(CURDATE()) - YEAR(P.Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Patient WHERE SEX = 'Male' AND Admission = '2022-01-01' AND Diagnosis = 'COVID-19';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.C3 > 35 AND Examination.ANAPattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE Hematoclit < 29 OR Hematoclit > 52 AND aCL IgA = (SELECT MAX(aCL IgA) FROM Examination WHERE ID IN (SELECT ID FROM Patient))\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis LIKE '%APS%' AND Laboratory.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RNP = '-' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday, p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RNP NOT IN ('-', '+-') AND e.Date = (SELECT MAX(Date) FROM Examination) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination WHERE aCL_IgG = 'normal' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.ANA = 'abnormal' AND e.CRP = 'abnormal' AND e.RA = 'abnormal' AND e.RF = 'abnormal' GROUP BY e.ID ORDER BY p.Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT p.ID FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.Examination_Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.aCL IgG = 0 AND e.ANA Pattern = 'normal' AND p.Sex = 'F' AND l.SYMPTOMS IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL_IgA = 0 AND Examination.aCL_IgM = 0 AND Examination.ANA_Pattern = 'normal' AND Examination.Diagnosis LIKE 'came to the hospital before 2000%'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ANA LIKE '%anti-SSA%' AND Examination.ID = ( SELECT MIN(Examination.ID) FROM Examination WHERE Patient.ID = ( SELECT MIN(Patient.ID) FROM Patient WHERE Patient.SEX = 'Male' ) )\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RA = 'SLE' AND Laboratory.RNP = 'normal anti-SSB';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE l.RA IS NOT NULL AND l.CRP = 'normal'\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CENTROMEA IN ('-', '+') AND SSB IN ('-', '+') AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP LIKE '%anti-DNA%' GROUP BY p.ID HAVING COUNT(*) = 1;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG = 0 AND Examination.KCT IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Examination WHERE aCL_IgG BETWEEN 900 AND 2000 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT MULTIPLY(DIVIDE(COUNT(*), COUNT(ID WHERE GOT > = 60 AND Diagnosis = 'SLE')), 1.0) AS percentage FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.GOT > = 60 AND p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) AS YoungestBirthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT P.SEX, P.Birthday, MAX(L.GPT) AS MaxGPT FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GPT < 60 GROUP BY P.SEX, P.Birthday ORDER BY MaxGPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) AS male_patients_with_normal_glutamic_pylvic_transaminase_level FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(Patient.First_Date) AS first_data_recorded FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.LDH < 500 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(First_Date) FROM Patient WHERE ID = (SELECT ID FROM Examination ORDER BY First_Date DESC LIMIT 1) AND LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALP > 300 AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT p.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.TP < 6.0 AND p.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.Diagnosis = 'SJS' AND e.TP > 6.0 AND e.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT MAX(Date) AS ExaminationDate FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE ALB > 3.5 AND ALB < 5.5;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT p.ID) FROM Patient p INNER JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.6 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.aCL_IgG, e.aCL_IgM, e.aCL_IgA FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.50 AND l.ID = (SELECT MAX(l.ID) FROM Laboratory WHERE l.UA > 6.50)\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) AS max_anti_nucleus_antibody FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory lab ON e.ID = lab.ID WHERE lab.CRE < 1.5 AND lab.MAX(aCL IgA) = lab.aCL IgA;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.T-BIL > 2.0 AND p.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(`T-BIL`) AS max_t_bil FROM Examination WHERE `T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID WHERE E.T-CHO > 250 AND E.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-CHO < 250 AND Laboratory.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT T2.Diagnosis FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T3.TG < 200 GROUP BY T2.ID ORDER BY MAX(T3.TG) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 0 AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Examination WHERE aCL_IgG < 250 AND (KCT = '+' OR RVVT = '+' OR LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis LIKE '%abnormal blood glucose%' AND Examination.KCT IS NOT NULL AND Examination.RVVT IS NOT NULL AND Examination.LAC IS NOT NULL AND Examination.Thrombosis = 1 AND Laboratory.Glu > 180 ORDER BY Patient.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE p.SEX = 'Male' AND e.Diagnosis = 'Normal Blood Glucose' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.WBC BETWEEN 3.5 AND 9.0 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC >= 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.PLT > 100 AND e.PLT < 400 AND e.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.GPT) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.PT < 14 AND Examination.Thrombosis IN (2, 1);\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT m.major_name FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE m.first_name = 'Angela' AND m.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN major mi ON m.link_to_major = mi.major_id WHERE mi.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member AS m JOIN major AS ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendees.member_id) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT member_id) FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_id, e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.zip IN ( SELECT zip_code FROM zip_code WHERE city = 'Student_Club' );\t----- bird -----\tstudent_club",
    "1319": "SELECT \"college\" FROM \"member\" INNER JOIN \"major\" ON \"member\".\"link_to_major\" = \"major\".\"major_id\" WHERE \"member\".\"position\" = 'vice president';\t----- bird -----\tstudent_club",
    "1320": "SELECT DISTINCT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(DISTINCT event.event_id) FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND event.type = 'Student_Club' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(DISTINCT event.event_id) FROM event JOIN member ON event.event_id = member.link_to_event WHERE member.position = 'Student_Club' AND event.type = 'Meeting' AND COUNT(member.member_id) > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE a.attendance_count > 20 AND e.type!= 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance_count) FROM (SELECT link_to_event, COUNT(DISTINCT link_to_member) AS attendance_count FROM attendance GROUP BY link_to_event) AS subquery WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club event%'\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(DISTINCT m.member_id) FROM member AS m JOIN major AS me ON m.link_to_major = me.major_id WHERE me.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.link_to_major = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.last_name FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip, major_name FROM member WHERE first_name = 'Sherri' AND last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT m.college FROM major AS m JOIN member AS me ON m.major_id = me.link_to_major WHERE me.member_id = 'Tyler Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(spent) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id JOIN major ON event.type = 'Meeting' AND event.event_name = 'September Meeting' JOIN member ON expense.link_to_member = member.member_id WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member AS m JOIN zip_code AS z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(budget.spent) FROM budget JOIN event ON budget.link_to_event = event.event_id JOIN member ON budget.link_to_member = member.member_id WHERE member.position = 'Student_Club' AND event.event_name = 'September Meeting' AND event.type = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN event e ON m.major_id = e.type WHERE e.event_name IN ('Pierce', 'Guidi');\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT * FROM expense WHERE expense_date = '2019-10-08' AND expense_description LIKE '%October Meeting%' AND approved = True;\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(expense.cost) AS total_cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND MONTH(STR_TO_DATE(expense.expense_date, '%m/%d/%Y')) BETWEEN 9 AND 10;\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM event WHERE event_type = 'Student_Club' AND YEAR(event_date) = 2019 UNION ALL SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM event WHERE event_type = 'Student_Club' AND YEAR(event_date) = 2020\t----- bird -----\tstudent_club",
    "1341": "SELECT \"location\" FROM \"event\" WHERE \"event_name\" = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT e.cost FROM expense AS e JOIN budget AS b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters' AND b.event_status = 'Poster' AND e.expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT budget.remaining FROM budget WHERE budget.category = 'Food' AND budget.remaining = ( SELECT MAX(remaining) FROM budget WHERE category = 'Food' );\t----- bird -----\tstudent_club",
    "1344": "SELECT event.notes FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_date = '2019/9/14' AND event.type = 'fundraising';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(DISTINCT major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT email FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip.city, zip.county FROM zip_code AS zip WHERE member.zip = ( SELECT zip_code.zip_code FROM zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O\\'Gallagher' );\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_for_september_speaker FROM budget WHERE link_to_event = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.event_status FROM event e JOIN expense e2 ON e.event_id = e2.link_to_event WHERE e2.expense_description = 'Post Cards, Posters' AND e2.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major WHERE major_id = (SELECT major_id FROM member WHERE member_id = 'Brent Thomason');\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT type FROM zip_code WHERE short_state = 'C';\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code FROM zip_code WHERE city = 'Sacha Harrison' AND state = 'hometown';\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM major m JOIN member me ON m.major_id = me.link_to_major WHERE me.position = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT dues_date FROM income WHERE member_id = ( SELECT member_id FROM member WHERE full_name = 'Connor Hilton' ) AND source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT MIN(member.received_date) AS first_paid_dues FROM member WHERE member.source = 'Dues';\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) AS times_budget_in_advertisement_for_yearly_kickoff_meeting_exceeded_october_meeting FROM budget WHERE category = 'Advertisement' AND (event_name = 'Yearly Kickoff' AND spent > (SELECT spent FROM budget WHERE event_name = 'October Meeting'))\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(budget.spent) / (SELECT SUM(amount) FROM budget WHERE category = 'Parking')) * 100 AS parking_budget_percentage FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Speaker';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) AS number_of_cities FROM zip_code WHERE state = 'Virginia' AND county = 'Orange County';\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code FROM zip_code WHERE city = ( SELECT city FROM major WHERE major_name = 'Amy Firth' );\t----- bird -----\tstudent_club",
    "1365": "SELECT b.category, e.expense_description, e.cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE b.remaining = (SELECT MIN(remaining) FROM budget) ORDER BY e.cost ASC;\t----- bird -----\tstudent_club",
    "1366": "SELECT DISTINCT m.member_id, m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member WHERE a.link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.major_name FROM member m JOIN zip_code zc ON m.zip = zc.zip_code JOIN major ma ON zc.link_to_major = ma.major_id WHERE m.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_name, MAX(b.amount) AS highest_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description, e.cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE member_id = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT zip) FROM member WHERE state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT e.event_id) FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(budget.spent/budget.amount) AS highest_spend_to_budget_ratio FROM event e JOIN budget ON e.event_id = budget.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_name ORDER BY highest_spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) AS num_presidents FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spend FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'Event Name');\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member GROUP BY m.member_id HAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT member_id FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'YourFirstName' AND member.last_name = 'YourLastName' AND member.position = 'Interior Design' AND event.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code zc ON m.zip = zc.zip_code WHERE zc.city = 'Georgetown' AND zc.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM member WHERE email = 'Grant Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.member_id, m.first_name, m.last_name, i.income_id, i.date_received, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_description = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN event e ON m.member_id = e.link_to_member WHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name, b.spent FROM event e JOIN budget b ON e.event_id = b.link_to_event ORDER BY b.spent ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT DIVIDE(SUM(cost), SUM(cost)) * 100 AS percentage FROM event WHERE event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(major_name = 'Finance') / SUM(major_name = 'Physics') AS ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, MAX(amount) AS top_funding_source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY top_funding_source DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT * FROM member WHERE link_to_major = 'Student_Club';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE event_name = 'Community Theater' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT m.member_id, m.first_name, m.last_name, COUNT(a.link_to_event) AS event_count FROM member m JOIN attendance a ON m.member_id = a.link_to_member WHERE m.email = 'luisa.guidi@example.com' GROUP BY m.member_id, m.first_name, m.last_name ORDER BY event_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) FROM budget JOIN event ON budget.link_to_event = event.event_id JOIN expense ON budget.link_to_event = expense.link_to_event WHERE event.event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE category = 'Advertisement' GROUP BY event_name ORDER BY MAX(spent) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance WHERE link_to_event = 'Women\\'s Soccer' AND link_to_member = 'Maya Mclean\\'s member_id';\t----- bird -----\tstudent_club",
    "1400": "SELECT SUM(type = 'Community Service') / COUNT(event_id) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND link_to_event = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(member_id) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining < 0 LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(cost) AS total_value FROM expense WHERE expense_description LIKE '%October Meeting%' AND approved = 'approved';\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(spent) AS amount_budgeted FROM budget WHERE link_to_event = 'April Speaker';\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(spent) AS highest_budget_amount FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT b.category, b.spent, b.remaining, b.amount FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.category ORDER BY b.spent DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id, m.first_name, m.last_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT m.first_name, m.last_name, e.expense_description, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT zip.zip_code FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE expense.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major_name FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Phillip' AND last_name = 'Cullen' );\t----- bird -----\tstudent_club",
    "1415": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE link_to_major = 'Business' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30 AND e.status = 'active';\t----- bird -----\tstudent_club",
    "1418": "SELECT event.type, event.event_name FROM event JOIN major ON event.location = \"MU 215\" WHERE major.college = 'College Name';\t----- bird -----\tstudent_club",
    "1419": "SELECT budget.category FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name FROM major m JOIN member mi ON m.major_id = mi.link_to_major WHERE mi.first_name = 'Vice President' AND mi.last_name IS NOT NULL;\t----- bird -----\tstudent_club",
    "1421": "SELECT COUNT(DISTINCT member_id) * 100.0 / (SELECT COUNT(DISTINCT major_id) FROM major WHERE major_name = 'Business') AS percentage_business_members FROM member;\t----- bird -----\tstudent_club",
    "1422": "SELECT event.type, event.notes FROM event WHERE event.location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE department = (SELECT major_name FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education');\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.major.department, m.major.college FROM member AS m JOIN major AS major_on_member_id ON m.link_to_major = major_on_member_id.major_id WHERE major_on_member_id.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT \"budget\".\"category\" FROM \"event\" JOIN \"budget\" ON \"event\".\"event_id\" = \"budget\".\"link_to_event\" WHERE \"event\".\"location\" = 'MU 215' AND \"event\".\"type\" = 'Guest Speaker' AND \"budget\".\"spent\" = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT m.city, m.state FROM member AS m JOIN major AS em ON m.link_to_major = em.major_id WHERE em.major_name = 'Electrical and Computer Engineering Department';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'Vice President' AND m.zip = (SELECT zip_code FROM zip_code WHERE city = 'Student_Club' AND county = '900 E. Washington St.');\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1432": "SELECT AVG(amount) AS avg_amount_50_received_by_student_club_members_with_medium_t_shirt_size FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE t_shirt_size = 'Medium' AND position = 'Member' AND budget.category = 'Student_Club' AND expense.cost = 50;\t----- bird -----\tstudent_club",
    "1433": "SELECT zip FROM zip_code WHERE type = 'PO Box' AND zip IN (SELECT zip FROM member);\t----- bird -----\tstudent_club",
    "1434": "SELECT DISTINCT z.zip_code FROM zip_code z JOIN major m ON z.zip = m.zip WHERE m.major_name = 'San Juan Municipio' AND z.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1435": "SELECT e.event_name FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event JOIN expense AS exp ON b.budget_id = exp.link_to_budget JOIN member AS m ON exp.link_to_member = m.member_id WHERE b.category = 'Game' AND e.status = 'Closed' AND e.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, b.spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'completed' AND b.spent > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, e.event_id, e.event_name, e.event_date, e.location, ae.link_to_event FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN event e ON b.link_to_event = e.event_id JOIN attendance ae ON e.link_to_event = ae.link_to_event WHERE b.event_status = 'approved' AND e.event_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE m.first_name = 'Katy' AND maj.name ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM member JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'College of Agriculture and Applied Sciences' AND major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.member_id, m.email FROM member m JOIN income i ON m.member_id = i.link_to_member JOIN expense e ON i.income_id = e.income_id WHERE e.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND e.cost > 20\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(DISTINCT member_id) FROM member WHERE link_to_major = 'education';\t----- bird -----\tstudent_club",
    "1442": "SELECT COUNT(CASE WHEN budget.remaining < 0 THEN 1 END) AS over_budget_events, COUNT(*) AS total_events FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining < 0;\t----- bird -----\tstudent_club",
    "1443": "SELECT e.event_id, e.location, e.status FROM event e JOIN zip_code zc ON e.location = zc.city WHERE zc.state = 'CA' AND e.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_id, AVG(cost) AS average_cost FROM expense GROUP BY expense_id HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT AVG(type = 'PO Box') * 100 AS percentage_po_box_zip_codes FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense ON e.event_id = expense.link_to_event WHERE expense.expense_description = 'Pizza' AND expense.cost BETWEEN 50 AND 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.city, e.state, e.country FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE z.short_state = '[SQL_SHORT_STATE]' AND e.income_id IN ( SELECT i.income_id FROM income i WHERE i.amount > 40 GROUP BY i.income_id HAVING COUNT(i.income_id) > 50 );\t----- bird -----\tstudent_club",
    "1451": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > 0 GROUP BY m.member_id HAVING COUNT(DISTINCT e.event_id) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE approved = 'yes' AND link_to_member NOT IN (SELECT member_id FROM member);\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN ( SELECT category, AVG(cost) AS avg_cost FROM expense GROUP BY category ) b ON e.type = b.category WHERE b.category = 'Parking' AND e.cost < (SELECT AVG(cost) FROM expense WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT DIVIDE( SUM(cost), COUNT(event_id) ) * 100 AS percentage FROM event WHERE type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.category, SUM(e.cost) AS total_cost FROM budget b JOIN budget_category bc ON b.budget_id = bc.budget_id JOIN event e ON bc.event_id = e.event_id JOIN expense ex ON e.event_id = ex.event_id JOIN member m ON ex.link_to_member = m.member_id WHERE ex.expense_description = 'Water, chips, cookies' GROUP BY b.category ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY total_spent DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE b.spent > (SELECT AVG(spent) FROM budget)\t----- bird -----\tstudent_club",
    "1458": "SELECT (COUNT(DISTINCT member.zip) * 100.0 / (SELECT COUNT(*) FROM zip_code WHERE state = 'New Jersey')) AS new_jersey_percentage, (COUNT(DISTINCT member.zip) * 100.0 / (SELECT COUNT(*) FROM zip_code WHERE state = 'Vermont')) AS vermont_percentage FROM member\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM major m JOIN member member_garrett ON m.major_id = member_garrett.link_to_major WHERE member_garrett.member_id = 123;\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member AS m JOIN major AS me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT full_name, college FROM member JOIN major ON member.link_to_major = major.major_id WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip.city FROM zip_code AS zip JOIN member AS m ON zip.zip = m.zip; This SQL statement selects the city from the zip_code table, joining it with the member table based on the matching zip codes. Since Garrett Gerke's hometown is linked to his zip code in the member table, this query will return the city where Garrett Gerke is from. To clarify, Garrett Gerke's hometown is represented by his zip code in the member table. The zip_code table contains the city, county, state, and short state information for each zip code. By joining these two tables on the zip code, we can retrieve the corresponding city information. Here's the step-by-step breakdown: 1. Identify the relevant tables: `zip_code` and `member`. 2. Determine the join condition: `zip.zip = m.zip`. 3. Select the desired column: `zip.city`. 4. Ensure the query returns accurate results by considering the relationship between the `member` and `zip_code` tables. The final SQL statement is: [SQL] SELECT zip.city FROM zip_code AS zip JOIN member AS m ON zip.zip = m.zip;\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code zc ON m.zip = zc.zip_code WHERE zc.city = 'Lincolnton' AND zc.state = 'North Carolina' AND zc.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT gasstations.GasStationID) FROM gasstations JOIN products ON gasstations.Segment = products.Segment WHERE gasstations.Country = 'CZE' AND products.Description LIKE '%Premium%';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 ELSE NULL END) / COUNT(CASE WHEN customers.Currency = 'CZK' THEN 1 ELSE NULL END) AS ratio_of_eu_to_czk_customers FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT cm.CustomerID, cm.Consumption FROM yearmonth cm JOIN customers c ON cm.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' ORDER BY cm.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(yearmonth.Consumption) AS avg_monthly_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '20130101' AND '20131231';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Currency = 'CZK' AND t.Date BETWEEN '2011-01-01' AND '2011-12-31' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN customers.Segment = 'CZK' THEN transactions_1k.Amount ELSE 0 END) - SUM(CASE WHEN customers.Segment = 'EUR' THEN transactions_1k.Amount ELSE 0 END) AS consumption_difference FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT yearmonth.Date AS GasUseDate, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth JOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'Your_Target_Segment' AND gasstations.Segment = 'Your_Target_Segment' AND products.Description LIKE '%EUR%' GROUP BY yearmonth.Date ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT c.Segment, MIN(y.Consumption) AS MinConsumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'desired_segment' GROUP BY c.Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT y.Date, MAX(y.Consumption) AS MaxConsumption FROM yearmonth y JOIN transactions_1k t ON y.CustomerID = t.CustomerID WHERE t.ProductID IN (SELECT ProductID FROM products WHERE Description LIKE '%gas%') GROUP BY y.Date ORDER BY MaxConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT ym.Date, SUM(ym.Consumption) AS TotalConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND ym.Date BETWEEN '20130101' AND '20131231' GROUP BY DATE(ym.Date) ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH customer_segments AS ( SELECT c.Segment, gm.Country, ym.Date, SUM(t.Amount) AS total_consumption FROM customers c JOIN gasstations gm ON c.Segment = gm.Segment JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID AND t.Date = ym.Date WHERE ym.Date BETWEEN '20130101' AND '20131231' GROUP BY c.Segment, gm.Country, ym.Date ), lowest_consumption AS ( SELECT cs.Segment, MIN(total_consumption) AS min_consumption FROM customer_segments cs GROUP BY cs.Segment ), annual_averages AS ( SELECT lc.Segment, AVG(total_consumption) AS avg_consumption FROM lowest_consumption lc JOIN customer_segments cs ON lc.Segment = cs.Segment GROUP BY lc.Segment ), sme_lam_kam AS ( SELECT 'SME' AS source, avg_consumption AS annual_average FROM annual_averages UNION ALL SELECT 'LAM' AS source, avg_consumption AS annual_average FROM annual_averages UNION ALL SELECT 'KAM' AS source, avg_consumption AS annual_average FROM annual_averages ) SELECT a.source AS 'SME/LAM/KAM', d.avg_consumption AS 'Annual Average Consumption (CZK)', (a.annual_average - d.avg_consumption) AS 'Difference', (d.annual_average - b.annual_average) AS 'Difference (LAM/KAM)', (b.annual_average - a.annual_average) AS 'Difference (SME/KAM)' FROM sme_lam_kam a JOIN annual_averages b ON a.source = b.source JOIN annual_averages c ON c.source = 'KAM' JOIN annual_averages d ON d.source = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1482": "WITH consumption_data AS ( SELECT c.CustomerID, YEAR(tm.Date) AS year, SUM(t1k.Amount) AS consumption_2012, SUM(t1k.Amount) AS consumption_2013 FROM customers c JOIN yearmonth tm ON c.CustomerID = tm.CustomerID JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID AND YEAR(t1k.Date) IN (2012, 2013) GROUP BY c.CustomerID, year )\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '20130801' AND '20131130';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) FILTER (WHERE Country = 'CZE') - COUNT(*) FILTER (WHERE Country = 'SVK') AS more_discounts FROM gasstations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT c1.Segment, SUM(t1.Amount) AS total_consumption_2013_april_c1, SUM(t1.Amount) AS total_consumption_2013_april_c5 FROM transactions_1k t1 JOIN customers c1 ON t1.CustomerID = c1.CustomerID JOIN customers c2 ON t1.CustomerID = c2.CustomerID WHERE (c1.CustomerID = 7 AND t1.Date = '2013-04-01' AND c1.Segment = 'Segment 1') OR (c2.CustomerID = 5 AND t1.Date = '2013-04-01' AND c2.Segment = 'Segment 1') GROUP BY c1.Segment;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS num_czk_transactions, SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS num_eur_transactions FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, c.Segment, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE c.Currency = 'Euro' AND ym.Date = '2013-10-01' ORDER BY ym.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, SUM(t1k.Amount) AS total_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) AS TotalConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date = '2013-05';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ( SELECT COUNT(*) FROM transactions_1k AS t1 JOIN transactions_1k AS t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Amount > 46.73 AND t1.CustomerID IN ( SELECT CustomerID FROM customers AS c WHERE Segment = 'LAM' ) ) * 100 AS percentage FROM customers AS c WHERE Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT g.Country, COUNT(t1.GasStationID) AS value_for_money_stations FROM gasstations g JOIN transactions_1k t1 ON g.ChainID = t1.GasStationID JOIN products p ON t1.ProductID = p.ProductID GROUP BY g.Country ORDER BY value_for_money_stations DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT 100.0 * SUM(CASE WHEN currency = 'Euro' THEN 1 ELSE 0 END) / COUNT(*) AS percentage_euro_customers FROM customers C JOIN transactions_1k T ON C.CustomerID = T.CustomerID JOIN gasstations GS ON T.GasStationID = GS.GasStationID JOIN products P ON T.ProductID = P.ProductID WHERE GS.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT SUM(CASE WHEN consumption > 528.3 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage FROM yearmonth WHERE date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (COUNT(DISTINCT gasstations.GasStationID) * 100.0 / COUNT(DISTINCT gasstations.GasStationID)) AS percentage_premium_gas_stations FROM gasstations WHERE gasstations.Country = 'Slovakia' AND gasstations.Segment = 'premium';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT t1.CustomerID, MAX(t1.Consumption) AS max_consumption FROM yearmonth t1 JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE t1.date = '201309';\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment, MIN(transactions_1k.Amount) AS least_consumption FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE yearmonth.date = '201309' GROUP BY customers.Segment;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID, MIN(t.Amount) AS least_consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID JOIN transactions_1k t ON y.CustomerID = t.CustomerID WHERE y.Date = '201206' GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS Highest_Monthly_Consumption_2012 FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE DATEPART('month', Date) = 12;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) AS Biggest_Monthly_Consumption FROM ( SELECT y.CustomerID, y.Date, SUM(y.Consumption) AS Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Currency = 'Euro' GROUP BY y.CustomerID, DATE(y.Date) );\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM transactions_1k t JOIN yearmonth y ON t.CustomerID = y.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE y.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE transactions_1k.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT g.ChainID, g.Segment FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth y ON g.GasStationID = y.CustomerID WHERE t.Amount IN (SELECT SUM(Amount) FROM transactions_1k WHERE Price = 'EUR' GROUP BY GasStationID) AND p.Description LIKE '%Gas%';\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM transactions_1k JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Amount * transactions_1k.Price = 1000 -- Assuming 1000 euro is the conversion rate\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(t1.Price) AS average_total_price FROM transactions_1k t1 JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(*) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE currency = 'EUR' AND consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k AS t JOIN products AS p ON t.ProductID = p.ProductID JOIN gasstations AS gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT t1.Date, t1.Time FROM transactions_1k t1 JOIN gasstations g ON t1.GasStationID = g.GasStationID WHERE g.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT SUM(CASE WHEN transactions_1k.Price > 1000 THEN 1 ELSE 0 END) AS transactions_over_1000_price FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE Country = 'CZE' ) AND Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) AS avg_total_price FROM transactions_1k t JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t1.Amount * t1.Price) AS average_total_price FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE c.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT c.CustomerID, c.Segment, SUM(t1k.Amount) AS total_spent FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date = '2012-08-25' GROUP BY c.CustomerID, c.Segment ORDER BY total_spent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT t1.Country, g.ChainID, g.Segment FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID JOIN gasstations g ON t1.GasStationID = g.GasStationID WHERE t1.Date = '2012-08-25' AND t1.Amount > 0 GROUP BY t1.CustomerID, g.ChainID, g.Segment ORDER BY t1.Date, t1.Time LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT `products`.`Description` FROM `transactions_1k` JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '16:25:00' LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '2012-08-23' AND TIME(yearmonth.Date) = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT SUM(CASE WHEN transactions_1k.Amount = 0 AND transactions_1k.Price = 0 AND transactions_1k.Date = '2012-08-26' AND transactions_1k.Time = '00:00:00' AND transactions_1k.CustomerID = customers.CustomerID AND transactions_1k.CardID = products.ProductID THEN 1 ELSE 0 END) AS CZK_transactions FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN products ON transactions_1k.CardID = products.ProductID WHERE customers.Segment = 'Morning' AND transactions_1k.Date = '2012-08-26' AND transactions_1k.Time = '00:00:00' AND transactions_1k.Amount IN (SELECT Amount FROM products WHERE products.Currency = 'CZK') AND transactions_1k.Price IN (SELECT Price FROM products WHERE products.Currency = 'CZK');\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT c.Segment FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date = '2022-01-01' AND t1k.Time = '00:01:00' LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Date = '2012-08-24' AND t.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' AND CustomerID = ( SELECT CustomerID FROM yearmonth WHERE Date = '2012-08-23 21:20:00' );\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(t1.Amount) AS total_2012_aug_24, ym.Date AS spend_date, ym.Consumption AS spend_amount FROM transactions_1k t1 JOIN yearmonth ym ON t1.CustomerID = ym.CustomerID WHERE t1.Date = '2012-08-24' AND ym.Date LIKE '2012-01-%' GROUP BY ym.CustomerID, ym.Date HAVING SUM(t1.Amount) = 124.05\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT t1.Currency FROM customers AS t1 JOIN transactions_1k AS t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date LIKE '201306%' GROUP BY t1.CustomerID HAVING SUM(t2.Amount) = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT c.Country FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN gasstations gs ON t1.GasStationID = gs.GasStationID JOIN products p ON t1.ProductID = p.ProductID WHERE t1.TransactionID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Segment FROM transactions_1k AS t JOIN customers AS c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-25')) AS percentage_eur_customers FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-25' AND customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (consumption_2013 - consumption_2012) / consumption_2012 FROM (SELECT CustomerID, YEAR(Date) AS year, DATE_PART('month', Date) AS month, SUM(Amount) AS consumption_2012, SUM(Amount) AS consumption_2013 FROM yearmonth WHERE YEAR(Date) = 2012 AND Date = '2012-08-25' ) subquery\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT g.GasStationID, SUM(t.Amount) AS total_revenue FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID GROUP BY g.GasStationID ORDER BY total_revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT ( SELECT SUM(CASE WHEN products.Description LIKE '%premium%' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN customers.Segment = 'premium' THEN 1 ELSE 0 END) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'SVK' AND customers.Segment IN ('premium', 'non-premium') ) AS percentage_premium\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount) AS total_spent_at_gasstations FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT p.Description AS Product_Name, SUM(t1.Amount) AS Total_Sales FROM products p JOIN transactions_1k t1 ON p.ProductID = t1.ProductID GROUP BY p.ProductID ORDER BY Total_Sales DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, AVG(p.price/t.amount) AS avg_price_per_item, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE t.Amount > 1000 GROUP BY c.CustomerID, c.Currency ORDER BY avg_price_per_item DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country, MAX(t1.Amount) AS Expensive_Product_Amount FROM gasstations g JOIN transactions_1k t1 ON g.GasStationID = t1.GasStationID JOIN products p ON t1.ProductID = p.ProductID WHERE t1.ProductID = 2 GROUP BY g.Country ORDER BY Expensive_Product_Amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, SUM(t.Amount) AS total_spent, ym.Consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID AND t.Date = '201208' JOIN products p ON t.ProductID = p.ProductID WHERE p.ProductID = 5 AND t.Amount > 29.00 GROUP BY c.CustomerID, ym.Consumption ORDER BY total_spent DESC;\t----- bird -----\tdebit_card_specializing"
}