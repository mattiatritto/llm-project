{
    "0": "SELECT MAX(FRPM_Percent_Eligible_Free_K12) AS highest_eligible_free_rate FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17), (s.FreeMealCount (Ages 5-17) / s.Enrollment (Ages 5-17)) AS eligible_free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.DistrictType = 'Continuation' AND s.SchoolType = 'School' GROUP BY s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17) ORDER BY eligible_free_rate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT schools.Zip FROM schools JOIN fprm ON schools.CDSCode = fprm.CDSCode WHERE fprm.Charter = 1 AND fprm.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState FROM schools s JOIN ( SELECT CDSCode, MAX(FRPMCount(K-12)) AS max_FRPM FROM frpm WHERE AcademicYear = '2013-14' GROUP BY CDSCode ) f ON s.CDSCode = f.CDSCode;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'Charter' AND s.Charter = 1 AND s.OpenDate > '2000-01-01';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.AvgScrMath > 400 AND s.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 'Yes' OR s.GSserved = 'Yes') ORDER BY sc.NumTstTakr DESC;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 > 0 ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.cds, SUM(s.NumTstTakr) AS total_test_takers FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.DistrictType = 'Public' GROUP BY sc.CDSCode ORDER BY total_test_takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT satscores.cds) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.school_name, s.FRPM_count_5_17 FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode JOIN frpm f ON sc.CDSCode = f.CDSCode WHERE s.rtype = 'SAT' AND s.sname = 'Reading' ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT s.CDSCode, SUM(s.enroll12 + s.enroll17) AS total_enrollment FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode HAVING total_enrollment > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT s.EILName, MAX(s.EligibleFreeRate) AS highest_eligible_free_rate FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.ExcellenceRate > 0.3 GROUP BY s.EILName ORDER BY highest_eligible_free_rate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) / s.NumTstTakr AS excellence_rate ORDER BY excellence_rate DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.CDSCode, s.NCESSchool FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'Enrollment (Ages 5-17)' GROUP BY s.CDSCode, s.NCESSchool ORDER BY SUM(sc.enroll12) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.CDSCode, s.sname, AVG(s.AvgScrRead) AS avg_reading_score FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.StatusType = 'Active' GROUP BY s.CDSCode, s.sname ORDER BY avg_reading_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools WHERE Alameda ='merged' AND NumTstTakr < 100;\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.CharterNum FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrWrite > 499 ORDER BY sc.AvgScrWrite DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Fresno' AND sc.NumTstTakr <= 250 AND sc.rtype = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM schools JOIN satscores AS math_scores ON schools.CDSCode = math_scores.cds JOIN satscores AS read_scores ON schools.CDSCode = read_scores.cds JOIN satscores AS write_scores ON schools.CDSCode = write_scores.cds JOIN satscores AS ge1500_scores ON schools.CDSCode = ge1500_scores.cds WHERE (read_scores.AvgScrRead + math_scores.AvgScrMath + write_scores.AvgScrWrite + ge1500_scores.NumGE1500) / 4 > (SELECT AVG(AvgScrRead) FROM satscores WHERE rtype = 'Regular') AND math_scores.cds = (SELECT cds FROM satscores WHERE rtype = 'Math' ORDER BY AvgScrMath DESC LIMIT 1) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT * FROM schools WHERE NCESDist = 'Amador' AND LowGrade = '9' AND HighGrade = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM satscores WHERE cds = (SELECT CDSCode FROM schools WHERE County = 'Los Angeles' AND District = 'Los Angeles Unified School District') AND rtype = 'K-12' AND NumTstTakr > 500 AND NumTstTakr < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, s.enroll12, s.NumTstTakr FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Contra Costa' ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.school, s.street, (s.enrollment_k_12 - s.enrollment_ages_5_7) AS enrollment_diff FROM schools s JOIN frpm f ON s.cds = f.cds WHERE (f.enrollment_k_12 - f.enrollment_ages_5_7) > 30 GROUP BY s.school, s.street HAVING enrollment_diff > 0;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.SchoolName, s.Enrollment_K_12, s.Free_Meal_Count_K_12, s.FRPM_Count_K_12, s.Percent_Eligible_FRPM_K_12 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.AvgScrMath >= 1500 AND sc.AvgScrWrite >= 1500 AND s.Percent_Eligible_Free_Meals_K_12 > 0.1 GROUP BY s.CDSCode, s.SchoolName, s.Enrollment_K_12, s.Free_Meal_Count_K_12, s.FRPM_Count_K_12, s.Percent_Eligible_FRPM_K_12 HAVING COUNT(sc.cds) > 0\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.CDSCode, s.FundingType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.District = 'Riverside' GROUP BY s.CDSCode, s.FundingType HAVING AVG(sc.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.School, CONCAT(s.Street, ',', s.City, ',', s.State,'', s.Zip) AS FullCommunicationAddress FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'High School' AND s.County = 'Monterey' AND sc.dname = 'Ages 15-17' AND sc.NumTstTakr > 800 ORDER BY sc.AvgScrMath DESC;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT schools.School, satscores.AvgScrWrite, schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate < '1991-01-01' OR schools.ClosedDate > '2000-12-31';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.CDSCode, s.Name, s.DOC FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.FundingType = 'Local' AND (sc.enroll12 - sc.enroll17) > (SELECT AVG(A.enroll12 - A.enroll17) FROM schools A WHERE A.FundingType = 'Local');\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.OpenDate FROM frpm JOIN schools s ON frpm.CDSCode = s.CDSCode WHERE s.StatusType = 'K-12' GROUP BY s.CDSCode ORDER BY MAX(s.enroll12) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City, s.Zip, s.Enrollment (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Open' AND s.District = 'Public' GROUP BY s.City, s.Zip, s.Enrollment (K-12) ORDER BY s.Enrollment (K-12) ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "WITH TopSchools AS ( SELECT CDSCode, COUNT(*) AS Enrolment FROM schools WHERE (NCESDist, NCESSchool) IN ( SELECT NCESDist, NCESSchool FROM schools ORDER BY Enrollment DESC LIMIT 10 ) GROUP BY CDSCode ), Grades1011 AS ( SELECT schools.CDSCode FROM TopSchools JOIN schools ON TopSchools.CDSCode = schools.CDSCode WHERE schools.NCESSchool IN ( SELECT NCESSchool FROM schools WHERE NCESSchool LIKE '10%' OR NCESSchool LIKE '11%' ) ) SELECT g.CDSCode, s.Enrollment (K-12), s.FreeMealCount (K-12), (s.FreeMealCount (K-12) / s.Enrollment (K-12)) AS EligibleFreeRate FROM Grades1011 g JOIN schools s ON g.CDSCode = s.CDSCode JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'SAT';\t----- bird -----\tcalifornia_schools",
    "32": "SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment(K-12), s.FreeMealCount(K-12), s.FRPMCount(K-12), s.PercentEligibleFree(K-12), s.FRPMCount(K-12) / s.Enrollment(K-12) AS eligible_FRPM_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 ORDER BY s.FreeMealCount(K-12) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.Website, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.enroll12 BETWEEN 1900 AND 2000 AND sc.rtype = 'Ages 5-17' AND sc.dname LIKE '%Free Meal%' GROUP BY s.School HAVING COUNT(sc.cds) > 0 ORDER BY s.School;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT s.Enrollment_Ages_5_17, (s.Free_Meal_Count_Ages_5_17 / s.Enrollment_Ages_5_17) * 100 AS free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.School = 'Kacey Gibson';\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.CharterSchool = 1 AND f.Enrollment (K-12) = (SELECT MIN(Enrollment (K-12)) FROM frpm) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 150 AND sc.AvgScrMath >= 150 AND sc.AvgScrWrite >= 150 AND sc.NumGE1500 >= 1 GROUP BY s.CDSCode ORDER BY NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM ( SELECT f.CDSCode, s.CDS, (s.NumGE1500 / s.NumTstTakr) AS excellence_rate FROM frpm f JOIN satscores s ON f.CDSCode = s.cds GROUP BY f.CDSCode, s.CDS ) AS lowest_rate_schools JOIN schools s ON lowest_rate_schools.CDSCode = s.CDSCode ORDER BY excellence_rate ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr BETWEEN 2000 AND 3000 AND s.County = 'Los Angeles County';\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) AS avg_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT cds, AVG(AvgScrRead) AS avg_reading_score FROM satscores GROUP BY cds ) sub ON sc.cds = sub.cds WHERE s.StatusType = 'Active' AND s.District = 'Fresno Unified' ORDER BY sub.avg_reading_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School, AVG(ss.AvgScrRead) AS avg_reading_score FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.Virtual = 'F' AND s.County = 'Respective County' -- Replace 'Respective County' with the actual county name GROUP BY s.School ORDER BY avg_reading_score DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.sname, s.dname, s.cname, s.enroll12, s.AvgScrMath FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) ORDER BY s.enroll12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(satscores.AvgScrMath) AS avg_math_score FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (satsscores.AvgScrMath + satsscores.AvgScrRead + satsscores.AvgScrWrite) = ( SELECT MAX(AvgScrMath + AvgScrRead + AvgScrWrite) AS max_avg_score FROM satscores ) ORDER BY avg_math_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.CDSCode AS SchoolCode, s.City, AVG(ss.AvgScrWrite) AS AverageWritingScore FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.NumGE1500 >= 1 GROUP BY s.CDSCode, s.City ORDER BY AverageWritingScore DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.CDSCode, AVG(ss.AvgScrWrite) AS avg_writing_score FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.StatusType = 'Active' AND s.CDSCode IN ( SELECT CDSCode FROM satscores WHERE ricci_ulrich = 'Ricci Ulrich' ) GROUP BY s.CDSCode;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.CDSCode, SUM(ss.enroll12) AS total_k12_enrollments FROM frpm s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.rtype IN ('K-12', 'Ages 5-17') GROUP BY s.CDSCode ORDER BY total_k12_enrollments DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(DISTINCT cds) AS avg_schools_opened_1980 FROM satscores WHERE rtype = 'Monthly Average' AND dname = 'Alameda County Elementary School District' AND EXTRACT(YEAR FROM open_date) = 1980 AND EXTRACT(MONTH FROM open_date) BETWEEN 1 AND 12;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(DISTINCT satscores.cds) AS unified_count, COUNT(DISTINCT schools.CDSCode) AS elementary_count FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.NCESDist IN ('54', '52') AND schools.County = 'Orange County' GROUP BY satscores.cds;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.County, s.School ORDER BY MAX(s.ClosedDate) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'Math' ORDER BY sc.AvgScrMath DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.Street, s.School FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode JOIN ( SELECT cds, AVG(AvgScrRead) AS avg_reading_score FROM satscores GROUP BY cds ) avg_scores ON ss.cds = avg_scores.cds ORDER BY avg_reading_score ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 >= 1500 AND schools.City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(*) FROM satscores WHERE cds IN (SELECT CDSCode FROM schools WHERE City = 'Fresno');\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.CDSCode, schools.Zip FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Active' AND schools.Charter = 0 AND schools.AdmFName1 = 'Avetik Atoian';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(*) FILTER (WHERE schools.County = 'Colusa') AS colusa_count, COUNT(*) FILTER (WHERE schools.County = 'Humboldt') AS humboldt_count FROM schools WHERE schools.MailState = 'CA';\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE state = 'California' AND city = 'San Joaquin' AND Charter = 1;\t----- bird -----\tcalifornia_schools",
    "57": "SELECT Phone, Ext FROM schools JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY AvgScrWrite DESC LIMIT 333;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s1.Website FROM schools s1 JOIN schools s2 ON s1.StatusType = s2.StatusType AND s1.Charter = s2.Charter WHERE (s1.StatusType = 'Mike Larson' OR s1.StatusType = 'Dante Alvarez') AND (s2.StatusType = 'Mike Larson' OR s2.StatusType = 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.Virtual = 'P' AND s.NCESDist = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.StatusType = 'Charter' AND schools.DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Charter = 0 AND satscores.rtype = 'K-12' AND satscores.Percent (%) Eligible Free (K-12) < 0.0018;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT schools.School, schools.AdmFName1, schools.AdmLName1, schools.AdmEmail1 FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Charter = 1 AND schools.CharterNum = '00D2' AND satscores.rtype = 'District';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND CharterNum = '00D4' AND MailCity = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(*) FILTER (WHERE rtype = 'Local')) * 100.0 / COUNT(*) AS ratio_percentage FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.NCESDist = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'Stanislaus' AND satscores.rtype = 'Directly Funded' AND schools.OpenDate BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(charter) AS total_charter_closures FROM schools WHERE city = 'San Francisco' AND YEAR(closed_date) = 1989 AND type = 'Community College District';\t----- bird -----\tcalifornia_schools",
    "68": "SELECT s.County, COUNT(ss.cds) AS school_closures_1980s FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.StatusType = 'Closed' AND ss.rtype IN ('SAT', 'AP') AND ss.dname = 'Youth Authority Facilities (CEA)' AND ss.sname LIKE '%1980s%' GROUP BY s.County ORDER BY school_closures_1980s DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT s.CDSCode) AS active_and_closed_district_community_day_schools FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'Alpine' AND (f.StatusCode = 'Active' OR f.StatusCode = 'Closed') AND s.StatusType = 'District Community Day School';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT s.CDSCode FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Magnet = 0 AND f.City = 'Fresno' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(enroll12) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.CDSCode = 'Fremont' AND schools.NCESDist = 'State' AND schools.NCESSchool = 'Special School' AND satscores.rtype = '2014-14' AND satscores.dname = 'Satscores';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT s.enroll12 FROM satscores s JOIN schools st ON s.cds = st.CDSCode WHERE st.Street = 'PO Box 1040' AND st.District = 'Youth Authority School' AND st.StatusType = 'Open';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.LowGrade FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.NCESDist = '0613360' AND s.EdOpsCode = 'SPECON' ORDER BY s.LowGrade ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.school_name, s.school_type FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.FRPM_Count_K_12 > 0 AND f.FRPM_Percent_Eligible_FRPM_K_12 > 0.5 AND f.County_Code = '37' AND sc.sname = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.EILCode = 'HS' AND sc.AvgScrMath >= 9 AND sc.AvgScrMath <= 12 AND s.County = 'Merced';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.County, s.District, s.School, s.Percent_Eligible_FRPM_Ages_5_17 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND f.Academic_Year IN (SELECT YEAR FROM calendar WHERE month = 'January') AND f.District_Code = 1 AND f.School_Code = 'K-9';\t----- bird -----\tcalifornia_schools",
    "78": "SELECT s.StatusType, COUNT(*) AS count FROM schools s WHERE s.City = 'Adelanto' GROUP BY s.StatusType ORDER BY count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT COUNT(*) AS schools_count FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Charter = 0 AND Virtual = 1 GROUP BY County ORDER BY schools_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.School, s.Latitude FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds ORDER BY s.Latitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.City, s.LowestGrade, s.SchoolName FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.State = 'CA' AND s.Latitude = (SELECT MIN(Latitude) FROM schools WHERE State = 'CA') AND s.LowestGrade IS NOT NULL ORDER BY s.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT s.CountyName, s.DistrictName, s.SchoolName, s.LowGrade, s.HighGrade FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MAX(Longitude) AS MaxLongitude FROM schools GROUP BY CDSCode ) m ON s.CDSCode = m.CDSCode WHERE s.Longitude = m.MaxLongitude;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT s.City, COUNT(s.School) AS num_schools, GROUP_CONCAT(s.MultipleProvisionTypes SEPARATOR ', ') AS multiple_provision_types FROM schools s JOIN frpm fr ON s.CDSCode = fr.CDSCode WHERE fr.AcademicYear = 'K-8' AND fr.SchoolType = 'Magnet' AND fr.NSLPProvisionStatus = 'Multiple Provision Types' GROUP BY s.City ORDER BY num_schools DESC;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, AdmLName1, AdmEmail1, District FROM schools WHERE Charter = 1 AND (AdmFName1, AdmLName1, AdmEmail1) IN (SELECT AdmFName1, AdmLName1, AdmEmail1 FROM schools WHERE Charter = 1 GROUP BY AdmFName1, AdmLName1, AdmEmail1 ORDER BY COUNT(*) DESC LIMIT 2);\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.DistrictCode FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode WHERE sch.AdmFName1 = 'Alusine' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.School, s.Charter FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.sname = '40' AND s.Charter = 1 LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE (s.NCESDist = 'San Bernardino City Unified' AND s.District = 'Unified School' AND s.StatusType = 'Public') AND (s.NCESSchool = 'Intermediate/Middle Schools' OR s.SOC = 62) AND (s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31') AND (s.County = 'San Bernardino' AND s.City = 'San Bernardino') AND (sc.cname = 'SATs' AND sc.dname = 'Math') AND (sc.NumTstTakr > 0);\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.AdmFName1, s.AdmLName1, s.AdmFName2, s.AdmLName2, s.AdmFName3, s.AdmLName3, s.AdmEmail1, s.AdmEmail2, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE cds = s.CDSCode) ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A3 = 'POPLATEK PO OBRATU' ) AND frequency = 'issuance after transaction';\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Prague' AND EXISTS ( SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.status = 'eligible' );\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_unemployment_ratio_1995, AVG(A13) AS avg_unemployment_ratio_1996 FROM district WHERE district_id IN (SELECT district_id FROM client);\t----- bird -----\tfinancial",
    "92": "SELECT d.district_id, d.A11 FROM district d WHERE d.A11 BETWEEN 6000 AND 10000 GROUP BY d.district_id;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A3 = 'North Bohemia');\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id, d.A11 AS lowest_avg_salary, d.A16 AS highest_avg_salary, (d.A16 - d.A11) AS salary_gap FROM account a JOIN client c ON a.district_id = c.district_id JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' ORDER BY c.birth_date DESC, d.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "95": "SELECT c.client_id, c.gender, c.birth_date, AVG(lo.amount) AS avg_salary FROM client c JOIN loan lo ON c.client_id = lo.account_id WHERE c.district_id = (SELECT district_id FROM district WHERE A11 = (SELECT MAX(A11) FROM district)) GROUP BY c.client_id, c.gender, c.birth_date ORDER BY avg_salary DESC, birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT c.client_id) FROM client AS c JOIN account AS a ON c.district_id = a.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'weekly_issuance' AND c.gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT c.client_id FROM client AS c JOIN disp AS d ON c.client_id = d.client_id JOIN trans AS t ON d.account_id = t.account_id WHERE t.operation = 'issuance after transaction' AND d.type = 'Disponent';\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id, a.district_id, l.amount, d.A2 FROM account a JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.district_id = d.district_id WHERE l.date = '1997-01-01' AND l.status = 'approved' ORDER BY l.amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, MAX(t.amount) AS highest_approved_amount FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date >= '1993-01-01' GROUP BY a.account_id, a.district_id HAVING MAX(t.amount) = ( SELECT MAX(t2.amount) FROM trans t2 WHERE t2.account_id = a.account_id AND t2.date >= '1993-01-01' )\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id JOIN account ON district.district_id = account.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01' AND district.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "101": "SELECT a.account_id, a.district_id, a.date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.date = '1995-01-01' GROUP BY a.account_id, a.district_id ORDER BY a.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date FROM account a JOIN client c ON a.district_id = c.district_id WHERE a.date < '1997-01-01' AND a.amount > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03' AND card.type = 'card';\t----- bird -----\tfinancial",
    "104": "SELECT MIN(trans.date) AS account_opening_date FROM trans JOIN account ON trans.account_id = account.account_id WHERE trans.amount = 840 AND trans.date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction FROM trans WHERE account_id = (SELECT client_id FROM client WHERE birth_date = '1996-10-21' AND district_id = (SELECT district_id FROM district WHERE A2 = 'A2'));\t----- bird -----\tfinancial",
    "107": "SELECT c.gender FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE d.A11 = (SELECT MAX(A11) FROM district) AND c.birth_date = (SELECT MIN(birth_date) FROM client);\t----- bird -----\tfinancial",
    "108": "SELECT c.client_id, c.gender, c.birth_date, c.district_id, t.amount FROM client c JOIN trans t ON c.client_id = t.account_id WHERE t.trans_id = ( SELECT MIN(trans_id) FROM trans WHERE account_id = c.client_id ) ORDER BY c.client_id;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT c.disp_id FROM client c JOIN trans t ON c.client_id = t.account_id WHERE t.amount = 5100 AND t.date = '1998-09-02' AND c.district_id = ( SELECT district_id FROM account WHERE account_id = t.account_id );\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(DISTINCT account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE A2 = 'Litomerice' AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "112": "SELECT d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client AS c JOIN trans AS t ON c.client_id = t.account_id WHERE t.amount = 98832 AND t.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'client_gender' AND c.birth_date = 'client_birth_date' AND a.district_id = 'Prague_district_id';\t----- bird -----\tfinancial",
    "115": "SELECT (COUNT(CASE WHEN gender = 'M' THEN 1 END) / COUNT(*)) * 100 FROM client JOIN district ON client.district_id = district.district_id WHERE district.A3 ='south Bohemia';\t----- bird -----\tfinancial",
    "116": "SELECT c.client_id, a.district_id, a.A2, a.A3, a.A4, a.A5, a.A6, a.A7, a.A8, a.A9, a.A10, a.A11, a.A12, a.A13, a.A14, a.A15, a.A16, l.amount, l.date, l.duration, l.payments, l.status, (t1.balance - t2.balance) / t2.balance * 100 AS increase_rate FROM client c JOIN district a ON c.district_id = a.district_id JOIN loan l ON c.client_id = l.client_id JOIN trans t1 ON c.client_id = t1.account_id AND t1.date >= '1993-03-22' JOIN trans t2 ON c.client_id = t2.account_id AND t2.date <= '1998-12-27' WHERE l.date = '1993-07-05' ORDER BY c.client_id;\t----- bird -----\tfinancial",
    "117": "SELECT SUM(amount) / (SELECT SUM(amount) FROM loan) * 100 AS full_paid_percentage FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT SUM(amount) AS total_running_contracts, COUNT(DISTINCT account_id) AS accounts_running FROM loan WHERE amount < 100000 AND status = 'C'\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE t.date >= '1993-01-01' AND t.date < t.operation;\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.district_id = c.district_id WHERE a.district_id = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial",
    "121": "SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM district d JOIN account a ON d.district_id = a.district_id WHERE a.account_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT account_id, district_id, A2 FROM account JOIN district ON account.district_id = district.district_id WHERE amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT t1.loan_id, d.A11 AS average_salary FROM loan AS t1 JOIN district AS d ON t1.account_id = d.district_id WHERE t1.duration = 60;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, d.A12 AS unemployment_rate_1995, (L.A13 - L.A12) / L.A12 * 100 AS unemployment_rate_increment FROM client c JOIN trans t ON c.client_id = t.client_id JOIN loan L ON t.account_id = L.account_id JOIN district d ON L.district_id = d.district_id WHERE t.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM district WHERE district_id = (SELECT district_id FROM client WHERE gender = 'female' AND birth_date BETWEEN '1993-01-01' AND '1993-12-31')) AS percentage_of_accounts_from_decin_district_opened_in_1993 FROM account WHERE district_id = (SELECT district_id FROM client WHERE gender = 'female' AND birth_date BETWEEN '1993-01-01' AND '1993-12-31');\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.type ='statement' AND t.date >= DATE('now', '-1 month') AND t.date < DATE('now');\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(DISTINCT client_id) AS num_female_accounts FROM client WHERE gender = 'F' GROUP BY district_id ORDER BY num_female_accounts DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.district_id, d.A2, SUM(t.amount) AS total_withdrawal FROM account AS a JOIN district AS d ON a.district_id = d.district_id JOIN trans AS t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ' AND MONTH(t.date) = 1 AND YEAR(t.date) = 1996 GROUP BY d.district_id, d.A2 ORDER BY total_withdrawal DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'South Bohemia' AND account.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.district_id, d.A3, SUM(l.amount) AS total_active_loans FROM district d JOIN loan l ON d.district_id = l.account_id WHERE l.status = 'C' GROUP BY d.district_id, d.A3 ORDER BY total_active_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) AS average_loan_amount FROM loan JOIN client ON loan.account_id = client.district_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT d.district_id, d.A13 FROM district d WHERE d.A13 IS NOT NULL;\t----- bird -----\tfinancial",
    "134": "SELECT MAX(district_id) AS max_crimes_1996, COUNT(DISTINCT account_id) AS accounts_opened FROM district INNER JOIN account ON district.district_id = account.district_id WHERE A16 >= 1996 GROUP BY district_id;\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a JOIN trans AS t ON a.account_id = t.account_id JOIN client AS c ON a.district_id = c.district_id WHERE t.operation = 'VYBER KARTOU' AND a.frequency = 'POPLATEK MESICNE' AND t.amount < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loans WHERE loans.account_id = account.account_id AND loans.date BETWEEN '1995-01-01' AND '1997-12-31' AND loans.amount >= 250000 AND loans.status = 'approved' AND account.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency = 'running' AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A15 = (SELECT MAX(A15) FROM district));\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER' AND disp_id = 'card';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT DISTINCT district_id FROM trans t JOIN account a ON t.account_id = a.account_id WHERE t.date >= '1997-01-01' AND t.date < '1998-01-01' AND t.amount > 10000;\t----- bird -----\tfinancial",
    "142": "SELECT account.account_id, trans.type, trans.operation, trans.amount, trans.balance, trans.k_symbol, trans.bank, trans.account FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.district_id = (SELECT district_id FROM district WHERE A13 = 'Pisek') AND trans.k_symbol = 'SIPO';\t----- bird -----\tfinancial",
    "143": "SELECT a.* FROM account a JOIN client c ON a.district_id = c.district_id JOIN card cl ON c.client_id = cl.client_id WHERE cl.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) AS avg_credit_card_amount FROM ( SELECT t.trans_id, c.card_id, c.type, t.date, t.amount, a.district_id, a.district_name FROM trans t JOIN card c ON t.card_id = c.card_id JOIN account a ON t.account_id = a.account_id WHERE c.type = 'VYBER KARTOU' ) AS subquery GROUP BY a.district_id, a.district_name, EXTRACT(MONTH FROM t.date) ORDER BY a.district_id, a.district_name, EXTRACT(MONTH FROM t.date) LIMIT 1;\t----- bird -----\tfinancial",
    "145": "SELECT trans.account_id, trans.amount FROM trans JOIN account ON trans.account_id = account.account_id WHERE trans.type = 'VYBER KARTOU' AND trans.operation = 'withdrawal' AND trans.date BETWEEN '1998-01-01' AND '1998-12-31' AND trans.amount < ( SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND operation = 'withdrawal' AND date BETWEEN '1998-01-01' AND '1998-12-31' )\t----- bird -----\tfinancial",
    "146": "SELECT a.account_id, c.card_id, l.loan_id FROM account a JOIN card c ON a.district_id = c.disp_id JOIN loan l ON a.account_id = l.account_id;\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A3 ='south Bohemia');\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id, a.district_id FROM account AS a JOIN client AS c ON a.district_id = c.district_id WHERE c.gender = 'M' AND c.birth_date < '1990-01-01';\t----- bird -----\tfinancial",
    "149": "SELECT a.account_type FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A11 > 8000 AND d.A11 <= 9000 AND a.account_type!= 'OWNER';\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'North Bohemia' AND trans.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND A8 >= 1997 AND A9 >= 1997 AND A10 >= 1997 AND A11 >= 1997 AND A12 >= 1997 AND A13 >= 1997 AND A14 >= 1997;\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic' AND account_id IN ( SELECT account_id FROM loan WHERE status = 'approved' );\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha' AND A3 = 'M') AND gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT ( COUNT(CASE WHEN card.type = 'gold' AND card.issued < '1998-01-01' THEN 1 END) / COUNT(card.type) ) * 100 AS percent_of_gold_cards_issued_before_1998 FROM card\t----- bird -----\tfinancial",
    "156": "SELECT a.account_id, a.district_id, a.frequency, a.date, c.client_id, c.gender, c.birth_date, d.district_id FROM account a JOIN loan l ON a.account_id = l.account_id JOIN client c ON a.district_id = c.district_id JOIN district d ON a.district_id = d.district_id WHERE l.amount = (SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id)\t----- bird -----\tfinancial",
    "157": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN account ON district.district_id = account.district_id WHERE account.account_id = 532 AND district.A15 = 1995;\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE trans_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT t.trans_id, t.date, t.amount, t.operation, t.type, t.balance FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.district_id = c.district_id WHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a JOIN trans AS t ON a.account_id = t.account_id JOIN loan AS l ON a.account_id = l.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT type FROM card WHERE client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT d.A3 FROM client AS c INNER JOIN district AS d ON c.district_id = d.district_id WHERE c.client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id, d.A2 + d.A3 + d.A4 + d.A5 + d.A6 + d.A7 + d.A8 + d.A9 + d.A10 + d.A11 + d.A12 + d.A13 + d.A14 + d.A15 + d.A16 AS total_score FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id ORDER BY total_score DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT t2.client_id FROM client AS t1 INNER JOIN disp AS t2 ON t1.client_id = t2.client_id WHERE t2.account_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ac ON d.disp_id = ac.disp_id WHERE ac.type = 'credit' AND ac.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000 AND gender = 'F')) AS percentage_women FROM client WHERE district_id IN (SELECT district_id FROM district WHERE A11 > 10000);\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(l.amount) - SUM(l.amount)) / (SUM(l.amount)) * 100 AS growth_rate FROM account AS a JOIN client AS c ON a.account_id = c.client_id JOIN loan AS l ON a.account_id = l.account_id WHERE c.gender = 'M' AND l.date BETWEEN '1996-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(A16) AS total_crimes_1996_north_bohemia, SUM(A16) AS total_crimes_1996_east_bohemia FROM district WHERE A3 = 'North Bohemia' AND A3 = 'East Bohemia' AND A15 = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT c.client_id) AS owner_dispositions, COUNT(DISTINCT a.account_id) AS disponent_dispositions FROM client c JOIN account a ON c.district_id = a.account_id WHERE a.account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT COUNT(DISTINCT trans.trans_id) AS account_requests, SUM(trans.amount) AS total_debit FROM account AS acc JOIN trans AS t ON acc.account_id = t.account_id WHERE acc.account_id = 3;\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT t.account_id) FROM account AS a JOIN card AS c ON a.district_id = c.disp_id JOIN client AS client ON a.district_id = client.district_id JOIN trans AS t ON a.account_id = t.account_id WHERE t.type = 'POPLATEK PO OBRATU' GROUP BY a.district_id;\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt, status FROM loan WHERE account_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(t.amount) AS client_4_account_sum FROM trans t JOIN account ac ON t.account_id = ac.account_id JOIN client c ON ac.district_id = c.district_id WHERE c.client_id = 4 AND t.trans_id = 851;\t----- bird -----\tfinancial",
    "178": "SELECT c.type FROM client c WHERE c.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.gender, c.birth_date FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 BETWEEN '1983' AND '1987' AND d.district_id = ( SELECT district_id FROM district WHERE A2 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, SUM(t.amount) AS total_loan FROM client c JOIN trans t ON c.client_id = t.account_id WHERE c.gender = 'F' GROUP BY c.client_id, c.gender ORDER BY total_loan DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON client.account_id = loan.account_id WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND status = 'SIPO' AND amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(DISTINCT account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Beroun' AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND type = 'junior_credit_card';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(DISTINCT client.gender) * 100.0 / COUNT(DISTINCT client.client_id) AS female_percentage FROM client JOIN district ON client.district_id = district.district_id JOIN account ON district.district_id = account.district_id WHERE account.district_id = 'Prague';\t----- bird -----\tfinancial",
    "186": "SELECT (COUNT(CASE WHEN c.gender = 'M' AND t.type = 'POPLATEK TYDNE' THEN 1 END) / COUNT(DISTINCT t.type)) * 100 AS percentage_male_weekly_statements FROM client c JOIN disp d ON c.district_id = d.account_id JOIN trans t ON d.account_id = t.account_id WHERE t.type = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(*) FROM client JOIN trans ON client.client_id = trans.account_id WHERE trans.type = 'POPLATEK TYDNE' AND trans.operation = 'Owner';\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, MIN(t.amount) AS lowest_approved_amount FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' GROUP BY a.account_id HAVING COUNT(l.loan_id) > 0;\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id, d.A11 AS avg_salary FROM account AS a JOIN client AS c ON a.district_id = c.district_id JOIN district AS d ON a.district_id = d.district_id WHERE c.gender = 'F' ORDER BY c.birth_date DESC, d.A11 ASC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND district_id = ( SELECT district_id FROM district WHERE A3 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan WHERE loan.duration = 24 AND loan.frequency = 'POPLATEK TYDNE' AND loan.status = 'PREPAID';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loans.amount) FROM loan AS loans JOIN trans AS trans ON loans.account_id = trans.account_id JOIN account AS ac ON trans.account_id = ac.account_id JOIN district AS d ON ac.district_id = d.district_id WHERE loans.status = 'C' AND d.A2 = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'M' AND ( SELECT COUNT(*) FROM loan l WHERE l.account_id = c.client_id ) > 0 AND ( SELECT COUNT(*) FROM trans t WHERE t.account_id = c.client_id AND t.type = 'permanent' ) > 0;\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, c.age FROM client c JOIN account a ON c.district_id = a.district_id JOIN card cr ON a.account_id = cr.account_id JOIN trans t ON a.account_id = t.account_id WHERE cr.type = 'gold' AND t.type = 'loan' AND a.status = 'eligible';\t----- bird -----\tfinancial",
    "195": "SELECT MAX(bond_type) AS most_common_bond_type FROM bond;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(count_o) FROM ( SELECT COUNT(*) AS count_o FROM atom WHERE element = 'o' AND molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_type = '-' ) ) AS subquery;\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN connected.atom_id IN (SELECT molecule_id FROM molecule WHERE label = '+') AND connected.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-') THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic FROM connected;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom WHERE atom.molecule_id IN (SELECT molecule_id FROM molecule WHERE molecule.label = '-');\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = '#3' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT AVG(element = 'c') * 100 AS percentage_carbon FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(DISTINCT bond_id) AS triple_type_bonds FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM atom WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": "SELECT atom_id, element FROM atom WHERE element = 'h';\t----- bird -----\ttoxicology",
    "209": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'cl' AND a2.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT c.atom_id, c.atom_id2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT c.atom_id AS atom1, c.atom_id2 AS atom2, b.bond_type FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = ( SELECT m.molecule_id FROM molecule m WHERE m.label = '-' )\t----- bird -----\ttoxicology",
    "212": "SELECT element, MIN(COUNT(atom.element)) AS least_numerous FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id2 JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY least_numerous ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id2 WHERE c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'Sn'));\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label LIKE'single%' AND a.element IN ('i','s') AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT DISTINCT c.atom_id, c.atom_id2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN atom AS b_atom ON b.molecule_id = b_atom.molecule_id WHERE b_atom.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT m.label, 100.0 * SUM(CASE WHEN a.element = 'f' THEN 1 ELSE 0 END) / COUNT(DISTINCT m.molecule_id) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "219": "SELECT AVG(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100 AS percent FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT element, ranking FROM ( SELECT element, ROW_NUMBER() OVER (ORDER BY element ASC) AS ranking FROM atom ) AS subquery WHERE ranking <= 3 ORDER BY element ASC;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON b.bond_id = 'TR001_2_6' WHERE c2.bond_id = b.bond_id AND a1.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT b.bond_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_2' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR000_2' WHERE c1.atom_id2 = c2.atom_id;\t----- bird -----\ttoxicology",
    "225": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT DIVIDE(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END), COUNT(bond_id)) * 100.0 AS percentage FROM connected WHERE atom_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT AVG(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100 AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT (SELECT COUNT(atom_id) FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE molecule_id = 'TR206' AND element = 'h' ) ) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206' ) AS hydrogen_percentage FROM molecule;\t----- bird -----\ttoxicology",
    "229": "SELECT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000' AND a2.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT m.label, a.element FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = '-' AND (m.label = '-' OR m.label = '') ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR006' AND a2.molecule_id = 'TR006' ORDER BY b.bond_type ASC, b.bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT bond_id) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12') AND atom_id2 IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "237": "SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10'; [EXPLANATION] 1. We start by selecting the label from the molecule table, as it contains the information about whether a molecule is carcinogenic or not. 2. We join the atom table with the molecule table using the molecule_id foreign key, which allows us to link an atom to its corresponding molecule. 3. The WHERE clause filters the results to only include the atom with the specified ID, TR001_10. 4. By executing this SQL statement, we will obtain the label of the molecule that the atom TR001_10 belongs to. Since the question asks for the molecule's label and whether it is carcinogenic or not, we first need to find the molecule that the atom belongs to. Then, we can check the label to determine if the molecule is carcinogenic. In this case, the label '+' signifies a carcinogenic molecule. This solution involves joining tables based on a foreign key relationship and filtering the results using a WHERE clause. The final SQL statement accurately represents the reasoning process and arrives at the desired solution. [/EXPLANATION] [SQL] SELECT m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT m.molecule_id) AS triple_bond_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(DISTINCT connected.atom_id) AS connections_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = '19' AND atom.molecule_id = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(molecule_id) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT m.molecule_id, m.label FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT a.molecule_id, b.bond_type FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(b.bond_id) AS average_bonds FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'i';\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT atom.element FROM atom WHERE atom.atom_id NOT IN ( SELECT atom_id2 FROM connected );\t----- bird -----\ttoxicology",
    "248": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 JOIN atom a2 ON c.bond_id = a2.molecule_id WHERE b.bond_type = '#3' AND a1.molecule_id = 'TR041';\t----- bird -----\ttoxicology",
    "249": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN connected AS c2 ON c.atom_id2 = c2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label LIKE '%carcinogenic%' GROUP BY m.molecule_id, m.label ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT molecule_id FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "252": "SELECT a1.atom_id, b.bond_type FROM atom a1 INNER JOIN bond b ON a1.molecule_id = b.molecule_id WHERE a1.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(bond_id) * 100.0 / (SELECT COUNT(DISTINCT atom_id) FROM connected)) AS percentage_of_bonds FROM connected WHERE atom_id = ( SELECT atom_id FROM connected GROUP BY atom_id ORDER BY COUNT(*) DESC LIMIT 1 ) AND atom_id2 = ( SELECT atom_id FROM connected GROUP BY atom_id ORDER BY COUNT(*) DESC LIMIT 1 );\t----- bird -----\ttoxicology",
    "255": "SELECT ( SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100 FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '-' ) AS carcinogenic_proportion FROM molecule;\t----- bird -----\ttoxicology",
    "256": "SELECT SUM(CASE WHEN element IN ('c', 'h') THEN 1 ELSE 0 END) AS total_carbon_hydrogen_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id = ( SELECT atom_id FROM atom WHERE element ='s' )\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) AS num_elements FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT atom_id, COUNT(DISTINCT atom_id) AS total_atoms FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '#' AND (element = 'p' OR element = 'br') GROUP BY atom_id;\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT atom.molecule_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "263": "SELECT AVG(percent) AS chlorine_percentage FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT m.molecule_id FROM molecule m WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT SUM(1) AS total_carcinogenic_molecules FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.label = '+' AND molecule.molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT t1.bond_type FROM bond AS t1 JOIN connected AS t2 ON t1.bond_id = t2.bond_id JOIN atom AS t3 ON t1.molecule_id = t3.molecule_id JOIN atom AS t4 ON t2.atom_id = t3.atom_id JOIN atom AS t5 ON t2.atom_id2 = t3.atom_id WHERE t3.molecule_id LIKE 'TR%00' AND t3.molecule_id <= 'TR050' GROUP BY t1.bond_type;\t----- bird -----\ttoxicology",
    "268": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) FROM connected WHERE atom_id = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'ca' ) AND atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'ca' )\t----- bird -----\ttoxicology",
    "271": "SELECT b.element FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id ='molecule_id' AND a2.molecule_id ='molecule_id' AND b.bond_id = 'TR001_1_8' AND (a1.element = 'cl' OR a2.element = 'cl') AND (a1.element = 'c' OR a2.element = 'c');\t----- bird -----\ttoxicology",
    "272": "SELECT m.molecule_id FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE a1.element = 'c' AND a2.element = 'c' AND b.bond_type = '#' AND m.label = '-';\t----- bird -----\ttoxicology",
    "273": "SELECT (SELECT COUNT(DISTINCT bond_id) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'cl' AND connected.label = '+') , (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') AS chlorine_percentage FROM ( SELECT atom.molecule_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'cl' AND connected.label = '+' ) AS subquery;\t----- bird -----\ttoxicology",
    "274": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT \"molecule_id\" FROM \"bond\" WHERE \"bond_type\" ='= ';\t----- bird -----\ttoxicology",
    "276": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b1 ON a1.atom_id = b1.atom_id JOIN molecule m ON b1.molecule_id = m.molecule_id JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b2 ON c.bond_id = b2.bond_id JOIN molecule m2 ON b2.molecule_id = m2.molecule_id WHERE b2.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT a.element FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE b.bond_id = 'TR000_1_2'\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON c1.atom_id = molecule.molecule_id JOIN connected AS c2 ON c2.atom_id = c1.atom_id2 JOIN bond AS b ON b.bond_id = c1.bond_id WHERE b.bond_type = '-' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT \"label\" FROM \"connected\" WHERE \"atom_id\" = 'TR001_10' AND \"atom_id2\" = 'TR001_11' AND \"bond_id\" = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, CASE WHEN m.label = '+' THEN 'Carcinogenic' WHEN m.label = '-' THEN 'Non-Carcinogenic' ELSE 'Unknown' END AS carcinogenicity FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT m.label, a.element, COUNT(*) AS count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' AND a.atom_id = SUBSTR(a.atom_id, 7, 1) GROUP BY m.label, a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT CASE WHEN label = '+' THEN 'Carcinogenic' WHEN label = '-' THEN 'Non-Carcinogenic' END AS ratio, label FROM molecule WHERE molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = m.molecule_id JOIN connected c2 ON c2.atom_id2 = m.molecule_id JOIN bond b ON b.bond_id = c1.bond_id WHERE c1.atom_id = (SELECT atom_id FROM atom WHERE element = 'ca') AND b.bond_type = 'carcinogenic';\t----- bird -----\ttoxicology",
    "284": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_10_11');\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT m.molecule_id) AS total_molecules, COUNT(*) FILTER (WHERE b.bond_type = '#') AS triple_bonds, (COUNT(*) FILTER (WHERE b.bond_type = '#') * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage_triple_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "287": "SELECT percentage FROM ( SELECT molecule_id, COUNT(CASE WHEN bond_type ='='THEN 1 END) AS bond_count FROM bond WHERE molecule_id = 'TR047' GROUP BY molecule_id ) AS subquery CROSS JOIN molecule WHERE molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM connected WHERE atom_id = 'TR001_1' AND atom_id2 = 'TR001_1' );\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT molecule_id FROM molecule WHERE label = 'TR151' AND EXISTS ( SELECT 1 FROM atom WHERE element = 'cl' );\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR010' OR m.label = 'TR020' OR m.label = 'TR030' OR m.label = 'TR040' OR m.label = 'TR050' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT \"molecule_id\" FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id JOIN molecule AS n ON a2.molecule_id = n.molecule_id WHERE m.label = '+' AND n.label ='='AND a1.element = 'C' AND a2.element = 'C';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT atom_id FROM atom WHERE element = 'TR000_1';\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id WHERE a.element = 'c' AND c1.bond_id NOT IN ( SELECT b.bond_id FROM bond AS b JOIN connected AS c3 ON b.molecule_id = c3.atom_id JOIN connected AS c4 ON c3.atom_id2 = c4.atom_id WHERE b.bond_type = 'C-C' );\t----- bird -----\ttoxicology",
    "298": "SELECT AVG(percentage) AS avg_carcinogenic_hydrogen_molecules FROM ( SELECT m.molecule_id, COUNT(CASE WHEN c.label = '+\" AND e.element = 'h' THEN 1 END) AS carcinogenic_hydrogen_count, COUNT(b.bond_id) AS total_bonds FROM molecule m JOIN connected c ON m.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom e ON b.atom_id = e.atom_id GROUP BY m.molecule_id ) subquery WHERE total_bonds > 0;\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a2 ON b.molecule_id = a2.molecule_id WHERE a2.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.atom_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(bond_id) AS double_bonds FROM connected WHERE atom_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o','s', 'n', 'p', 'na', 'br', 'f', 'i','sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, a1.molecule_id, a1.atom_id, a2.atom_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id JOIN connected c2 ON b.bond_id = c2.bond_id JOIN atom a3 ON c2.atom_id = a3.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.atom_id = b.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT bond_id) AS bond_count FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT DISTINCT atom.atom_id, COUNT(DISTINCT bond.bond_type) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR346' GROUP BY atom.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON c1.atom_id = molecule.molecule_id JOIN connected AS c2 ON c2.atom_id2 = c1.atom_id JOIN bond ON bond.bond_id = c1.bond_id WHERE bond.bond_type ='= ' AND EXISTS ( SELECT 1 FROM molecule JOIN connected AS c3 ON c3.atom_id = molecule.molecule_id JOIN connected AS c4 ON c4.atom_id2 = c3.atom_id JOIN bond ON bond.bond_id = c3.bond_id WHERE bond.bond_type ='= ' AND c3.atom_id2 = c4.atom_id );\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN connected c ON m.molecule_id = c.atom_id LEFT JOIN connected cc ON m.molecule_id = c.atom_id2 LEFT JOIN bond b ON cc.bond_id = b.bond_id LEFT JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element!='s' AND b.bond_type!='= ';\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label FROM molecule JOIN connected AS c1 ON c1.atom_id = 'TR001_2_4' JOIN connected AS c2 ON c2.atom_id2 = 'TR001_2_4' JOIN bond ON bond.bond_id = c1.bond_id WHERE c1.atom_id = 'TR001_2_4' AND c2.atom_id2 = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT atom.atom_id) AS num_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(DISTINCT bond_id) AS single_bonds_count FROM connected\t----- bird -----\ttoxicology",
    "315": "SELECT molecule_id FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'c' AND NOT EXISTS ( SELECT 1 FROM connected c2 JOIN atom a2 ON c2.atom_id = a2.atom_id JOIN bond b2 ON c2.bond_id = b2.bond_id WHERE a2.element = 'c' AND b2.bond_type = 'carcinogenic' );\t----- bird -----\ttoxicology",
    "317": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule WHERE label = '+')) AS percentage FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'Cl';\t----- bird -----\ttoxicology",
    "318": "SELECT m.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) AS element_count FROM connected WHERE bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id JOIN connected c2 ON b.bond_id = c2.bond_id WHERE c1.atom_id = 'TR000_1' AND c2.atom_id = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT m.molecule_id, m.label FROM atom AS a1 JOIN atom AS a2 ON a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4' JOIN connected AS c ON a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 JOIN molecule AS m ON c.bond_id = m.molecule_id WHERE a1.atom_id = 'TR000_2' AND a2.atom_id = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = 'TR000_1' JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT CASE WHEN molecule.label = '+' THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS carcinogenicity FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id2 JOIN atom ON connected.bond_id = bond.bond_id JOIN bond ON bond.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT m.label, 100.0 * COUNT(b.bond_type = '-') / COUNT(DISTINCT b.bond_id) AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id GROUP BY m.label;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT atom.molecule_id, atom.element, bond.bond_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element ='s' AND bond.bond_type ='= ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT c.atom_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT m.molecule_id, MAX(COUNT(a.atom_id)) AS max_atoms FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "330": "SELECT AVG(percentage) AS carcinogenic_triple_bonded_hydrogen_percentage FROM ( SELECT m.molecule_id, COUNT(c.atom_id) AS carcinogenic_count, COUNT(b.bond_id) AS triple_bonded_count FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' AND b.bond_type = '#' AND m.element = 'h' GROUP BY m.molecule_id ) AS subquery;\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN ( SELECT molecule_id FROM molecule WHERE label BETWEEN 'TR004' AND 'TR010' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR008' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '-' AND a.atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule JOIN connected AS c1 ON c1.atom_id = molecule.molecule_id JOIN connected AS c2 ON c2.atom_id2 = molecule.molecule_id JOIN bond AS b ON b.bond_id = c1.bond_id AND b.bond_type = '#'; WHERE b.bond_type = '#'; AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a1.atom_id FROM bond b JOIN atom a1 ON b.molecule_id = a1.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id = a2.atom_id WHERE b.bond_type ='= ' AND a1.element = 'c' AND a2.element = 'c';\t----- bird -----\ttoxicology",
    "339": "SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT c.id, c.name, c.borderColor, c.cardKingdomFoilId, c.cardKingdomId FROM cards c WHERE c.borderColor = 'borderless' AND c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT cards.name, MAX(cards.faceConvertedManaCost) AS max_converted_mana FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'English' GROUP BY cards.name ORDER BY max_converted_mana DESC;\t----- bird -----\tcard_games",
    "343": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid;\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.rarity, c.printings, c.status, s.format FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.rarity ='mythic' AND l.status = 'Banned' AND s.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT l.format, l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.type = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.unknown_power = '*' AND c.is_commander_play_format = 'true' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Stephen Daniele' AND f.flavorText IS NOT NULL AND l.status = 'Non-Degraded' AND r.text IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT rulings.date, rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s' )\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, CASE WHEN c.isPromo = 1 THEN 'Promotional Printing' ELSE '' END AS card_type FROM cards c JOIN ( SELECT uuid, COUNT(*) AS ruling_count FROM rulings GROUP BY uuid ) r ON c.uuid = r.uuid JOIN foreign_data fd ON c.uuid = fd.uuid WHERE r.ruling_count = (SELECT MAX(ruling_count) FROM (SELECT ruling_count FROM rulings GROUP BY uuid));\t----- bird -----\tcard_games",
    "350": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Annul numbered 29';\t----- bird -----\tcard_games",
    "351": "SELECT cards.* FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND foreign_data.name IS NOT NULL;\t----- bird -----\tcard_games",
    "352": "SELECT AVG(percentage) * 100 AS Chinese_Simplified_percentage FROM ( SELECT language, SUM(id) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified' GROUP BY language ) AS subquery\t----- bird -----\tcard_games",
    "353": "SELECT s.name, SUM(ct.total_cards) AS total_cards FROM sets s JOIN set_translations tl ON s.code = tl.setCode JOIN foreign_data fd ON tl.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid JOIN cards c ON l.uuid = c.uuid WHERE tl.language = 'Italian' GROUP BY s.name;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*/';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT \"borderColor\" FROM \"cards\" WHERE \"name\" = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT set.language FROM foreign_data AS fd JOIN sets AS s ON fd.multiverseid = s.code WHERE s.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid JOIN cards ON foreign_data.uuid = cards.uuid WHERE legalities.status ='restricted' AND cards.text = 'has text boxes';\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text AS card_ruling FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities AS l JOIN cards AS c ON l.uuid = c.uuid WHERE l.status ='restricted' AND c.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT name FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT format FROM legalities WHERE uuid = ( SELECT uuid FROM foreign_data WHERE flavorText = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": "SELECT DISTINCT artist FROM cards WHERE asciiName = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT (COUNT(*) FILTER (WHERE borderColor = 'borderless')) * 100.0 / COUNT(*) AS percentage_borderless FROM cards;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards WHERE flavorText LIKE '%German%' AND isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE borderColor = 'borderless' AND language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT ( SELECT COUNT(id) FROM foreign_data WHERE language = 'French' AND isStorySpotlight = 1 ) AS total_french_story_spotlight_cards , ( SELECT COUNT(id) FROM foreign_data WHERE isStorySpotlight = 1 ) AS total_story_spotlight_cards , ( SELECT COUNT(id) FROM foreign_data WHERE isStorySpotlight = 0 ) AS total_non_story_spotlight_cards , ( SELECT COUNT(id) FROM foreign_data WHERE language = 'French' AND isStorySpotlight = 0 ) AS total_french_non_story_spotlight_cards * 100 AS story_spotlight_percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT c.id FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavorText IS NOT NULL AND c.convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT c.name, c.layout FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.keywords LIKE '%flying%' LIMIT 10;\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND type NOT LIKE 'Angel%';\t----- bird -----\tcard_games",
    "378": "SELECT c1.id FROM cards c1 JOIN foreign_data fd ON c1.uuid = fd.uuid JOIN cards c2 ON fd.name = c2.faceName WHERE c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL AND c2.faceName IS NOT NULL;\t----- bird -----\tcard_games",
    "379": "SELECT cards.id FROM cards WHERE cards.duelDeck = 'duel deck a';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE flavorText LIKE '%Chinese Simplified%';\t----- bird -----\tcard_games",
    "382": "SELECT c.name, c.availability, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.availability = 'paper' AND f.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND (foreign_data.flavorText LIKE '%white border%' OR foreign_data.flavorText LIKE '%white border%') AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT DISTINCT c.uuid, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT c.uuid FROM cards c WHERE c.name = 'Beacon of Immortality' );\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(c.id) AS num_cards, l.status FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT c.name, c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'OGW' GROUP BY c.name, c.colorIdentity;\t----- bird -----\tcard_games",
    "388": "SELECT DISTINCT f.flavorText, st.language FROM foreign_data f JOIN set_translations st ON f.uuid = st.setCode WHERE st.setCode = '10E' AND CAST(SUBSTRING(f.text, PATINDEX('%[convertedManaCost%]', f.text) + LEN('[convertedManaCost%]') AS VARCHAR(10)) AS REAL) = 5;\t----- bird -----\tcard_games",
    "389": "SELECT DISTINCT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.type LIKE '%Creature - Elf%';\t----- bird -----\tcard_games",
    "390": "SELECT c.colorIdentity, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.id, c.name, c.colors, f.language, f.flavorText FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL AND cardKingdomFoilId <> '0') AND (power = '0' OR power IS NULL);\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE foreign_data.flavorText LIKE '%UDON%' AND sets.isForeignOnly = 1 AND sets.releaseDate <= DATE('now', '-3 years') AND rulings.text LIKE '%mtgo%' AND cards.hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND frameVersion = '1993' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE c.layout = 'normal' AND c.frameVersion = 2003 AND c.borderColor = 'black' AND (s.isOnlineOnly = 0 OR s.isOnlineOnly = 1) AND (l.status = 'available' AND (l.format ='mtgo' OR l.format = 'paper'));\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'Spanish' AND fd.type = 'flavorText' JOIN cards c ON fd.uuid = c.uuid WHERE tr.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' AND isOnlineOnly = 1)) AS percentage FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT SUM(id) AS story_spotlight_count, COUNT(id) AS story_spotlight_without_text_count, (SUM(id) - COUNT(id)) / SUM(id) AS percentage FROM cards WHERE isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT f.name, COUNT(c.uuid) AS card_count, (COUNT(c.uuid) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE f.language = 'Spanish' GROUP BY f.name ORDER BY card_count DESC;\t----- bird -----\tcard_games",
    "404": "SELECT fl.language, st.setCode FROM foreign_data fl JOIN set_translations st ON fl.uuid = st.setCode WHERE st.setCode IN ( SELECT s.code FROM sets s WHERE s.baseSetSize = 309 );\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.id) AS num_sets FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Portuguese (Brasil)' AND sets.baseSetSize > 0;\t----- bird -----\tcard_games",
    "406": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT c.type FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE fd.language = 'German' AND l.status = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text = 'This is a triggered mana ability.' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c LEFT JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText = 'Erica Yang';\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE asciiName = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.type = 'Creature' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(DISTINCT c.uuid) FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'print' AND r.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT set_translations.language FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.block = 'Ravnica' AND sets.baseSetSize = 180;\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(hasContentWarning = 0) / COUNT(*)) * 100 AS percentage FROM cards WHERE format = 'commander' AND status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT ( COUNT(CASE WHEN flavorText IS NOT NULL AND flavorText LIKE '%French%' AND power IS NULL AND power = '*' THEN 1 ELSE 0 END) / COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 ELSE 0 END) ) * 100 AS percentage FROM cards\t----- bird -----\tcard_games",
    "417": "SELECT ( SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese' AND type = 'expansion' ) * 100 AS percentage FROM sets;\t----- bird -----\tcard_games",
    "418": "SELECT \"availability\" FROM \"cards\" WHERE \"artist\" = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT TOP 3 c.name, c.power, c.promoTypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.power IS NULL AND c.promoTypes = 'arenaleague' ORDER BY c.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.multiverseid = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT c1.id AS kingdom_foil_id, c2.id AS kingdom_card_id, c1.name, c2.name FROM cards AS c1 JOIN cards AS c2 ON c1.id = c2.id WHERE (c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL) AND (c2.cardKingdomId IS NOT NULL AND c2.cardKingdomFoilId IS NOT NULL) ORDER BY c1.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS proportion FROM cards\t----- bird -----\tcard_games",
    "425": "SELECT c.number FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.mcmId = s.id WHERE c.faceName IS NULL AND c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' GROUP BY c.number HAVING COUNT(DISTINCT s.code) = 1;\t----- bird -----\tcard_games",
    "426": "SELECT s.name FROM sets s WHERE s.mtgoCode IS NULL OR s.mtgoCode = '' ORDER BY s.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT flavorText FROM foreign_data JOIN sets ON sets.code = foreign_data.multiverseid WHERE sets.name = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, t.translation FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT SET_TRANSLATIONS.language, SETS.type FROM SETS JOIN SET_TRANSLATIONS ON SETS.code = SET_TRANSLATIONS.setCode WHERE SETS.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, c.name FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN cards c ON s.id = c.uuid WHERE s.block = 'Shadowmoor' AND t.language = 'Italian' ORDER BY c.name LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id, s.name, s.isForeignOnly, s.isFoilOnly, st.language, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.isForeignOnly = 1 AND s.isFoilOnly = 1 AND st.language = 'Japanese' AND st.translation IS NOT NULL ORDER BY s.releaseDate DESC LIMIT 1;\t----- bird -----\tcard_games",
    "432": "SELECT s.name AS russian_set, MAX(s.baseSetSize) AS total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.language = 'Russian' GROUP BY s.name ORDER BY total_cards DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT ( SELECT COUNT(1) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'zh-CN' AND isOnlineOnly = 1 ) AS matching_cards_count , ( SELECT COUNT(1) FROM cards ) AS total_cards_count , ( SELECT ( SELECT COUNT(1) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'zh-CN' AND isOnlineOnly = 1 ) / ( SELECT COUNT(1) FROM cards ) ) * 100 AS percentage\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT s.id) FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Japanese' AND (s.mtgoCode IS NULL OR s.mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT c.id, c.borderColor FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavorText LIKE '%border with black%';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE colorIdentity = 'black' AND borderColor = 'white' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT st.language FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT foreign_data.language FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "441": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT s.baseSetSize, s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "443": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND tr.translation = 'Expansion';\t----- bird -----\tcard_games",
    "444": "SELECT t.name, t.type FROM cards t JOIN foreign_data f ON t.uuid = f.uuid WHERE f.flavorText = 'boros watermark' LIMIT 1;\t----- bird -----\tcard_games",
    "445": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie' LIMIT 1;\t----- bird -----\tcard_games",
    "446": "SELECT (COUNT(*) FILTER (WHERE convertedManaCost = 10)) * 100.0 / (SELECT COUNT(*) FROM cards WHERE sets.code = 'ABYSSAL_HORROR') AS percentage FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'ABYSSAL_HORROR';\t----- bird -----\tcard_games",
    "447": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'Expansion' AND s.type = 'Commander';\t----- bird -----\tcard_games",
    "448": "SELECT f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'abzan' LIMIT 1;\t----- bird -----\tcard_games",
    "449": "SELECT f.language, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT converted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.borderColor = 'white' AND c.power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.isPromo = 1 AND f.side IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT types FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%' GROUP BY artist;\t----- bird -----\tcard_games",
    "459": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name, convertedManaCost FROM cards WHERE convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards WHERE frameVersion = '2003' ) AND isOnlineOnly = 0 LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT name FROM sets WHERE code = (SELECT code FROM foreign_data WHERE flavorText = 'Ancestor''s Chosen' AND language = 'Italian');\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT set_translations.language) AS translation_count FROM foreign_data JOIN sets ON foreign_data.multiverseid = sets.id JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation LIKE '%Angel of Mercy%';\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT name FROM cards WHERE setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT * FROM \"cards\" WHERE \"name\" LIKE '%Ancestor''s Chosen%' AND \"language\" = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%Adam Rex%' AND uuid IN ( SELECT uuid FROM cards WHERE setCode = 'Hauptset Zehnte Edition' );\t----- bird -----\tcard_games",
    "467": "SELECT SUM(baseSetSize) AS total_cards FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT SET_TRANSLATIONS.translation FROM SET_TRANSLATIONS JOIN SETS ON SET_TRANSLATIONS.setCode = SETS.code WHERE SETS.name = 'Eighth Edition' AND SET_TRANSLATIONS.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT * FROM sets WHERE name = 'Angel of Mercy' AND (mtgoCode IS NOT NULL OR mtgoCode IS NULL);\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT \"name\" FROM \"sets\" WHERE \"code\" = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE language = 'Italian' AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT c.name, MAX(c.convertedManaCost) AS highest_cost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' GROUP BY c.name ORDER BY highest_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy'));\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE number = 4 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT tcgplayerProductId , name , type , languages , flavorText , legalities , setCode , releaseDate , rulings FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid WHERE name = 'Ancestor''s Chosen' AND languages LIKE '%German%';\t----- bird -----\tcard_games",
    "483": "SELECT c.name, r.text FROM cards c JOIN rulings r ON c.uuid = r.uuid JOIN foreign_data f ON c.uuid = f.uuid WHERE c.setCode = 'Coldsnap' AND f.language = 'Italian';\t----- bird -----\tcard_games",
    "484": "SELECT f.flavorText, s.name AS set_name, c.convertedManaCost FROM foreign_data f JOIN sets s ON f.multiverseid = s.id JOIN cards c ON s.code = c.setCode WHERE s.name = 'Coldsnap' AND f.language = 'Italian' AND c.convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards WHERE s.code = c.setCode ) ORDER BY c.convertedManaCost DESC;\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE text = 'Reminisce';\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 AND name = 'Coldsnap' THEN 1 ELSE 0 END) / SUM(convertedManaCost = 7)) * 100 FROM cards\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_incredibly_powerful FROM cards WHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "488": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.translation = '2017/7/14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT s.mcmId FROM sets s WHERE s.code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND s.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT \"type\" AS expansion_type FROM \"sets\" WHERE \"code\" = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.id, c.name, r.text AS ruling_text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Jim Pavelec%' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid WHERE s.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) AS num_cards FROM cards WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'French' AND fd.uuid = tr.translation WHERE s.name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT translations.language) AS translations_count FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'Japanese' AND fd.uuid = tr.translation WHERE s.name = 'Fellwar Stone';\t----- bird -----\tcard_games",
    "501": "SELECT MAX(convertedManaCost) AS highest_converted_cost FROM cards WHERE setCode = 'Journey into Nyx Hero''s Path';\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'English' AND fd.text = 'Flavor Text' JOIN cards c ON fd.uuid = c.uuid WHERE c.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.converted_mana_cost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT flavorText FROM foreign_data WHERE name = 'Mirrodin' AND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT s.name, s.isNonFoilOnly, (COUNT(CASE WHEN s.language = 'Japanese' AND s.isNonFoilOnly = 1 THEN 1 END) / COUNT(CASE WHEN s.language = 'Japanese' THEN 1 END)) * 100 AS percentage_non_foil_only FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.language = 'Japanese' GROUP BY s.name, s.isNonFoilOnly ORDER BY s.name;\t----- bird -----\tcard_games",
    "507": "SELECT s.name, COUNT(c.id) AS total_cards, SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_cards, SUM(CASE WHEN c.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) AS brazil_portuguese_cards, (SUM(CASE WHEN c.isOnlineOnly = 1 AND c.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) / SUM(CASE WHEN c.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END)) * 100 AS percentage_online_only FROM sets s JOIN foreign_data f ON s.code = f.multiverseid JOIN cards c ON f.uuid = c.uuid WHERE s.language = 'Portuguese (Brazil)' GROUP BY s.name;\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1;\t----- bird -----\tcard_games",
    "509": "SELECT s.id, s.name, s.baseSetSize FROM sets s JOIN ( SELECT baseSetSize, MAX(baseSetSize) AS max_base_set_size FROM sets GROUP BY baseSetSize ) sub ON s.baseSetSize = sub.max_base_set_size WHERE s.isForeignOnly = 0 AND s.isOnlineOnly = 0 AND s.isNonFoilOnly = 0 AND s.isPartialPreview = 0 ORDER BY s.baseSetSize DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT c.name, c.artist, c.convertedManaCost FROM cards c JOIN ( SELECT name, MAX(convertedManaCost) AS max_cost FROM cards WHERE isMultiface = FALSE GROUP BY name ) max_cost_cards ON c.name = max_cost_cards.name WHERE c.isMultiface = FALSE AND c.convertedManaCost = max_cost_cards.max_cost ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.type = 'Commander' GROUP BY s.id;\t----- bird -----\tcard_games",
    "514": "SELECT c.id, c.name, c.convertedManaCost FROM cards c JOIN ( SELECT set_code, MAX(convertedManaCost) AS max_cost FROM foreign_data f JOIN sets s ON f.multiverseid = s.id WHERE s.format = 'duel' GROUP BY set_code ) subquery ON c.uuid = subquery.set_code ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' AND status = 'legal';\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE types = 'Enchantment' AND rarity = 'rare' AND name = 'Abundance' AND status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT sets.name, cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' GROUP BY sets.name, cards.name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT set_translations.language FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT c.artist, s.name AS set_name, s.block, s.booster, s.code, s.isFoilOnly, s.isForeignOnly, s.isNonFoilOnly, s.isOnlineOnly, s.isPartialPreview, s.keyruneCode, s.mcmId, s.mcmIdExtras, s.mcmName, s.mtgoCode, s.name, s.parentCode, s.releaseDate, s.tcgplayerGroupId, s.totalSetSize, s.type FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON s.code = c.setCode WHERE c.artist = ( SELECT artist FROM cards ORDER BY COUNT(*) ASC LIMIT 1 ) GROUP BY c.artist, s.name, s.block, s.booster, s.code, s.isFoilOnly, s.isForeignOnly, s.isNonFoilOnly, s.isOnlineOnly, s.isPartialPreview, s.keyruneCode, s.mcmId, s.mcmIdExtras, s.mcmName, s.mtgoCode, s.name, s.parentCode, s.releaseDate, s.tcgplayerGroupId, s.totalSetSize, s.type HAVING COUNT(*) = ( SELECT MIN(COUNT(*)) FROM cards ) ORDER BY s.releaseDate;\t----- bird -----\tcard_games",
    "521": "SELECT c.status, c.format FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = '1997' AND fd.flavorText LIKE '%illustrated by D. Alexander Gregory%' AND (l.hasContentWarning = 1 OR l.status = 'Wizards of the Coast') AND c.format = 'legacy';\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND edhrecRank = 1;\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS annual_avg_sets, SETLOCAL(common_language) = (SELECT MAX(COUNT(foreign_data.language)) FROM foreign_data) FROM sets INNER JOIN foreign_data ON sets.code = foreign_data.multiverseid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.borderColor = 'black' AND fd.language = 'English' AND l.format = 'Arena' AND fd.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status IN ('banned','restricted') AND c.format = 'oldschool';\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.set_code = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = fd.language WHERE tr.translation LIKE '%Korean%' AND tr.language NOT LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameStyles.frameVersion, cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE foreign_data.flavorText LIKE '%Allen Williams%' AND sets.type = 'Card' AND frames.frameVersion = set_translations.translation; SELECT name FROM cards WHERE rulings.uuid = cards.uuid AND rulings.text LIKE '%Banned%';\t----- bird -----\tcard_games",
    "531": "SELECT MAX(Reputation) AS max_reputation FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "532": "SELECT users.DisplayName FROM users WHERE YEAR(users.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT u.DisplayName FROM users u JOIN ( SELECT DisplayName, MAX(Views) AS MaxViews FROM users GROUP BY DisplayName ) v ON u.DisplayName = v.DisplayName WHERE u.Views = v.MaxViews;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT u.Id) AS users_with_both_ups_and_downs FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId IN (1, -1) -- Upvotes and Downvotes GROUP BY u.Id HAVING COUNT(v.Id) > 100 AND COUNT(v.Id) > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE views > 10 AND year(votes.CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts AS subp WHERE subp.OwnerUserId = p.OwnerUserId);\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvote is represented by 1 GROUP BY u.Id ORDER BY MAX(v.UpVotes) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CommentCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answers_count FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = p.Id) AND v.UserId = (SELECT u2.Id FROM users u2 WHERE u2.Id = (SELECT LastEditorUserId FROM posts WHERE Id = p.Id));\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT `Location` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Title` = 'Eliciting priors from experts');\t----- bird -----\tcodebase_community",
    "549": "SELECT t.TagName, u.DisplayName FROM tags AS t JOIN users AS u ON t.ExcerptPostId = u.Id WHERE t.TagName = 'bayesian' LIMIT 1;\t----- bird -----\tcodebase_community",
    "550": "SELECT tags.TagName, posts.Body FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE tags.Count = (SELECT MAX(tags.Count) FROM tags) LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(DISTINCT \"badges\".\"Id\") AS \"badge_count\" FROM \"badges\" WHERE \"badges\".\"UserId\" = (SELECT \"Id\" FROM \"users\" WHERE \"users\".\"DisplayName\" = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie' AND YEAR(b.Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(Views) AS average_badges_for_viewers_over_200 FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE users.Views > 200 GROUP BY users.Id;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN users.Age > 65 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(CreationDate) AS max_creation_date FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE OwnerUserId IN (SELECT Id FROM badges));\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN votes v ON c.Id = v.PostId WHERE v.VoteTypeId = 2 -- Assuming upvote has a type ID of 2 GROUP BY p.Title HAVING MAX(c.Score) = (SELECT MAX(c2.Score) FROM comments c2 WHERE c2.PostId = p.Id);\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS comment_count FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(fav_count) FROM posts WHERE Id = (SELECT Id FROM comments WHERE Score = -1 AND Text = 'comment_text' AND CreationDate = '2014-04-23 20:29:39');\t----- bird -----\tcodebase_community",
    "564": "SELECT c.Text FROM posts JOIN comments c ON posts.Id = c.PostId WHERE posts.ParentId = 107829;\t----- bird -----\tcodebase_community",
    "565": "SELECT t.PostHistoryTypeId, t.PostId, t.RevisionGUID, t.CreationDate, t.UserId, t.UserDisplayName FROM postHistory AS t JOIN comments AS c ON t.PostId = c.PostId WHERE c.UserId = 23853 AND t.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(DISTINCT p.Id) AS num_owned_posts FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(votes.VoteTypeId) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT \"Name\" FROM \"badges\" INNER JOIN \"users\" ON \"badges\".\"UserId\" = \"users\".\"Id\" WHERE \"users\".\"DisplayName\" = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(posts.Id) AS post_count, COUNT(votes.Id) AS vote_count FROM users AS u JOIN posts ON u.Id = posts.OwnerUserId JOIN votes ON u.Id = votes.UserId WHERE u.Id = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT SUM(ViewCount) AS total_views FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT c.Text FROM comments c JOIN votes v ON c.Id = v.PostId JOIN posts p ON v.PostId = p.Id WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Score of 17');\t----- bird -----\tcodebase_community",
    "574": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE b.Name = 'Badges' AND p.Title = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT Id FROM users WHERE DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT comments.Text FROM comments JOIN users ON comments.UserId = users.Id JOIN posts ON comments.PostId = posts.Id WHERE users.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Necromancer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT v.PostId) >= 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName AS Editor FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts p JOIN badges b ON p.OwnerUserId = b.Id JOIN users u ON b.Id = u.Id WHERE u.DisplayName = 'Vebjorn Ljosa'\t----- bird -----\tcodebase_community",
    "583": "SELECT u.WebsiteUrl, SUM(v.VoteTypeId * is_null(p.Score)) AS TotalScore FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Yevgeny' GROUP BY u.WebsiteUrl\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Id, c.Score, c.Text, u.Id AS user_id, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.PostId = ( SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?' );\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) AS total_bounty_amount FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.Title LIKE '%data%' AND users.AccountId = (SELECT Id FROM users WHERE DisplayName = 'YourUsername');\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE b.Name = 'variance' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT posts.Title, posts.Comment, AVG(posts.ViewCount) AS AverageViewCount FROM posts JOIN post_tags ON posts.Id = post_tags.PostId JOIN tags ON post_tags.TagId = tags.Id WHERE tags.TagName = 'humor' GROUP BY posts.Title, posts.Comment;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(comments.Id) FROM comments WHERE comments.UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT u.Id, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 -- Assuming upvotes have a specific type ID GROUP BY u.Id, u.Reputation ORDER BY MAX(Reputation) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(views) AS lowest_views FROM users WHERE id = (SELECT MIN(id) FROM users);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT users.Id) AS \"Number_of_users\" FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND YEAR(votes.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT u.Id) AS user_count FROM users u JOIN badges b ON u.Id = b.UserId GROUP BY u.Id HAVING COUNT(b.Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id JOIN posts ON badges.PostId = posts.Id JOIN postHistory ON posts.Id = postHistory.PostId JOIN postLinks ON posts.Id = postLinks.PostId JOIN comments ON posts.Id = comments.PostId JOIN comments ON comments.PostId = comments.PostId WHERE users.Location = 'New York' AND badges.Name IN ('Supporter', 'Teachers');\t----- bird -----\tcodebase_community",
    "594": "SELECT u.Reputation, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName, p.Title FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN ( SELECT PostId, MAX(CreationDate) AS MaxCreationDate FROM postHistory GROUP BY PostId ) max_ph ON ph.PostId = max_ph.PostId AND ph.CreationDate = max_ph.MaxCreationDate WHERE u.Views >= 1000 GROUP BY u.Id, u.DisplayName, p.Title HAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.DisplayName, u.Id AS UserBadge, COUNT(c.Id) AS CommentCount FROM users u JOIN comments c ON u.Id = c.UserId GROUP BY u.Id ORDER BY CommentCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT b.Id) FROM users AS u JOIN badges AS b ON u.Id = b.UserId WHERE u.Location = 'India' AND b.Name = 'teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT ( ( SELECT COUNT(Name) FROM badges WHERE Year(Date) = 2010 AND Name = 'Student' ) / ( SELECT COUNT(Name) FROM badges ) ) * 100 AS percentage_difference FROM ( SELECT ( SELECT COUNT(Name) FROM badges WHERE Year(Date) = 2010 AND Name = 'Student' ) - ( SELECT COUNT(Name) FROM badges WHERE Year(Date) = 2011 AND Name = 'Student' ) AS popularity ) AS subquery;\t----- bird -----\tcodebase_community",
    "599": "SELECT COUNT(DISTINCT c.UserId) AS unique_commenters FROM postHistory ph JOIN ( SELECT Id FROM posts WHERE Id = 3720 ) p ON ph.PostId = p.Id JOIN comments c ON ph.Id = c.PostId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Title, p.ViewCount FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN postLinks rl ON pl.RelatedPostId = rl.PostId WHERE rl.RelatedPostId = 61217 LIMIT 1;\t----- bird -----\tcodebase_community",
    "601": "SELECT comments.Score, postHistory.PostHistoryTypeId FROM comments JOIN postHistory ON comments.PostId = postHistory.PostId JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT b.Id AS post_id, u.Id AS user_id FROM posts AS b JOIN users AS u ON b.OwnerUserId = u.Id WHERE b.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount) FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Id = 686 AND YEAR(posts.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(ups) AS average_up_votes, AVG(age) AS average_user_age FROM users WHERE id IN ( SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(*) > 10 )\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges AS b JOIN posts AS p ON b.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE p.CreaionDate = '2010-07-19 19:39:08.0' AND v.VoteTypeId = 20 AND b.Name NOT LIKE 'Moderator%' GROUP BY b.Name HAVING COUNT(DISTINCT v.PostId) = 1;\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60 AND UserDisplayName IS NOT NULL;\t----- bird -----\tcodebase_community",
    "608": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:25:47.0' AND p.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'YourUsername');\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(posts.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.VoteTypeId = 10 AND posts.OwnerUserId = posts.Id;\t----- bird -----\tcodebase_community",
    "610": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN badges AS b ON p.OwnerUserId = b.Id WHERE v.VoteTypeId = 1 -- Upvote GROUP BY u.DisplayName ORDER BY MAX(u.Reputation) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "611": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = '7/19/2010 7:39:08 PM' AND b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT b.Date FROM users AS u JOIN badges AS b ON u.Id = b.UserId WHERE u.Location = 'Rochester, NY';\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT users.Id) AS total_teachers, COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_teachers FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT AVG(CASE WHEN badges.Name = 'Organizer' AND users.Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) * 100 AS teenager_percentage FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id JOIN posts ON votes.PostId = posts.Id WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Id, u.Age, u.Location, b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Location = 'Vienna, Austria' GROUP BY u.Id, u.Age, u.Location, b.Name HAVING COUNT(DISTINCT b.Id) >= 1;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT u.Id) AS adult_supporters FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Supporter' AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(views) AS total_views FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = '7/19/2010 7:39:08 PM' AND badges.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "621": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id JOIN votes AS v ON v.PostId = b.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users) AND v.VoteTypeId = 1;\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT u.Id) AS elders_with_supporter_badge FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId JOIN badges sb ON v.VoteTypeId = sb.Id WHERE sb.Name = 'Supporter';\t----- bird -----\tcodebase_community",
    "624": "SELECT users.DisplayName FROM users WHERE users.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT \"CreationDate\" FROM \"votes\";\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.DisplayName, MAX(u.Views) AS highest_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.DisplayName ORDER BY highest_views DESC;\t----- bird -----\tcodebase_community",
    "629": "SELECT DIVIDE(COUNT(Id), COUNT(Id)) FROM votes WHERE YEAR(CreationDate) IN (2010, 2011);\t----- bird -----\tcodebase_community",
    "630": "SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS v WHERE v.UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id AS PostId FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName ='slashnick' GROUP BY p.Id ORDER BY MAX(p.AnswerCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(p.ViewCount) AS higher_popularity FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder');\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT p.Id) AS post_count FROM posts p WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker');\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t.TagName FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM users WHERE DisplayName = 'Community')) AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) - SUM(ViewCount) FROM posts WHERE DisplayName = 'Mornington' AND DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT users.Id) AS commentator_users_in_2014 FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON posts.Id = votes.PostId JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'commentator' AND YEAR(posts.CreaionDate) = 2014;\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(DISTINCT posts.Id) AS num_posts_created_on_21st_july_2010 FROM posts WHERE posts.CreaionDate BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT u.DisplayName, u.Age FROM users u JOIN ( SELECT u.Id, MAX(u.Views) AS max_views FROM users u GROUP BY u.Id ) v ON u.Id = v.Id WHERE u.Views = v.max_views;\t----- bird -----\tcodebase_community",
    "644": "SELECT p.last_edit_date, p.last_edit_user_id FROM posts p JOIN posts_tags pt ON p.Id = pt.post_id JOIN tags t ON pt.tag_id = t.id WHERE t.TagName = 'Detecting a given face in a database of facial images' LIMIT 1;\t----- bird -----\tcodebase_community",
    "645": "SELECT SUM(Score) AS negative_comments_count FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, u1.DisplayName AS Commenter1, u2.DisplayName AS Commenter2 FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u1 ON c.UserId = u1.Id JOIN users u2 ON c.UserId = u2.Id WHERE c.Score > 60;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN posts p ON b.Id = p.OwnerUserId JOIN users u ON p.OwnerUserId = u.Id WHERE u.Location LIKE '%North Pole%' AND p.CreaionDate >= '2011-01-01' AND p.CreaionDate < '2012-01-01' AND b.Id IN ( SELECT b2.Id FROM badges b2 JOIN comments c ON b2.Id = c.PostId JOIN posts p2 ON b2.Id = p2.OwnerUserId WHERE c.Score = 1 AND p2.CreaionDate >= '2011-01-01' AND p2.CreaionDate < '2012-01-01' );\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT p.Id AS PostId, ph.Id AS HistoryId, ph.RevisionGUID, ph.CreationDate, u.Id AS UserId, u.DisplayName AS LastEditorDisplayName FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON ph.UserId = u.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' ORDER BY ph.CreationDate DESC;\t----- bird -----\tcodebase_community",
    "650": "SELECT users.DisplayName, users.LastAccessDate, users.Location FROM users JOIN votes ON users.Id = votes.UserId WHERE votes.PostId IN (SELECT Id FROM badges WHERE Name = 'Outliers') ORDER BY users.LastAccessDate DESC;\t----- bird -----\tcodebase_community",
    "651": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'How to tell if something happened in a data set which monitors a value over time' LIMIT 1;\t----- bird -----\tcodebase_community",
    "652": "SELECT p.PostId, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.UserId WHERE u.DisplayName = 'Samuel' AND EXTRACT(YEAR FROM p.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount = (SELECT MAX(ViewCount) FROM posts)\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN tags t ON p.Id = t.ExcerptPostId WHERE t.TagName = 'hypothesis-testing';\t----- bird -----\tcodebase_community",
    "655": "SELECT p.Title, ph.PostHistoryTypeId, pl.LinkTypeId FROM posts AS p JOIN postHistory AS ph ON p.Id = ph.PostId JOIN postLinks AS pl ON p.Id = pl.PostId WHERE p.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE p.ParentId IS NOT NULL AND v.VoteTypeId = 1 -- Assuming upvote has ID 1 GROUP BY p.ParentId ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 AND v.BountyAmount = (SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8) ORDER BY u.Reputation DESC;\t----- bird -----\tcodebase_community",
    "658": "SELECT Title, ViewCount FROM posts ORDER BY ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT tags.Id) FROM tags JOIN ( SELECT Id, COUNT(*) AS post_count FROM posts WHERE PostTypeId = (SELECT Id FROM tags WHERE TagName = 'post') GROUP BY Id ) AS subquery ON tags.Id = subquery.Id WHERE subquery.post_count BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT u.Id FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 2 -- Assuming '2' represents 'Favorite' vote GROUP BY u.Id ORDER BY MAX(v.FavoriteCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT users.Id AS user_id, users.Reputation AS user_age, MAX(votes.VoteTypeId) AS max_reputation FROM users JOIN votes ON users.Id = votes.UserId GROUP BY users.Id HAVING max_reputation = (SELECT MAX(VoteTypeId) FROM votes);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Age) AS youngest_user_id FROM users WHERE Age = (SELECT MIN(Age) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(score) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE CreaionDate = '2010-07-19');\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(monthly_links) AS average_monthly_links FROM ( SELECT YEAR(CreationDate) AS year, MONTH(CreationDate) AS month, COUNT(Id) AS num_links, SUM(AnswerCount) AS answer_count FROM postLinks WHERE YEAR(CreationDate) = 2010 AND AnswerCount <= 2 GROUP BY year, month ) AS subquery\t----- bird -----\tcodebase_community",
    "666": "SELECT MAX(posts.FavoriteCount) AS max_value_post_id FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.UserId = 1465;\t----- bird -----\tcodebase_community",
    "667": "SELECT t.Title FROM posts AS p JOIN postLinks AS l ON p.Id = l.PostId JOIN posts AS t ON l.RelatedPostId = t.Id WHERE l.CreationDate = (SELECT MIN(CreationDate) FROM postLinks) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users AS u JOIN ( SELECT UserId, COUNT(Name) AS BadgeCount FROM badges GROUP BY UserId ) AS sub ON u.Id = sub.UserId WHERE sub.BadgeCount = ( SELECT MAX(BadgeCount) FROM ( SELECT UserId, COUNT(Name) AS BadgeCount FROM badges GROUP BY UserId ) AS sub2 )\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) AS first_vote_date FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(posts.CreaionDate) AS first_post_date FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(users.Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' GROUP BY u.Id ORDER BY MIN(v.CreationDate) ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN postHistory ON posts.Id = postHistory.PostId WHERE users.Location = 'United Kingdom' AND postHistory.RevisionGUID LIKE '%4%';\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(votes.PostId) AS average_posts_voted FROM votes JOIN users ON votes.UserId = users.Id JOIN posts ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MAX(Age) FROM users)\t----- bird -----\tcodebase_community",
    "674": "SELECT u.DisplayName FROM users AS u WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON posts.OwnerUserId = users.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Reputation > 2000 AND posts.Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.VoteTypeId = 2 AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT p.Id, p.Title, p.CreaionDate, u.Id AS UserId, u.DisplayName AS UserName FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id AS post_id, p.Title AS post_title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId JOIN users voter ON v.UserId = voter.Id WHERE voter.Id = ( SELECT u.Id FROM users u WHERE u.DisplayName = 'HighestScorer' LIMIT 1 ) ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN postHistory AS ph ON p.Id = ph.PostId WHERE ph.CreationDate >= '2011-01-01' AND ph.CreationDate < '2012-01-01' AND p.ViewCount > 20000 GROUP BY u.DisplayName HAVING COUNT(DISTINCT p.Id) > 0;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(posts.Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE posts.CreationDate LIKE '%2011%')) AS percentage FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation > 1000 AND YEAR(posts.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "684": "SELECT AVG(Age) AS percentage FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "SELECT p.ViewCount FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE p.Title = 'Computer Game Datasets' LIMIT 1;\t----- bird -----\tcodebase_community",
    "686": "SELECT AVG(ViewCount) AS avg_view_count FROM posts;\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.PostId = p.Id JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming upvote has the highest score GROUP BY p.Id HAVING MAX(v.Score) = ( SELECT MAX(Score) FROM votes WHERE PostId = p.Id )\t----- bird -----\tcodebase_community",
    "688": "SELECT p.Id, p.Title, p.ViewCount, p.CommentCount FROM posts p JOIN votes v ON p.Id = v.PostId JOIN users u ON v.UserId = u.Id WHERE p.ViewCount > 35000 AND u.Id!= v.UserId GROUP BY p.Id, p.Title, p.ViewCount, p.CommentCount HAVING SUM(u.UpVotes) = 0 AND SUM(u.DownVotes) = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Id = 183 GROUP BY u.Id HAVING MAX(v.CreationDate) = v.CreationDate ORDER BY u.DisplayName, u.Location LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, b.Date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' ORDER BY b.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MAX(stats_badges.Date) - MIN(stats_badges.CreationDate) AS time_taken_for_badge FROM stats_badges JOIN users ON stats_badges.UserId = users.Id JOIN posts ON posts.OwnerUserId = stats_badges.UserId JOIN votes ON votes.PostId = posts.Id JOIN badges ON posts.Id = badges.Id WHERE users.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community",
    "693": "SELECT u.Id, COUNT(p.Id) AS post_count, COUNT(c.Id) AS comment_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId WHERE u.CreationDate = (SELECT MAX(u2.CreationDate) FROM users u2) GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text AS CommentText, u.DisplayName AS UserDisplayName FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE EXISTS ( SELECT 1 FROM tags WHERE tags.TagName = 'careers' AND posts.Id = tags.ExcerptPostId );\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.UserId) AS total_comments FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT MAX(CreationDate) AS IrishStat_Account_Creation_Date FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT MAX(CASE WHEN score > 50 THEN 1 ELSE 0 END) * 100.0 AS percentage FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(posts.Id) FROM posts WHERE posts.Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, SUM(v.UpVotes) AS UpVoteCount FROM users u JOIN votes v ON u.Id = v.UserId JOIN comments c ON v.PostId = c.PostId WHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "706": "SELECT Text FROM comments WHERE PostId = ( SELECT Id FROM posts WHERE Title LIKE '%linear regression%' );\t----- bird -----\tcodebase_community",
    "707": "SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150;\t----- bird -----\tcodebase_community",
    "708": "SELECT u.DisplayName, u.Age, u.CreationDate FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 AND v.CreationDate >= '2020-01-01' AND v.CreationDate < '2021-01-01' AND u.WebsiteUrl LIKE '%http://%';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) AS num_posts FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) AS total_users_40 FROM comments AS c1 JOIN comments AS c2 ON c1.PostId = c2.PostId AND c1.UserId = c2.UserId JOIN users ON c1.UserId = users.Id WHERE c1.Score = 0 AND users.Age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT c.Id, c.Score, c.Text, u.Id AS CommentAuthorId, u.DisplayName AS CommentAuthorDisplayName FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'R is also lazy evaluated.' AND v.VoteTypeId = 1;\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Id, c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT comments.UserId, users.DisplayName FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 1 AND 5 AND users.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT comments.UserId) * 100.0 / (SELECT COUNT(DISTINCT comments.UserId) FROM comments WHERE comments.Score BETWEEN 5 AND 10)) AS percentage FROM comments JOIN users ON comments.UserId = users.Id WHERE comments.Score BETWEEN 5 AND 10 AND users.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(DISTINCT sp.id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT s.id) FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN colour AS c ON ha1.attribute_id = c.id JOIN superpower AS sp ON ha1.attribute_id = sp.id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON ha.attribute_id = c.id WHERE c.colour = 'Blue' AND c.id = (SELECT id FROM colour WHERE colour = 'Blond')\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT h.superhero_name, h.height_cm FROM superhero h JOIN publisher p ON h.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY h.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT superhero.eye_colour_id, COUNT(superhero.id) AS popularity FROM superhero JOIN superhero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.publisher_name = 'Marvel Comics' GROUP BY superhero.eye_colour_id ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) AS average_height FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(DISTINCT superhero.id) AS total_superheroes FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.attribute_name = 'Speed' AND s.attribute_value IN ( SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = ( SELECT id FROM superhero WHERE attribute_name = 'Speed' ) );\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT superhero.id) AS gold_eyed_superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "734": "SELECT publisher_name FROM publisher WHERE id = ( SELECT id FROM superhero WHERE superhero_name = 'Blue Beetle II' );\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.colour = 'Blond' AND hero_attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM race WHERE race.id = (SELECT race_id FROM superhero WHERE superhero_name = 'Copycat')\t----- bird -----\tsuperhero",
    "738": "SELECT s.* FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100 AND superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name, COUNT(hp.power_id) AS power_count FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(DISTINCT superhero.id) AS superhero_count, SUM(CASE WHEN superhero_attribute.attribute_id = (SELECT alignment.id FROM alignment WHERE alignment.attribute_name = 'alignment') AND superhero_attribute.attribute_value = 1 THEN 1 ELSE 0 END) AS bad_alignment_count, (SUM(CASE WHEN superhero_attribute.attribute_id = (SELECT alignment.id FROM alignment WHERE alignment.attribute_name = 'alignment') AND superhero_attribute.attribute_value = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_bad_alignment FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.publisher_name = 'Marvel Comics' AND superhero_attribute.attribute_id = (SELECT alignment.id FROM alignment WHERE alignment.attribute_name = 'alignment') AND superhero_attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_superheroes, SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_superheroes FROM superhero WHERE hero_power.hero_id IS NOT NULL; SELECT (SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS difference;\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM superhero WHERE superhero_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour AS eye_colour FROM alignment AS a JOIN hero_attribute AS h ON a.id = h.hero_id JOIN colour AS c ON h.attribute_id = c.id WHERE a.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Male');\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Alien');\t----- bird -----\tsuperhero",
    "753": "SELECT s.full_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.attribute_name = 'No Colour' AND h.attribute_value = 0;\t----- bird -----\tsuperhero",
    "754": "SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id WHERE hp.hero_id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT c.colour FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id WHERE s.height_cm = 185 AND s.race_id = (SELECT id FROM race WHERE race = 'human');\t----- bird -----\tsuperhero",
    "759": "SELECT COLOUR.colour FROM COLOUR JOIN hero_attribute ON hero_attribute.attribute_id = COLOUR.id JOIN hero_power ON hero_power.power_id = hero_attribute.attribute_id JOIN superpower ON superpower.id = hero_power.power_id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.weight_kg = (SELECT MAX(weight_kg) FROM superhero) ORDER BY superhero.weight_kg DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13)) AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13\t----- bird -----\tsuperhero",
    "761": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE s.gender_id = (SELECT id FROM gender WHERE name = 'Male') AND a.attribute_name = 'weight' AND s.alignment_id = (SELECT id FROM alignment WHERE name = 'All Superheroes') AND s.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM alignment)\t----- bird -----\tsuperhero",
    "762": "SELECT sp.power_name FROM ( SELECT hp.power_id, COUNT(sp.power_name) AS power_count FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY hp.power_id ) AS subquery WHERE power_count = ( SELECT MAX(power_count) FROM ( SELECT COUNT(sp.power_name) AS power_count FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id GROUP BY hp.power_id ) AS subquery_max );\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM alignment JOIN hero_power ON alignment.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id JOIN attribute AS a2 ON ha2.attribute_id = a2.id WHERE a1.attribute_name ='strength' AND a2.attribute_name ='strength' GROUP BY s.full_name HAVING MAX(ha1.attribute_value) = MAX(ha2.attribute_value);\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(1) AS average_no_skin_colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE colour.id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(ha.attribute_value) AS max_durability FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN superpower sp ON ha.attribute_id = sp.id WHERE sp.power_name = 'durability' AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM colour JOIN hero_attribute AS ha1 ON colour.id = ha1.colour_id JOIN hero_attribute AS ha2 ON colour.id = ha2.colour_id WHERE ha1.attribute_value = 1 AND ha2.attribute_value = 2;\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT hero_attribute.attribute_value, colour.colour FROM hero_attribute JOIN colour ON hero_attribute.attribute_id = colour.id JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'gender' AND alignment.id = ( SELECT alignment.id FROM alignment WHERE alignment.attribute_name = 'gender' AND alignment.value = 'Female' ) AND superhero.publisher_id = ( SELECT publisher.id FROM publisher WHERE publisher.name = 'Dark Horse Comics' )\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN hero_attribute ha3 ON s.id = ha3.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN colour c2 ON ha2.attribute_id = c2.id JOIN colour c3 ON ha3.attribute_id = c3.id WHERE c1.id = c2.id AND c2.id = c3.id JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "774": "SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT (SUM(CASE WHEN colour = 'Blue' AND gender = 'Female' THEN 1 ELSE 0 END) / COUNT(gender = 'Female')) * 100 FROM superhero\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT power_id) AS power_count FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT s.height_cm FROM alignment AS s JOIN superhero AS h ON s.id = h.eye_colour_id WHERE s.colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN colour c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Black' AND c2.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN hero ON hero_attribute.hero_id = hero.id JOIN alignment ON hero.alignment_id = alignment.id JOIN colour ON alignment.skin_colour_id = colour.id WHERE colour.colour = 'Gold';\t----- bird -----\tsuperhero",
    "784": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "785": "SELECT superhero.superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON attribute.attribute_name = 'race' AND hero_attribute.attribute_value = attribute.id JOIN alignment ON attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = attribute.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(p.publisher_name = 'Marvel Comics')) * 100 AS percent FROM alignment a JOIN superhero s ON a.id = s.alignment_id JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(h.weight_kg) AS average_weight FROM superhero h JOIN hero_attribute h_a ON h.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id WHERE a.attribute_name = 'race' AND h.race_id = ( SELECT id FROM race WHERE race = 'Alien' );\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) - SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN hero_power p ON s.id = p.hero_id JOIN superpower sp ON p.power_id = sp.id WHERE sp.power_name = 'Fastest';\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, h.attribute_value FROM hero_attribute AS h JOIN superhero AS s ON h.hero_id = s.id JOIN attribute AS a ON h.attribute_id = a.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute a1 ON s.id = a1.hero_id JOIN hero_attribute a2 ON s.id = a2.hero_id JOIN colour c1 ON a1.attribute_id = c1.id JOIN colour c2 ON a2.attribute_id = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero sh JOIN publisher p ON sh.publisher_id = p.id WHERE sh.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id NOT IN (SELECT id FROM publisher WHERE publisher_name = '1');\t----- bird -----\tsuperhero",
    "800": "SELECT (COUNT(DISTINCT hero_id) * 100.0 / COUNT(DISTINCT hero_id)) AS blue_eyes_percentage FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.eye_colour_id = 7;\t----- bird -----\tsuperhero",
    "801": "SELECT (SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END)) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT MAX(height_cm) AS tallest_superhero FROM superhero\t----- bird -----\tsuperhero",
    "803": "SELECT \"power_id\" FROM \"superpower\" WHERE \"power_name\" = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "806": "SELECT h.eye_colour FROM superhero h JOIN hero_attribute h_a ON h.id = h_a.hero_id JOIN colour c ON h_a.attribute_id = c.id WHERE h.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188;\t----- bird -----\tsuperhero",
    "809": "SELECT p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT t3.race FROM superhero AS t1 JOIN hero_attribute AS t2 ON t1.id = t2.hero_id JOIN alignment AS t3 ON t2.attribute_id = t3.id WHERE t2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE hero_id = t1.id );\t----- bird -----\tsuperhero",
    "811": "SELECT h.superhero_name, h.full_name, h.gender_id, h.eye_colour_id, h.hair_colour_id, h.skin_colour_id, h.race_id, h.publisher_id, h.alignment_id, s.power_name FROM superhero h JOIN superpower s ON h.hero_id = s.hero_id WHERE h.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN colour AS c ON ha1.attribute_id = c.id WHERE c.colour = 'Blue' AND ha1.attribute_value = 1 GROUP BY s.full_name HAVING COUNT(DISTINCT ha1.attribute_id) = 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT superhero.superhero_name, hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name IN ('strength','speed', 'agility', 'durability','regeneration', 'flight', 'invisibility','shapeshifting', 'telekinesis', 'telepathy') AND h.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT s.race_id, s.race_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id WHERE c.colour = 'blue' AND a.attribute_name = 'hair_colour' AND s.gender_id = (SELECT id FROM gender WHERE gender_name ='male') AND s.alignment_id = (SELECT id FROM alignment WHERE id = ( SELECT id FROM alignment WHERE alignment = 'blue-haired' ));\t----- bird -----\tsuperhero",
    "818": "SELECT (SUM(CASE WHEN h.gender_id = 2 THEN 1 ELSE 0 END) / COUNT(h.alignment_id = 2)) * 100.0 AS percentage_female FROM superhero h WHERE h.alignment_id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT ( SELECT COUNT(*) FROM superhero WHERE (weight_kg = 0 OR weight_kg IS NULL) AND (eye_colour_id = 7 OR eye_colour_id = 1) ) AS difference;\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.superhero_name = 'Hulk' AND alignment.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(DISTINCT superhero.id) AS number_of_green_skinned_villains FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id WHERE colour.colour = 'Green';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT a.attribute_name FROM superhero AS s JOIN hero_attribute AS h ON s.id = h.hero_id JOIN attribute AS a ON h.attribute_id = a.id WHERE a.attribute_name = 'Phoenix Force' LIMIT 1;\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name, MAX(s.weight_kg) AS heaviest_weight FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' GROUP BY s.superhero_name ORDER BY heaviest_weight DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(h.height_cm) AS average_height FROM superhero h JOIN hero_attribute a ON h.id = a.hero_id JOIN attribute attr ON a.attribute_id = attr.id WHERE attr.attribute_name IN ('race', 'non-human') AND h.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "828": "SELECT s.superhero_name, COUNT(*) AS fastest_count FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' AND h.attribute_value = 100 GROUP BY s.superhero_name;\t----- bird -----\tsuperhero",
    "829": "WITH dc_superheroes AS ( SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero WHERE publisher_name = 'DC Comics' GROUP BY publisher_name ), marvel_superheroes AS ( SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero WHERE publisher_name = 'Marvel Comics' GROUP BY publisher_name ) SELECT dc_superheroes.publisher_name AS dc_publisher, marvel_superheroes.publisher_name AS marvel_publisher, dc_superheroes.superhero_count - marvel_superheroes.superhero_count AS difference FROM dc_superheroes JOIN marvel_superheroes ON 1 = 1;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Black Panther' GROUP BY a.attribute_name ORDER BY MIN(ha.attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero JOIN hero_attribute AS ha1 ON superhero.id = ha1.hero_id JOIN colour ON ha1.attribute_id = colour.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment ='male');\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(DISTINCT p.publisher_name)) * 100 AS percentage FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT PERCENTAGE FROM ( SELECT 100.0 * COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.alignment = 'Good' ) AS subquery;\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = superhero.id)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'eye_colour' AND h.attribute_value = 1 AND s.weight_kg < 100 AND s.gender_id = (SELECT id FROM alignment WHERE alignment = 'female');\t----- bird -----\tsuperhero",
    "840": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON hero_attribute.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = ( SELECT id FROM alignment WHERE alignment = 'neutral' );\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id WHERE power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT eye_colour_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.height_cm > (SELECT AVG(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "846": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 20 AND q.position = 5 GROUP BY d.driverId HAVING COUNT(*) = 5;\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 19 AND r.round = 2 ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT circuits.name, races.name AS race_name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location LIKE '%Germany%';\t----- bird -----\tformula_1",
    "851": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE con.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.url LIKE '%2010%' AND (r.circuitId IN (SELECT circuitId FROM circuits WHERE location NOT LIKE '%Asia%' AND location NOT LIKE '%Europe%') OR r.circuitId IS NULL);\t----- bird -----\tformula_1",
    "853": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuitId FROM races WHERE name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE r.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = 'Bruno Senna';\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE r.raceId = 355 AND q.q2_time = '0:01:40';\t----- bird -----\tformula_1",
    "861": "SELECT d.number FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.name = 'Qualifying race No.903' AND q.q3 LIKE '%0:01:54%'\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM drivers WHERE driverId IN ( SELECT driverId FROM lapTimes WHERE raceId = ( SELECT circuitId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007 ) AND time IS NULL );\t----- bird -----\tformula_1",
    "863": "SELECT seasons.url FROM seasons JOIN races ON seasons.year = races.year WHERE races.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT raceId FROM races WHERE date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname FROM drivers JOIN races ON races.raceId = circuits.raceId JOIN lapTimes ON lapTimes.raceId = races.raceId AND lapTimes.driverId = drivers.driverId JOIN pitStops ON pitStops.raceId = races.raceId AND pitStops.driverId = drivers.driverId WHERE races.raceId = 592 AND lapTimes.time IS NOT NULL AND pitStops.time IS NOT NULL AND drivers.dob IS NOT NULL ORDER BY TIMESTAMP(drivers.dob, 'localtime') ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 161 AND lt.time = '0:01:27' LIMIT 1;\t----- bird -----\tformula_1",
    "867": "SELECT c.nationality FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId JOIN results res ON r.raceId = res.raceId AND d.driverId = res.driverId WHERE r.raceId = 933 AND res.position = (SELECT MAX(position) FROM lapTimes lt WHERE lt.raceId = r.raceId AND lt.driverId = d.driverId);\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 9 GROUP BY c.constructorId ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi');\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId AND lt.lap = 2 JOIN drivers d ON lt.driverId = d.driverId WHERE r.name = 'Race No. 347' AND lt.time = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Race No. 45' AND lt.time LIKE '0:01:33%' ORDER BY lt.position;\t----- bird -----\tformula_1",
    "873": "SELECT l.time FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId JOIN races r ON l.raceId = r.raceId WHERE r.raceId = 743 AND d.forename = 'Bruce';\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE r.name = 'San Marino Grand Prix' AND l.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT raceId FROM races WHERE date = '2015-11-29';\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, MIN(d.dob) AS youngest_driver_dob FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.raceId = 872 GROUP BY d.driverId, d.forename, d.surname;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.raceId = 348 ORDER BY l.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM results r JOIN drivers d ON r.driverId = d.driverId WHERE r.fastestLapSpeed = ( SELECT MAX(r2.fastestLapSpeed) FROM results r2 WHERE r2.driverId = r.driverId );\t----- bird -----\tformula_1",
    "880": "SELECT FLOOR(100 * (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853)) AS percentage FROM results WHERE driverId = 11111111111111111111111111111111;\t----- bird -----\tformula_1",
    "881": "SELECT AVG(percentage) AS completion_rate FROM ( SELECT drivers.driverId, drivers.forename, drivers.surname, races.raceId, races.date, results.points, COUNT(results.resultId) AS num_results FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN results ON races.raceId = results.raceId WHERE races.date = '1983-07-16' GROUP BY drivers.driverId, drivers.forename, drivers.surname, races.raceId ) subquery WHERE num_results > 0;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(races.year) FROM races WHERE races.name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT races.* FROM races WHERE races.year = 2005 ORDER BY races.date DESC;\t----- bird -----\tformula_1",
    "884": "SELECT r.name FROM races r JOIN seasons s ON r.year = s.year WHERE (s.year, s.month) = (SELECT MIN(year, month) FROM (SELECT year, month FROM seasons ORDER BY year, month) AS earliest_seasons);\t----- bird -----\tformula_1",
    "885": "SELECT r.name, r.date FROM races r JOIN ( SELECT year, MAX(round) AS max_round FROM races WHERE year = 1999 GROUP BY year ) max_round ON r.year = max_round.year AND r.round = max_round.max_round;\t----- bird -----\tformula_1",
    "886": "SELECT seasons.year, COUNT(races.raceId) AS total_races FROM seasons JOIN races ON seasons.year = races.year GROUP BY seasons.year ORDER BY total_races DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.year = 2017 AND s.year!= 2000;\t----- bird -----\tformula_1",
    "888": "SELECT circuitRef, name, location, country FROM circuits WHERE name = 'Monaco Grand Prix';\t----- bird -----\tformula_1",
    "889": "SELECT s.year FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND r.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) AS number_of_seasons FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname, rs.position FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN results r ON rs.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE e.name = '2010 Singapore Grand Prix' ORDER BY rs.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE seasons.url = 'https://example.com/season';\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, r.points FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN results r ON ds.driverId = r.driverId JOIN races r_chp ON r.raceId = r_chp.raceId WHERE r_chp.name = '2017 Chinese Grand Prix' ORDER BY r.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT l.lap, d.forename, d.surname, r.name FROM lapTimes l JOIN drivers d ON l.driverId = d.driverId JOIN races r ON l.raceId = r.raceId WHERE l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT (COUNT(raceId) * 100.0 / (SELECT COUNT(raceId) FROM races WHERE surname = 'Hamilton' AND position > 1 AND year >= 2010)) AS percentage FROM races WHERE surname = 'Hamilton' AND position > 1 AND year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(results.points) AS max_points FROM drivers JOIN results ON drivers.driverId = results.driverId GROUP BY drivers.driverId HAVING MAX(results.points) = (SELECT MAX(points) FROM results);\t----- bird -----\tformula_1",
    "898": "SELECT MIN(dob) AS youngest_birthdate, forename AS youngest_japanese_driver_name FROM drivers WHERE nationality = 'Japanese';\t----- bird -----\tformula_1",
    "899": "SELECT c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, r.year FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt HAVING COUNT(r.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name AS race_name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name, c.name AS circuit, l.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN locations l ON c.location = l.location WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT r.name FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND lt.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit' AND r.driverId IN (SELECT driverId FROM results WHERE results.status = 'Win');\t----- bird -----\tformula_1",
    "904": "SELECT r.name, s.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN drivers a ON res.number = a.number JOIN constructors c ON d.constructorId = c.constructorId JOIN constructors b ON a.constructorId = b.constructorId WHERE (d.forename = 'Michael' AND d.surname = 'Schumacher') OR (a.name = 'Schumacher') GROUP BY r.name, s.year ORDER BY r.name, s.year DESC LIMIT 1;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) AS average_points FROM results WHERE raceId = (SELECT id FROM races WHERE year = 2000 AND name = 'Eddie Irvine');\t----- bird -----\tformula_1",
    "906": "SELECT min(year) AS first_race FROM races JOIN qualifying ON races.raceId = qualifying.raceId JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "907": "SELECT races.name, seasons.url FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId GROUP BY r.name, s.year, c.location ORDER BY total_laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT 100.0 * COUNT(CASE WHEN circuits.country = 'Germany' AND races.name = 'European Grand Prix' THEN 1 END) / COUNT(races.name = 'European Grand Prix') AS percentage_in_germany FROM circuits JOIN races ON circuits.circuitId = races.circuitId;\t----- bird -----\tformula_1",
    "910": "SELECT location, lat, lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT MAX(lat) AS max_lat FROM circuits WHERE circuitRef IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring');\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT c.country, MAX(c.alt) AS highest_altitude_circuit FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.alt = (SELECT MAX(alt) FROM circuits) GROUP BY c.country ORDER BY highest_altitude_circuit DESC LIMIT 1;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT drivers.country FROM drivers WHERE drivers.dob = (SELECT MIN(drivers.dob) FROM drivers);\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT * FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT forename FROM drivers WHERE forename = 'Lewis';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.circuitRef, circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = '2009 Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT seasons.year FROM races JOIN circuits ON races.circuitId = circuits.circuitId JOIN seasons ON races.year = seasons.year WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location = 'Silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT r.date, r.time FROM races AS r JOIN circuits AS circ ON r.circuitId = circ.circuitId WHERE circ.location = 'Abu Dhabi' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(races.raceId) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location LIKE '%Italy%';\t----- bird -----\tformula_1",
    "924": "SELECT r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.circuitRef = 'Barcelona-Catalunya' OR c.name = 'Barcelona-Catalunya Circuit';\t----- bird -----\tformula_1",
    "925": "SELECT c.name, c.location, c.country, c.lat, c.lng, c.alt FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Spanish Grand Prix 2009';\t----- bird -----\tformula_1",
    "926": "SELECT max(fastestLapTime) FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN results r ON d.driverId = r.driverId AND r.statusId = (SELECT statusId FROM status WHERE status = 'Winner') JOIN races r2 ON lt.raceId = r2.raceId WHERE r2.name = 'Formula_1 race' GROUP BY d.forename, d.surname HAVING max(r.time) = (SELECT MAX(r.time) FROM results WHERE r.driverId = d.driverId);\t----- bird -----\tformula_1",
    "928": "SELECT t1.forename, t1.surname FROM drivers t1 JOIN driverStandings t2 ON t1.driverId = t2.driverId JOIN races t3 ON t2.raceId = t3.raceId WHERE t3.name = 'Canadian Grand Prix' AND t3.year = 2007 ORDER BY t2.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT r.name FROM races AS r JOIN driverStandings AS ds ON r.raceId = ds.raceId JOIN drivers AS d ON ds.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name, MIN(res.rank) AS highest_rank FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) AS fastest_lap_speed FROM results WHERE raceId = (SELECT year FROM seasons WHERE url LIKE '%2009 Spanish Grand Prix%');\t----- bird -----\tformula_1",
    "932": "SELECT r.year FROM drivers d INNER JOIN races r ON d.driverId = r.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder AS final_rank FROM results WHERE driverId = ( SELECT driverId FROM qualifying WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.year = 1989 AND r.name = 'Australian Grand Prix' AND q.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "936": "SELECT MAX(lapTimes.time) AS fastest_lap FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.name = '2008 Australian Grand Prix' AND drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "937": "SELECT r.time FROM races r JOIN results res ON r.raceId = res.raceId WHERE r.name = 'Austrian Grand Prix' AND res.rank = 2;\t----- bird -----\tformula_1",
    "938": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.url = 'https://www.f1official.com/en/grandprix/2008/australia.html';\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.raceId = 10 AND drivers.nationality = 'British';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.year = 2008 AND races.name = 'Chinese Grand Prix' AND lapTimes.time IS NOT NULL;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(ds.points) FROM races r JOIN driverStandings ds ON r.raceId = ds.raceId JOIN drivers d ON ds.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(fastestLapTime) AS average_fastest_lap_time FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT raceId FROM races WHERE year = 2008;\t----- bird -----\tformula_1",
t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.location, circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) AS max_points FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.name, rs.points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN constructorStandings rs ON cr.constructorId = rs.constructorId ORDER BY rs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE r.raceId = 291 AND rr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT results.constructorResultsId) FROM constructors JOIN results ON constructors.constructorId = results.constructorId WHERE constructors.nationality = 'Japanese' AND results.statusId = 1 GROUP BY constructors.constructorId HAVING COUNT(results.constructorResultsId) = 2;\t----- bird -----\tformula_1",
    "952": "SELECT c.constructorRef, c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructorId) FROM constructors WHERE nationality = 'French';\t----- bird -----\tformula_1",
    "954": "SELECT COUNT(DISTINCT drivers.driverId) AS total_japanese_drivers, COUNT(races.raceId) AS total_races_2007_2009, SUM(CASE WHEN races.time IS NOT NULL AND drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 THEN 1 ELSE 0 END) AS japanese_drivers_completion_2007_2009 FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN constructors ON races.constructorId = constructors.constructorId WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 GROUP BY drivers.nationality; This query calculates the total number of Japanese drivers, total races from 2007 to 2009, and the count of races where a Japanese driver completed (time is not null) during that period. It then computes the percentage of races completed by Japanese drivers using the formula provided in the question. Explanation of the query: 1. `SELECT COUNT(DISTINCT drivers.driverId) AS total_japanese_drivers, COUNT(races.raceId) AS total_races_2007_2009, SUM(CASE WHEN races.time IS NOT NULL AND drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 THEN 1 ELSE 0 END) AS japanese_drivers_completion_2007_2009`: - The `SELECT` statement specifies the columns to be included in the result set. - `total_japanese_drivers` counts the distinct Japanese drivers. - `total_races_2007_2009` counts the total number of races from 2007 to 2009. - `japanese_drivers_completion_2007_2009` calculates the count of races where a Japanese driver completed (time is not null) during the specified years. 2. `FROM drivers`: - The `FROM` clause specifies the primary table, `drivers`, for the query. 3. `JOIN races ON drivers.driverId = races.driverId`: - The `JOIN` clause combines rows from the `drivers` and `races` tables based on the common `driverId` column. 4. `JOIN constructors ON races.constructorId = constructors.constructorId`: - Another `JOIN` combines rows from the `races` and `constructors` tables based on the common `constructorId` column. 5. `WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009`: - The `WHERE` clause filters the rows to include only Japanese drivers and races from 2007 to 2009. 6. `GROUP BY drivers.nationality`: - The `GROUP BY` clause groups the results by the `nationality` column, enabling aggregation functions to be applied to each group. 7. The final calculation uses the `SUM` and `CASE` functions to count the races where a Japanese driver completed (time is not null) during the specified years and then computes the percentage of races completed by Japanese drivers. This query provides the desired race completion percentage for Japanese drivers from 2007 to 2009.\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(s.timeInSeconds) AS average_time FROM races r JOIN results s ON r.raceId = s.raceId JOIN drivers d ON s.driverId = d.driverId JOIN constructors c ON s.constructorId = c.constructorId WHERE d.forename = 'Champion' AND r.year < 1975 GROUP BY r.year\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year > 1975 AND ds.position = 2;\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT d.driverId) FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE d.nationality = 'Italian' AND q.number IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId WHERE l.time = ( SELECT MAX(time) FROM lapTimes );\t----- bird -----\tformula_1",
    "959": "SELECT r.driverId, r.number, l.lap, l.time, l.milliseconds FROM races r JOIN lapTimes l ON r.raceId = l.raceId WHERE r.year = 2009 AND r.driverId = (SELECT d.driverId FROM drivers d WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND d.nationality = 'GB') ORDER BY l.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = (SELECT circuitId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "961": "SELECT r.name, s.year FROM races r JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%shortest actual finishing time%'\t----- bird -----\tformula_1",
    "962": "SELECT COUNT(DISTINCT drivers.driverId) AS drivers_count, COUNT(races.raceId) AS races_count, SUM(races.laps) AS total_laps, AVG(races.time) AS average_time, MIN(races.time) AS minimum_time, MAX(races.time) AS maximum_time FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.year BETWEEN 2000 AND 2005 AND drivers.year < 1985 AND races.laps > 50\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId WHERE lapTimes.time < '02:00:00' AND drivers.nationality = 'French';\t----- bird -----\tformula_1",
    "964": "SELECT d.driverId, d.forename, d.surname, d.nationality FROM drivers d WHERE d.nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT drivers.driverId, drivers.forename, drivers.surname, drivers.nationality, COUNT(*) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE seasons.url LIKE '%youngest%' AND drivers.nationality = 'Netherlands' GROUP BY drivers.driverId, drivers.forename, drivers.surname, drivers.nationality ORDER BY points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT forename FROM drivers WHERE forename = 'Robert Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND dob = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, r.lap FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.nationality = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND r.time = (SELECT MIN(time) FROM races WHERE driverId = d.driverId) AND r.lap = 1 ORDER BY r.lap ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT d.forename, d.surname, d.dob.year(dob) AS birth_year FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE s.url LIKE 'https://en.wikipedia.org/wiki/German_%28racing_drivers%29%23' AND d.nationality = 'German' ORDER BY birth_year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.year = 1971 AND lt.time = (SELECT MIN(time) FROM lapTimes WHERE lap = 1 AND driverId = d.driverId AND raceId = r.raceId) GROUP BY d.driverId, d.code HAVING COUNT(*) = 1;\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, r.url FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' AND r.lat = (SELECT lat FROM circuits WHERE circuits.location = 'Spain') AND r.lng = (SELECT lng FROM circuits WHERE circuits.location = 'Spain') AND r.time = (SELECT MAX(time) FROM lapTimes l WHERE l.raceId = r.raceId AND l.driverId = d.driverId) GROUP BY d.forename, d.surname, r.name, r.date, r.time, r.url ORDER BY r.time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT races.year FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes) GROUP BY races.year ORDER BY MAX(milliseconds) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT s.year, MAX(lt.time) AS lowest_speed_lap_time FROM seasons s JOIN races r ON s.year = r.year JOIN lapTimes lt ON r.raceId = lt.raceId GROUP BY s.year ORDER BY lowest_speed_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT d.driverId, d.forename, d.surname, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId WHERE l.lap = 1 ORDER BY l.time DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(DISTINCT res.driverId) FROM races r JOIN results res ON r.raceId = res.raceId WHERE r.year BETWEEN 50 AND 100 AND res.statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%Austria%' GROUP BY c.location, c.lat, c.lng HAVING COUNT(DISTINCT r.raceId) = 1;\t----- bird -----\tformula_1",
    "979": "SELECT r.raceId, COUNT(lt.driverId) AS num_finishers FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId GROUP BY r.raceId ORDER BY num_finishers DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.nationality, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 23 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.year FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId JOIN qualifying AS q ON r.raceId = q.raceId WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY r.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN constructorResults ON drivers.driverId = constructorResults.constructorId JOIN status ON constructorResults.status = status.status WHERE drivers.nationality = 'American' AND status.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT c.constructorRef AS constructor_ref, c.nationality AS nationality, MAX(cr.points) AS highest_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId WHERE c.nationality = 'Italian' GROUP BY c.constructorRef, c.nationality\t----- bird -----\tformula_1",
    "984": "SELECT c.constructorRef, c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId GROUP BY c.constructorId, c.constructorRef HAVING SUM(cr.points) > ( SELECT MAX(total_wins) FROM ( SELECT constructorId, SUM(points) AS total_wins FROM constructorResults GROUP BY constructorId ) AS constructor_wins ) LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name, l.time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE d.forename = 'Driver Name' AND d.surname = 'Driver Surname' AND l.position = 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(milliseconds) AS avg_fastest_lap_time FROM ( SELECT lap, time, milliseconds FROM lapTimes WHERE driverId IN ( SELECT driverId FROM ( SELECT driverId, ROW_NUMBER() OVER (ORDER BY SUM(points) DESC) as rn FROM driverStandings WHERE raceId = (SELECT raceId FROM ( SELECT raceId, name FROM races WHERE name = 'United States Grand Prix' AND year = 2006 ) subquery) GROUP BY driverId ) subquery2 WHERE rn <= 10 ) ) subquery;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN pitstops p ON d.driverId = p.driverId JOIN races r ON q.raceId = r.raceId WHERE d.nationality = 'Germany' AND d.dob BETWEEN 1980 AND 1985 GROUP BY d.forename, d.surname ORDER BY avg_pit_stop ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.name, r.date, r.time, rs.position, rs.positionText, rs.wins FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2008 ORDER BY rs.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, r.url FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE r.name = '2009 Singapore Grand Prix' AND rr.points = (SELECT MAX(points) FROM constructorResults);\t----- bird -----\tformula_1",
    "991": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE d.nationality = 'Austrian' AND q.qualifyId BETWEEN 1 AND 3 AND YEAR(q.qualifyId) BETWEEN 1981 AND 1991;\t----- bird -----\tformula_1",
    "992": "SELECT d.forename, d.surname, \"http://en.wikipedia.org/wiki/\" || d.forname || \"_\" || d.surname AS wiki_link, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE s.url LIKE '%Germany%' AND d.nationality = 'German' AND d.dob BETWEEN '1971-01-01' AND '1985-12-31'; ORDER BY d.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT cs.points AS score, cs.name AS constructor_name, cn.nationality AS nationality FROM circuits c JOIN constructors cs ON c.circuitId = cs.constructorRef JOIN drivers d ON cs.constructorId = d.constructorId JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId AND cs.constructorId = cr.constructorId WHERE r.name = 'Monaco Grand Prix' AND YEAR(r.date) BETWEEN 1980 AND 2010 GROUP BY cs.constructorId, cs.name ORDER BY score DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE url LIKE '%Turkish Grand Prix%');\t----- bird -----\tformula_1",
    "996": "SELECT AVG(yearly_races) AS annual_average_races FROM ( SELECT YEAR(races.date) AS year, COUNT(races.raceId) AS yearly_races FROM races WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY YEAR(races.date) ) AS subquery;\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers WHERE forename = (SELECT forename FROM drivers GROUP BY forename ORDER BY COUNT(*) DESC LIMIT 1);\t----- bird -----\tformula_1",
    "998": "SELECT SUM(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Forename of 91st Ranked Driver' AND drivers.surname = 'Surname of 91st Ranked Driver';\t----- bird -----\tformula_1",
    "999": "SELECT r.name, r.date, MAX(lt.time) AS fastest_lap_time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE d.forename = 'Racing Driver' AND d.surname = 'Example' GROUP BY r.name, r.date ORDER BY fastest_lap_time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT c.location +'(' + c.country + ')' AS full_location FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON lt.driverId = q.driverId JOIN races r ON q.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Marina Bay Street Circuit' AND r.year = 2008 AND lt.lap = 3 AND q.position = 1 ORDER BY d.forename, d.surname LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename, d.surname, c.nationality, r.name FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "1003": "SELECT dr.driverId, dr.forename, dr.surname, SUM(lt.milliseconds) AS accidents_count FROM races r JOIN laptimes lt ON r.raceId = lt.raceId JOIN drivers dr ON lt.driverId = dr.driverId WHERE r.name = 'Canadian Grand Prix' GROUP BY dr.driverId, dr.forename, dr.surname ORDER BY accidents_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results rs ON r.raceId = rs.raceId AND d.driverId = rs.driverId WHERE r.year = (SELECT MIN(year) FROM races) GROUP BY d.forename, d.surname HAVING wins > 0;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pit_stop_time FROM pitstops WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons ORDER BY year DESC LIMIT 1)));\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "1007": "SELECT driverId, MAX(duration) AS longest_pit_stop_time FROM pitStops WHERE driverId = (SELECT driverId FROM qualifying WHERE driverId = 42) GROUP BY driverId HAVING MAX(duration) IS NOT NULL;\t----- bird -----\tformula_1",
    "1008": "SELECT l.lap AS lap_number FROM laptimes AS l JOIN pitstops AS ps ON l.driverId = ps.driverId JOIN qualifying AS q ON l.driverId = q.driverId JOIN drivers AS d ON q.driverId = d.driverId JOIN races AS r ON l.raceId = r.raceId WHERE r.name = '2011 Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1009": "SELECT drivers.driverId, pitStops.stop, pitStops.lap, pitStops.time, pitStops.duration, pitStops.milliseconds FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId JOIN ( SELECT raceId FROM races WHERE year = 2011 AND name = 'Australian Grand Prix' ) AS race_2011_australian_grand_prix ON pitStops.raceId = race_2011_australian_grand_prix.raceId;\t----- bird -----\tformula_1",
    "1010": "SELECT l.lap FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes l ON d.driverId = l.driverId JOIN status st ON r.statusId = st.statusId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND st.status = 'Lap Record';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races r2 ON r.raceId = r2.raceId WHERE r2.year = (SELECT MIN(year) FROM seasons) AND r.time LIKE '%:%%.%%m%' AND r.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId) ORDER BY d.forename, d.surname LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId JOIN drivers ON races.raceId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND lapTimes.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = races.raceId AND driverId = drivers.driverId) GROUP BY circuits.name ORDER BY circuits.name;\t----- bird -----\tformula_1",
    "1013": "SELECT MAX(time) AS lap_record FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit');\t----- bird -----\tformula_1",
    "1014": "SELECT c.name, r.name AS race, r.date, lt.time, lt.milliseconds FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1015": "SELECT r.name AS race_name, s.year AS season_year, r.date AS race_date FROM races r JOIN seasons s ON r.year = s.year WHERE r.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit') AND r.statusId = (SELECT statusId FROM status WHERE name = 'Lap Record');\t----- bird -----\tformula_1",
    "1016": "SELECT pit_stops.duration FROM races JOIN pit_stops ON races.raceId = pit_stops.raceId JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = 'Austrian Grand Prix Circuit' AND drivers.forename = 'Driver Name' AND results.position = 'Lap Record';\t----- bird -----\tformula_1",
    "1017": "SELECT c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId AND lt.lap = 1 JOIN results res ON lt.driverId = res.driverId AND res.position = 1 WHERE res.time = 1.29488 GROUP BY c.circuitId, c.location HAVING MAX(lt.milliseconds) = (SELECT MAX(milliseconds) FROM lapTimes WHERE raceId = r.raceId AND lap = 1);\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pitStops.milliseconds) FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player WHERE player_name = (SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player));\t----- bird -----\teuropean_football_2",
    "1022": "SELECT p.player_api_id, p.preferred_foot FROM Player_Attributes p JOIN ( SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) ) low_potential ON p.player_api_id = low_potential.player_api_id WHERE p.preferred_foot = 'attacking';\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND ( SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = Player_Attributes.player_api_id ) = 'attacking';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT p.player_api_id FROM Player_Attributes AS p JOIN ( SELECT player_api_id, MAX(crossing) AS max_crossing FROM Player_Attributes GROUP BY player_api_id ) AS q ON p.player_api_id = q.player_api_id ORDER BY max_crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name, MAX(home_team_goal + away_team_goal) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE season = '2015/2016' GROUP BY l.id ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT ht.team_long_name, COUNT(m.home_team_goal) AS losses FROM Match m JOIN Team ht ON m.home_team_api_id = ht.team_api_id WHERE m.season = '2015/2016' GROUP BY ht.team_long_name ORDER BY losses ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT p.player_name, p.penalties FROM Player_Attributes p JOIN ( SELECT player_api_id, MAX(penalties) AS max_penalties FROM Player_Attributes GROUP BY player_api_id ) max_penalties ON p.player_api_id = max_penalties.player_api_id LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Team.team_long_name FROM Team JOIN Match ON Team.team_api_id = Match.away_team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2010/2011' AND Match.stage = 1 -- Assuming home games are stage 1 AND Match.goal = '1' -- Assuming away team won if the match ended with a 1-0 score GROUP BY Team.team_long_name HAVING MAX(MATCH_COUNT) > 0 -- Assuming MATCH_COUNT is a hypothetical column counting the number of times the away team won\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t.team_long_name, MAX(ta.buildUpPlaySpeed) AS top_build_up_play_speed FROM Team t JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id GROUP BY t.team_long_name LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name AS league_name, MAX(m.draws) AS max_draws FROM Match m JOIN Team t1 ON m.home_team_api_id = t1.team_api_id JOIN Team t2 ON m.away_team_api_id = t2.team_api_id JOIN League l ON t1.country_id = l.id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY max_draws DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT P.player_name, P.birthday, P.height, P.weight, P.age FROM Player AS P JOIN Team AS T ON P.team_api_id = T.team_api_id JOIN Match AS M ON P.home_player_1 = M.home_player_1 OR P.away_player_1 = M.away_player_1 WHERE T.country_id = (SELECT id FROM Country WHERE name = 'England') AND M.date BETWEEN '2013-01-01' AND '2015-12-31' AND P.sprint_speed > 97;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT MAX(MATCH.country_id) AS league_id_with_highest_matches, COUNT(MATCH.league_id) AS matches_played FROM Match GROUP BY MATCH.country_id ORDER BY matches_played DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id, overall_rating FROM Player_Attributes WHERE date LIKE '2010%' GROUP BY player_api_id HAVING overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%')\t----- bird -----\teuropean_football_2",
    "1035": "SELECT t.team_fifa_api_id FROM Team_Attributes t JOIN Team ts ON t.team_fifa_api_id = ts.team_fifa_api_id WHERE t.buildUpPlaySpeed > 50 AND t.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team_Attributes AS T1 JOIN Player_Attributes AS P1 ON T1.home_player_1 = P1.player_api_id WHERE T1.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes) AND STRFTIME('%Y', T1.date) = '2012'\t----- bird -----\teuropean_football_2",
    "1037": "SELECT COUNT(player_fifa_api_id) AS left_foot_players, COUNT(player_api_id) AS total_players, (COUNT(player_fifa_api_id) * 100.0 / COUNT(player_api_id)) AS percentage_left_foot FROM Player_Attributes WHERE preferred_foot = 'left' AND YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals_made FROM League l JOIN Match m ON l.id = m.league_id GROUP BY l.name ORDER BY total_goals_made ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_api_id = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name, AVG(h.heading_accuracy) AS average_heading_accuracy FROM Player p JOIN Player_Attributes h ON p.player_api_id = h.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY average_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name, COUNT(p.player_api_id) AS chance_creation_count, AVG(p.chance_creation_passing) AS average_chance_creation_passing FROM Team_Attributes t JOIN Player_Attributes p ON t.team_fifa_api_id = p.team_fifa_api_id WHERE t.buildUpPlayDribblingClass = 'Normal' AND t.date BETWEEN '2014-01-01 00:00:00' AND '2014-01-31 00:00:00' GROUP BY t.team_long_name HAVING COUNT(p.player_api_id) > 0 AND COUNT(p.player_api_id) < ALL (SELECT COUNT(p2.player_api_id) FROM Player_Attributes p2 WHERE p2.team_fifa_api_id = t.team_fifa_api_id AND p2.date BETWEEN '2014-01-01 00:00:00' AND '2014-01-31 00:00:00' AND p2.chance_creation_passing > AVG(p.chance_creation_passing)) ORDER BY chance_creation_passing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT DISTINCT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND (m.home_team_goal > m.away_team_goal OR m.home_team_goal = m.away_team_goal) GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name, player_api_id FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT TA.buildUpPlayPositioningClass FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_api_id WHERE T.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = ( SELECT player_api_id FROM Team WHERE team_long_name = 'FC Basel' ) AND date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT \"overall_rating\" FROM \"Player_Attributes\" WHERE \"player_fifa_api_id\" = (SELECT \"player_fifa_api_id\" FROM \"Player\" WHERE \"player_name\" = 'Gabriel Tamas' AND \"year\" = 2011);\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE country_id IN (SELECT id FROM Country WHERE name = 'Scotland Premier League') AND season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON pa.team_fifa_api_id = t.team_fifa_api_id JOIN Match m ON pa.home_player_api_id = m.home_player_1 OR pa.home_player_api_id = m.home_player_2 JOIN Player_Attributes pa_home ON pa.player_api_id = pa_home.player_api_id JOIN Player p_home ON pa_home.player_api_id = p_home.player_api_id JOIN Team t_home ON pa_home.team_fifa_api_id = t_home.team_fifa_api_id WHERE m.date = (SELECT MIN(match_date) FROM Match) AND t.country_id = (SELECT id FROM Country WHERE name = 'youngest_football_player_country');\t----- bird -----\teuropean_football_2",
    "1051": "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT \"defensive_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT p.player_name, p.birthday FROM Player p JOIN ( SELECT player_fifa_api_id FROM Player_Attributes GROUP BY player_fifa_api_id ORDER BY MAX(overall_rating) DESC LIMIT 1 ) highest_rating ON p.player_fifa_api_id = highest_rating.player_fifa_api_id WHERE p.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes );\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT player_name, height FROM Player ORDER BY height LIMIT 2;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT pa.player_api_id FROM Player_Attributes pa WHERE pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT \"buildUpPlayPassingClass\" FROM \"Team_Attributes\" WHERE \"team_fifa_api_id\" = (SELECT \"team_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'CLB');\t----- bird -----\teuropean_football_2",
    "1067": "SELECT T1.team_short_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', date) >= '2010' AND strftime('%Y', date) <= '2015' AND height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height FROM Player;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT \"Country\".\"name\" FROM \"Country\" INNER JOIN \"League\" ON \"Country\".\"id\" = \"League\".\"country_id\" WHERE \"League\".\"name\" = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT DISTINCT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeed = 31 AND ta.buildUpPlayDribbling = 53 AND ta.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT t1.team_short_name FROM Team t1 JOIN Match m ON t1.team_api_id = m.home_team_api_id JOIN Team_Attributes ta ON t1.team_fifa_api_id = ta.team_fifa_api_id WHERE m.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT pa.player_name, pa.balance FROM Player_Attributes pa JOIN Team t ON pa.home_player_1 = t.team_api_id WHERE pa.potential = 61 AND pa.balance = (SELECT MAX(balance) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control) AS avg_diallo, AVG(ball_control) AS avg_appindangoye) FROM Player_Attributes WHERE player_name = 'Abdou Diallo' AND player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada');\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player_height FROM Player\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT \"Country\".\"name\" FROM \"Country\" JOIN \"League\" ON \"Country\".\"id\" = \"League\".\"country_id\" WHERE \"League\".\"name\" = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_api_id, MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS best_crossing FROM Player_Attributes WHERE player_api_id IN (12345, 67890, 24680);\t----- bird -----\teuropean_football_2",
    "1086": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk');\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes JOIN Team ON Player_Attributes.player_api_id = Team.team_api_id JOIN Match ON Player_Attributes.home_player_api_id = Match.home_player_1 OR Player_Attributes.home_player_api_id = Match.away_player_1 JOIN Player ON Match.home_player_api_id = Player.player_api_id WHERE Player.height > 180 AND Player_Attributes.volley_score > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(DISTINCT Match.id) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Belgium' AND Match.season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT pa.long_passing FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.birthday = ( SELECT MAX(p2.birthday) FROM Player p2 );\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(MATCH.id) FROM MATCH JOIN LEAGUE ON MATCH.league_id = LEAGUE.id JOIN COUNTRY ON LEAGUE.country_id = COUNTRY.id WHERE LEAGUE.name = 'Belgium Jupiler League' AND SUBSTR(MATCH.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(league_name) AS league_with_most_matches FROM League WHERE season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1093": "SELECT STRFTIME('%Y', birthday) AS birth_year, AVG(overall_rating) AS avg_overall_rating FROM Player WHERE STRFTIME('%Y', birthday) < 1986 GROUP BY birth_year\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') - SUBQUERY(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS average_rating FROM Player_Attributes T1 JOIN Player P ON T1.player_api_id = P.player_api_id WHERE P.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes WHERE player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT t.team_long_name, MAX(t.chanceCreationPassing) AS highest_score, t.chanceCreationPassingClass FROM Team_Attributes t JOIN Team te ON t.team_fifa_api_id = te.team_fifa_api_id WHERE te.team_long_name = 'Ajax' GROUP BY t.team_long_name, t.chanceCreationPassingClass\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT id FROM Player WHERE player_name = 'Dorlan Pabon');\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT t1.player_name FROM Player AS t1 JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = 77 AND t2.date LIKE '2016-06-23%' ORDER BY t1.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id AND Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id WHERE Player.player_name = 'Aaron Mooy' AND Player_Attributes.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_name` = 'Kevin Berigaud' AND `date` = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT `buildUpPlaySpeedClass` FROM `Team_Attributes` WHERE `team_fifa_api_id` = (SELECT `id` FROM `Team` WHERE `team_long_name` = 'Willem II');\t----- bird -----\teuropean_football_2",
    "1109": "SELECT TA.buildUpPlayDribblingClass FROM Team_Attributes TA JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_ai_id JOIN League L ON L.country_id = T.country_id WHERE L.team_short_name = 'LEI' AND TA.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT T3.buildUpPlayPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id JOIN Team_Attributes AS T3 ON T1.team_api_id = T3.team_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT `chance_creation_passing_class` FROM `Match` JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` JOIN `Team_Attributes` ON `Team`.`team_fifa_api_id` = `Team_Attributes`.`team_fifa_api_id` AND `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`team_long_name` = 'PEC Zwolle' AND `Match`.`date` = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT Team_Attributes.chanceCreationCrossingClass FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team.team_long_name = 'Hull City' AND Match.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT TA.defenceAggressionClass FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id JOIN Team AS HT ON T.team_long_name = 'Hannover 96' WHERE T.date LIKE '2015-09-10%' AND TA.team_fifa_api_id = HT.team_fifa_api_id;\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT ( ( SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = 'Landon Donovan' AND date = '2013-07-12' ) - ( SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = 'Jordan Bowery' AND date = '2013-07-12' ) ) / ( SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = 'Landon Donovan' AND date = '2013-07-12' ) * 100\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM ( SELECT player_api_id, weight FROM Player_Attributes WHERE id IN ( SELECT id FROM ( SELECT player_api_id FROM Player_Attributes ORDER BY weight DESC LIMIT 10 ) AS subquery ) ) AS subquery_2\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON t.team_api_id = m.away_team_api_id JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE DATE('localtime', m.date) - DATE('localtime', p.birthday) > INTERVAL '34 years';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(*) FROM Match WHERE home_player_1 = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE home_player_name = 'Daan Smith' OR home_player_name = 'Filipe Ferreira';\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match JOIN Player_Attributes ON Match.home_player_1 = Player_Attributes.player_api_id JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.birthday < DATE('now', 'localtime') AND SUBSTRING(Player.birthday, 1, 4) <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT MAX(overall_rating) AS strongest_player_rating FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player JOIN Team_Attributes ON Player.player_api_id = Team_Attributes.team_api_id JOIN Player_Attributes ON Team_Attributes.team_fifa_api_id = Player_Attributes.player_fifa_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.attacking_work_rate = 'high' AND EXISTS ( SELECT 1 FROM Player_Attributes pa_mate JOIN Player p_mate ON pa_mate.player_api_id = p_mate.player_api_id WHERE pa_mate.player_api_id = pa.player_api_id AND pa_mate.attacking_work_rate = 'high' );\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_api_id FROM Player_Attributes WHERE finishing = 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT p.player_name FROM Player AS p JOIN Country AS c ON p.country_id = c.id WHERE c.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT p.player_name, c.name AS country FROM Player_Attributes p JOIN Team_Attributes ta ON p.team_api_id = ta.team_api_id JOIN Country c ON ta.team_fifa_api_id = c.id WHERE p.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT c.name AS country_name, MAX(pa.weight) AS heaviest_average_weight FROM Country c JOIN Team t ON c.id = t.country_id JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id JOIN Player_Attributes pa ON ta.team_fifa_api_id = pa.player_fifa_api_id GROUP BY c.name ORDER BY heaviest_average_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t.team_long_name FROM Team_Attributes AS ta JOIN Team AS t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Slow' GROUP BY t.team_long_name HAVING COUNT(DISTINCT ta.team_fifa_api_id) = ( SELECT COUNT(DISTINCT team_api_id) FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Slow' );\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player WHERE country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT p.player_name FROM Player p JOIN Team_Attributes ta ON p.player_api_id = ta.home_player_X1 JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN League l ON t.country_id = l.id WHERE p.height > 180 AND l.name IN ( SELECT name FROM Country WHERE id IN ( SELECT id FROM Country ORDER BY name ASC LIMIT 3 ) ) ORDER BY p.player_name ASC;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990';\t----- bird -----\teuropean_football_2",
    "1134": "SELECT jumping FROM Player_Attributes WHERE id IN (6, 23) AND player_api_id = (SELECT player_api_id FROM Player WHERE id = 6) AND player_api_id = (SELECT player_api_id FROM Player WHERE id = 23);\t----- bird -----\teuropean_football_2",
    "1135": "SELECT pa.player_api_id, pa.potential FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.preferred_foot = 'right' AND pa.potential IN ( SELECT MIN(potential) AS min_potential FROM Player_Attributes ) ORDER BY pa.potential ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage_with_high_strength_and_stamina FROM Player_Attributes WHERE stamina > 80 AND strength > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT country_id FROM League WHERE name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal + away_team_goal AS final_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League') AND date LIKE '2008-%-24%';\t----- bird -----\teuropean_football_2",
    "1140": "SELECT Player_Attributes.sprint_speed, Player_Attributes.agility, Player_Attributes.acceleration FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND country_id = ( SELECT id FROM Country WHERE name = 'Italy' );\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS max_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands') AND league_id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands'));\t----- bird -----\teuropean_football_2",
    "1144": "SELECT p.player_name, pa.finishing, ta.curve FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id WHERE p.weight = (SELECT MAX(weight) FROM Player) ORDER BY pa.finishing DESC, ta.curve DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT league.name, COUNT(match.id) AS game_count FROM league JOIN match ON league.id = match.league_id GROUP BY league.name ORDER BY game_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T1.team_long_name, MAX(T2.away_team_goal) AS max_goals_scored FROM Team AS T1 JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id GROUP BY T1.team_long_name HAVING MAX(T2.away_team_goal) = MAX(away_team_goal);\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id, MAX(overall_rating) AS max_overall_strength FROM Player_Attributes GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes WHERE height < 180 AND overall_rating > 70)) AS percentage FROM Player_Attributes WHERE height < 180 AND overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT SEX, COUNT(*) AS total_patients, (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 END) / COUNT(*)) * 100 AS male_inpatient_percentage, (COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 END) / COUNT(*)) * 100 AS male_outpatient_percentage FROM Patient GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND year(Birthday) > '1930') AS percentage_female_born_after_1930 FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(DISTINCT p.ID) * 100.0 / (SELECT COUNT(DISTINCT p.ID) FROM Patient p WHERE YEAR(p.Birthday) BETWEEN 1930 AND 1940) AS inpatient_percentage FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.SEX = 'Female' AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT DIVIDE(COUNT(CASE WHEN Examination.Diagnosis = 'SLE' AND Examination.Admission = '+' THEN Examination.ID END) + COUNT(CASE WHEN Examination.Diagnosis = 'SLE' AND Examination.Admission = '-' THEN Examination.ID END), COUNT(CASE WHEN Examination.Diagnosis = 'SLE' THEN Examination.ID END) ) AS outpatient_to_inpatient_ratio FROM Examination WHERE Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Examination WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday FROM Patient WHERE Patient.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) AS age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT P.ID, P.SEX, D.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.First_Date, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.aCL_IgG IS NOT NULL AND E.aCL_IgM IS NOT NULL AND E.ANA IS NOT NULL AND E.ANA_Pattern IS NOT NULL AND E.aCL_IgA IS NOT NULL AND E.Diagnosis LIKE '%thyroid%';\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALB < 3.5 AND Examination.ID IN (SELECT ID FROM Examination WHERE ALB < 3.5);\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_abnormal_tp FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Symptoms LIKE '%total protein%' AND Laboratory.TP < '6.0' OR Laboratory.TP > '8.5' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL_IgG) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE SUBTRACT(year(current_timestamp()), year(Birthday)) >= 50 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Description = '1997-01-01' AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT SUBTRACT(YEAR(First_Date), YEAR(Birthday)) AS age FROM Patient WHERE admission = 'initial arrival' ORDER BY age ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Thrombosis = 1 AND YEAR(e.ExaminationDate) = 1997 AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(age) - MIN(age) AS age_gap FROM Patient WHERE tg >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis, Laboratory.GOT, Laboratory.GPT, Laboratory.LDH, Laboratory.ALP, Laboratory.TP, Laboratory.ALB, Laboratory.UA, Laboratory.UN, Laboratory.CRE, Laboratory.T_BIL, Laboratory.T_CHO, Laboratory.TG, Laboratory.CPK, Laboratory.GLU, Laboratory.WBC, Laboratory.RBC, Laboratory.HGB, Laboratory.HCT, Laboratory.PLT, Laboratory.PT, Laboratory.APTT, Laboratory.FG, Laboratory.PIC, Laboratory.TAT, Laboratory.TAT2, Laboratory.U_PRO, Laboratory.IGG, Laboratory.IGA, Laboratory.IGM, Laboratory.CRP, Laboratory.RA, Laboratory.RF, Laboratory.C3, Laboratory.C4, Laboratory.RNP, Laboratory.SM, Laboratory.SC170, Laboratory.SSA, Laboratory.SSB, Laboratory.CENTROMEA, Laboratory.DNA, Laboratory.DNA_II, Examination.aCL_IgG, Examination.aCL_IgM, Examination.ANA, Examination.ANA_Pattern, Examination.aCL_IgA, Examination.Diagnosis, Examination.KCT, Examination.RVVT, Examination.LAC, Examination.Symptoms, Examination.Thrombosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.Birthday = (SELECT MIN(Birthday) FROM Patient) AND Examination.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT EXTRACT(MONTH FROM Examination.Examination_Date) AS month, COUNT(DISTINCT Patient.ID) AS male_patients_tested FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Examination_Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M' GROUP BY month ORDER BY month;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Patient.Birthday) AS oldest_age, MIN(Laboratory.Date) AS oldest_lab_date FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SJS' GROUP BY Patient.Birthday;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT COUNT(CASE WHEN SEX = 'M' AND UA <= '8.0' THEN 1 END) AS male_count, COUNT(CASE WHEN SEX = 'F' AND UA <= '6.5' THEN 1 END) AS female_count FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE (SEX = 'M' AND UA <= '8.0') OR (SEX = 'F' AND UA <= '6.5');\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'underage' AND Examination.Examination Date BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-BIL >= 2.0\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT(YEAR(CURRENT_DATE), year(Birthday))) AS average_age FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Birthday BETWEEN '1991-10-01' AND '1991-10-30' AND Examination_Date BETWEEN '1999-01-01' AND '1999-12-31';\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN ( SELECT ID, MAX(HGB) AS max_HGB FROM Laboratory GROUP BY ID ) AS MaxHGB ON Examination.ID = MaxHGB.ID WHERE Examination.HGB = MaxHGB.max_HGB ORDER BY Patient.ID LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT aCL_IgG, aCL_IgM, ANA, ANA_Pattern, aCL_IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis FROM Examination WHERE ID = 2927464 AND Examination_Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'AORTITIS' AND e.ID = (SELECT MIN(ID) FROM Examination WHERE Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT aCL_IgM FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'SLE' AND Examination.Examination_Date = '1993/11/12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX, P.Birthday, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.Date = '1992-06-12' AND L.ALT = 9 AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT (EXTRACT(YEAR FROM A.Date) - EXTRACT(YEAR FROM P.Birthday)) AS age FROM Examination AS A JOIN Patient AS P ON A.ID = P.ID WHERE A.UA = '8.4' AND A.Date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) AS total_tests FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First_Date = '1991-06-13' AND Patient.Diagnosis = 'SJS' AND Examination.Examination_Date BETWEEN '1995-01-01' AND '1995-12-31';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT P.Sex, P.Description, P.FirstDate, L.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.ExaminationDate = '1997-01-27' AND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday = '1959-03-01' AND Examination.Examination Date = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT SUBTRACT( SUM( CASE WHEN Examination.Birthday = '1959-02-18' AND MONTH(Examination.Date) = 11 THEN Examination.T-CHO ELSE 0 END ) AS nov_tcho, SUM( CASE WHEN Examination.Birthday = '1959-02-18' AND MONTH(Examination.Date) = 12 THEN Examination.T-CHO ELSE 0 END ) AS dec_tcho ) AS decrease_rate FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Male' AND Patient.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'Behcet' AND e.Examination Date BETWEEN '197-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date BETWEEN '1987-07-06' AND '1996-01-31' AND e.GPT > 30 AND e.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(DISTINCT Patient.ID) AS num_female_patients_born_1964_admitted FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND YEAR(Examination.Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 2 AND Laboratory.ANA = 'S' AND Laboratory.aCL IgM = (SELECT AVG(aCL IgM) FROM Examination) * 1.20;\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT 100.0 * SUM( CASE WHEN Examination.U-PRO > 0 AND Examination.U-PRO < 30 THEN 1 ELSE 0 END) AS patients_with_normal_proteinuria, SUM( CASE WHEN Laboratory.UA < = 6.5 THEN 1 ELSE 0 END) AS patients_with_low_uric_acid FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.U-PRO > 0 AND Examination.U-PRO < 30 AND Laboratory.UA < = 6.5\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT AVG(CASE WHEN SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' AND Diagnosis = 'BEHCET' THEN 1.0 ELSE 0.0 END) * 100 AS percentage FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Admission = '-'; AND l.Date LIKE '1991-10%'; AND l.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination WHERE ANA_Pattern!= 'P' AND (SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31')\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > '2' AND Laboratory.CRE = '1' AND Laboratory.LDH = '123';\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) AS avg_albumin_level FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.Description, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'APS' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Patient WHERE YEAR(Examination.Examination Date) = 1997 AND tp NOT BETWEEN 6 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT DIVIDE(SUM(CASE WHEN symptoms LIKE '%ITP%' THEN 1 ELSE 0 END), SUM(CASE WHEN diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 AS proportion_with_sle FROM Examination WHERE symptoms LIKE '%thrombocytopenia%' AND diagnosis LIKE '%SLE%';\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(DISTINCT sexo = 'F') * 100.0 / COUNT(DISTINCT diagnosis = 'RA')) AS percentage FROM Patient WHERE YEAR(birthday) = 1980 AND diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'Behcet' AND Examination.Admission!= '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(First_Date, Admission) AS time_in_hospital FROM Patient WHERE ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT p.SEX, e.UA FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.ID = 57266 AND (p.SEX = 'M' OR e.UA > 8.0) AND (p.SEX = 'F' OR e.UA > 6.5);\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT Examination.Examination_Date FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.ID = '48473' AND Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.GOT < 60 AND YEAR(e.ExaminationDate) = 1994;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.LAC = 'ALT glutamic pylvic transaminase (GPT) exceed the normal range' AND e.RVVT = 'ALT glutamic pylvic transaminase (GPT) exceed the normal range';\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT p.SEX, p.Birthday, p.Description, e.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.GPT > 60 ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(Laboratory.LDH) AS average_ldh_normal_range FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH < 500 GROUP BY Examination.ID;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT Patient.ID, (YEAR(CURRENT_TIMESTAMP) - YEAR(Patient.Birthday)) AS age FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 100 AND 300 GROUP BY Patient.ID HAVING COUNT(DISTINCT Laboratory.LDH) = 2;\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG < 300 AND Examination.Thrombosis = 0 AND (Patient.Admission = '+') OR (Patient.Admission = '-');\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE DATE('1982-04-01') = p.Birthday\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.TP < 6.0 AND Examination.ID IN ( SELECT ID FROM Examination GROUP BY ID HAVING COUNT(*) > 1 );\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T_BIL, l.T_CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U_PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA_II FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.ALB < 3.5 OR Examination.ALB > 5.5 ORDER BY Patient.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.SEX, Patient.Birthday, Albumin.ALB FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Year(Patient.Birthday) = 1982 AND Albumin.ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') AS percentage_female_ua_above_normal FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS average_UA_index FROM Examination E JOIN Laboratory L ON E.ID = L.ID JOIN Patient P ON E.ID = P.ID WHERE P.SEX = 'M' AND (L.UA < 8.0 OR P.SEX = 'F' AND L.UA < 6.5) GROUP BY E.ID;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT DISTINCT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE d.Diagnosis = 'RA' AND UN < 30;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory lab ON e.ID = lab.ID WHERE p.SEX = 'M' AND lab.CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT SEX, COUNT(*) AS male_count, SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS male_creatinine_over_normal, SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS female_creatinine_over_normal FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CRE > 1.5 GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Highest total bilirubin';\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT P.SEX, GROUP_CONCAT(E.ID) AS Patients WITHIN_RANGE, GROUP_CONCAT(E.ID) AS Patients_NOT_WITHIN_RANGE FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.T-BIL >= 2.0 AND (E.T-BIL >= 2.0 OR E.T-BIL IS NULL) GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, Laboratories.T_CHO FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Birthday = (SELECT MIN(Birthday) FROM Patient) AND Examination.Diagnosis IS NOT NULL AND Laboratory.T_CHO = (SELECT MAX(T_CHO) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT p.SEX, p.Description, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.TG > 300 GROUP BY p.SEX, p.Description, p.Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG > 200 AND Examination.Patient.Birthday <= SUBTRACT(DATE('today'), INTERVAL '50 years');\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT P.ID, P.SEX, P.age FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.GLU >= 180 AND E.T_CHO < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT DISTINCT p.ID, l.GLU FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Description = '1991' AND l.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.WBC < 3.5 OR l.WBC > 9.0 GROUP BY p.SEX ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT p.SEX, p.Birthday, p.Admission, l.RBC FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= DATE('now', '-50 years') AND RBC < 3.5 OR RBC > 6.0;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Examination.ID, Patient.SEX FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY E.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT DISTINCT Examination.ID, (YEAR(CURRENT_DATE) - YEAR(Patient.Birthday)) AS age FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE (HCT >= 52) AND (Examination.ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination GROUP BY ID HAVING COUNT(ID) > 2)));\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS average_HCT_below_normal FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'true' AND PLT < 100; -- Calculate the number of patients with higher than normal range SELECT COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'true' AND PLT > 400; -- Compare the two counts SELECT (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'true' AND PLT < 100) - (COUNT(*) FROM Patient WHERE abnormal_platelet_level = 'true' AND PLT > 400) AS platelet_range_difference;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient WHERE Patient.ID IN ( SELECT Examination.ID FROM Examination WHERE Examination.Examination_Date = '1984' AND Examination.GOT BETWEEN 0 AND 50 AND Examination.GPT BETWEEN 0 AND 50 AND Examination.LDH BETWEEN 0 AND 50 AND Examination.ALP BETWEEN 0 AND 50 AND Examination.TP BETWEEN 100 AND 400 AND Examination.PLT BETWEEN 100 AND 400 ) AND Patient.Birthday < DATE('1984-01-01')\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT SUBSTRING(SEX, 2) AS gender, COUNT(*) AS count, SUM(PT > = 14) AS abnormal_pts, COUNT(PT > = 14 AND SEX = 'F') AS female_abnormal_pts FROM Examination WHERE age > 55 GROUP BY gender HAVING COUNT(PT > = 14) > 0 ORDER BY abnormal_pts DESC;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date >= '1992-01-01' AND e.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.APTT > 45 AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.WBC > 3.5 AND e.WBC < 9.0 AND e.FG <= 150 OR e.FG >= 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Birthday > '1980-01-01' AND Examination.FG < 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.U-PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.U_PRO BETWEEN 0 AND 30 AND l.Diagnosis = 'SLE' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination AS E INNER JOIN Patient ON E.ID = Patient.ID WHERE E.aCL IgG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Patient WHERE IGG > 900 AND IGG < 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Examination e JOIN Laboratory l ON e.ID = l.ID JOIN Patient p ON e.ID = p.ID WHERE l.IGA BETWEEN 80 AND 500 GROUP BY e.ID HAVING MAX(l.IGA) = l.IGA LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgA > 80 AND Examination.aCL IgA < 500 AND Examination.First Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis, COUNT(*) AS frequency FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis ORDER BY frequency DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.CRP = '+' AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(Patient.Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis LIKE '%Ruhematoid%' AND Examination.aCL IgG = 'normal' AND Examination.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Examination.Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Birthday >= '1985-01-01' AND Examination.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RF < 20 AND (YEAR(CURDATE()) - YEAR(Birthday)) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RF < 20 AND e.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Laboratory.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory lab ON e.ID = lab.ID WHERE e.Hematoclit NOT IN (SELECT Hematoclit FROM Patient) AND lab.aCL IgA = (SELECT MAX(aCL IgA) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis LIKE '%APS%' AND Laboratory.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RNP = '-' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP NOT IN ('-', '+-') AND p.SEX = 'Unknown' AND e.Diagnosis = 'Examination';\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.ANA_Pattern = 'normal anti-SM' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "[SQL] SELECT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.aCL IgG IS NOT NULL AND E.aCL IgG > 10 AND E.ANA Pattern!= 'negative' AND E.CRP!= 'negative' AND E.RA!= 'negative' AND E.RF!= 'negative' AND E.C3!= 'negative' AND E.C4!= 'negative' AND E.RNP!= 'negative' AND E.SM!= 'negative' AND E.SM NOT IN ('negative', '0') AND E.Thrombosis = 1 AND E.LAC IN ('Thrombosis', 'Pregnancy', 'Diabetes', 'Malignancy', 'Infection', 'Other') AND E.RVVT IN ('Mitral Stenosis', 'Aortic Stenosis', 'Hypertrophic Cardiomyopathy', 'Other') AND E.KCT IN ('Renal Insufficiency', 'Kidney Stones', 'Other') AND E.Symptoms LIKE '%myalgia%' AND E.Symptoms LIKE '%weakness%' AND E.Symptoms LIKE '%fatigue%' AND E.Symptoms LIKE '%headache%' AND E.Symptoms LIKE '%joint pain%' AND E.Symptoms LIKE '%fever%' AND E.Symptoms LIKE '%weight loss%' AND E.Symptoms LIKE '%dyspnea%' AND E.Symptoms LIKE '%chest pain%' AND E.Symptoms LIKE '%palpitations%' AND E.Symptoms LIKE '%dizziness%' AND E.Symptoms LIKE '%numbness%' AND E.Symptoms LIKE '%tinnitus%' AND E.Symptoms LIKE '%visual disturbance%' AND E.Symptoms LIKE '%seizures%' AND E.Symptoms LIKE '%memory loss%' AND E.Symptoms LIKE '%confusion%' AND E.Symptoms LIKE '%apnea%' AND E.Symptoms LIKE '%orthostatic hypotension%' AND E.Symptoms LIKE '%neuropathy%' AND E.Symptoms LIKE '%peripheral vascular disease%' AND E.Symptoms LIKE '%polycythemia%' AND E.Symptoms LIKE '%polyarthritis%' AND E.Symptoms LIKE '%osteoarthritis%' AND E.Symptoms LIKE '%gout%' AND E.Symptoms LIKE '%pseudogout%' AND E.Symptoms LIKE '%anemia%' AND E.Symptoms LIKE '%thrombocytopenia%' AND E.Symptoms LIKE '%leukopenia%' AND E.Symptoms LIKE '%lymphopenia%' AND E.Symptoms LIKE '%eosinophilia%' AND E.Symptoms LIKE '%basophilia%' AND E.Symptoms LIKE '%monocytosis%' AND E.Symptoms LIKE '%neutrophilia%' AND E.Symptoms LIKE '%metastatic cancer%' AND E.Symptoms LIKE '%hematologic malignancy%' AND E.Symptoms LIKE '%autoimmune disease%' AND E.Symptoms LIKE '%infectious disease%' AND E.Symptoms LIKE '%metabolic disease%' AND E.Symptoms LIKE '%genetic disease%' AND E.Symptoms LIKE '%environmental disease%' AND E.Symptoms LIKE '%occupational disease%' AND E.Symptoms LIKE '%iatrogenic disease%' AND E.Symptoms LIKE '%traumatic injury%' AND E.Symptoms LIKE '%congenital anomaly%' AND E.Symptoms LIKE '%birth defect%' AND E.Symptoms LIKE '%fetal abnormality%' AND E.Symptoms LIKE '%pregnancy complication%' AND E.Symptoms LIKE '%postpartum complication%' AND E.Symptoms LIKE '%menopausal syndrome%' AND E.Symptoms LIKE '%androgen insensitivity%' AND E.Symptoms LIKE '%adrenal insufficiency%' AND E.Symptoms LIKE '%hypothyroidism%' AND E.Symptoms LIKE '%hyperthyroidism%' AND E.Symptoms LIKE '%diabetes mellitus%' AND E.Symptoms LIKE '%insulin resistance%' AND E.Symptoms LIKE '%polycystic ovary syndrome%' AND E.Symptoms LIKE '%hypertension\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.aCL IgG = 'normal' AND Examination.ANA Pattern = 'negative' AND Examination.Sex = 'F' AND (Examination.Symptoms IS NULL OR Examination.Symptoms = '');\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSA' AND Examination.First Date < '2000-01-01';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.First Date, P.Admission, P.Diagnosis FROM Patient P JOIN ( SELECT MIN(First Date) AS Min_First_Date FROM Patient ) PF ON P.First Date = PF.Min_First_Date WHERE SSA IN ('positive', '1');\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSB' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CRP IS NOT NULL AND l.CRP NOT IN ('negative', '0') AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory lab ON e.ID = lab.ID WHERE (lab.CENTROMEA IN ('-', '+-')) AND (lab.SSB IN ('-', '+-')) AND (p.SEX = 'M');\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CRP IS NOT NULL AND l.CRP > 8 AND p.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.CRP IS NULL AND e.DNA < 8;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient WHERE IGG BETWEEN 900 AND 2000 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT ID FROM Laboratory WHERE GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Patient.Birthday) AS youngest_birth_date FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT > 60 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT p.ID, p.SEX, p.Birthday, MAX(l.GPT) AS Highest_GPT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GPT < 60 GROUP BY p.ID, p.Birthday ORDER BY Highest_GPT DESC, p.Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient WHERE GOT < 60 AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(First_Date) FROM Patient JOIN Examination AS e1 ON Patient.ID = e1.ID JOIN Laboratory AS l1 ON e1.ID = l1.ID WHERE l1.LDH = (SELECT MAX(LDH) FROM Laboratory WHERE LDH < 500);\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(First_Date) AS Latest_Data_Recorded FROM ( SELECT ID, First_Date, LDH FROM Examination WHERE ID = ( SELECT ID FROM Examination ORDER BY First_Date DESC LIMIT 1 ) AND LDH >= 500 ) AS Patient_With_Abnormal_LDH;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALP >= 300 AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE E.Diagnosis = 'SJS' AND TP > 6.0 AND TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT E.Examination_Date FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE E.ALB > 3.5 AND E.ALB < 5.5 GROUP BY E.Examination_Date HAVING COUNT(DISTINCT E.ID) = 1 ORDER BY E.Examination_Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.aCL_IgG, e.aCL_IgM, e.aCL_IgA FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.SEX = 'F' AND (SELECT MAX(UA) FROM Laboratory l WHERE l.ID = e.ID) > 6.50\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CRE < 1.5 AND MAX(aCL IgA) = l.aCL IgA GROUP BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.T-BIL > 2.0 AND l.ANA Pattern LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(aCL_IgG) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE ANA = 0 AND MAX(T-BIL) < 2.0 AND Diagnosis = 'patient with high T-BIL';\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID WHERE E.T-CHO >= 250 AND E.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-CHO < 250 AND Laboratory.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT P.Diagnosis FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE L.TG < 200 AND L.TG = (SELECT MAX(TG) FROM Laboratory WHERE TG < 200);\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT e.ID FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 0 AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.aCL IgG > 0.5 AND Examination.KCT = '+' AND Examination.RVVT = '+' AND Examination.LAC = '+' AND Examination.CPK <= 250;\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT MIN(Patient.Birthday) AS OldestPatientBirthday FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GLU > 180 GROUP BY Patient.ID ORDER BY Patient.Birthday DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'normal blood glucose' AND Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SLE' AND Laboratory.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC > 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT p.ID) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.PLT > 100 AND e.PLT < 400 AND p.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT p.SEX, p.Birthday, p.Description, l.PLT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.PLT > 100 AND l.PLT < 400 AND p.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(Laboratory.PT) AS average_prothrombin_time FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX ='male' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 2 OR e.Thrombosis = 1 AND l.PT < 14 AND e.Diagnosis ='severe thrombosis';\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT member_id FROM member WHERE first_name = 'Angela' AND last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT major_id) FROM major WHERE department = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT link_to_member) FROM attendance WHERE link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT member_id, first_name, last_name, phone FROM member;\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT member_id) FROM attendance JOIN member ON attendance.link_to_member = member.member_id WHERE event_name = 'Women's Soccer' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name, MAX(a.link_to_event) AS highest_attendance FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major s ON m.link_to_major = s.major_id WHERE s.major_name = 'Student_Club' GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM major JOIN member ON major.major_id = member.link_to_major WHERE member.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM event AS E JOIN member AS M ON E.event_id = M.member_id WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison' AND E.type = 'Student_Club' AND YEAR(E.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE event_id IN ( SELECT event_id FROM attendance JOIN member ON attendance.link_to_member = member.member_id GROUP BY event_id HAVING COUNT(member_id) > 10 ) AND type = 'Meeting';\t----- bird -----\tstudent_club",
    "1323": "SELECT DISTINCT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE a.attendance_count > 20 AND e.type NOT LIKE '%fundraiser%'\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance.member_id) AS average_attendance FROM event JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type = 'Meeting' AND YEAR(event.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club events%';\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.link_to_major = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.first_name, m.last_name FROM member m JOIN major mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "-- Create a hypothetical member table for Sherri Ramsey INSERT INTO member (member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major) VALUES (1, 'Sherri', 'Ramsey','sherri.ramsey@example.com', 'Student', 'M', '555-1234', 12345, '12345'); -- Find the county for Sherri Ramsey's zip code SELECT city, county FROM zip_code WHERE zip_code = 12345;\t----- bird -----\tstudent_club",
    "1330": "SELECT major.college FROM major JOIN event ON major.major_id = event.type WHERE event.event_name = 'Tyler Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT amount FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(cost) FROM expense JOIN event ON expense.link_to_event = event.event_id JOIN member ON event.event_name = member.first_name WHERE event.event_name = 'September Meeting' AND expense.category = 'Food' AND member.position = 'Student_Club';\t----- bird -----\tstudent_club",
    "1333": "SELECT z.city, z.state FROM zip_code z JOIN member m ON z.zip = m.zip WHERE m.position = 'President';\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(expense.cost) FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'September Meeting' AND budget.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN event e ON m.major_id = e.type WHERE e.event_name = 'Pierce and Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(b.amount) AS total_budgeted_amount FROM event e INNER JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT COUNT(*) FROM expense WHERE event_id = 'October Meeting' AND event_date = '2019-10-08' AND approved = 'True';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) AS total_spent FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN event ON expense.link_to_event = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND MONTH(TO_DATE(expense.expense_date, 'yyyy-MM')) IN (9, 10);\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(budget.spent) FROM budget JOIN event ON budget.link_to_event = event.event_id JOIN member ON budget.link_to_member = member.member_id WHERE member.link_to_major.department = 'Student_Club' AND YEAR(event.event_date) IN (2019, 2020);\t----- bird -----\tstudent_club",
    "1341": "SELECT \"location\" FROM \"event\" WHERE \"event_name\" = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS biggest_food_remaining FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_name = 'fundraising' AND event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip.city, zip.county, zip.state FROM zip_code AS zip WHERE member.zip = (SELECT id FROM zip_code WHERE city = 'Adela O'Gallagher' AND county = 'O'Gallagher');\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget JOIN expense ON budget.link_to_event = expense.link_to_event WHERE budget.event_name = 'November Meeting' AND expense.cost > budget.amount;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_for_September_Speaker FROM budget WHERE link_to_event = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.event_status FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Post Cards, Posters' AND e_expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT m.major_name FROM major m JOIN member m_member ON m.major_id = m_member.link_to_major WHERE m_member.first_name = 'Brent' AND m_member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT zip.type FROM zip_code AS zip WHERE zip.short_state = 'CO';\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code FROM zip_code WHERE city = ( SELECT first_name FROM member WHERE email ='sacha.harrison@example.com' );\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM major AS m JOIN member AS mem ON m.major_id = mem.link_to_major WHERE mem.first_name = 'President';\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM member AS m JOIN income AS i ON m.member_id = i.link_to_member WHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member WHERE MIN(received_date) AS first_paid_dues WHERE source = 'Dues';\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND (SUM(amount) - SUM(amount)) > 0;\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(budget.spent) / SUM(budget.amount)) * 100 AS percentage FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Speaker' AND budget.category = 'Parking';\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE state = 'Virginia' AND county = 'Orange';\t----- bird -----\tstudent_club",
    "1363": "SELECT major_name FROM major WHERE college = 'Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code FROM zip_code WHERE city = (SELECT city FROM member WHERE first_name = 'Amy' AND last_name = 'Firth');\t----- bird -----\tstudent_club",
    "1365": "SELECT b.category, e.expense_description, e.cost, b.remaining FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE b.remaining = (SELECT MIN(remaining) FROM budget) ORDER BY e.cost ASC;\t----- bird -----\tstudent_club",
    "1366": "SELECT m.member_id, m.first_name, m.last_name, m.email FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member WHERE a.link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT college AS college_name, COUNT(member.member_id) AS popularity FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY college ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Phone Expense' AND e.cost = 809.55 AND e.approved = 'true';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_name, MAX(b.amount) AS highest_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id WHERE m.first_name = 'Vice President' AND m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE member_id = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member WHERE zip.state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(event_id) AS event_count FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(b.spent / b.amount) AS highest_spend_to_budget_ratio FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed';\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spend FROM budget WHERE link_to_event IN (SELECT event_id FROM event);\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT member_id, first_name, last_name FROM member WHERE COUNT(link_to_event) > 7 GROUP BY member_id, first_name, last_name\t----- bird -----\tstudent_club",
    "1382": "SELECT member_id FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Community Theater' AND member.major_id IN (SELECT major_id FROM major WHERE major_name = 'Interior Design');\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income AS i JOIN member AS m ON i.link_to_member = m.member_id WHERE m.email = 'grant.gilmour@example.com';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.member_id, m.first_name, m.last_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Budget for Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(i.amount) FROM income) ORDER BY m.first_name, m.last_last;\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_id, e.event_name, b.spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Cost' ORDER BY b.spent ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT DIVIDE(SUM(cost) WHERE event_name = 'Yearly Kickoff', SUM(cost)) * 100 AS percentage FROM event;\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(major_name = 'Finance') / SUM(major_name = 'Physics') FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, MAX(amount) AS top_fund_source_in_september_2019 FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY top_fund_source_in_september_2019 DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT m.first_name, m.email FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.name = 'Student_Club' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE event_id = 'event_id_of_Community_Theater_2019';\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(DISTINCT e.member_id) AS attendance_count FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Luisa' AND m.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) AS average_food_spending FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name, MAX(b.spent) AS max_spent_on_advertisement FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer' AND member.first_name = 'Maya' AND member.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1400": "SELECT 100.0 * SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id) AS percentage_community_service_events FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.expense_description = 'Posters' AND budget.link_to_event = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size AS size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(cost) AS total_value FROM expense WHERE expense_date LIKE '%October Meeting%' AND approved = 'true' AND link_to_budget IN (SELECT budget_id FROM budget WHERE category = 'Expenses');\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) FROM budget WHERE category = 'April Speaker';\t----- bird -----\tstudent_club",
    "1406": "SELECT \"budget_id\", \"spent\", \"remaining\" FROM \"budget\" WHERE \"category\" = 'Food' ORDER BY \"spent\" DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, spent, remaining FROM budget WHERE category = 'Advertising' ORDER BY spent DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT m.first_name, m.last_name, e.expense_description, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT zip.zip_code FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE expense.cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT m.major_name FROM major m JOIN member m_member ON m.major_id = m_member.link_to_major WHERE m_member.first_name = 'Phillip' AND m_member.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT e.event_name, e.type, e.status FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30 AND b.amount > 0;\t----- bird -----\tstudent_club",
    "1418": "SELECT event_name FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_date = '2020-03-24T12:00:00');\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name FROM major m JOIN member mj ON m.major_id = mj.link_to_major WHERE mj.first_name = 'Vice President' AND mj.last_name = 'Student';\t----- bird -----\tstudent_club",
    "1421": "SELECT COUNT(DISTINCT member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member) AS percentage_business_members FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'Business';\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(DISTINCT major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.first_name, m.last_name, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, a.department, a.college FROM member m JOIN major a ON m.link_to_major = a.major_id WHERE a.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT zip.city, zip.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.department = 'Electrical and Computer Engineering';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'Student_Club' AND m.position = 'Vice President' AND e.location LIKE '%900 E. Washington St.%';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT COUNT(CASE WHEN t_shirt_size = 'Medium' AND position = 'Member' AND income.source = 'Student_Club' AND amount = 50 THEN 1 END) * 100 / COUNT(member_id) AS percentage FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN income ON member.member_id = income.link_to_member\t----- bird -----\tstudent_club",
    "1433": "SELECT zip_code FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT e.event_id, e.event_name, e.event_date, e.location FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.zip = (SELECT zip_code FROM zip_code WHERE short_state = 'CA' AND city = 'Los Angeles') AND m.position = 'Student';\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN budget_event be ON b.budget_id = be.budget_id JOIN event e2 ON be.event_id = e2.event_id WHERE b.event_status = 'approved' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.first_name = 'Katy' AND mm.name ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.member_id, m.first_name, m.last_name, m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND m.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT member.email FROM member JOIN income ON member.member_id = income.link_to_member JOIN expense ON income.income_id = expense.link_to_member WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN major maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'education' AND maj.department = 'College of Education & Human Services';\t----- bird -----\tstudent_club",
    "1442": "SELECT 100.0 * SUM(CASE WHEN budget.remaining < 0 THEN 1 ELSE 0 END) AS percentage FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'completed';\t----- bird -----\tstudent_club",
    "1443": "SELECT e.event_id, e.location, e.status FROM event e JOIN major m ON e.type = m.major_name WHERE e.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT e.expense_id, AVG(e.cost) AS avg_cost FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id GROUP BY e.expense_id HAVING AVG(e.cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (SUM(type = 'PO Box') / COUNT(zip_code)) * 100 AS percentage_of_po_boxes FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event JOIN expense_description ed ON e_expense.expense_id = ed.expense_id WHERE ed.expense_description = 'Pizza' AND e_expense.cost BETWEEN 50 AND 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.event_name, e.location, z.city, z.state FROM event e JOIN member m ON e.link_to_member = m.member_id JOIN major maj ON m.link_to_major = maj.major_id JOIN income i ON e.link_to_event = i.link_to_event WHERE i.amount > 40 GROUP BY e.event_id, e.event_name, e.location, z.city, z.state HAVING COUNT(i.member_id) > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN event e2 ON e.link_to_event = e2.event_id WHERE e2.event_id IN ( SELECT event_id FROM event GROUP BY event_id HAVING COUNT(*) > 1 ) GROUP BY m.member_id, m.first_name, m.last_name ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE link_to_member NOT IN (SELECT member_id FROM member);\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense e2 ON b.budget_id = e2.link_to_budget WHERE b.category = 'Parking' GROUP BY e.event_id HAVING SUM(e2.cost) < (SELECT AVG(cost) FROM expense WHERE category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT DIVIDE( SUM(cost), COUNT(event_id) ) * 100 AS percentage FROM event WHERE type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.budget_id, SUM(e.cost) AS total_cost FROM budget b JOIN expense e ON b.link_to_event = e.link_to_event WHERE e.expense_description IN ('Water', 'Chips', 'Cookies') GROUP BY b.budget_id ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spending FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY total_spending DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "1458": "SELECT SUBSTR( CONCAT( 'SELECT (SUM(state = \"New Jersey\") / COUNT(position = \"Member\")) * 100 AS new_jersey_percentage, (SUM(state = \"Vermont\") / COUNT(position = \"Member\")) * 100 AS vermont_percentage FROM member GROUP BY 1 '), 0, INSTR( SUBSTR( CONCAT( 'SELECT (SUM(state = \"New Jersey\") / COUNT(position = \"Member\")) * 100 AS new_jersey_percentage, (SUM(state = \"Vermont\") / COUNT(position = \"Member\")) * 100 AS vermont_percentage FROM member GROUP BY 1 '), 'SELECT' ) - 1 ) ) AS query FROM (SELECT (SUM(state = \"New Jersey\") / COUNT(position = \"Member\")) * 100 AS new_jersey_percentage, (SUM(state = \"Vermont\") / COUNT(position = \"Member\")) * 100 AS vermont_percentage FROM member GROUP BY 1) AS subquery\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM major m JOIN member mg ON m.major_id = mg.link_to_major WHERE mg.first_name = 'Garrett' AND mg.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.first_name, m.last_name, m.phone FROM member AS m JOIN major AS me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT e.event_name FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, m.position, m.major.department, m.major.college FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name ORDER BY total_spent DESC;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code FROM zip_code WHERE city = (SELECT city FROM member WHERE first_name = 'Garrett' AND last_name = 'Gerke');\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT gs.GasStationID) FROM gasstations gs JOIN yearmonth ym ON gs.ChainID = ym.CustomerID WHERE gs.Country = 'CZE' AND gs.Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(Currency = 'EUR') / COUNT(Currency = 'CZK') AS ratio_of_eur_to_czk_customers FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT customers.Segment, yearmonth.Consumption FROM customers JOIN gasstations ON customers.Segment = gasstations.Segment JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE gasstations.Country = 'LAM' AND transactions_1k.Date BETWEEN '20120101' AND '20121231' ORDER BY yearmonth.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(yearmonth.Consumption) AS average_monthly_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '20130101' AND '20131231';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE gs.Country = 'Czech Republic' AND t.Date BETWEEN '20110101' AND '20111231' AND c.Currency = 'CZK' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Segment = 'CZK' THEN p.Amount ELSE 0 END) - SUM(CASE WHEN c.Segment = 'EUR' THEN p.Amount ELSE 0 END) AS difference_in_consumption FROM transactions_1k p JOIN customers c ON p.CustomerID = c.CustomerID WHERE p.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT ym.Date, SUM(t1k.Amount * t1k.Price) AS Total_EUR_Gas_Use FROM yearmonth ym JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID WHERE t1k.Amount > 0 AND t1k.Price > 0 GROUP BY ym.Date ORDER BY Total_EUR_Gas_Use DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT segment, MIN(Consumption) AS least_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID GROUP BY segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT ym.Date, SUM(t1k.Amount) AS consumption_in_CZK FROM yearmonth ym JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID WHERE t1k.ProductID = (SELECT ProductID FROM products WHERE Description = 'Gas'); GROUP BY DATE_PART('year', ym.Date); ORDER BY consumption_in_CZK DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT tm.Date AS PeakMonth, MAX(tm.Consumption) AS PeakConsumption FROM yearmonth tm JOIN transactions_1k t1k ON tm.CustomerID = t1k.CustomerID WHERE t1k.Amount > 1000 -- Assuming SME customers have transactions above this threshold AND tm.Date BETWEEN '20130101' AND '20131231' AND tm.CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' ) GROUP BY tm.Date ORDER BY PeakConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT ( SELECT AVG(Amount) AS avg_sme_consumption FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date LIKE '2013%' AND yearmonth.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE CustomerID = customers.CustomerID AND Segment = 'SME') ) AS avg_sme_consumption , ( SELECT AVG(Amount) AS avg_lam_consumption FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'LAM' AND yearmonth.Date LIKE '2013%' AND yearmonth.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE CustomerID = customers.CustomerID AND Segment = 'LAM') ) AS avg_lam_consumption , ( SELECT AVG(Amount) AS avg_kam_consumption FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date LIKE '2013%' AND yearmonth.Consumption = (SELECT MIN(Consumption) FROM yearmonth WHERE CustomerID = customers.CustomerID AND Segment = 'KAM') ) AS avg_kam_consumption\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT s.Segment, (SUM(CASE WHEN t1.Date BETWEEN '2012-12-01' AND '2013-12-31' THEN t1.Amount ELSE 0 END) - SUM(CASE WHEN t1.Date BETWEEN '2011-12-01' AND '2012-12-31' THEN t1.Amount ELSE 0 END)) / SUM(CASE WHEN t1.Date BETWEEN '2013-12-01' AND '2013-12-31' THEN t1.Amount ELSE 0 END) * 100 AS Percentage_Increase FROM customers s JOIN transactions_1k t1 ON s.CustomerID = t1.CustomerID JOIN gasstations gs ON t1.GasStationID = gs.GasStationID JOIN products p ON t1.ProductID = p.ProductID WHERE gs.Segment = 'SME' OR gs.Segment = 'LAM' OR gs.Segment = 'KAM' GROUP BY s.Segment ORDER BY Percentage_Increase DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '20130801' AND '20131130';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT gasstations.GasStationID) - COUNT(DISTINCT gasstations.GasStationID) AS discount_stations_difference FROM gasstations WHERE gasstations.Country IN ('CZE', 'SVK');\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT c1.Consumption - c2.Consumption AS Consumption_Difference FROM yearmonth c1 JOIN yearmonth c2 ON c1.CustomerID = c2.CustomerID AND c1.Date = '2013-04-01' AND c2.Date = '2013-04-30';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT ( SELECT SUM(Amount) FROM transactions_1k WHERE Currency = 'CZK' ) AS CZK_amount, ( SELECT SUM(Amount) FROM transactions_1k WHERE Currency = 'EUR' ) AS EUR_amount, ( SELECT COUNT(DISTINCT CustomerID) FROM customers ) AS Total_SMEs FROM ( SELECT 1 AS popularity FROM customers WHERE Segment = 'SME' ) AS SMEs WHERE CZK_amount > EUR_amount AND Total_SMEs = ( SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' )\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, SUM(t1k.Amount) AS total_consumption FROM transactions_1k t1k JOIN customers c ON t1k.CustomerID = c.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '2013-10%' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(consumption) FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND Date = '2013-05-01') AND Date = '2013-05-31';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ( SELECT SUM(CASE WHEN Amount > 46.73 THEN 1 ELSE 0 END) AS LAM_customers_above_46_73 FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM' ) * 100 AS percentage FROM ( SELECT COUNT(DISTINCT CustomerID) AS Total_LAM_customers FROM customers WHERE Segment = 'LAM' ) AS total_lam_customers;\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT g.Country, COUNT(t1.GasStationID) AS value_for_money_gas_stations FROM gasstations g JOIN transactions_1k t1 ON g.ChainID = t1.GasStationID JOIN products p ON t1.ProductID = p.ProductID JOIN yearmonth y ON g.ChainID = y.CustomerID GROUP BY g.Country ORDER BY value_for_money_gas_stations DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT AVG(CASE WHEN transactions_1k.Amount > 0 THEN 1 ELSE 0 END) * 100.0 AS percentage_euro_transactions FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.Amount > 0 AND customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage FROM yearmonth WHERE DATE = '2012-02-01' AND consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (SUM(CASE WHEN gasstations.Segment = 'Premium' THEN 1 ELSE 0 END) / COUNT(DISTINCT gasstations.ChainID)) * 100 AS percentage_premium_gas_stations FROM gasstations WHERE gasstations.Country = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT c.CustomerID, SUM(t1k.Amount) AS total_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID WHERE ym.Date = '201309' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, MIN(t1k.Amount) AS MinConsumption FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date BETWEEN '2013-09-01' AND '2013-09-30' GROUP BY c.Segment ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT t1.CustomerID, t1.Consumption FROM yearmonth AS t1 JOIN customers AS t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date = '201206' ORDER BY t1.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS highest_monthly_consumption_2012 FROM yearmonth WHERE EXTRACT(YEAR FROM Date) = 2012 AND EXTRACT(MONTH FROM Date) = 12;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT c.CustomerID, MAX(y.Consumption) AS biggest_monthly_consumption FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID JOIN transactions_1k t ON y.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE c.Currency = 'euro' GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM transactions_1k AS t JOIN yearmonth AS ym ON t.CustomerID = ym.CustomerID JOIN products AS p ON t.ProductID = p.ProductID WHERE STRFTIME('%Y-%m', ym.Date) = '2013-09'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE transactions_1k.Date = '2013-06-01';\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT gasstations.ChainID, gasstations.Segment FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Price * customers.Currency = 'EUR' GROUP BY gasstations.ChainID, gasstations.Segment;\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description, t.Date, t.Time, c.Currency, t.Amount * (SELECT ConversionRate FROM customers WHERE customers.CustomerID = c.CustomerID) AS Amount_Euro FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN yearmonth y ON t.CustomerID = y.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE t.Date BETWEEN '2022-01-01' AND '2022-12-31';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(t1.Price) AS average_total_price FROM transactions_1k t1 JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT c.CustomerID) FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'EUR' AND ym.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT t1.Date, t1.Time FROM transactions_1k t1 JOIN gasstations gs ON t1.GasStationID = gs.GasStationID WHERE gs.ChainID = 11 GROUP BY t1.Date, t1.Time HAVING COUNT(DISTINCT t1.TransactionID) > 1\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(TransactionID) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date >= '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t.Amount) AS average_total_price FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE c.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT c.CustomerID, SUM(t1k.Amount) AS total_spent FROM transactions_1k t1k JOIN customers c ON t1k.CustomerID = c.CustomerID WHERE t1k.Date = '2012-08-25' GROUP BY c.CustomerID ORDER BY total_spent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT t.GasStationID FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-25' AND t.CustomerID = ( SELECT MIN(CustomerID) FROM transactions_1k WHERE Date = '2012-08-25' );\t----- bird -----\tdebit_card_specializing",
    "1514": "CREATE TEMPORARY TABLE temp_date AS SELECT '2012-08-24 16:25:00' AS date_time;\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT customers.Segment FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-23' AND transactions_1k.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(TransactionID) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE date = '2012-08-26' AND time < '13:00:00' AND currency = 'CZK';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM customers);\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT GasStationID, CustomerID, Date, Time, Amount, Price FROM transactions_1k WHERE Date = '2012-08-24' AND Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' AND CustomerID = (SELECT CustomerID FROM yearmonth WHERE CustomerID = 12345 AND Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(transactions_1k.Amount) AS total_2012_aug_24_spending , '2012-08-24' AS date_2012_aug_24 , transactions_1k.Amount FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND customers.Segment = 'customer_segment_name' UNION SELECT SUM(transactions_1k.Amount) AS total_jan_2012_spending , '2012-01-01' AS date_2012_jan_01 , transactions_1k.Amount FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date BETWEEN '2012-01-01' AND '2012-01-31' AND customers.Segment = 'customer_segment_name'\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT c.Currency FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date LIKE '201306%' AND ym.Consumption = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT gasstations.Country FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Segment, g.Country FROM customers c JOIN gasstations g ON c.Segment = g.Segment JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.Date = '2012-08-24' AND t.Amount = 548.4 ORDER BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT (COUNT(DISTINCT t1.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers)) AS percentage_of_customers_using_eur FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE t1.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SUM(y2012.Consumption) - SUM(y2013.Consumption)) / SUM(y2012.Consumption) AS consumption_decrease_rate FROM yearmonth y2012 JOIN yearmonth y2013 ON y2012.CustomerID = y2013.CustomerID WHERE y2012.Date = '2012-08-25' AND y2012.ProductID = 634.8;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT g.GasStationID, SUM(t.Amount) AS total_revenue FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID GROUP BY g.GasStationID ORDER BY total_revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN products.Description LIKE '%premium%' THEN 1 ELSE 0 END) / SUM(CASE WHEN customers.Segment = 'premium' THEN 1 ELSE 0 END)) * 100 FROM customers JOIN gasstations ON customers.Segment = gasstations.Segment JOIN products ON gasstations.Segment = products.Segment WHERE gasstations.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON gasstations.Segment = customers.Segment WHERE transactions_1k.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description AS ProductName, COUNT(transactions_1k.ProductID) AS SalesCount FROM products JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY SalesCount DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT TOP 1 c.CustomerID, c.Segment, g.Country, AVG(p.Price) AS avg_price_per_item, g.Currency FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN products p ON gs.ChainID = p.ChainID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Amount > 1000 GROUP BY c.CustomerID, c.Segment, g.Country, g.Currency ORDER BY avg_price_per_item DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT g.Country, MAX(t.Amount) AS max_expensive_product_amount FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE p.ProductID = 2 GROUP BY g.Country ORDER BY max_expensive_product_amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, ym.Consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.ProductID = 5 AND t.Amount > 29 AND t.Date LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
}