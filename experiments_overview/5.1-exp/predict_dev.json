{
    "0": "SELECT MAX(FRPM_Count_K_12 / Enrollment_K_12) AS Max_Eligible_Free_Rate_K_12 FROM (frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds) WHERE NCESDist = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT cds, AVG(AvgScrRead) AS avg_avg_scr_read, AVG(AvgScrMath) AS avg_avg_scr_math, AVG(AvgScrWrite) AS avg_avg_scr_write, AVG(NumGE1500) AS avg_num_ge1500 FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Continuation' AND schools.DistrictType = 'Continuation' GROUP BY cds ORDER BY avg_avg_scr_read DESC, avg_avg_scr_math DESC, avg_avg_scr_write DESC, avg_num_ge1500 DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT s.Zip FROM schools s JOIN fprm f ON s.CDSCode = f.CDSCode WHERE f.Charter = 1 AND f.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2013-14' AND f.FRPMCount(K-12) = (SELECT MAX(FRPMCount(K-12)) FROM frpm) ORDER BY s.Street DESC, s.City DESC, s.Zip DESC;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.OpenDate > '2000-01-01' AND s.StatusType = 'Charter School' AND sc.rtype = 'SAT' AND sc.sname = 'State' AND sc.dname = 'Standard' AND sc.cname = 'California';\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.rtype = 'SAT' AND satscores.dname = 'Math' AND satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 'Yes' OR s.GSserved = 'Yes')\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 > 0 ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT MAX(NumTstTakr) AS max_sat_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.CDSCode IN ( SELECT CDSCode FROM frpm ORDER BY FRPMCount (K-12) DESC LIMIT 1 );\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrMath > 560 AND s.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT schools.CDSCode FROM schools JOIN satscores ON schools.CDSCode = satscores.cds GROUP BY schools.CDSCode HAVING SUM(satscores.enroll12 + satscores.enroll12) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT s.CDSCode, s.EligibleFreeRate FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE s.ExcellenceRate > 0.3 GROUP BY s.CDSCode, s.EligibleFreeRate ORDER BY s.EligibleFreeRate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, AVG(NumGE1500 / NumTstTakr) AS excellence_rate FROM satscores GROUP BY CDSCode ORDER BY excellence_rate DESC LIMIT 3 ) ex ON s.CDSCode = ex.CDSCode;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.CDSCode, s.NCESSchool FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode, s.NCESSchool ORDER BY SUM(sc.enroll12) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.CDSCode, s.NCESSchool, s.sname, s.AvgScrRead FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active' AND sc.rtype = 'SAT' ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(DISTINCT schools.CDSCode) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.NCESDist = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.CharterNum FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrWrite > 499 GROUP BY s.CDSCode, s.CharterNum ORDER BY s.AvgScrWrite DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.NCESDist = 'Fresno' AND satscores.NumTstTakr <= 250 AND satscores.rtype = 'SAT' AND satscores.dname = 'Math' AND satscores.cname = 'Fresno State University' AND schools.StatusType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "19": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.rtype = 'State' AND satscores.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE rtype = 'State');\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE Amador = 'Amador' AND Low_Grade = '9' AND High_Grade = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Los Angeles' AND satscores.rtype = 'K-12' AND satscores.NumTstTakr > 500 AND satscores.NumTstTakr < 700 AND satscores.AvgScrRead > 0 AND satscores.AvgScrMath > 0 AND satscores.AvgScrWrite > 0;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, s.enroll12, s.NumTstTakr FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Contra Costa' ORDER BY s.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.CDSCode, s.SchoolName, s.Street, s.City, s.Zip, s.State, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Enrollment (K-12) - f.Enrollment (Ages 5-17) > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.NCESSchool, s.Enrollment, s.FreeMealCount, s.FRPMCount, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Percent >= 0.1 AND f.AvgScrRead >= 1500 AND f.AvgScrMath >= 1500 AND f.AvgScrWrite >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.CDSCode, s.FundingType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.sname = 'SAT' AND sc.rtype = 'Math' AND sc.AvgScrMath > 400 GROUP BY s.CDSCode HAVING COUNT(sc.cds) > 0;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'High School' AND (sc.NumGE1500 / sc.enroll12) > 0.08 AND s.County = 'Monterey' AND s.District = 'Monterey' AND s.School = 'Monterey';\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.school_name, s.AvgScrWrite, sch.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN schools sch ON s.CDSCode = sch.CDSCode WHERE s.OpenDate >= '1991-01-01' AND s.ClosedDate <= '2000-12-31';\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.School, s.DOC FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.rtype = 'Local' AND s.FundingType = 'Locally Funded' HAVING ABS(ss.enroll12 - ss.enroll17) > ( SELECT AVG(ABS(ss2.enroll12 - ss2.enroll17)) FROM satscores ss2 WHERE ss2.cds = s.CDSCode AND ss2.rtype = 'Local' AND ss2.FundingType = 'Locally Funded' );\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.OpenDate, s.ClosedDate FROM frpm JOIN schools ON frpm.CDSCode = s.CDSCode WHERE s.DistrictType = 'School' AND s.SchoolType = 'K-12' ORDER BY s.enroll12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City, s.Zip FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'K-12' GROUP BY s.City, s.Zip ORDER BY sc.enroll12 ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT s.CDSCode, s.Enrollment (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12) FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode ORDER BY s.Enrollment (K-12) DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "32": "SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.FRPMCount_K12 AS eligible_free_meal_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'Free Meal' ORDER BY sc.FreeMealCount_K12 DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.Website, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.enroll12 BETWEEN 1900 AND 2000 AND s.Zip LIKE '%5-17%';\t----- bird -----\tcalifornia_schools",
    "34": "SELECT (f.NumGE1500 / f.enroll12) * 100 AS free_rate FROM ( SELECT f.CDSCode, s.rtype, s.sname, s.dname, s.cname, f.enroll12, f.NumTstTakr, f.AvgScrRead, f.AvgScrMath, f.AvgScrWrite, f.NumGE1500 FROM frpm f JOIN satscores s ON f.CDSCode = s.cds ) filtered_data WHERE f.School = 'Kacey Gibson' AND f.enroll12 >= 5 AND f.enroll12 <= 17;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.CharterSchool = 1 AND f.Enrollment (K-12) = (SELECT MIN(enrollment) FROM (SELECT CDSCode, ENROLLMENT (K-12) AS enrollment FROM frpm WHERE CharterSchool = 1) subquery) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 150 AND sc.AvgScrMath >= 150 AND sc.AvgScrWrite >= 150 AND sc.NumGE1500 >= 1 GROUP BY s.CDSCode ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MAX(ExcellenceRate) AS ExcellenceRate FROM satscores GROUP BY CDSCode ) sc_max ON s.CDSCode = sc_max.CDSCode WHERE sc.ExcellenceRate = sc_max.ExcellenceRate ORDER BY s.CDSCode ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.County = 'Los Angeles County' AND sc.enroll12 BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) AS avg_test_takers FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.District = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools s ON satscores.cds = s.CDSCode WHERE frpm.NCESDist = 'Fresno Unified' GROUP BY s.CDSCode ORDER BY AVG(satscores.AvgScrRead) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School, s.AvgScrRead FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Virtual = 'F' AND sc.County = 'Relevant County' AND s.AvgScrRead = ( SELECT MAX(AvgScrRead) FROM satscores WHERE cds = s.cds AND sc.County = 'Relevant County' ) ORDER BY s.AvgScrRead DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.cname FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) AND sc.SchoolType = 'Public';\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(AvgScrMath + AvgScrRead + AvgScrWrite) AS avg_math_score, s.County FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE (AvgScrMath + AvgScrRead + AvgScrWrite) IN ( SELECT MIN(AvgScrMath + AvgScrRead + AvgScrWrite) FROM satscores ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.city, AVG(s.AvgScrWrite) AS avg_writing_score FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE (s.NumTstTakr * s.AvgScrRead) >= 1500 GROUP BY s.city ORDER BY avg_writing_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.CDSCode, s.NCESSchool, AVG(ss.AvgScrWrite) AS AvgWritingScore FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE s.NCESDist = 'Ricci Ulrich' GROUP BY s.CDSCode, s.NCESSchool\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.CDSCode, s.CountyName, SUM(s.enroll12) AS total_enrollments FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2013-14' AND f.DistrictType = 'State Special School' GROUP BY s.CDSCode, s.CountyName ORDER BY total_enrollments DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(DISTINCT schools.CDSCode) / 12 AS monthly_avg_new_schools FROM schools WHERE schools.NCESDist = '52' AND schools.County = 'Alameda' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "48": "SELECT COUNT(*) AS merged_unified_count, COUNT(*) AS merged_elementary_count FROM satscores AS su JOIN schools AS s ON su.cds = s.CDSCode WHERE s.DOC = 54 AND s.County = 'Orange County' AND su.rtype = 'Unified School District' AND su.dname = 'Scored Data' UNION ALL SELECT COUNT(*) AS merged_unified_count, COUNT(*) AS merged_elementary_count FROM satscores AS se JOIN schools AS s ON se.cds = s.CDSCode WHERE s.DOC = 52 AND s.County = 'Orange County' AND se.rtype = 'Elementary School District' AND se.dname = 'Scored Data';\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.CDSCode, s.SchoolName, s.ClosedDate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.CDSCode, s.SchoolName, s.ClosedDate ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.School, s.sname AS Math_Average FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE s.rtype = 'A' AND s.sname = 'Math' ORDER BY s.AvgScrMath DESC LIMIT 7;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.School, AVG(ss.AvgScrRead) AS AverageReadingScore FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.rtype ='read' GROUP BY s.School ORDER BY AverageReadingScore ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 >= 1500 AND schools.City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(*) FROM schools WHERE City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.MailZip, s.StreetAbr FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'Charter';\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(schools.CDSCode) AS colusa_count, COUNT(schools.CDSCode) AS humboldt_count FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.State = 'CA' AND (schools.County = 'Colusa' OR schools.County = 'Humboldt') GROUP BY schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE state = 'California' AND city = 'San Joaquin' AND Charter = 1;\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrWrite = (SELECT 332nd_highest FROM (SELECT AvgScrWrite, ROW_NUMBER() OVER (ORDER BY AvgScrWrite DESC) AS rn FROM satscores GROUP BY AvgScrWrite) tmp) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s.website FROM schools s JOIN edops e ON s.CDSCode = e.CDSCode WHERE e.AdminName IN ('Mike Larson', 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT s.website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'San Joaquin' AND sc.rtype = 'Virtual' AND sc.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.StatusType = 'Charter' AND schools.DOC = 52;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE frpm.County = 'Los Angeles' AND frpm.SchoolType = 'Public' AND frpm.Charter = 0 AND frpm.Percent(%) Eligible Free (K-12) < 0.18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND sc.CharterNum = '00D2' AND s.School IN ( SELECT CDSCode FROM frpm WHERE AcademicYear = '2013-14' AND DistrictCode = ( SELECT DistrictCode FROM frpm WHERE CDSCode = '00D2' ) ) AND s.City!= ''\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND CharterNum = '00D4' AND City = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (COUNT(CASE WHEN schools.FundingType = 'Local' AND schools.County = 'Santa Clara' THEN 1 END) / COUNT(CASE WHEN schools.FundingType!= 'Local' AND schools.County = 'Santa Clara' THEN 1 END) * 100) AS ratio_in_percentage FROM schools\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools AS s JOIN satscores AS ss ON s.CDSCode = ss.cds WHERE s.StatusType = 'Open' AND s.County = 'Stanislaus' AND ss.rtype = 'Directly Funded' AND ss.sname BETWEEN '2000-01-01' AND '2005-12-31';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(1) AS total_closures FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.District Name = 'San Francisco' AND YEAR(schools.ClosedDate) = 1989;\t----- bird -----\tcalifornia_schools",
    "68": "To find the county that reported the most school closures in the 1980s with school ownership code belonging to Youth Authority Facilities (CEA), we need to follow these steps: 1. Identify the relevant tables and columns. 2. Filter the data for the 1980s and Youth Authority Facilities (CEA) school ownership codes. 3. Count the number of school closures for each county. 4. Determine the county with the highest closure count. Here's the breakdown of the SQL statement: [SQL] SELECT c.CountyName, COUNT(sc.SchoolCode) AS ClosureCount FROM schools sc JOIN satscores s ON sc.CDSCode = s.cds JOIN satscores f ON sc.CDSCode = f.cds JOIN schools s_closure ON sc.CDSCode = s_closure.CDSCode JOIN schools s_founded ON sc.CDSCode = s_founded.CDSCode JOIN schools s_served ON sc.CDSCode = s_served.CDSCode JOIN schools s_virtual ON sc.CDSCode = s_virtual.CDSCode JOIN schools s_magnet ON sc.CDSCode = s_magnet.CDSCode JOIN schools s_doc ON sc.CDSCode = s_doc.CDSCode JOIN schools s_doc_type ON sc.CDSCode = s_doc_type.CDSCode JOIN schools s_soc ON sc.CDSCode = s_soc.CDSCode JOIN schools s_soc_type ON sc.CDSCode = s_soc_type.CDSCode JOIN schools s_eil ON sc.CDSCode = s_eil.CDSCode JOIN schools s_eil_name ON sc.CDSCode = s_eil_name.CDSCode JOIN schools s_admf ON sc.CDSCode = s_admf.CDSCode JOIN schools s_alm ON sc.CDSCode = s_alm.CDSCode JOIN schools s_virtual ON sc.CDSCode = s_virtual.CDSCode JOIN schools s_magnet ON sc.CDSCode = s_magnet.CDSCode JOIN schools s_doc ON sc.CDSCode = s_doc.CDSCode JOIN schools s_doc_type ON sc.CDSCode = s_doc_type.CDSCode JOIN schools s_soc ON sc.CDSCode = s_soc.CDSCode JOIN schools s_soc_type ON sc.CDSCode = s_soc_type.CDSCode JOIN schools s_eil ON sc.CDSCode = s_eil.CDSCode JOIN schools s_eil_name ON sc.CDSCode = s_eil_name.CDSCode JOIN schools s_admf ON sc.CDSCode = s_admf.CDSCode JOIN schools s_alm ON sc.CDSCode = s_alm.CDSCode JOIN schools s_virtual ON sc.CDSCode = s_virtual.CDSCode JOIN schools s_magnet ON sc.CDSCode = s_magnet.CDSCode JOIN schools s_doc ON sc.CDSCode = s_doc.CDSCode JOIN schools s_doc_type ON sc.CDSCode = s_doc_type.CDSCode JOIN schools s_soc ON sc.CDSCode = s_soc.CDSCode JOIN schools s_soc_type ON sc.CDSCode = s_soc_type.CDSCode JOIN schools s_eil ON sc.CDSCode = s_eil.CDSCode JOIN schools s_eil_name ON sc.CDSCode = s_eil_name.CDSCode JOIN schools s_admf ON sc.CDSCode = s_admf.CDSCode JOIN schools s_alm ON sc.CDSCode = s_alm.CDSCode JOIN schools s_virtual ON sc.CDSCode = s_virtual.CDSCode JOIN schools s_magnet ON sc.CDSCode = s_magnet\t----- bird -----\tcalifornia_schools",
    "69": "SELECT s.NCESDist, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SOC = 31\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.DistrictType = 'District Community Day School' AND f.County = 'Alpine' AND f.Status = 'Active' OR f.Status = 'Closed';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT CDSCode FROM schools WHERE City = 'Fresno' AND Magnet = 0;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(satscores.enroll12) AS total_students FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.CDSCode = 'State Special School' AND frpm.County = 'Fremont' AND frpm.AcademicYear = '2014-2015' AND satscores.rtype = 'Regular';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT s.enroll12 FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.Street = 'PO Box 1040' AND sc.School = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.LowGrade FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode JOIN frpm f ON sc.CDSCode = f.CDSCode WHERE f.NCESDist = '0613360' AND f.DistrictType = 'District Special Education Consortia School' AND sc.EdOpsCode = 'SPECON' ORDER BY s.LowGrade ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.school_name FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.CountyCode = '37' AND sc.sname = 'Breakfast Provision 2' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON sc.cds = f.CDSCode WHERE f.AcademicYear = '2019-2020' AND f.EducationalOptionType = 'Lunch Provision 2' AND f.LowGrade = '9' AND f.HighGrade = '12' AND f.CountyName = 'Merced' AND f.SchoolType = 'High School' AND f.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.SchoolName, s.Enrollment_K_12, s.FRPM_Count_K_12, s.Percent_FRPM_K_12 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County_Name = 'Los Angeles' AND f.Grade_Span = 'K-9' ORDER BY s.Percent_FRPM_K_12 DESC;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT s.StatusType, COUNT(s.CDSCode) AS count FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.City = 'Adelanto' GROUP BY s.StatusType ORDER BY count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT s.County, COUNT(s.CDSCode) AS School_Count FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Virtual = 'F' GROUP BY s.County ORDER BY School_Count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MAX(latitude) AS max_lat FROM schools GROUP BY CDSCode ) max_lat_schools ON s.CDSCode = max_lat_schools.CDSCode WHERE s.latitude = (SELECT max_lat FROM max_lat_schools);\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.Street, s.City, s.Zip, s.State, s.Website, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.State = 'CA' ORDER BY s.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT s.County, s.District, s.School, MAX(s.Longitude) AS max_longitude FROM schools s GROUP BY s.CDSCode ORDER BY max_longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "83": "SELECT s.City, COUNT(s.SchoolID) AS NumberOfSchools FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.GSoffered = 'Offers a magnet program' AND sc.GradeSpan = 'Kindergarten to 8th grade' AND sc.NSLPProvisionStatus = 'Multiple Provision Types' GROUP BY s.City;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, AdmLName1, AdmEmail1, CDSCode, DistrictName FROM schools WHERE AdmEmail1 IS NOT NULL GROUP BY AdmFName1, AdmLName1, AdmEmail1, CDSCode, DistrictName ORDER BY COUNT(*) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.DistrictCode, (s.FreeMealCountK12 / s.EnrollmentK12 * 100) AS PercentEligibleFree FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.AdmFName1 = 'Alusine' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.sname = '40 Charter' AND s.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT CDSCode FROM schools WHERE County = 'San Bernardino' AND District = 'City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54);\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores WHERE cds = s.CDSCode) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(DISTINCT account_id) FROM account WHERE frequency LIKE '%POPLATEK PO OBRATU%' AND district_id IN ( SELECT district_id FROM district WHERE A3 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A3 = 'Prague' AND EXISTS ( SELECT 1 FROM loan AS l WHERE l.account_id = a.account_id AND l.status = 'eligible' );\t----- bird -----\tfinancial",
    "91": "SELECT AVG(A12) AS avg_1995, AVG(A13) AS avg_1996 FROM district;\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(client_id) FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'North Bohemia');\t----- bird -----\tfinancial",
    "94": "SELECT a.account_id, c.district_id, AVG(d.A11) AS avg_salary FROM account a JOIN client c ON a.district_id = c.district_id JOIN loan l ON a.account_id = l.account_id JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY a.account_id, c.district_id ORDER BY c.birth_date ASC, AVG(d.A11) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "95": "SELECT c.client_id, c.district_id, c.gender, c.birth_date, AVG(d.A11) AS avg_salary FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client) GROUP BY c.client_id, c.district_id, c.gender, c.birth_date ORDER BY avg_salary DESC, c.birth_date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'POPLATEK TYDNE' ) AND gender = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender ='male' AND c.birth_date >= '1980-01-01' AND EXISTS ( SELECT 1 FROM trans t JOIN disp d ON t.account_id = d.account_id WHERE t.date >= '2022-01-01' AND t.date < '2023-01-01' AND d.type = 'Disponent' );\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id, MIN(l.amount) AS lowest_approved_amount, d.statement FROM account a JOIN loan l ON a.account_id = l.account_id JOIN district d ON a.district_id = d.district_id WHERE EXTRACT(YEAR FROM l.date) = 1997 GROUP BY a.account_id, d.statement HAVING COUNT(l.loan_id) = ( SELECT MIN(weekly_issuance_count) FROM ( SELECT COUNT(DISTINCT loan.account_id) AS weekly_issuance_count FROM loan JOIN account ON loan.account_id = account.account_id WHERE EXTRACT(YEAR FROM loan.date) = 1997 GROUP BY loan.account_id, EXTRACT(WEEK FROM loan.date) ) AS subquery ) ORDER BY a.account_id, lowest_approved_amount ASC;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, a.frequency, a.date, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date BETWEEN '1993-01-01' AND '1993-12-31' GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING MAX(l.amount) = ( SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id AND l2.date BETWEEN '1993-01-01' AND '1993-12-31' AND l2.duration > 12 );\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.client_id = l.account_id WHERE d.A2 = 'Sokolov' AND c.gender = 'F' AND c.birth_date < '1950-01-01';\t----- bird -----\tfinancial",
    "101": "SELECT a.account_id, a.district_id, t.date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.date >= '1995-01-01' GROUP BY a.account_id, a.district_id ORDER BY t.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT account.account_id, account.district_id, account.frequency, account.date FROM account JOIN client ON account.district_id = client.district_id JOIN trans ON account.account_id = trans.account_id WHERE account.date < '1997-01-01' AND trans.amount > 3000 GROUP BY account.account_id, account.district_id, account.frequency, account.date;\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03' AND card.type = 'card';\t----- bird -----\tfinancial",
    "104": "SELECT AVG(balance) AS avg_balance FROM trans WHERE account_id = 12345 AND date = '1998-10-14';\t----- bird -----\tfinancial",
    "105": "SELECT t.district_id FROM account AS t JOIN trans AS tr ON t.account_id = tr.account_id JOIN loan AS lo ON t.account_id = lo.account_id WHERE tr.date = '1994-08-25' AND lo.status = 'approved';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction_amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE client.birth_date <= '1996-10-21' AND account.date >= '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT c.gender, d.A11 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client WHERE c.district_id = d.district_id) AND d.A11 = (SELECT AVG(A11) FROM district WHERE district_id = d.district_id);\t----- bird -----\tfinancial",
    "108": "SELECT t1.client_id, t1.trans_id, t1.amount FROM trans t1 JOIN trans t2 ON t1.client_id = t2.client_id AND t1.trans_id < t2.trans_id WHERE t1.account_id = ( SELECT account_id FROM loan ORDER BY amount DESC LIMIT 1 );\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik') AND gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT c.disp_id FROM client c JOIN trans t ON c.client_id = t.account_id JOIN order o ON t.account_id = o.account_to JOIN account a ON o.account_id = a.account_id WHERE a.date = '1998-09-02' AND t.amount = 5100 LIMIT 1;\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Litomerice' ) AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "112": "SELECT d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT birth_date FROM client WHERE client_id = ( SELECT account_id FROM loan WHERE amount = 98832 AND date = '1996-01-03' );\t----- bird -----\tfinancial",
    "114": "SELECT c.account_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'Prague' LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT district_id FROM district WHERE A3 ='south Bohemia';\t----- bird -----\tfinancial",
    "116": "SELECT c.client_id, c.gender, c.birth_date, a.district_id, (t.amount - l.amount) / l.amount * 100 AS increase_rate FROM client c JOIN account a ON c.district_id = a.district_id JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE t.date >= '1993-03-22' AND t.date <= '1998-12-27' AND l.date = '1993-07-05' ORDER BY c.client_id;\t----- bird -----\tfinancial",
    "117": "SELECT SUM(amount) * 100.0 / (SELECT SUM(amount) FROM loan) AS full_payment_percentage FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT (SUM(CASE WHEN loans.amount < 100000 THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT loans.account_id)) AS percentage_of_accounts FROM loan AS loans JOIN account AS accounts ON loans.account_id = accounts.account_id WHERE loans.status = 'C';\t----- bird -----\tfinancial",
    "119": "SELECT t.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account AS t JOIN district AS d ON t.district_id = d.district_id WHERE t.date = '1993-01-01' AND t.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, a.frequency FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Prachatice' );\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM district d JOIN account a ON d.district_id = a.district_id WHERE a.account_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT a.account_id, d.district, d.A3 FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE t.amount > 300000 AND l.status = 'active';\t----- bird -----\tfinancial",
    "124": "SELECT loans.loan_id, districts.district_id, AVG(clients.average_salary) AS average_salary FROM loans JOIN loans_district ON loans.loan_id = loans_district.loan_id JOIN districts ON loans_district.district_id = districts.district_id JOIN clients ON loans.client_id = clients.client_id WHERE loans.duration = 60 GROUP BY loans.loan_id, districts.district_id;\t----- bird -----\tfinancial",
    "125": "SELECT d.district_id, d.state, (l.A13 - l.A12) / l.A12 * 100 AS unemployment_increment_percentage FROM district d JOIN loan l ON d.district_id = l.account_id WHERE l.status = 'D';\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(DISTINCT a.account_id) * 100.0 / (SELECT COUNT(DISTINCT d.district_id) FROM district d WHERE d.A2 LIKE '%Decin%') FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date >= '1993-01-01' AND d.A2 LIKE '%Decin%';\t----- bird -----\tfinancial",
    "127": "SELECT a.account_id, COUNT(t.trans_id) AS monthly_issuance FROM account a JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id GROUP BY a.account_id, d.district_id HAVING COUNT(t.trans_id) >= 5 ORDER BY monthly_issuance DESC;\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(*) AS female_accounts FROM client WHERE gender = 'F' GROUP BY district_id ORDER BY female_accounts DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.district_id, d.A2, SUM(t.amount) AS total_withdrawal FROM account a JOIN district d ON a.district_id = d.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%' GROUP BY d.district_id, d.A2 ORDER BY total_withdrawal DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT district_id FROM district WHERE A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "131": "SELECT d.district_id, d.A3 AS district_name, SUM(l.amount) AS total_active_loan FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'C' GROUP BY d.district_id, d.A3 ORDER BY total_active_loan DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loan_amount) AS average_loan_amount_by_male_borrowers FROM loan JOIN client ON loan.account_id = client.account_id JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A13 AS unemployment_rate, branch_location AS district_name FROM district WHERE A13 IS NOT NULL ORDER BY unemployment_rate DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN district ON account.district_id = district.district_id JOIN loan ON account.account_id = loan.account_id WHERE district.A16 = 1996 GROUP BY account.district_id ORDER BY SUM(district.A16) DESC LIMIT 1;\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT account_id) FROM trans WHERE type = 'VYBER KARTOU' AND account_id IN ( SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE' ) AND balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(loans.loan_id) FROM loans JOIN account ON loans.account_id = account.account_id JOIN client ON account.district_id = client.district_id JOIN disp ON loans.account_id = disp.account_id WHERE loans.date BETWEEN '1995-01-01' AND '1997-12-31' AND account.frequency = 'POPLATEK MESICNE' AND loans.amount >= 250000 AND loans.status = 'APPROVED';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN loan ON account.account_id = loan.account_id WHERE account.district_id = 1 AND loan.status = 'C';\t----- bird -----\tfinancial",
    "138": "SELECT district_id, COUNT(*) AS crimes_1995 FROM district WHERE A15 >= ( SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1 ) GROUP BY district_id;\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT distinct district_id FROM trans WHERE date = '1997-01-01' AND amount > 10000 GROUP BY district_id;\t----- bird -----\tfinancial",
    "142": "SELECT a.account_id, c.client_id, o.order_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN order o ON a.account_id = o.account_id WHERE o.k_symbol = 'SIPO' AND o.bank_to = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM account JOIN card ON account.district_id = card.disp_id JOIN client ON account.district_id = client.district_id WHERE card.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(t.amount) AS avg_credit_card_amount_2021 FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.date BETWEEN '2021-01-01' AND '2021-12-31';\t----- bird -----\tfinancial",
    "145": "SELECT DISTINCT account_id FROM trans WHERE type = 'VYBER KARTOU' AND YEAR(date) = 1998 AND amount < ( SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND YEAR(date) = 1998 );\t----- bird -----\tfinancial",
    "146": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id JOIN card cv ON c.client_id = cv.client_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F' AND cv.type = 'credit' AND l.status = 'active';\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN ( SELECT district_id FROM district WHERE A3 = 'South Bohemia' );\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id, a.district_id, a.frequency, a.date FROM account AS a JOIN client AS c ON a.district_id = c.district_id WHERE c.gender = 'female' AND c.birth_date >= '1990-01-01';\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT account_type FROM account WHERE account_type!= 'OWNER'\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'North Bohemia' AND t.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account JOIN trans ON account.account_id = trans.account_id JOIN loan ON account.account_id = loan.account_id WHERE trans.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN ( SELECT district_id FROM client WHERE YEAR(birth_date) >= 1997 );\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card JOIN loan ON card.disp_id = loan.account_id AND card.type = 'classic';\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id JOIN account a ON c.district_id = a.district_id WHERE d.A2 = 'Hl.m. Praha' AND c.gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT ( COUNT(CASE WHEN t.type = 'gold' AND t.issued_date < '1998-01-01' THEN 1 END) / COUNT(DISTINCT t.type) ) * 100 AS percent_of_gold_cards_issued_before_1998 FROM card t WHERE t.type = 'gold';\t----- bird -----\tfinancial",
    "156": "SELECT c.client_id, c.gender, c.birth_date, a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id JOIN client c ON a.district_id = c.district_id WHERE l.amount = (SELECT MAX(amount) FROM loan)\t----- bird -----\tfinancial",
    "157": "SELECT COUNT(*) FROM district JOIN trans ON district.district_id = trans.account_id WHERE district.A15 = 1995 AND trans.date >= '1995-01-01' AND trans.date <= '1995-12-31' AND district.district_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT d.district_id FROM account a JOIN order o ON a.account_id = o.account_id WHERE o.order_id = 33333 LIMIT 1;\t----- bird -----\tfinancial",
    "159": "SELECT t.trans_id, t.account_id, t.date, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN order o ON t.account_id = o.account_id JOIN client c ON o.client_id = c.client_id WHERE c.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account AS a JOIN loan AS l ON a.account_id = l.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT * FROM client WHERE client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT district.A2 FROM district WHERE district.district_id = (SELECT client.district_id FROM client WHERE client.client_id = 3541);\t----- bird -----\tfinancial",
    "163": "SELECT a.district_id, COUNT(lo.account_id) AS account_count FROM account a JOIN loan lo ON a.account_id = lo.account_id WHERE lo.status = 'A' GROUP BY a.district_id ORDER BY account_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.client_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(DISTINCT account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Jesenik';\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card ct ON d.disp_id = ct.disp_id WHERE ct.type = 'credit' AND c.district_id IN (SELECT district_id FROM district WHERE A10 >= 1996) AND ct.issued >= '1997-01-01';\t----- bird -----\tfinancial",
    "168": "SELECT ( SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE district.A11 > 10000 AND client.gender = 'F' ) AS women_count, ( SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id ) AS total_clients, ( SELECT ( ( SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id ) * 100.0 / ( SELECT COUNT(*) FROM client WHERE district.district_id = client.district_id ) ) FROM district WHERE district.A11 > 10000 ) AS percentage;\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(CASE WHEN loan.date BETWEEN '1997-01-01' AND '1997-12-31' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN loan.date BETWEEN '1996-01-01' AND '1996-12-31' THEN loan.amount ELSE 0 END)) / SUM(CASE WHEN loan.date BETWEEN '1996-01-01' AND '1996-12-31' THEN loan.amount ELSE 0 END) * 100 FROM loan JOIN client ON loan.account_id = client.client_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT district_id, SUM(A16) AS total_1996_crimes FROM district GROUP BY district_id;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT a.frequency, c.client_id, t.trans_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id WHERE a.account_id = 3 ORDER BY t.trans_id;\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK PO OBRATU' AND EXISTS (SELECT 1 FROM disp WHERE disp.account_id = account.account_id);\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS debt_amount FROM trans JOIN account ON trans.account_id = account.account_id WHERE account.client_id = 992; SELECT payments FROM client WHERE client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(t.amount) AS client_4_account_balance_851, c.gender FROM account a JOIN client c ON a.district_id = c.district_id JOIN trans t ON a.account_id = t.account_id WHERE t.trans_id = 851 AND c.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT c.type FROM client AS c WHERE c.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.gender, c.birth_date FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE d.A2 BETWEEN '1983' AND '1987' AND d.district_id = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, d.A10, l.amount FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.client_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND district_id = (SELECT district_id FROM account WHERE A2 = 'SIPO');\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date >= '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND type = 'junior';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague')) AS female_percentage FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'Prague');\t----- bird -----\tfinancial",
    "186": "SELECT ( SELECT COUNT(*) FROM client AS c JOIN trans AS t ON c.client_id = t.account_id WHERE c.gender = 'M' AND t.type = 'POPLATEK TYDNE' ) * 100.0 AS percentage_of_male_clients_for_weekly_statements FROM district AS d WHERE d.A2 = 'POPULACJA TYDNE' AND d.A3 = 'POPULACJA TYDNE' AND d.A4 = 'POPULACJA TYDNE' AND d.A5 = 'POPULACJA TYDNE' AND d.A6 = 'POPULACJA TYDNE' AND d.A7 = 'POPULACJA TYDNE' AND d.A8 = 1 AND d.A9 = 1 AND d.A10 = 1 AND d.A11 = 1 AND d.A12 = 1 AND d.A13 = 1 AND d.A14 = 1 AND d.A15 = 1 AND d.A16 = 1;\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'Owner' AND district_id IN ( SELECT district_id FROM account WHERE frequency = 'POPLATEK TYDNE' );\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, a.district_id, MIN(l.amount) AS lowest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE l.duration > 24 AND t.date < '1997-01-01' GROUP BY a.account_id, a.district_id HAVING MIN(l.amount) = (SELECT MIN(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id);\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id, c.gender, AVG(l.amount) AS avg_salary FROM account a JOIN client c ON a.district_id = c.district_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F' GROUP BY a.account_id, c.gender ORDER BY avg_salary ASC, a.account_id DESC LIMIT 1;\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loans.amount) AS average_loan_amount FROM loans JOIN account ON loans.account_id = account.account_id WHERE account.status = 'C' AND account.district_id = ( SELECT district_id FROM client WHERE client.gender = 'M' ) AND trans.k_symbol = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender IN ('Male', 'Female') AND c.birth_date BETWEEN '1900-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, c.gender FROM client AS c JOIN account AS a ON c.district_id = a.district_id JOIN card AS e ON a.account_id = e.account_id WHERE e.type = 'gold' AND a.status = 'active' AND disp.type = 'OWNER'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type AS most_common_bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom WHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(element = 'o') AS average_oxygen_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM connected);\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond ON c2.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE atom.element = 'na' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id, m.label FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id JOIN bond b ON a1.molecule_id = b.molecule_id WHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT AVG(element = 'c') * 100 AS carbon_percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(DISTINCT bond_id) AS triple_type_bonds FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "205": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT a.element AS elements_in_bond_atoms FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM atom WHERE bond_type = 'double';\t----- bird -----\ttoxicology",
    "208": "SELECT l.label, COUNT(a.atom_id) AS count FROM atom a JOIN connected c ON a.atom_id = c.atom_id1 AND a.atom_id2 = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN molecule ml ON a.molecule_id = ml.molecule_id WHERE ml.label = 'hydrogen' GROUP BY l.label ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT connected.atom_id, connected.atom_id2 FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '-' )\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM ( SELECT atom.element, COUNT(connected.atom_id) AS count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY atom.element ) AS subquery ORDER BY count ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id2 WHERE c1.atom_id = 'TR004_8' AND c2.atom_id = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'Sn'));\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a1.atom_id) AS iodine_atoms, COUNT(DISTINCT a2.atom_id) AS sulfur_atoms FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b1 ON c1.bond_id = b1.bond_id JOIN molecule m1 ON b1.molecule_id = m1.molecule_id JOIN atom a2 ON b1.atom_id2 = a2.atom_id JOIN connected c2 ON a2.atom_id = c2.atom_id JOIN bond b2 ON c2.bond_id = b2.bond_id JOIN molecule m2 ON b2.molecule_id = m2.molecule_id WHERE m1.label ='single' AND b1.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT AVG(percentage) AS carcinogenic_fluorine_percentage FROM ( SELECT m.molecule_id, AVG(f.percentage) AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN element e1 ON a1.element = e1.element JOIN element e2 ON a2.element = e2.element WHERE m.label = '+' AND e1.element = 'f' GROUP BY m.molecule_id ) subquery;\t----- bird -----\ttoxicology",
    "219": "SELECT AVG(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100 AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id AND b.bond_id = 'TR001_2_6' JOIN connected c ON a1.atom_id = c.atom_id AND c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT c.atom_id AS atom_id_1, c.atom_id2 AS atom_id_2 FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT b.bond_id FROM bond b JOIN connected c1 ON b.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id WHERE c2.atom_id = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT PERCENT( SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END), COUNT(bond_id) ) AS double_bond_percentage FROM connected WHERE atom_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(DISTINCT molecule_id)) * 100 AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "228": "SELECT molecule_id, SUM(element = 'h') AS hydrogen_count, (SUM(element = 'h') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206')) * 100 AS percent FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.molecule_id = connected.bond_id WHERE atom.molecule_id = 'TR206' GROUP BY molecule_id HAVING molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000' AND a2.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT m.label, a.element FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1; -- To check if the molecule is carcinogenic SELECT label FROM molecule WHERE molecule_id = 'TR010';\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'C' AND a2.element = 'C' AND b.bond_type = '-' AND NOT EXISTS (SELECT 1 FROM molecule WHERE label = '-') GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM bond JOIN connected ON bond.molecule_id = connected.atom_id AND connected.atom_id2 = bond.molecule_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT bond_id) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12') AND atom_id2 IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules_with_bromine FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "237": "SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN atom ON connected.atom_id = atom.atom_id AND connected.atom_id2 = atom.atom_id WHERE atom.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT m.molecule_id) AS triple_bond_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT molecule_id FROM molecule WHERE label = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.molecule_id, a.element, a2.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id = c2.atom_id2 JOIN atom AS a ON c1.atom_id = a.atom_id JOIN atom AS a2 ON c2.atom_id2 = a2.atom_id WHERE a.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule m JOIN ( SELECT molecule_id, COUNT(DISTINCT bond_id) AS double_bond_count FROM connected GROUP BY molecule_id ) cb ON m.molecule_id = cb.molecule_id WHERE cb.double_bond_count = ( SELECT MAX(double_bond_count) FROM ( SELECT molecule_id, COUNT(DISTINCT bond_id) AS double_bond_count FROM connected GROUP BY molecule_id ) cb2 );\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(count_bonds) AS average_bonds_iodine FROM ( SELECT element, COUNT(bond_id) AS count_bonds FROM connected WHERE element = 'i' GROUP BY element ) AS subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT a.element FROM atom a WHERE NOT EXISTS ( SELECT 1 FROM connected c WHERE c.atom_id = a.atom_id );\t----- bird -----\ttoxicology",
    "248": "SELECT a.atom_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE c.atom_id = 'TR041' AND c.atom_id2 = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT element FROM atom WHERE molecule_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT t1.molecule_id, SUM(b.bond_type) AS total_double_bonds FROM atom AS t1 JOIN bond AS b ON t1.molecule_id = b.molecule_id JOIN molecule AS m ON t1.molecule_id = m.molecule_id WHERE m.label = '+' GROUP BY t1.molecule_id ORDER BY total_double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "252": "SELECT c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'pb';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT (COUNT(b.bond_id) :: REAL / COUNT(DISTINCT a1.element, a2.element)) * 100 FROM bond b JOIN atom a1 ON b.molecule_id = a1.molecule_id AND a1.atom_id = b.atom_id JOIN atom a2 ON b.molecule_id = a2.molecule_id AND a2.atom_id = b.atom_id GROUP BY b.bond_id HAVING COUNT(DISTINCT a1.element, a2.element) = ( SELECT MAX(count) FROM (SELECT COUNT(DISTINCT element) AS count FROM connected GROUP BY atom_id) subquery )\t----- bird -----\ttoxicology",
    "255": "SELECT ( SELECT COUNT(CASE WHEN bond_type = '-' AND label = '+' THEN 1 END) * 100 FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id ) AS carcinogenic_proportion FROM bond WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT COUNT(*) FROM atom WHERE element IN ('C', 'H');\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id = ( SELECT atom_id FROM atom WHERE element ='s' );\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT a.element) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT SUM(COUNT(DISTINCT atom.atom_id, atom.element)) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#' AND (atom.element = 'p' OR atom.element = 'br');\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "263": "SELECT m.label, AVG(c.percent) AS avg_chlorine_percentage FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.atom_id = b.atom_id WHERE b.bond_type = '-' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT m.molecule_id FROM molecule m WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT SUM(1) AS total_carcinogenic_molecules FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id JOIN connected AS connected2 ON molecule.molecule_id = connected2.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id = connected2.atom_id AND connected.bond_id = bond.bond_id AND molecule.label = '+' AND molecule.molecule_id BETWEEN 'TR000' AND 'TR030';\t----- bird -----\ttoxicology",
    "267": "SELECT b.bond_type, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.molecule_id LIKE 'TR%' AND b.molecule_id BETWEEN 'TR000' AND 'TR050';\t----- bird -----\ttoxicology",
    "268": "SELECT element FROM atom WHERE molecule_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) AS iodine_bonds FROM atom WHERE element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'ca';\t----- bird -----\ttoxicology",
    "271": "SELECT b.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_1_8' JOIN connected AS c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_1_8' WHERE c1.atom_id = 'cl' AND c2.atom_id = 'c';\t----- bird -----\ttoxicology",
    "272": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom m ON c.atom_id = m.atom_id WHERE a.element = 'c' AND b.bond_type = '#3' AND m.label = '-';\t----- bird -----\ttoxicology",
    "273": "SELECT m.label, (COUNT(b.element = 'cl') * 100.0 / COUNT(DISTINCT m.molecule_id)) AS percentage FROM molecule m JOIN connected c ON m.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = '+' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "274": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type ='= ';\t----- bird -----\ttoxicology",
    "276": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond_type = '-1' AND label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT m.label FROM molecule m INNER JOIN connected c ON m.molecule_id = c.molecule_id INNER JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(DISTINCT CASE WHEN substr(a.element, 7, 1) = '4' AND m.label = '+' THEN a.element END) AS carcinogenic_4th_element_count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id;\t----- bird -----\ttoxicology",
    "282": "SELECT \"label\" AS ratio, ratio FROM connected WHERE \"atom_id\" = 'TR006' AND \"element\" = 'h';\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'ca' ) JOIN connected c2 ON c2.atom_id2 = ( SELECT atom_id FROM atom WHERE element = 'ca' ) JOIN bond b ON b.molecule_id = ( SELECT molecule_id FROM bond WHERE atom_id = c1.atom_id AND atom_id2 = c2.atom_id ) WHERE m.molecule_id = b.molecule_id;\t----- bird -----\ttoxicology",
    "284": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "285": "SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM connected WHERE bond_id = 'TR001_10_11');\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) AS total_compounds FROM molecule;\t----- bird -----\ttoxicology",
    "287": "SELECT molecule_id, COUNT(CASE WHEN bond_type ='='THEN 1 END) * 100.0 / SUM(COUNT(CASE WHEN bond_type ='='THEN 1 END)) AS percent FROM connected WHERE atom_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR047') GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT t1.molecule_id, t1.label, t2.element FROM molecule AS t1 JOIN atom AS t2 ON t1.molecule_id = t2.molecule_id JOIN bond AS t3 ON t2.molecule_id = t3.molecule_id WHERE t2.element IN ('cl', 'br', 'f', 'i','sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR010' OR m.label = 'TR020' OR m.label = 'TR030' OR m.label = 'TR040' OR m.label = 'TR050' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id2 JOIN molecule AS m ON c2.atom_id = m.molecule_id WHERE m.label = '+' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id FROM bond b JOIN connected c1 ON b.molecule_id = c1.atom_id JOIN connected c2 ON b.molecule_id = c2.atom_id2 WHERE c1.atom_id = 'TR000_1' AND c2.atom_id2 = 'TR000_1';\t----- bird -----\ttoxicology",
    "297": "SELECT a.* FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label <> '0';\t----- bird -----\ttoxicology",
    "298": "SELECT m.molecule_id, m.label, COUNT(c.atom_id) AS hydrogen_count, (COUNT(c.atom_id) * 100.0 / (SELECT SUM(label = '+') FROM molecule)) AS carcinogen_percentage FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id2 GROUP BY m.molecule_id, m.label\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(DISTINCT bond_id) AS double_bonds FROM connected WHERE atom_id = 'TR006'; SELECT label FROM molecule WHERE molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT molecule.label, atom.element FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE (element = 'cl' OR element = 'c' OR element = 'h' OR element = 'o' OR element ='s' OR element = 'n' OR element = 'p' OR element = 'na' OR element = 'br' OR element = 'f' OR element = 'i' OR element ='sn' OR element = 'pb' OR element = 'te' OR element = 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id ='molecule_id_1' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id ='molecule_id_2' JOIN atom a1 ON c1.atom_id2 = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE c.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT a.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id WHERE b.bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT atom_id FROM atom WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(DISTINCT b.bond_type) AS bond_types FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN bond b ON a.atom_id = b.molecule_id AND m.molecule_id = b.molecule_id WHERE m.label = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules, COUNT(m.molecule_id) AS total_carcinogenic_molecules FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type ='= ' AND m.label = '+';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element!='s' AND NOT EXISTS ( SELECT 1 FROM bond AS b JOIN atom AS ba ON b.molecule_id = ba.molecule_id WHERE ba.element ='s' AND b.bond_type ='= ' );\t----- bird -----\ttoxicology",
    "312": "SELECT label FROM connected WHERE atom_id = 'TR001_2_4' AND atom_id2 = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT atom.atom_id) AS atom_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(DISTINCT bond.bond_id) AS single_bonds FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'C' AND bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT m.label FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.molecule_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN atom AS a ON b.atom_id = a.atom_id WHERE a.element = 'Cl' AND m.label = '+';\t----- bird -----\ttoxicology",
    "316": "SELECT t1.molecule_id, t1.label FROM molecule AS t1 JOIN connected AS t2 ON t1.molecule_id = t2.atom_id JOIN connected AS t3 ON t2.atom_id2 = t3.atom_id JOIN atom AS t4 ON t3.bond_id = t4.molecule_id JOIN bond AS t5 ON t4.molecule_id = t5.molecule_id WHERE t5.bond_type = 'C' AND t1.label = '-';\t----- bird -----\ttoxicology",
    "317": "SELECT AVG(CASE WHEN element = 'Cl' AND label = '+' THEN 1 ELSE 0 END) * 100 AS percentage FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE element = 'Cl';\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT e.element) AS element_count FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id WHERE c2.atom_id = 'TR000_2' AND c1.atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = 'TR000_2' JOIN connected c2 ON c2.atom_id2 = 'TR000_4';\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT molecule_id, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) AS percentage FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id2 GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.element ='s' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE c.bond_id NOT NULL AND c2.bond_id NOT NULL GROUP BY m.molecule_id HAVING COUNT(DISTINCT c.atom_id) > 5 AND m.label = '-';\t----- bird -----\ttoxicology",
    "328": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=-' GROUP BY e.element;\t----- bird -----\ttoxicology",
    "329": "SELECT m.molecule_id, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id GROUP BY m.molecule_id ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT AVG(percentage) AS triple_bonded_carcinogenic_percentage FROM ( SELECT a.molecule_id, COUNT(c.atom_id) AS label_count FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' AND c.bond_type = '#' GROUP BY a.molecule_id ) subquery JOIN molecule m ON subquery.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(label) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN ( SELECT molecule_id FROM molecule WHERE label BETWEEN 'TR004' AND 'TR010' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(DISTINCT a.atom_id) AS carbon_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT molecule_id FROM atom WHERE atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'c' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type ='= ' ) AND atom_id2 ='molecule_id_TR012';\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond ON c2.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT cards.id FROM cards WHERE cards.cardKingdomFoilId = cards.cardKingdomId AND cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT cards.uuid, cards.name FROM cards WHERE cards.borderColor IS NULL AND cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "342": "SELECT c.name, MAX(c.faceConvertedManaCost) AS max_converted_mana FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%converted mana%' GROUP BY c.name ORDER BY max_converted_mana DESC;\t----- bird -----\tcard_games",
    "343": "SELECT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE s.frameVersion = 2015 AND l.status = 'legal' AND f.language = 'English' AND f.flavorText LIKE '%EDHRec%'; [EXPLANATION] 1. We start by selecting the 'name' column from the 'cards' table, which contains the names of all cards. 2. To find cards with specific EDHRec rankings, we join the 'foreign_data' table (which stores flavor texts) with the 'cards' table using the 'uuid' column. 3. We also join the 'legalities' table to ensure we only consider cards with a legal status (EDHRec rankings are considered legal). 4. To filter by the 2015 frame style, we join the'sets' table, which stores set information, including the frame version. 5. The WHERE clause applies multiple conditions to narrow down the results: - The frame version is 2015. - The status is 'legal' (indicating an EDHRec ranking). - The language of the flavor text is English. - The flavor text contains the phrase 'EDHRec', which we use as a proxy for EDHRec rankings. This SQL statement will return a list of card names that meet all the specified criteria, i.e., cards with 2015 frame style and EDHRec rankings below 100, in English flavor texts. [/EXPLANATION] [SQL] SELECT c.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE s.frameVersion = 2015 AND l.status = 'legal' AND f.language = 'English' AND f.flavorText LIKE '%EDHRec%';\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.rarity, c.printings, c.status FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity ='mythic' AND c.printings IS NOT NULL AND l.status = 'Banned' AND f.language = 'English' AND c.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT legalities.status FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE cards.type = 'Artifact' AND cards.side IS NULL AND legalities.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN legalities AS l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Stephen Daniel%' AND l.status = 'OK' AND r.uuid IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text AS ruling_text, rulings.date AS ruling_date FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s' )\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, (SELECT COUNT(*) FROM rulings AS r WHERE r.uuid = c.uuid) AS ruling_count, (SELECT isPromo FROM cards AS c WHERE c.uuid = r.uuid) AS is_promo FROM cards AS c WHERE (SELECT COUNT(*) FROM rulings AS r WHERE r.uuid = c.uuid) = (SELECT MAX(count(rulings.uuid)) FROM rulings) AND isPromo = 1;\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Annul numbered 29';\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.uuid, c.name, c.flavorText FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT AVG(CASE WHEN t.language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100 AS percentage FROM foreign_data t JOIN cards ON t.uuid = cards.uuid WHERE t.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT s.name, SUM(ct.total_cards) AS total_cards_per_set FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN card_translations ct ON t.language = 'Italian' AND ct.card_id = s.uuid GROUP BY s.name ORDER BY total_cards_per_set DESC;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE keywords LIKE '%infinite power%';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT asciiName FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT s.language FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid JOIN cards c ON s.code = c.setCode WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status ='restricted' AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text AS card_ruling FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn';\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE legalities.status ='restricted' AND foreign_data.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = (SELECT cards.uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT name FROM cards WHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT \"legalities\".\"status\" AS rule_of_playing_card FROM \"legalities\" JOIN \"cards\" ON \"legalities\".\"uuid\" = \"cards\".\"uuid\" WHERE \"cards\".\"name\" = 'Benalish Knight';\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE asciiName = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT ( SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' ) AS borderless_card_count, ( SELECT COUNT(*) FROM cards ) AS total_card_count, ( SELECT (COUNT(*) FILTER (WHERE borderColor = 'borderless')) * 100.0 / COUNT(*) FROM cards ) AS percentage_borderless_cards\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards WHERE isReprint = 1 AND flavorText LIKE '%German%';\t----- bird -----\tcard_games",
    "370": "SELECT MAX(DISTINCT language) AS num_borderless_russian_cards FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless';\t----- bird -----\tcard_games",
    "371": "SELECT ( COUNT(CASE WHEN foreign_data.language = 'French' AND foreign_data.isStorySpotlight = 1 THEN 1 END) * 100.0 / COUNT(CASE WHEN foreign_data.isStorySpotlight = 1 THEN 1 END) ) AS percentage FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE foreign_data.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT cards.name FROM cards WHERE cards.artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT cards.id FROM cards WHERE cards.convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT cards.name, cards.layout FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_id = sets.id WHERE cards.original_type = 'Summon - Angel' AND cards.subtypes NOT LIKE 'Angel%'\t----- bird -----\tcard_games",
    "378": "SELECT c.id, c.faceName, c.faceConvertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE (c.cardKingdomFoilId IS NOT NULL AND c.cardKingdomId IS NOT NULL) AND (c.faceConvertedManaCost > 5.0 AND fd.flavorText LIKE '%incredibly powerful%') GROUP BY c.id, c.faceName, c.faceConvertedManaCost HAVING COUNT(*) > 1 ORDER BY c.faceConvertedManaCost DESC;\t----- bird -----\tcard_games",
    "379": "SELECT cards.id FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE foreign_data.flavorText LIKE '%duel deck a%' AND legalities.status = 'legal';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT uuid FROM cards WHERE availability = 'paper' AND flavorText LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards WHERE rulings.uuid = ( SELECT uuid FROM rulings WHERE text ='status = \\'Banned\\'' ) AND borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT f.uuid, fd.language FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN sets AS s ON c.set_code = s.code WHERE c.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text AS ruling_text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Beacon of Immortality';\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(c.uuid), l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = 'future' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT DISTINCT cards.name, cards.colorIdentity FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE sets.code = 'OGW';\t----- bird -----\tcard_games",
    "388": "SELECT f.flavorText, s.language, st.translation FROM foreign_data f JOIN sets s ON f.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode WHERE s.code = '10E' AND s.convertedManaCost = 5 AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "389": "SELECT DISTINCT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT colorIdentity FROM cards WHERE id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.name, c.colors, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;\t----- bird -----\tcard_games",
    "393": "SELECT id FROM cards WHERE artist = 'John Avon'; ``` 2. Filter those cards to only include foil non-powerful cards: We'll add conditions to the previous query to filter out cards that are not foil, not powerful, and not designed by John Avon. We'll assume that foil cards are indicated by `cardKingdomFoilId` being NOT NULL, and powerful cards are indicated by `faceConvertedManaCost` being greater than 0. The query will be: ```sql [SQL] SELECT id FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND faceConvertedManaCost > 0; ``` 3. Count the number of such cards: Finally, we'll use the `COUNT` function to find the number of cards that meet the criteria. The query will be: ```sql [SQL] SELECT COUNT(id) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND faceConvertedManaCost > 0; ``` This final SQL statement will return the number of cards designed by John Avon that are foil non-powerful. [SQL] SELECT COUNT(id) FROM cards WHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND faceConvertedManaCost > 0;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL OR cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE (flavorText LIKE '%UDON%' OR cards.artist = 'UDON') AND (availability ='mtgo' AND hand = -1)\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1993' AND cards.availability = 'paper' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.layout = 'normal' AND c.frameVersion = 2003 AND c.borderColor = 'black' AND (s.isForeignOnly = 0 AND s.isOnlineOnly = 0) AND (l.status = 'available' AND l.format = 'paper,mtgo') AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana_cost FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Spanish';\t----- bird -----\tcard_games",
    "401": "SELECT (SUM(CASE WHEN frameEffects = 'legendary' AND isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM cards\t----- bird -----\tcard_games",
    "402": "SELECT SUM(isStorylight = 1 AND isTextless = 0) AS story_spotlight_without_text, COUNT(id) AS total_cards FROM cards WHERE isStorylight = 1 AND isTextless = 0 SELECT id FROM cards WHERE isStorylight = 1 AND isTextless = 0 AND story_spotlight_without_text > 0; SELECT (SUM(isStorylight = 1 AND isTextless = 0) / COUNT(id)) * 100 AS percentage FROM cards WHERE isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT f.name, (COUNT(c.uuid) * 100.0 / (SELECT COUNT(c.uuid) FROM cards c)) AS percentage FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE f.language = 'Spanish' GROUP BY f.name ORDER BY f.name;\t----- bird -----\tcard_games",
    "404": "SELECT f.language, s.name FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN sets s ON s.code = l.format WHERE s.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT set_translations.setCode) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Portuguese (Brasil)' AND sets.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT c.id, c.name, c.type, c.legal_status FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT subtypes FROM cards WHERE subtypes IS NOT NULL AND supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(DISTINCT cards.id) FROM cards JOIN ( SELECT rulings.uuid FROM rulings WHERE rulings.text LIKE '%triggered ability%' ) AS matching_rulings ON cards.uuid = matching_rulings.uuid WHERE cards.power IS NULL OR cards.power = '*';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text = 'This is a triggered mana ability.' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.artist = 'Erica Yang' AND fd.flavorText LIKE '%pauper%' AND c.availability = 'paper' AND c.hasFoil = 0;\t----- bird -----\tcard_games",
    "411": "SELECT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT f.name FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.type = 'Creature' AND c.layout = 'normal' AND c.borderColor = 'black' AND c.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN rulings ON cards.uuid = rulings.uuid WHERE rarity = 'print' AND date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT SET.language FROM foreign_data FD JOIN sets SET ON FD.uuid = SET.mcmId WHERE SET.code = 'Ravnica';\t----- bird -----\tcard_games",
    "415": "SELECT FORMAT = 'commander', STATUS = 'legal', COUNT(hasContentWarning = 0) AS no_content_warning, COUNT(ID) AS total_cards FROM cards WHERE format = 'commander' AND Status = 'legal' GROUP BY FORMAT, STATUS SELECT 100.0 * (no_content_warning / total_cards) AS percentage FROM ( SELECT FORMAT = 'commander', STATUS = 'legal', COUNT(hasContentWarning = 0) AS no_content_warning, COUNT(ID) AS total_cards FROM cards WHERE format = 'commander' AND Status = 'legal' GROUP BY FORMAT, STATUS ) AS subquery;\t----- bird -----\tcard_games",
    "416": "SELECT ( SELECT COUNT( CASE WHEN language = 'French' AND power IS NULL OR power = '*' THEN 1 END ) FROM cards ) * 100\t----- bird -----\tcard_games",
    "417": "SELECT COUNT(CASE WHEN foreign_data.language = 'Japanese' THEN 1 END) AS japanese_translated, COUNT(CASE WHEN sets.type = 'expansion' THEN 1 END) AS expansion_sets, (japanese_translated / expansion_sets) * 100 AS percentage FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid\t----- bird -----\tcard_games",
    "418": "SELECT asciiName FROM cards WHERE artist = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT c.name, c.power, c.promoTypes FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.power IS NULL OR c.power = '*' AND f.language = 'English' AND f.name LIKE '%Promotional% Arena League%' ORDER BY c.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT f.language FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.multiverse = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT c1.id AS kingdom_foil_id, c2.id AS kingdom_card_id, c1.name, c2.name FROM cards c1 JOIN cards c2 ON c1.id = c2.id WHERE c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL AND c2.cardKingdomFoilId IS NOT NULL AND c2.cardKingdomId IS NOT NULL ORDER BY c1.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT ( SELECT COUNT(Textless = 1 and layout = 'normal') FROM cards ) / COUNT(DISTINCT isTextless)\t----- bird -----\tcard_games",
    "425": "SELECT DISTINCT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.subtypes = 'Angel' AND c.subtypes = 'Wizard' AND r.text NOT LIKE '%multiple faces%';\t----- bird -----\tcard_games",
    "426": "SELECT s.name FROM sets s WHERE s.mtgoCode IS NULL ORDER BY s.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT flavorText FROM foreign_data WHERE uuid IN ( SELECT cards.uuid FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'ARC' AND sets.name = 'Archenemy' );\t----- bird -----\tcard_games",
    "428": "SELECT name, translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT baseSetSize, block, booster, booster_type, name, type, totalSetSize, parentCode, releaseDate FROM sets WHERE id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name ASC;\t----- bird -----\tcard_games",
    "431": "SELECT s.code, s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.isForeignOnly = 1 AND fd.language = 'Japanese' AND (s.isFoilOnly = 0 OR s.isFoilOnly = 1) AND s.availability = 'Available outside of the United States';\t----- bird -----\tcard_games",
    "432": "SELECT s.name AS russian_set, MAX(b.baseSetSize) AS max_base_set_size FROM sets s JOIN foreign_data f ON s.uuid = f.uuid JOIN cards c ON f.uuid = c.uuid JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Russian' GROUP BY s.name ORDER BY max_base_set_size DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT COUNT(DISTINCT foreign_data.uuid) AS total_cards, COUNT(*) FILTER (WHERE foreign_data.language = 'Chinese Simplified' AND sets.isOnlineOnly = 1) AS online_only_chinese_simplified_cards, (COUNT(*) FILTER (WHERE foreign_data.language = 'Chinese Simplified' AND sets.isOnlineOnly = 1)) * 100.0 / COUNT(DISTINCT foreign_data.uuid) AS percentage FROM foreign_data JOIN sets ON foreign_data.multiverseid = sets.uuid WHERE sets.type = 'Set';\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.id) FROM sets WHERE sets.mtgoCode IS NULL OR sets.mtgoCode = '' AND sets.language = 'Japanese';\t----- bird -----\tcard_games",
    "435": "SELECT c.id, c.borderColor FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%border%black%' GROUP BY c.id, c.borderColor HAVING COUNT(DISTINCT fd.language) = 1\t----- bird -----\tcard_games",
    "436": "SELECT \"id\" FROM \"cards\" WHERE \"frameEffects\" = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT * FROM cards WHERE colorIndicator = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 174 AND st.language = 'English';\t----- bird -----\tcard_games",
    "439": "SELECT s.name FROM sets s WHERE s.code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar');\t----- bird -----\tcard_games",
    "441": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation LIKE '%07/13/2007%';\t----- bird -----\tcard_games",
    "442": "SELECT s.baseSetSize, s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'English' AND tr.translation = 'Masques and Mirage';\t----- bird -----\tcard_games",
    "443": "SELECT s.id, s.name, s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT f.name, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'boros';\t----- bird -----\tcard_games",
    "445": "SELECT f.language, f.flavorText, c.type FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.watermark = 'colorpie';\t----- bird -----\tcard_games",
    "446": "SELECT id FROM sets WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT s.code FROM sets AS s JOIN set_translations AS st ON s.code = st.setCode WHERE st.language = 'English' AND s.type = 'Expansion' AND s.name LIKE '%Commander%';\t----- bird -----\tcard_games",
    "448": "SELECT c1.type FROM cards c1 JOIN (SELECT * FROM cards WHERE watermark = 'abzan') AS matching_card ON c1.uuid = matching_card.uuid;\t----- bird -----\tcard_games",
    "449": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT converted_mana_cost AS unconverted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'white' AND cards.power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN legalities AS l ON c.uuid = l.uuid JOIN sets AS s ON c.uuid = s.uuid JOIN set_translations AS st ON s.code = st.setCode JOIN rulings AS r ON c.uuid = r.uuid WHERE isPromo = 1 AND side IS NOT NULL AND ( SELECT translation FROM set_translations WHERE setCode = s.code AND language = 'en' ) IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT purchaseUrls FROM legalities WHERE format = 'bundle';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT artist) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'black' AND (foreign_data.flavorText LIKE '%arena,mtgo%' OR foreign_data.flavorText = '%arena,mtgo%') GROUP BY artist;\t----- bird -----\tcard_games",
    "459": "SELECT id, name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%Battra, Dark Destroyer%';\t----- bird -----\tcard_games",
    "461": "SELECT name, convertedManaCost FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT name FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT set_translations.language) AS translation_count FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation LIKE '%Angel of Mercy%';\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT card_name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE flavor_text LIKE '%Hauptset Zehnte Edition%'\t----- bird -----\tcard_games",
    "465": "CREATE TEMPORARY TABLE temp_cards AS SELECT * FROM cards WHERE name LIKE '%Ancestor's Chosen%';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%designed by Adam%' AND c.setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT SUM(baseSetSize) AS number_of_cards FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT SETS.name FROM SETS JOIN SET_TRANSLATIONS ON SETS.code = SET_TRANSLATIONS.setCode WHERE SET_TRANSLATIONS.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT mtgoCode FROM sets WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE language = 'Italian' AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.setCode = 'Coldsnap' AND fd.borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT c.name, c.convertedManaCost FROM cards AS c JOIN ( SELECT setCode, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' GROUP BY setCode ) AS subquery ON c.setCode = subquery.setCode AND c.convertedManaCost = subquery.max_converted_mana_cost;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE name = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name AS card_number_4_in_set_Coldsnap FROM cards WHERE number = 4 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN sets ON cards.uuid = sets.mcmId WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM foreign_data WHERE foreign_data.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Ancestor''s Chosen' );\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT language FROM foreign_data WHERE flavorText IS NOT NULL AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "482": "SELECT flavorText FROM foreign_data WHERE language = 'German' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": "SELECT f.flavorText, l.language, r.text FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN rulings r ON f.uuid = r.uuid WHERE l.language = 'Italian' AND s.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "484": "SELECT f.flavorText, c.name, c.convertedManaCost FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.setCode = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Reminisce' );\t----- bird -----\tcard_games",
    "486": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT PERCENTAGE( SUM(CASE WHEN flavorText LIKE '%incredibly powerful%' THEN 1 ELSE 0 END) / SUM(CASE WHEN name = 'Coldsnap' THEN 1 ELSE 0 END) ) AS percentage_of_incredibly_powerful_cards FROM foreign_data\t----- bird -----\tcard_games",
    "488": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = '2017/7/14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT s.mcmId FROM sets s WHERE s.code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT s.mcmName FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = '2017/6/9';\t----- bird -----\tcard_games",
    "492": "SELECT \"type\" FROM \"sets\" WHERE \"name\" = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT sets.parentCode FROM sets WHERE sets.name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.name, r.text FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_id = s.id JOIN set_translations st ON s.code = st.setCode WHERE f.flavorText LIKE '%Jim Pavelec%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN foreign_data fd ON s.code = fd.multiverseid WHERE s.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT SUM(baseSetSize) AS number_of_cards_in_set FROM sets WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT \"expansion_type\" FROM \"sets\" WHERE \"code\" = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT DISTINCT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN rulings r ON s.uuid = r.uuid WHERE fd.flavorText = 'Tendo Ice Bridge' AND r.language = 'French';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT t.language) FROM sets AS s INNER JOIN set_translations AS t ON s.code = t.setCode WHERE s.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT s.name AS set_name FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Japanese' AND s.name = 'Fellwar Stone';\t----- bird -----\tcard_games",
    "501": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE s.code = 'Journey into Nyx Hero''s Path' GROUP BY c.name, c.convertedManaCost HAVING MAX(l.status) = 0 ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT s.name AS expansion_type FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = 'World Championship Decks 2004' AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT name AS simplified_chinese_translation FROM foreign_data WHERE language = 'Chinese Simplified' AND name = 'Mirrodin';\t----- bird -----\tcard_games",
    "506": "SELECT s.name, (SUM(isNonFoilOnly = 1) / SUM(language = 'Japanese')) * 100 AS percentage_non_foil_only FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN sets AS s ON s.code = c.setCode WHERE s.language = 'Japanese' GROUP BY s.name;\t----- bird -----\tcard_games",
    "507": "SELECT (SUM(CASE WHEN fd.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_online_only FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE fd.language = 'Portuguese (Brazil)';\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT sets.code, sets.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE cards.artist = 'Aleksi Briclot' AND cards.isTextless = 1\t----- bird -----\tcard_games",
    "509": "SELECT s.id FROM sets s JOIN cards c ON s.code = c.mcmId GROUP BY s.id ORDER BY MAX(c.baseSetSize) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT c.name, c.artist, MAX(c.convertedManaCost) AS highest_cost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.face = 'IS NULL' GROUP BY c.name, c.artist ORDER BY highest_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effect FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE (cardKingdomFoilId AND cardKingdomId) IS NOT NULL GROUP BY frameEffects ORDER BY most_common_frame_effect DESC LIMIT 1;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.expansionType = 'commander' GROUP BY s.id;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.convertedManaCost FROM cards c JOIN ( SELECT id, convertedManaCost FROM cards ORDER BY convertedManaCost DESC LIMIT 10 ) subq ON c.id = subq.id WHERE c.format = 'duel';\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' GROUP BY format HAVING COUNT(DISTINCT format) = 1;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.artist = 'Volkan Ba\u00c7\u00b5a' AND fd.language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.type = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT play_format, cards.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE status = 'Banned' GROUP BY play_format ORDER BY MAX(COUNT(status = 'Banned')) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM foreign_data WHERE multiverseid = (SELECT id FROM sets WHERE name = 'Battlebond');\t----- bird -----\tcard_games",
    "520": "SELECT MIN(artist) AS least_illustrated_by, MIN(sets.baseSetSize) AS min_format_size FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE foreign_data.type = 'illustrator';\t----- bird -----\tcard_games",
    "521": "SELECT c.status, c.format, c.hasContentWarning, c.isWizardsOfTheCoast FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_id = s.id WHERE s.frameVersion = '1997' AND fd.flavorText LIKE '%illustrated by D. Alexander Gregory%' AND s.code = 'legacy' AND (l.hasContentWarning = 1 OR l.isWizardsOfTheCoast = 1);\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND l.format = 'EDHRec' ORDER BY c.edhrecRank ASC LIMIT 1;\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS average_sets_per_year, SUBSTR(scryfall_illustrations.language, 1, 2) AS common_language FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON sets.uuid = rulings.uuid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY sets.baseSetSize, SUBSTR(scryfall_illustrations.language, 1, 2);\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE BorderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT cards.uuid FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status IN ('banned','restricted') AND cards.format = 'oldschool';\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.set_name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Korean' AND NOT EXISTS ( SELECT 1 FROM set_translations tt WHERE tt.setCode = s.code AND tt.language = '%Japanese%' );\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersion FROM cards WHERE artist = 'Allen Williams'; SELECT name FROM cards WHERE artist = 'Allen Williams' AND rarity = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, MAX(Reputation) AS high_reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') GROUP BY DisplayName ORDER BY high_reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE YEAR(v.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.DisplayName ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT users.Id) FROM votes JOIN users ON votes.UserId = users.Id JOIN votes ON votes.PostId = users.Id WHERE votes.VoteTypeId = 2 -- Assuming upvotes have VoteTypeId = 2 GROUP BY users.Id HAVING SUM(CASE WHEN votes.VoteTypeId = 3 THEN 1 ELSE 0 END) > 1 -- Assuming downvotes have VoteTypeId = 3\t----- bird -----\tcodebase_community",
    "536": "SELECT u.Id, u.DisplayName, u.CreationDate FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Views > 10 AND v.CreationDate > '2013-12-31' GROUP BY u.Id, u.DisplayName, u.CreationDate HAVING COUNT(DISTINCT v.Id) > 0;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT users.DisplayName AS owner FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts AS sub_p WHERE sub_p.OwnerUserId = p.OwnerUserId);\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(postHistory.CommentCount) FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answers FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age > 65 AND posts.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT `Location` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Title` = 'Eliciting priors from experts');\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Title FROM posts JOIN post_links ON posts.Id = post_links.PostId JOIN post_links ON post_links.RelatedPostId = posts.Id JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(t2.Count) FROM tags t2) ORDER BY p.CreaionDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(DISTINCT \"badges\".\"Id\") AS total_badges FROM \"badges\" WHERE \"badges\".\"Name\" = 'csgillespie';\t----- bird -----\tcodebase_community",
    "552": "SELECT badges.Name FROM users JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE DisplayName = 'csgillespie' AND YEAR(Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN ( SELECT UserId, COUNT(Id) AS BadgeCount FROM badges GROUP BY UserId ) b ON u.Id = b.UserId WHERE b.BadgeCount = ( SELECT MAX(BadgeCount) FROM ( SELECT UserId, COUNT(Id) AS BadgeCount FROM badges GROUP BY UserId ) subquery )\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(badges.Id) AS average_badges FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN badges ON users.Id = badges.Id WHERE users.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT (COUNT(CASE WHEN u.Age > 65 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes AS v WHERE v.PostId = (SELECT Id FROM posts WHERE OwnerUserId = 58) AND v.CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(COUNT(Id)) AS max_creation_date_of_votes FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id GROUP BY CreationDate ORDER BY max_creation_date_of_votes DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN ( SELECT PostId, MAX(Score) AS MaxScore FROM comments GROUP BY PostId ) max_scores ON c.PostId = max_scores.PostId AND c.Score = max_scores.MaxScore JOIN posts AS post_max ON p.Id = post_max.Id;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS comment_count FROM posts AS p JOIN comments AS c ON p.Id = c.PostId WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(p.FavoriteCount) AS total_favorite_counts FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Id = 3025 AND p.CreaionDate = '2014/4/23 20:29:39';\t----- bird -----\tcodebase_community",
    "564": "SELECT comments.Text FROM comments JOIN postHistory ON comments.Id = postHistory.Id JOIN posts ON postHistory.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ParentId = 107829 LIMIT 1;\t----- bird -----\tcodebase_community",
    "565": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE u.Id = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(p.Id) AS post_count FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(votes.Id) AS num_votes FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "570": "SELECT \"Name\" FROM \"badges\" JOIN \"users\" ON \"badges\".\"UserId\" = \"users\".\"Id\" WHERE \"users\".\"DisplayName\" = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(Id) FROM posts WHERE OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT SUM(ViewCount) AS total_views FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE UserId IN ( SELECT Id FROM users WHERE Reputation >= 17 ) AND Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId = ( SELECT b.Id FROM badges b WHERE b.Name = 'Accepted Answer' ) AND u.WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text LIKE '%thank you user93%';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments AS c JOIN users AS u ON c.UserId = u.Id WHERE u.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'user_referred_in_question' AND v.PostId = ( SELECT Id FROM posts WHERE Title = 'Understanding what Dassault iSight is doing?' )\t----- bird -----\tcodebase_community",
    "579": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Necromancer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT v.PostId) = 1;\t----- bird -----\tcodebase_community",
    "581": "SELECT users.DisplayName FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN votes AS v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa' AND v.CreationDate > p.CreaionDate;\t----- bird -----\tcodebase_community",
    "583": "SELECT u.DisplayName, SUM(v.Score) AS total_score FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Yevgeny' GROUP BY u.Id LIMIT 1;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Id, u.Id AS user_id, u.DisplayName AS user_name, c.Text AS comment_text, c.CreationDate FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.PostId = ( SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?' )\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.Title LIKE '%data%' AND users.AccountId = posts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Title LIKE '%variance%' AND v.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount FROM posts p JOIN tags t ON p.Tags LIKE '%' || t.TagName || '%' JOIN comments c ON p.Id = c.PostId WHERE t.TagName = 'humor' GROUP BY p.Id, p.Title, c.Text;\t----- bird -----\tcodebase_community",
    "588": "SELECT SUM(comments.Score) FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE users.Id = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT u.Id AS user_id, MAX(u.Reputation) AS highest_reputation FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY highest_reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(Views) AS lowest_views FROM users WHERE Id = (SELECT MIN(Id) FROM users);\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId WHERE YEAR(votes.CreationDate) = 2011 AND votes.VoteTypeId = (SELECT Id FROM badges WHERE Name = 'Supporter');\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT Users.Id) AS NumUsersWithMoreThanFiveBadges FROM users JOIN badges ON users.Id = badges.UserId GROUP BY users.Id HAVING COUNT(badges.Id) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'New York' AND badges.Name LIKE '%Teacher%' AND badges.Name LIKE '%Supporter%';\t----- bird -----\tcodebase_community",
    "594": "SELECT u.Reputation FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON p.Id = c.PostId JOIN votes v ON p.Id = v.PostId WHERE ph.RevisionGUID IS NOT NULL AND c.Text IS NOT NULL AND v.VoteTypeId IN (1, 2, 3) -- Upvote and Downvote GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT p.Id) = 1 AND SUM(ph.ViewCount) >= 1000;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.Id AS UserId, u.DisplayName, b.Name AS BadgeName FROM users u JOIN votes v ON u.Id = v.UserId JOIN comments c ON v.PostId = c.PostId JOIN posts p ON c.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id GROUP BY u.Id, u.DisplayName, b.Name ORDER BY COUNT(c.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'India' AND badges.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT ( ( SELECT COUNT(*) FROM badges AS b1 WHERE b1.Name = 'Student' AND b1.Date BETWEEN '2010-01-01' AND '2010-12-31' ) / ( SELECT COUNT(*) FROM badges AS b2 WHERE b2.Name = 'Student' AND b2.Date BETWEEN '2011-01-01' AND '2011-12-31' ) ) * 100 AS percentage_difference;\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS unique_commenters FROM postHistory ph JOIN comments c ON ph.PostId = c.PostId WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Title, p.ViewCount AS Popularity FROM posts p JOIN postLinks l ON p.Id = l.PostId JOIN postLinks rl ON p.Id = rl.RelatedPostId WHERE l.RelatedPostId = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT c.Score, th.PostHistoryTypeId FROM comments c JOIN postHistory th ON c.PostId = th.PostId JOIN posts p ON th.PostId = p.Id WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(fav_count) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Id = 686 AND YEAR(posts.CreaionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes.UpVotes) AS average_up_votes, AVG(users.Age) AS average_user_age FROM votes JOIN users ON votes.UserId = users.Id WHERE users.Id IN ( SELECT users.Id FROM posts GROUP BY posts.OwnerUserId HAVING COUNT(posts.Id) > 10 );\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges AS b JOIN votes AS v ON b.Id = v.PostId JOIN users AS u ON v.UserId = u.Id WHERE b.Date = '2010-07-19 19:39:08.0' AND u.Reputation > 0;\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.CreaionDate = '2010-07-19 19:25:47.0' LIMIT 1;\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE posts.Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE v.VoteTypeId = 1 -- Assuming '1' represents upvotes GROUP BY b.Name ORDER BY MAX(u.Reputation) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "611": "WITH badge_holders AS ( SELECT UserId FROM badges WHERE Name = 'badge_name' AND Date = '2010-07-19 19:39:08' ) SELECT u.Reputation FROM users u JOIN badge_holders bh ON u.Id = bh.UserId;\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT u.Id, u.DisplayName, b.Name, b.Date FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Location = 'Rochester, NY' GROUP BY u.Id, u.DisplayName, b.Name ORDER BY b.Date DESC;\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT users.Id) AS teacher_count, COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage FROM users WHERE users.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE Age BETWEEN 13 AND 18)) AS teenager_percentage FROM badges WHERE Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE posts.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT users.Id, users.Age, users.DisplayName, users.Location, tags.TagName FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN tags ON posts.Id = tags.ExcerptPostId WHERE users.Location = 'Vienna, Austria' GROUP BY users.Id, users.Age, users.DisplayName, users.Location, tags.TagName HAVING COUNT(DISTINCT posts.Id) >= 1;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT u.Id) AS adults_with_supporter_badge FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.UserId = b.Id WHERE b.Name = 'Supporter' AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT u.Id, SUM(v.Views) AS total_views FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = '7/19/2010 7:39:08 PM' GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "621": "SELECT u.DisplayName, b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users) AND b.Name LIKE 'Lowest Reputation';\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges b JOIN votes v ON b.Id = v.PostId WHERE v.UserId = (SELECT Id FROM users WHERE DisplayName = 'Sharpie')\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT users.Id) AS elder_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT u.DisplayName FROM users AS u WHERE u.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT users.Id) AS user_count_from_new_york FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.DisplayName, MAX(u.Views) AS highest_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.DisplayName ORDER BY highest_views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT (COUNT(Id WHERE YEAR(CreationDate) = 2010) / COUNT(Id WHERE YEAR(CreationDate) = 2011)) AS vote_ratio_2010_2011 FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT tags.TagName FROM tags JOIN users ON users.Id = tags.ExcerptPostId WHERE users.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo');\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) AS \"Votes by Harlan\" FROM users WHERE DisplayName = 'Harlan';\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id AS post_id, MAX(a.AnswerCount) AS max_answers_count FROM posts p JOIN answers a ON p.Id = a.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName ='slashnick' GROUP BY p.Id ORDER BY max_answers_count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(ViewCount) AS max_popularity FROM posts WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder');\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Matt Parker' AND posts.Score > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(DISTINCT comments.Id) AS negative_comments FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t1.TagName FROM tags AS t1 JOIN posts AS p1 ON t1.ExcerptPostId = p1.Id JOIN users AS u1 ON p1.OwnerUserId = u1.Id JOIN votes AS v1 ON p1.Id = v1.PostId WHERE u1.DisplayName = 'Mark Meckes' AND p1.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM posts WHERE DisplayName = 'Community') AS percentage FROM posts WHERE TagName = 'r';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(view_count) - SUM(view_count) FROM posts WHERE posts.owner_id = (SELECT id FROM users WHERE display_name = 'Mornington') AND posts.owner_id = (SELECT id FROM users WHERE display_name = 'Amos');\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'commentator' AND badges.Date BETWEEN '2014-01-01' AND '2014-12-31';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts WHERE posts.CreaionDate >= '2010-07-21 00:00:00' AND posts.CreaionDate < '2012-07-22 00:00:00';\t----- bird -----\tcodebase_community",
    "643": "SELECT users.DisplayName, users.Age FROM users JOIN ( SELECT userId, MAX(views) AS max_views FROM posts_views GROUP BY userId ) AS highest_views ON users.Id = highest_views.userId;\t----- bird -----\tcodebase_community",
    "644": "SELECT pl.LastEditDate, pu.Id FROM posts AS pl JOIN last_editors AS le ON pl.Id = le.PostId JOIN users AS pu ON le.UserId = pu.Id WHERE pl.Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c1.PostId JOIN comments c2 ON p.Id = c2.PostId JOIN users u1 ON c1.UserId = u1.Id JOIN users u2 ON c2.UserId = u2.Id WHERE c1.Score > 60 AND c2.Score > 60 AND p.PostTypeId = 2 -- Assuming '2' represents questions; adjust as needed\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id JOIN votes v ON b.Id = v.PostId WHERE u.Location = 'North Pole' AND b.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59'\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE p.FavoriteCount > 150;\t----- bird -----\tcodebase_community",
    "649": "SELECT postHistory.PostId, COUNT(postHistory.Id) AS post_history_count, MAX(postHistory.CreationDate) AS last_edit_date FROM postHistory JOIN posts ON postHistory.PostId = posts.Id WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY postHistory.PostId;\t----- bird -----\tcodebase_community",
    "650": "SELECT users.Id, users.DisplayName, users.Location, users.LastAccessDate FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'outliers' ORDER BY users.LastAccessDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "651": "SELECT p.title FROM posts p JOIN posts AS related_post ON p.Id = related_post.ParentId JOIN posts AS monitor_post ON related_post.PostId = monitor_post.Id JOIN tags AS time_tag ON monitor_post.Tags LIKE '%time_tag.TagName%' WHERE p.Title = 'How to tell if something happened in a data set which monitors a value over time' AND time_tag.Count > 0;\t----- bird -----\tcodebase_community",
    "652": "SELECT b.PostId, b.Name FROM badges b JOIN users u ON b.UserId = u.Id JOIN posts p ON u.Id = p.OwnerUserId WHERE u.DisplayName = 'Samuel' AND EXTRACT(YEAR FROM p.CreationDate) = 2013\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN postHistory AS ph ON p.Id = ph.PostId JOIN postLinks AS pl ON ph.PostId = pl.PostId JOIN postHistory AS h2 ON pl.RelatedPostId = h2.PostId WHERE ph.RevisionGUID IN ( SELECT RevisionGUID FROM postHistory WHERE PostId = ( SELECT MAX(ViewCount) FROM posts ) )\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON posts.OwnerUserId = users.Id JOIN posts_tags ON posts.Id = posts_tags.PostId JOIN tags ON posts_tags.TagId = tags.Id WHERE tags.TagName = 'hypothesis-testing' AND posts.PostTypeId = (SELECT TypeId FROM PostTypes WHERE Name = 'excerpt');\t----- bird -----\tcodebase_community",
    "655": "SELECT p.Title AS 'Post Title', v.LinkTypeId AS 'Link Type ID' FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'What are principal component scores?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "656": "SELECT t1.DisplayName FROM users AS t1 JOIN posts AS t2 ON t1.Id = t2.OwnerUserId WHERE t2.ParentId IS NOT NULL AND t2.Score = (SELECT MAX(Score) FROM posts WHERE t2.ParentId = t2.Id) LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT p.Title FROM posts p JOIN badges b ON p.OwnerUserId = b.Id GROUP BY p.Title ORDER BY SUM(p.ViewCount) DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT TagName) FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE posts.PostCount BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts);\t----- bird -----\tcodebase_community",
    "661": "SELECT u.Id, u.DisplayName, u.Reputation, u.CreationDate FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 GROUP BY u.Id, u.DisplayName, u.Reputation, u.CreationDate HAVING COUNT(v.Id) = ( SELECT MAX(count) FROM ( SELECT COUNT(v.Id) AS count FROM votes v2 WHERE v2.UserId = u.Id GROUP BY v2.PostId ) AS subquery ) ORDER BY u.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(votes.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE YEAR(posts.CreationDate) = 2011 AND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(users.Age) AS youngest_user_id FROM users WHERE users.Id IN ( SELECT MIN(Age) FROM users );\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(votes.score) FROM comments AS c JOIN posts AS p ON c.PostId = p.Id JOIN votes AS v ON c.Id = v.PostId WHERE p.CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG( COUNT(ph.Id) / 12 ) AS average_monthly_links FROM postHistory ph JOIN posts p ON ph.PostId = p.Id WHERE p.CreaionDate BETWEEN '2010-01-01' AND '2010-12-31' AND p.AnswerCount <= 2;\t----- bird -----\tcodebase_community",
    "666": "SELECT MAX(posts.FavoriteCount) AS most_valuable_post_id FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.UserId = 1465;\t----- bird -----\tcodebase_community",
    "667": "SELECT t1.Title FROM posts AS t1 JOIN postLinks AS t2 ON t1.Id = t2.PostId JOIN posts AS t3 ON t2.RelatedPostId = t3.Id WHERE t2.CreationDate = (SELECT MIN(t4.CreationDate) FROM postLinks AS t4 WHERE t4.PostId = t1.Id) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users AS u JOIN ( SELECT UserId, COUNT(Name) AS BadgeCount FROM badges GROUP BY UserId ) AS sub ON u.Id = sub.UserId WHERE sub.BadgeCount = ( SELECT MAX(BadgeCount) FROM ( SELECT UserId, COUNT(Name) AS BadgeCount FROM badges GROUP BY UserId ) AS sub2 )\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(CreationDate) AS first_vote_date FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(users.CreationDate) AS youngest_first_post_date FROM users JOIN posts ON users.Id = posts.OwnerUserId WHERE users.Age = (SELECT MIN(users.Age) FROM users);\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN ( SELECT UserId, MIN(Date) AS AcquiredFirst FROM badges WHERE Name = 'Autobiographer' GROUP BY UserId ) sub ON u.Id = sub.UserId JOIN posts p ON sub.UserId = p.OwnerUserId\t----- bird -----\tcodebase_community",
    "672": "SELECT u.Id, COUNT(v.Id) AS favorite_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId JOIN users voter ON v.UserId = voter.Id WHERE u.Location = 'United Kingdom' GROUP BY u.Id HAVING COUNT(v.Id) >= 4\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(v.PostId) AS average_posts_voted_by_oldest_users FROM votes v JOIN users u ON v.UserId = u.Id JOIN posts p ON v.PostId = p.Id WHERE u.Age = (SELECT MAX(Age) FROM users);\t----- bird -----\tcodebase_community",
    "674": "SELECT u.DisplayName FROM users u WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes AS reputation_votes ON users.Id = reputation_votes.UserId JOIN votes AS view_votes ON users.Id = view_votes.PostId WHERE reputation_votes.VoteTypeId = 1 AND view_votes.VoteTypeId = 2 AND reputation_votes.BountyAmount > 0 AND view_votes.BountyAmount = 0 AND reputation_votes.CreationDate > '2022-01-01' AND view_votes.CreationDate > '2022-01-01';\t----- bird -----\tcodebase_community",
    "676": "SELECT u.DisplayName FROM users u WHERE u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(DISTINCT p.Id) AS total_posts_2010 FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND YEAR(p.CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN votes AS v ON p.Id = v.PostId JOIN users AS voter ON v.UserId = voter.Id WHERE u.DisplayName = 'highest_scorer_name' AND v.VoteTypeId = 1 -- Assuming upvote has a type of 1 AND voter.Id = 'highest_scorer_id' -- Replace 'highest_scorer_id' with the actual ID of the highest scorer GROUP BY p.Id, p.Title ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.Id = c.PostHistoryId WHERE p.CreationDate >= '2011-01-01' AND p.CreationDate < '2012-01-01' AND ph.RevisionGUID LIKE '%view%' GROUP BY u.Id HAVING SUM(ph.Score) > 20000;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 AND p.FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts WHERE YEAR(CreationDate) = 2010 );\t----- bird -----\tcodebase_community",
    "683": "SELECT percentage FROM (SELECT COUNT(Id) AS total_posts, COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000) AS high_reputation_posts FROM posts) AS subquery;\t----- bird -----\tcodebase_community",
    "684": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE Age BETWEEN 13 AND 18)) AS percentage FROM users;\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(ViewCount) AS total_views FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId INNER JOIN users ON users.Id = postHistory.UserId WHERE posts.Text = 'Computer Game Datasets' AND postHistory.RevisionGUID = ( SELECT RevisionGUID FROM postHistory WHERE PostId = ( SELECT Id FROM posts WHERE Text = 'Computer Game Datasets' ) ORDER BY CreationDate DESC LIMIT 1 );\t----- bird -----\tcodebase_community",
    "686": "SELECT AVG(ViewCount) AS average_view_count FROM posts\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(comments.Id) AS comment_count FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.Score = ( SELECT MAX(Score) FROM posts );\t----- bird -----\tcodebase_community",
    "688": "SELECT p.Id, COUNT(v.Id) AS comment_count FROM posts AS p JOIN votes AS v ON p.Id = v.PostId JOIN users AS u ON v.UserId = u.Id WHERE p.ViewCount > 35000 AND u.Id!= v.UserId GROUP BY p.Id HAVING comment_count = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Id = 183 GROUP BY u.Id ORDER BY LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, MAX(b.Date) AS latest_badge_date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' GROUP BY b.Name, u.Id\t----- bird -----\tcodebase_community",
    "691": "SELECT SUM(votes.UpVotes) FROM users JOIN votes ON users.Id = votes.UserId WHERE users.Age BETWEEN 19 AND 65 AND votes.UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MAX(popularity) - stats_badges.CreationDate AS time_to_badge FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE users.DisplayName = 'Zolomon' AND stats_badges.UserId = badges.Id GROUP BY stats_badges.Id;\t----- bird -----\tcodebase_community",
    "693": "SELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.* FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Analysing wind data with R' AND u.DisplayName = 'User Display Name' ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT users.Id) AS 'Number_of_users' FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.UserId) FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT MAX(CreationDate) AS \"IrishStat_Account_Creation_Date\" FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT u.DisplayName, (COUNT(p.Id) * 100.0 / COUNT(DISTINCT u.Id)) AS percentage FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Score > 50 GROUP BY u.DisplayName ORDER BY percentage DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE Score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE Id < 15 AND COUNT(*) <= 20 GROUP BY TagId;\t----- bird -----\tcodebase_community",
    "704": "SELECT tags.TagName, tags.ExcerptPostId, tags.WikiPostId FROM tags WHERE tags.TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, v.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Id = ( SELECT UserId FROM comments WHERE Text = 'fine, you win :)' );\t----- bird -----\tcodebase_community",
    "706": "SELECT TEXT FROM comments WHERE PostId = ( SELECT Id FROM posts WHERE Title LIKE '%linear regression%' )\t----- bird -----\tcodebase_community",
    "707": "SELECT p.Id, p.Title, c.Text, c.Score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 AND c.Score = (SELECT MAX(c2.Score) FROM comments c2 WHERE c2.PostId = p.Id AND c2.Score > 0);\t----- bird -----\tcodebase_community",
    "708": "SELECT u.CreationDate, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostType = 'http://';\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT c.PostId) AS num_posts FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT SUM(CASE WHEN c.Score = 0 THEN 1 ELSE 0 END) AS zero_score_comments FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id GROUP BY p.Id HAVING COUNT(c.Id) = 1;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT users.Id) AS total_users_40 FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN comments ON posts.Id = comments.PostId WHERE comments.Score = 0 AND users.Age >= 40\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id AS post_id, c.Text AS comment_text FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.Id, u.UpVotes FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'R is also lazy evaluated.';\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT c.UserId, u.DisplayName FROM comments c JOIN votes v ON c.Id = v.PostId JOIN users u ON v.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND v.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT 100.0 * COUNT(CASE WHEN c.Score BETWEEN 5 AND 10 AND v.UserId = 0 THEN 1 END) / COUNT(CASE WHEN c.Score BETWEEN 5 AND 10 THEN 1 END) AS percentage FROM comments c JOIN votes v ON c.UserId = v.UserId WHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superpower JOIN hero_power ON hero_power.hero_id = superpower.id JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superpower AS sp JOIN hero_power AS hp ON sp.id = hp.power_id JOIN superhero AS sh ON hp.hero_id = sh.id WHERE sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(sp.id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(DISTINCT s.id) FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN colour AS c ON ha.attribute_id = c.id JOIN superpower AS sp ON sp.id = s.alignment_id WHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN colour c ON ha.attribute_id = c.id WHERE c.colour = 'Blue' AND c.id = (SELECT colour.id FROM colour WHERE colour.colour = 'Blond') AND s.hair_colour_id = (SELECT id FROM colour WHERE colour.colour = 'Blond')\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT s.superhero_name, s.height_cm FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY s.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.id) AS popularity FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE superhero.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.superhero_name, sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Speed' GROUP BY s.publisher_id ORDER BY MIN(attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.id = colour.id WHERE colour.colour = 'Gold' AND attribute.id = (SELECT id FROM colour WHERE colour = 'Gold') AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "734": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(DISTINCT hero_id) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Blond' AND attribute.id IN (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero_intelligence FROM hero_attribute WHERE attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race_id FROM superhero WHERE superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name, a.attribute_name, a.attribute_value FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND a.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND attribute.attribute_value = 100 AND superhero.gender_id = (SELECT id FROM alignment WHERE alignment_name = 'Female');\t----- bird -----\tsuperhero",
    "741": "SELECT s.superhero_name, COUNT(hp.power_id) AS num_powers FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id GROUP BY s.superhero_name ORDER BY num_powers DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT SUM(CASE WHEN hero_power.power_id = (SELECT id FROM superpower WHERE power_name ='self-interest') THEN 1 ELSE 0 END) AS count_self_interest_superheroes, COUNT(hero_attribute.hero_id) AS published_by_marvel_comics FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN hero_attribute ON hero_power.power_id = hero_attribute.power_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.alignment = 'Bad' GROUP BY alignment;\t----- bird -----\tsuperhero",
    "744": "SELECT COUNT(DISTINCT superhero.id) AS marvel_superheroes, COUNT(DISTINCT superhero.id) AS dc_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('Marvel Comics', 'DC Comics') GROUP BY publisher.publisher_name; This SQL statement first joins the'superhero' and 'publisher' tables based on the publisher_id foreign key. It then filters the records to only include those where the publisher_name is either 'Marvel Comics' or 'DC Comics'. After that, it groups the results by publisher_name and calculates the count of distinct superheroes for each publisher. The final result will be a table with two columns:'marvel_superheroes' and 'dc_superheroes', showing the number of unique superheroes published by Marvel Comics and DC Comics, respectively. To find the difference in the number of superheroes published by these two publishers, you can simply subtract the'marvel_superheroes' value from the 'dc_superheroes' value. Here's the complete SQL statement: [SQL] SELECT COUNT(DISTINCT superhero.id) AS marvel_superheroes, COUNT(DISTINCT superhero.id) AS dc_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('Marvel Comics', 'DC Comics') GROUP BY publisher.publisher_name; SELECT (dc_superheroes - marvel_superheroes) AS difference;\t----- bird -----\tsuperhero",
    "745": "SELECT \"publisher_id\" FROM \"superhero\" WHERE \"publisher_name\" = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.attribute_name!= 'alignment_id';\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN hero_power hp ON ha.attribute_id = hp.attribute_id JOIN superpower sp ON hp.power_id = sp.id JOIN superhero s ON hp.hero_id = s.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT s.superpower_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.gender_id = (SELECT id FROM alignment WHERE attribute_name ='male');\t----- bird -----\tsuperhero",
    "752": "SELECT s.superhero_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'No Colour');\t----- bird -----\tsuperhero",
    "754": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169;\t----- bird -----\tsuperhero",
    "758": "SELECT h.hair_colour FROM superhero AS s JOIN hero_attribute AS h ON s.id = h.hero_id JOIN attribute AS a ON h.attribute_id = a.id WHERE s.full_name = 'human superhero' AND s.height_cm = 185 AND a.attribute_name = 'hair_colour';\t----- bird -----\tsuperhero",
    "759": "SELECT MAX(weight_kg) AS max_weight_kg FROM superhero\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13)) AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13;\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment_name = 'Male') AND weight_kg > (SELECT AVG(weight_kg) FROM superhero) * 0.79;\t----- bird -----\tsuperhero",
    "762": "SELECT power_name AS most_common_power, MAX(COUNT(*)) AS count FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id GROUP BY superpower.id ORDER BY count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM superhero WHERE hero_power.power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name ='strength' AND attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name ='strength' );\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(superhero.id) AS average_superhero_id FROM superhero WHERE skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(ha.attribute_value) AS max_durability FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'durability' AND s.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM alignment AS superhero JOIN hero_attribute AS attribute ON superhero.id = attribute.hero_id JOIN alignment AS colour ON attribute.attribute_id = colour.id WHERE superhero.full_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT a.colour AS eyes, b.colour AS hair, c.colour AS skin FROM colour AS a JOIN colour AS b ON a.id = b.id AND a.colour = 'black' JOIN colour AS c ON a.id = c.id AND a.colour = 'brown' JOIN colour AS d ON a.id = d.id AND a.colour = 'blonde' JOIN superhero AS s ON s.gender_id = 1 AND s.race_id = 1 JOIN hero_attribute AS ea1 ON ea1.hero_id = s.id AND ea1.attribute_id = a.id JOIN hero_attribute AS ea2 ON ea2.hero_id = s.id AND ea2.attribute_id = b.id JOIN hero_attribute AS ea3 ON ea3.hero_id = s.id AND ea3.attribute_id = c.id JOIN superpower AS sp ON sp.power_id = ea1.attribute_value AND sp.power_id = ea2.attribute_value AND sp.power_id = ea3.attribute_value JOIN publisher AS p ON p.id = s.publisher_id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender = 'Female';\t----- bird -----\tsuperhero",
    "773": "SELECT s1.superhero_name, s2.publisher_name FROM superhero s1 JOIN superhero s2 ON s1.gender_id = s2.gender_id AND s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id WHERE s1.id < s2.id\t----- bird -----\tsuperhero",
    "774": "SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT MULTIPLY( DIVIDE( SUM( CASE WHEN colour = 'Blue' AND gender = 'Female' THEN 1 ELSE 0 END, ), COUNT(*) FILTER (WHERE gender = 'Female'), ), 100, ) AS percentage FROM superhero;\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT hero_power.power_id) AS power_count FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_power.hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT s.superhero_name, s.height_cm FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN colour c ON h.attribute_id = c.id WHERE c.colour = 'Amber' AND h.attribute_value = 1;\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_id JOIN colour AS c1 ON ha1.attribute_id = c1.id JOIN colour AS c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Black' AND c2.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.skin_colour_id = (SELECT colour.id FROM colour WHERE colour.colour = 'Gold');\t----- bird -----\tsuperhero",
    "784": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Vampire');\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT r.race, a.alignment FROM superhero AS s JOIN race AS r ON s.race_id = r.id JOIN alignment AS a ON s.alignment_id = a.id WHERE s.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percent FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE s.gender_id = g.id AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg) AS average_weight FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) - SUM(weight_kg) AS difference FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT s.superhero_name, AVG(h.height_cm) AS avg_height FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id GROUP BY s.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name HAVING MAX(ha.attribute_value) = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'Speed' ) );\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT hero_attribute.attribute_name, hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name, c.colour, ha.attribute_value FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN hero_attribute ha ON s.id = ha.hero_id WHERE c.colour = 'Blue' AND ha.attribute_value = 1 AND c.colour = 'Brown'\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT (SUM(superhero_name WHERE color = 'Blue') / COUNT(superhero_name)) * 100.0 AS percentage FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes, (SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END)) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT MAX(height_cm) AS tallest_superhero FROM superhero WHERE superhero_name = 'Question';\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id AS power_id FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT s.full_name FROM superhero s LEFT JOIN hero_attribute ha ON s.id = ha.hero_id AND ha.attribute_value = 0 WHERE s.weight_kg IS NULL OR s.weight_kg = 0;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour_name FROM colour AS c JOIN hero_attribute AS ha ON c.id = ha.colour_id JOIN superhero AS s ON ha.hero_id = s.id WHERE s.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT superhero.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE hero_attribute.attribute_value = 'weight_kg' AND colour.colour = '108kg' AND hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'height_cm') AND superhero.height_cm = 188 AND hero_attribute.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'race');\t----- bird -----\tsuperhero",
    "809": "SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE id = 38);\t----- bird -----\tsuperhero",
    "810": "SELECT superhero_id, MAX(attribute_value) AS max_attribute_value FROM hero_attribute GROUP BY superhero_id;\t----- bird -----\tsuperhero",
    "811": "SELECT s.full_name, s.superhero_name, GROUP_CONCAT(sp.power_name) AS superpowers FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN superpower sp ON ha.attribute_id = sp.id WHERE s.superhero_name = 'Atom IV' GROUP BY s.full_name, s.superhero_name;\t----- bird -----\tsuperhero",
    "812": "SELECT superhero_name, full_name FROM superhero WHERE eye_colour_id IN ( SELECT id FROM colour WHERE colour = 'Blue' )\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT superhero.full_name, superhero.skin_colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.skin_colour_id = colour.id WHERE hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name IN ('attribute_value_75_to_80') AND ha.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT superhero.full_name, superhero.race.race FROM superhero JOIN race ON superhero.race_id = race.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE (colour.colour = 'blue' AND hero_attribute.attribute_id = attribute.id AND attribute.attribute_name = 'hair_colour') AND (gender.gender ='male' AND superhero.gender_id = gender.id);\t----- bird -----\tsuperhero",
    "818": "SELECT 100.0 * SUM(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) / COUNT(alignment.id = 2) AS percentage FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN attribute_value = 7 THEN 1 ELSE 0 END) AS blue_eyes, SUM(CASE WHEN attribute_value = 1 THEN 1 ELSE 0 END) AS no_eye_colour, (SUM(CASE WHEN attribute_value = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN attribute_value = 1 THEN 1 ELSE 0 END)) AS difference FROM hero_attribute WHERE hero_id IN ( SELECT id FROM superhero WHERE weight_kg IS NULL );\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN alignment ON hero_attribute.hero_id = alignment.id WHERE alignment.attribute_name = 'Strength';\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero WHERE hero_attribute.colour_id = ( SELECT id FROM colour WHERE colour = 'Green' ) AND hero_attribute.attribute_name IN ('skin_colour', 'race') AND hero_attribute.attribute_value = 1 AND alignment.alignment = 'Villain';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name, MAX(s.weight_kg) AS heaviest_weight FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics' GROUP BY s.superhero_name HAVING MAX(s.weight_kg);\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(hero_attribute.height_cm) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.attribute_name = 'race' AND alignment.colour = 'Non-Human' AND superhero.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT hero_id, attribute_value, attribute_name FROM hero_attribute WHERE attribute_value = 100 AND attribute_name = 'Speed' GROUP BY hero_id, attribute_name HAVING COUNT(*) = 1\t----- bird -----\tsuperhero",
    "829": "SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, (SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics')) AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id JOIN attribute a ON ha.attribute_id = a.id WHERE s.superhero_name = 'Black Panther' GROUP BY a.attribute_name ORDER BY MIN(attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN superpower ON hero_attribute.attribute_id = superpower.id WHERE superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero_height FROM superhero WHERE superhero_name = 'tallest superhero' GROUP BY superhero_name HAVING MAX(height_cm) = (SELECT MAX(height_cm) FROM superhero);\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT ( SELECT COUNT(*) FROM superhero WHERE gender = 'Female' AND publisher_name = 'George Lucas' ) AS female_count, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'George Lucas' ) AS total_george_lucas_superheroes, ( SELECT ( ( SELECT COUNT(*) FROM superhero WHERE gender = 'Female' ) * 100.0 ) / ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'George Lucas' ) ) AS percentage FROM superhero WHERE publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT MULTIPLY( DIVIDE( SUM( CASE WHEN superhero.alignment = 'Good' THEN 1 ELSE 0 END ), COUNT(superhero.publisher_name) ), 100.0 ) FROM superhero WHERE superhero.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = superhero.id);\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'brown_eyes' AND s.weight_kg < 100;\t----- bird -----\tsuperhero",
    "840": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE superhero.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT s.weight_kg, r.race FROM superhero s JOIN race r ON s.race_id = r.id JOIN alignment a ON s.race_id = a.id WHERE s.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT s.id FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON ha1.hero_id = alignment.id JOIN hero_attribute AS ha2 ON ha2.attribute_id = alignment.id JOIN alignment AS eye_colour ON eye_colour.id = ha1.attribute_id JOIN alignment AS colour ON colour.id = ha2.attribute_id WHERE alignment.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.height_cm > (SELECT AVG(h2.height_cm) FROM superhero h2) * 0.8;\t----- bird -----\tsuperhero",
    "846": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 20 AND q.position = 5 AND EXISTS ( SELECT 1 FROM qualifying q2 WHERE q2.driverId = d.driverId AND q2.q1 IS NOT NULL AND q2.q1 < q.q1 );\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = lt.raceId WHERE r.raceId = 19 AND q.number IN (2); -- Extract the surname of the driver with the best lap time SELECT SUBSTR(d.surname, INSTR(d.surname,'') + 1) FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = lt.raceId WHERE r.raceId = 19 AND q.number IN (2);\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.name, races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.location = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT circuits.position FROM circuits INNER JOIN constructors ON circuits.circuitId = constructors.constructorId WHERE constructors.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location NOT LIKE 'Asia%' AND c.location NOT LIKE 'Europe%' AND r.year = 2010;\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.name, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM circuits AS circ JOIN races AS race ON circ.circuitId = race.circuitId JOIN constructorResults AS results ON race.raceId = results.raceId AND results.constructorId = c.constructorId WHERE race.raceId = 24 AND results.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE q.q2_time = '0:01:40' AND r.raceId = 355;\t----- bird -----\tformula_1",
    "861": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId WHERE q.q3 LIKE '%0:01:54%' AND q.qualifyId = 903;\t----- bird -----\tformula_1",
    "862": "SELECT year, url FROM races WHERE name = 'Bahrain Grand Prix';\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT drivers.driverId) AS num_drivers_finished FROM races INNER JOIN lapTimes ON races.raceId = lapTimes.raceId INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.raceId = 592 AND l.time IS NOT NULL ORDER BY STRTOTIME(STR_TO_DATE(d.dob, '%Y-%m-%d'), '%H:%M:%S') ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 161 AND lt.time LIKE 'M:SS%';\t----- bird -----\tformula_1",
    "867": "SELECT c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes lt ON d.driverId = lt.driverId AND r.raceId = lt.raceId JOIN ( SELECT raceId, MAX(time) AS fastestLapTime FROM lapTimes WHERE raceId = 933 GROUP BY raceId ) fl ON r.raceId = fl.raceId AND lt.time = fl.fastestLapTime JOIN constructors con ON d.driverId = con.driverId JOIN circuits circ ON r.circuitId = circ.circuitId WHERE r.raceId = 933;\t----- bird -----\tformula_1",
    "868": "SELECT location, lat, lng FROM circuits WHERE name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructorResults cr JOIN races r ON cr.raceId = r.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.raceId = 9 GROUP BY c.constructorId ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE raceId = 345 AND driverId = 'Lucas di Grassi';\t----- bird -----\tformula_1",
    "871": "SELECT d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = q.raceId WHERE r.name = 'Race No. 347' AND q.q2_time = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 45 AND lt.lap = 1 AND lt.time LIKE '0:01:33%' ORDER BY d.forename, d.surname LIMIT 1;\t----- bird -----\tformula_1",
    "873": "SELECT t1.time FROM races AS t1 JOIN lapTimes AS t2 ON t1.raceId = t2.raceId JOIN drivers AS t3 ON t2.driverId = t3.driverId WHERE t3.forename = 'Bruce' AND t3.surname = 'McLaren' AND t1.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = 'San Marino Grand Prix' AND r.year = 2006 AND ds.position = 2;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE date = '2015-11-29' AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "877": "SELECT raceId FROM races WHERE year = 872;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 348 ORDER BY lt.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN results r ON d.driverId = r.driverId AND r.statusId = (SELECT statusId FROM status WHERE status = 'Winner') JOIN races rc ON r.raceId = rc.raceId WHERE l.time = (SELECT MAX(time) FROM lapTimes WHERE driverId = d.driverId) AND rc.year = (SELECT MAX(year) FROM races);\t----- bird -----\tformula_1",
    "880": "SELECT PERCENT_RANK() OVER (ORDER BY fastestLapSpeed(raceId = 853) DESC) - PERCENT_RANK() OVER (ORDER BY fastestLapSpeed(raceId = 854) DESC) AS percentage FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta');\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(DISTINCT drivers.driverId) * 100.0 / COUNT(drivers.driverId) AS completion_rate FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE races.date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(races.year) AS first_singapore_grand_prix_year FROM races WHERE races.name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT races.name FROM races JOIN seasons ON races.year = seasons.year JOIN ( SELECT year, MIN(date) AS min_date FROM races GROUP BY year ) AS earliest_races ON races.year = earliest_races.year AND races.date = earliest_races.min_date;\t----- bird -----\tformula_1",
    "885": "SELECT r.name, r.date FROM races r JOIN ( SELECT year, MAX(round) AS max_round FROM races WHERE year = 1999 GROUP BY year ) max_rounds ON r.year = max_rounds.year AND r.round = max_rounds.max_round;\t----- bird -----\tformula_1",
    "886": "SELECT MAX(round) AS max_round_year FROM races;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.year = 2000 AND r.year!= 2000 AND r.year = 2017;\t----- bird -----\tformula_1",
    "888": "SELECT circuits.name, circuits.location FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.year = (SELECT MIN(year) FROM races) AND circuits.country = 'Europe';\t----- bird -----\tformula_1",
    "889": "SELECT MAX(races.year) AS last_british_grand_prix_year FROM races JOIN circuits ON races.circuitId = circuits.circuitId JOIN seasons ON races.year = seasons.year WHERE circuits.location = 'Brands Hatch' AND seasons.url LIKE '%British Grand Prix%';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) AS number_of_seasons FROM races JOIN circuits ON races.circuitId = circuits.circuitId CROSS JOIN seasons WHERE circuits.location LIKE '%Silverstone%';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname, rs.position, rs.positionText FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId WHERE r.name = '2010 Singapore Grand Prix' ORDER BY rs.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN status ON results.statusId = status.statusId WHERE status.status = 'points' GROUP BY drivers.driverId ORDER BY MAX(results.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, r.points FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = '2017 Chinese Grand Prix' LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT races.name AS race_name, drivers.forename AS driver_forename, drivers.surname AS driver_surname FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "895": "SELECT AVG(lapTimes.milliseconds) FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'Malaysian Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * COUNT(DISTINCT r.raceId) AS percentage FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId JOIN constructors AS con ON r.constructorId = con.constructorId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year >= 2010 AND r.position > 1 GROUP BY r.year HAVING COUNT(DISTINCT r.raceId) > 0;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, c.nationality, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT MIN(drivers.dob) AS youngest_driver_dob, drivers.forename AS youngest_driver_name FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN constructors ON qualifying.constructorId = constructors.constructorId WHERE constructors.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "899": "SELECT c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, COUNT(r.raceId) AS race_count FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt HAVING race_count = 4;\t----- bird -----\tformula_1",
    "900": "SELECT c.name, c.location, r.name AS race_name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE c.country = 'USA' AND r.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name, c.name AS circuit_name, r.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT races.name, drivers.forename, drivers.surname FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE lapTimes.position < 20 AND drivers.forename = 'Alex' AND drivers.surname = 'Yoong';\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(*) FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId JOIN constructors ON results.constructorId = constructors.constructorId WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' AND circuits.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "904": "SELECT r.name AS race_name, s.year AS year FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE d.driverRef = 'Michael Schumacher' AND l.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE raceId = r.raceId AND driverId = l.driverId);\t----- bird -----\tformula_1",
    "905": "SELECT AVG(results.points) AS average_points FROM races JOIN drivers ON races.driverId = drivers.driverId JOIN results ON races.raceId = results.raceId WHERE races.year = 2000 AND drivers.forename = 'Eddie' AND drivers.surname = 'Irvine';\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS first_race, s.points AS first_race_points FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "907": "SELECT r.raceId, r.name, c.country FROM races r JOIN constructors c ON r.circuitId = c.constructorId JOIN seasons s ON r.year = s.year WHERE s.year = 2017 ORDER BY r.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races AS r JOIN seasons AS s ON r.year = s.year JOIN circuits AS c ON r.circuitId = c.circuitId ORDER BY laps DESC LIMIT 1;\t----- bird -----\tformula_1",
    "909": "SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix') AS percentage FROM races WHERE country = 'Germany' AND name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE location IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring');\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT c.country FROM circuits c JOIN ( SELECT circuitId, MAX(alt) AS max_altitude FROM circuits GROUP BY circuitId ) max_altitudes ON c.circuitId = max_altitudes.circuitId WHERE c.alt = max_altitudes.max_altitude;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT forename, surname, dob FROM drivers ORDER BY strftime('%Y-%m-%d', dob) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT * FROM drivers WHERE forename = 'Anthony';\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.circuitRef, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009;\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT r.name, s.location, r.date FROM races r JOIN circuits s ON r.circuitId = s.circuitId WHERE s.location = 'Silverstone';\t----- bird -----\tformula_1",
    "922": "SELECT circuitId FROM circuits WHERE name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(DISTINCT r.circuitId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "924": "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona-Catalunya' AND circuits.location = 'Spain';\t----- bird -----\tformula_1",
    "925": "SELECT c.name, c.location, c.country, c.lat, c.lng, c.alt FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Spanish Grand Prix 2009';\t----- bird -----\tformula_1",
    "926": "SELECT r.name FROM races AS r JOIN results AS res ON r.raceId = res.raceId JOIN drivers AS d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN results r ON lt.driverId = r.driverId AND r.statusId = ( SELECT statusId FROM status WHERE status = 'Winner' ) JOIN races rc ON r.raceId = rc.raceId WHERE rc.name = 'Formula_1 race' GROUP BY d.driverId, d.forename, d.surname HAVING max(r.fastestLapSpeed) = r.fastestLapSpeed;\t----- bird -----\tformula_1",
    "928": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, rs.position, rs.positionText FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results rs ON r.resultId = rs.resultId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2007 ORDER BY rs.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT r.name FROM races r JOIN drivers d ON r.raceId = d.driverId JOIN qualifying q ON r.raceId = q.raceId AND d.driverId = q.driverId WHERE d.driverId = 1;\t----- bird -----\tformula_1",
    "930": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.rank DESC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT c.name, r.name AS race_name, MAX(l.fastestLapSpeed) AS fastest_lap_speed FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN lapTimes l ON r.raceId = l.raceId WHERE r.name = 'Spanish Grand Prix' GROUP BY c.name, r.race_name;\t----- bird -----\tformula_1",
    "932": "SELECT r.year FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.driverRef = 'Lewis Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT races.positionOrder AS final_rank FROM races JOIN drivers ON races.driverId = drivers.driverId JOIN qualifying ON races.raceId = qualifying.raceId JOIN constructorResults ON races.raceId = constructorResults.raceId JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE races.name = 'Chinese Grand Prix' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM drivers JOIN pitStops ON drivers.driverId = pitStops.driverId JOIN races ON pitStops.raceId = races.raceId WHERE races.name = 'Australian Grand Prix 1989' AND pitStops.stop = 4 LIMIT 1;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId WHERE races.name = '2008 Australian Grand Prix';\t----- bird -----\tformula_1",
    "936": "SELECT t.lap AS fastest_lap FROM lapTimes t JOIN drivers d ON t.driverId = d.driverId JOIN races r ON t.raceId = r.raceId WHERE d.forename = 'Lewis' AND r.name = 'Australian Grand Prix' AND r.year = 2008 ORDER BY t.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT l.position FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId JOIN qualifying q ON r.raceId = q.raceId AND d.driverId = q.driverId JOIN status st ON rs.statusId = st.statusId WHERE r.name = 'Chinese Grand Prix' AND q.position = 2 AND st.status = '1' -- ranked second AND r.year = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, s.status FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId JOIN status AS s ON r.statusId = s.statusId WHERE r.year = 2008 AND r.name = 'Australian Grand Prix' AND s.status = 'Champion';\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId WHERE drivers.nationality = 'British' AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT d.driverId) AS participated_races FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.name = '2008 Chinese Grand Prix' AND r.year = 2008 AND d.points > 0;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis');\t----- bird -----\tformula_1",
    "942": "SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT (COUNT(DISTINCT races.raceId) AS \"num_races\") * 1.0 / (SELECT COUNT(*) FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AS \"completion_rate\";\t----- bird -----\tformula_1",
    "944": "SELECT races.year, races.url FROM races WHERE races.year = 2008 AND races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.name, lat, lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT c.nationality, MAX(r.points) AS max_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE c.nationality = 'British' GROUP BY c.nationality;\t----- bird -----\tformula_1",
    "949": "SELECT c.constructorRef, c.name, MAX(sr.points) AS highest_points FROM constructorResults sr JOIN constructors c ON sr.constructorId = c.constructorId GROUP BY c.constructorRef, c.name ORDER BY highest_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT c.constructorId) FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE con.nationality = 'Japanese' AND cr.points = 0 AND r.year IN (SELECT year FROM seasons WHERE COUNT(raceId) = 2);\t----- bird -----\tformula_1",
    "952": "SELECT c.constructorRef, c.name, r.year FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId JOIN races r ON cs.raceId = r.raceId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructorId) FROM constructors WHERE nationality = 'French' AND lap > 50;\t----- bird -----\tformula_1",
    "954": "SELECT (COUNT(DISTINCT drivers.driverId) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009)) AS completion_percentage FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE races.year BETWEEN 2007 AND 2009 AND drivers.nationality = 'Japanese';\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(CAST(rt.time AS REAL)) AS average_time_in_seconds FROM races r JOIN results rt ON r.raceId = rt.raceId JOIN drivers d ON rt.driverId = d.driverId JOIN constructors c ON rt.constructorId = c.constructorId WHERE rt.statusId = (SELECT statusId FROM status WHERE status = 'Champion') AND r.year < 1975 GROUP BY r.year ORDER BY r.year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year >= 1976 AND ds.position = 2 AND d.dob > '1975-12-31';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers WHERE drivers.nationality = 'Italian' AND results.position IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE lt.time IS NOT NULL GROUP BY d.driverId HAVING lt.time = (SELECT MAX(time) FROM lapTimes ltt WHERE ltt.driverId = lt.driverId);\t----- bird -----\tformula_1",
    "959": "SELECT r.driverId, r.number, r.laps, r.fastestLap, r.rank FROM results r JOIN status s ON r.statusId = s.statusId JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId JOIN races e ON r.raceId = e.raceId WHERE e.year = 2009 AND s.status = 'Champion' ORDER BY r.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = ( SELECT circuitId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009 );\t----- bird -----\tformula_1",
    "961": "SELECT r.name, r.year FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN pitStops ps ON r.raceId = ps.raceId GROUP BY r.raceId ORDER BY SUM(l.milliseconds) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT ( SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId WHERE races.year BETWEEN 2000 AND 2005 AND drivers.year(dob) < 1985 AND races.laps > 50 ) / ( SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN races ON drivers.driverId = races.driverId WHERE races.year BETWEEN 2000 AND 2005 ) * 100 AS percentage;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId WHERE lapTimes.time LIKE '02:00.00%' AND drivers.nationality = 'France';\t----- bird -----\tformula_1",
    "964": "SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT drivers.driverId) AS driver_count FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT d.forename, d.surname, s.status_text FROM drivers d JOIN driver_standings st ON d.driverId = st.driverId JOIN seasons s ON st.raceId = s.raceId WHERE s.year = (SELECT year FROM seasons WHERE url = 'https://example.com/2022-season') ORDER BY st.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "968": "SELECT forename FROM drivers WHERE forename = 'Robert';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(driverId) FROM drivers WHERE forename LIKE '%British%' AND surname LIKE '%British%' AND dob = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, r.name, r.date, r.time, l.time FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes l ON r.raceId = l.raceId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND l.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId) GROUP BY d.driverId ORDER BY l.time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT r.driverRef FROM drivers d JOIN constructors c ON d.driverRef = c.constructorRef JOIN races r ON d.driverId = r.driverId WHERE c.nationality = 'Germany' AND r.year = ( SELECT MAX(year) FROM ( SELECT year(dob) AS year FROM drivers WHERE nationality = 'Germany' ) subquery );\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.year = (SELECT year FROM seasons WHERE url = 'https://example.com/seasons/2022') AND d.dob = '1971-01-01' AND l.time = (SELECT MIN(time) FROM lapTimes WHERE driverId = d.driverId AND raceId = r.raceId)\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.name AS race_name, l.time AS latest_lap_time FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes l ON d.driverId = l.driverId JOIN (SELECT driverId, MAX(time) AS latest_lap_time FROM lapTimes GROUP BY driverId) latest_laps ON d.driverId = latest_laps.driverId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' AND l.time = latest_laps.latest_lap_time ORDER BY d.forename, d.surname, r.name, latest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT seasons.url, races.name AS race_name, results.fastestLapTime AS fastest_lap_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceId = results.raceId GROUP BY seasons.url, races.name ORDER BY fastest_lap_time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT MIN(max_lap_time) AS lowest_speed_year FROM (SELECT raceId, MAX(time) AS max_lap_time FROM lapTimes GROUP BY raceId) AS subquery WHERE max_lap_time = (SELECT MIN(max_lap_time) FROM (SELECT raceId, MAX(time) AS max_lap_time FROM lapTimes GROUP BY raceId) AS subquery2);\t----- bird -----\tformula_1",
    "976": "SELECT drivers.driverId, SUM(lapTimes.milliseconds) AS total_milliseconds FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.lap = 1 GROUP BY drivers.driverId ORDER BY total_milliseconds DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(DISTINCT results.driverId) FROM races JOIN results ON races.raceId = results.raceId JOIN status ON results.statusId = status.statusId WHERE races.raceId > 50 AND races.raceId < 100 AND status.status = '2';\t----- bird -----\tformula_1",
    "978": "SELECT c.name, c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%Austria%' GROUP BY c.circuitId;\t----- bird -----\tformula_1",
    "979": "SELECT r.raceId, r.name, COUNT(lt.driverId) AS finishers_count FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId GROUP BY r.raceId, r.name ORDER BY finishers_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.forename, d.surname, d.nationality, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 23 AND q.number = 2 AND q.q2 IS NOT NULL;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId WHERE (d.forename, d.surname) IN (SELECT forename, surname FROM drivers ORDER BY DOB DESC LIMIT 1) AND r.raceId = (SELECT MIN(raceId) FROM qualifying);\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT driverId) FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN constructors con ON d.constructorId = con.constructorId WHERE con.nationality = 'American' AND r.status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId JOIN races r ON cs.raceId = r.raceId WHERE c.nationality = 'Italian' ORDER BY cs.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.constructorRef, SUM(cr.points) AS total_wins FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId GROUP BY c.constructorRef ORDER BY total_wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, l.lap FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name AS race_name, l.time AS fastest_lap_time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE l.lap = 1 ORDER BY l.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fr.fastestLapTime) FROM races AS r JOIN drivers AS dr ON r.driverId = dr.driverId JOIN constructorResults AS cr ON dr.driverId = cr.driverId AND cr.constructorId = 'United States Grand Prix' JOIN ( SELECT raceId, driverId, MIN(points) AS rank FROM results GROUP BY raceId, driverId ) AS topDrivers ON r.raceId = topDrivers.raceId AND dr.driverId = topDrivers.driverId WHERE r.year = 2006 AND r.name = 'United States Grand Prix' HAVING rank <= 10;\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(ps.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId JOIN seasons s ON r.year = s.year WHERE s.url LIKE '%Germany%' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' AND r.name = 'German Grand Prix' GROUP BY d.driverId ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN constructorResults cr ON q.constructorId = cr.constructorId JOIN constructorStandings cs ON cr.constructorId = cs.constructorId JOIN results res ON d.driverId = res.driverId AND cr.constructorId = res.constructorId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2008 ORDER BY res.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef FROM races AS r JOIN constructorResults AS cr ON r.raceId = cr.raceId JOIN constructors AS c ON cr.constructorId = c.constructorId WHERE r.name = '2009 Singapore Grand Prix' LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT d.forename, d.surname, d.dob FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE d.nationality = 'Austrian' AND s.year BETWEEN '1981' AND '1991';\t----- bird -----\tformula_1",
    "992": "SELECT d.forename, d.surname, CONCAT('https://de.wikipedia.org/wiki/', d.forename, '_', d.surname) AS wiki_link, d.dob FROM drivers d JOIN drivers f ON d.nationality = 'German' AND f.nationality = 'German' WHERE d.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY d.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY MAX(cr.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId JOIN constructors ON results.constructorId = constructors.constructorId JOIN seasons ON races.year = seasons.year WHERE races.name = 'Turkish Grand Prix' AND drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "996": "SELECT AVG(num_races) AS annual_avg_races FROM ( SELECT year, COUNT(*) AS num_races FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year ) AS subquery;\t----- bird -----\tformula_1",
    "997": "SELECT MAX(nationality) AS majority_citizenship FROM drivers;\t----- bird -----\tformula_1",
    "998": "SELECT driverId, SUM(points) AS total_points FROM driverStandings WHERE position = 91 GROUP BY driverId;\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN constructors c ON res.constructorId = c.constructorId JOIN lapTimes lt ON d.driverId = lt.driverId AND lt.lap = res.position WHERE lt.time = (SELECT MIN(fastestLapTime) FROM results WHERE raceId = r.raceId) ORDER BY lt.time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1000": "SELECT r.name, CONCAT(c.location, ', ', c.country) AS full_location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN seasons s ON r.year = s.year WHERE r.date = (SELECT MAX(date) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON r.raceId = q.raceId WHERE r.circuitId = (SELECT circuitId FROM circuits WHERE circuitRef = 'Marina Bay Street Circuit') AND r.year = 2008 AND q.position = 1 LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN constructors c ON d.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers) ORDER BY d.dob;\t----- bird -----\tformula_1",
    "1003": "SELECT d.forename, d.surname, COUNT(r.resultId) AS accidents_count FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results st ON r.raceId = st.raceId JOIN status s ON st.statusId = s.statusId WHERE s.status = 'Accident' GROUP BY d.forename, d.surname ORDER BY accidents_count DESC LIMIT 1 AND race_name = 'Canadian Grand Prix' AND driver_number = ( SELECT driver_id FROM ( SELECT driver_id, COUNT(resultId) AS accidents_count FROM lap_times JOIN drivers ON lap_times.driverId = drivers.driverId WHERE status_id = 3 GROUP BY driver_id ORDER BY accidents_count DESC LIMIT 1 ) subquery );\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS total_wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results rs ON r.resultId = rs.resultId WHERE r.year = (SELECT MIN(year) FROM seasons) GROUP BY d.forename, d.surname ORDER BY total_wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pit_stop_time FROM pitstops JOIN races ON pitstops.raceId = races.raceId JOIN drivers ON pitstops.driverId = drivers.driverId;\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) AS longest_time_at_pit_stop FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis';\t----- bird -----\tformula_1",
    "1008": "SELECT p.lap AS lap_number FROM pitStops AS p JOIN drivers AS d ON p.driverId = d.driverId JOIN races AS r ON p.raceId = r.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.name = '2011 Australian Grand Prix';\t----- bird -----\tformula_1",
    "1009": "SELECT pitStops.driverId, pitStops.stop, pitStops.duration FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE pitStops.raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix')\t----- bird -----\tformula_1",
    "1010": "SELECT l.time FROM lap_times l JOIN drivers d ON l.driverId = d.driverId JOIN races r ON l.raceId = r.raceId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE e.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = e.raceId) ORDER BY r.position ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT c.name, r.name, lt.lap, lt.time, lt.milliseconds FROM races r JOIN driverStandings ds ON r.raceId = ds.raceId AND ds.driverId = 'Lewis Hamilton' JOIN lapTimes lt ON ds.driverId = lt.driverId AND ds.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE ds.position = 1;\t----- bird -----\tformula_1",
    "1013": "SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit';\t----- bird -----\tformula_1",
    "1014": "SELECT c.circuitRef, r.name, r.date, lt.time FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId AND lt.driverId = r.driverId WHERE c.location LIKE '%Italy%' GROUP BY r.circuitId, r.name, r.date ORDER BY r.date DESC;\t----- bird -----\tformula_1",
    "1015": "SELECT r.name AS race_name, r.date AS race_date, l.time AS lap_record FROM races r JOIN lap_times l ON r.raceId = l.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Austrian Grand Prix Circuit' AND l.time = (SELECT MAX(time) FROM lap_times WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "1016": "SELECT pit.stop FROM pitstops AS pit JOIN races AS race ON pit.raceId = race.raceId WHERE race.name = 'Austrian Grand Prix' AND drivers.driverId = ( SELECT driverId FROM results WHERE raceId = race.raceId AND position = '1' AND time = ( SELECT MAX(time) FROM laptimes AS lt WHERE lt.driverId = results.driverId ) )\t----- bird -----\tformula_1",
    "1017": "SELECT c.circuitId, c.circuitRef, c.name, c.location, c.lat, c.lng FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN results res ON r.raceId = res.raceId WHERE res.time = '1:29.488' LIMIT 1;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) AS average_pit_stop_time FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId JOIN races ON pitStops.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(lt.milliseconds) AS avg_lap_time_italy FROM lapTimes lt JOIN circuits c ON lt.raceId = c.raceId WHERE c.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player WHERE player_api_id = ( SELECT player_api_id FROM Player ORDER BY height DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes ORDER BY potential ASC LIMIT 1 ) AND preferred_foot = 'attacking';\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT pa.player_api_id, pa.crossing FROM Player_Attributes pa WHERE pa.crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id, COUNT(*) AS lost_matches FROM Match WHERE season = '2015/2016' AND goal < 0 GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT p.player_name, COUNT(m.penalty_id) AS penalty_count FROM Player_Attributes p JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 WHERE m.shoton = 'penalty' GROUP BY p.player_name ORDER BY penalty_count DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT l.team_long_name, m.away_team_api_id, m.season, m.MAX(SUBTRACT(m.away_team_goal, m.home_team_goal)) > 0 AS won_most FROM League l JOIN Team m ON l.id = m.team_id WHERE l.name = 'Scotland Premier League' AND m.season = '2009/2010' GROUP BY l.team_long_name, m.away_team_api_id, m.season;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t.team_long_name, MAX(ta.buildUpPlaySpeed) AS max_build_up_play_speed FROM Team t JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id GROUP BY t.team_long_name ORDER BY max_build_up_play_speed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name, MAX(m.draw_matches) AS most_draws FROM League l JOIN Team_Attributes ta_home ON l.id = ta_home.league_id JOIN Team_Attributes ta_away ON l.id = ta_away.league_id JOIN Match m ON ta_home.team_fifa_api_id = m.home_team_api_id AND ta_away.team_fifa_api_id = m.away_team_api_id WHERE m.season = '2015/2016' AND m.result = 'D' GROUP BY l.id ORDER BY most_draws DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT p.player_name, p.birthday, p.height, p.weight, p.age FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.id WHERE l.name IN ( SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name BETWEEN 'Country 1' AND 'Country 2' ) AND p.sprint_speed > 97 AND YEAR(p.birthday) BETWEEN 2013 AND 2015;\t----- bird -----\teuropean_football_2",
    "1032": "SELECT MAX(league_id) AS league_with_highest_matches, COUNT(*) AS total_matches FROM Match GROUP BY league_id;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT pa.player_api_id, MAX(pa.overall_rating) AS highest_above_avg_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE substr(pa.date, 1, 4) = '2010' GROUP BY pa.player_api_id;\t----- bird -----\teuropean_football_2",
    "1035": "SELECT t.team_fifa_api_id FROM Team_Attributes t JOIN Team tr ON t.team_fifa_api_id = tr.team_fifa_api_id WHERE t.buildUpPlaySpeed > 50 AND t.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT Team.team_long_name FROM Team JOIN Match ON Team.team_api_id = Match.home_team_api_id JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Match.date = strftime('%Y', '2012-01-01') AND Team_Attributes.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE Team_Attributes.team_api_id = Team.team_api_id AND buildUpPlayPassing IS NOT NULL)\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage_left_foot_prefers FROM Player_Attributes WHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT league.name, SUM(match.home_team_goal + match.away_team_goal) AS total_goals FROM league JOIN match ON league.id = match.league_id GROUP BY league.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name, AVG(Player_Attributes.heading_accuracy) AS average_heading_accuracy FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY average_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t.team_long_name, t.chance_creation_passing FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.buildUpPlayDribblingClass = 'Normal' AND ta.date >= '2014-01-01 00:00:00' AND ta.date <= '2014-12-31 23:59:59' AND t.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59') ORDER BY t.chance_creation_passing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT DISTINCT League.name FROM League JOIN Match ON Match.country_id = League.id WHERE Match.season = '2009/2010' AND Match.home_team_goal > Match.away_team_goal;\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Team\" WHERE \"team_long_name\" = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT Team_Attributes.buildUpPlayPositioningClass FROM Team JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id WHERE Team.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id IN ( SELECT home_player_1 FROM Match WHERE date = '2014-09-18 00:00:00' ) AND preferred_foot = 'right';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT pa.overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_fifa_api_id = p.player_fifa_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND country_id = (SELECT id FROM Country WHERE name = 'Scotland Premier League');\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.birthday = ( SELECT MIN(birthday) FROM Player );\t----- bird -----\teuropean_football_2",
    "1051": "SELECT Player.player_name, Player_Attributes.potential FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_fifa_api_id` = (SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `team_long_name` = 'David Wilson')));\t----- bird -----\teuropean_football_2",
    "1055": "SELECT t1.player_name, t1.birthday FROM Player AS t1 JOIN ( SELECT player_fifa_api_id, MAX(overall_rating) AS max_overall_rating FROM Player_Attributes GROUP BY player_fifa_api_id ) AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id;\t----- bird -----\teuropean_football_2",
    "1056": "SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT t1.player_name, AVG(t2.finishing) AS avg_finishing_rate FROM Player t1 JOIN Player_Attributes t2 ON t1.player_api_id = t2.player_api_id JOIN ( SELECT player_fifa_api_id FROM Player ORDER BY height ASC LIMIT 1 ) AS top_shortest_player ON t1.player_fifa_api_id = top_shortest_player.player_fifa_api_id JOIN ( SELECT player_fifa_api_id FROM Player ORDER BY height DESC LIMIT 1 ) AS top_tallest_player ON t1.player_fifa_api_id = top_tallest_player.player_fifa_api_id GROUP BY t1.player_name ORDER BY avg_finishing_rate DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1059": "SELECT p.player_name FROM Player p JOIN ( SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 180 LIMIT 1 ) subq ON p.player_api_id = subq.player_api_id;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE STRFTIME('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.overall_rating > 80 AND strftime('%Y', pa.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT pa.player_api_id FROM Player_Attributes pa WHERE pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT \"buildUpPlayPassingClass\" FROM \"Team_Attributes\" WHERE \"team_fifa_api_id\" IN (SELECT \"team_api_id\" FROM \"Team\" WHERE \"team_short_name\" = 'CLB');\t----- bird -----\teuropean_football_2",
    "1067": "SELECT Team.team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id JOIN Match ON Team.team_api_id = Match.home_team_api_id WHERE Team_Attributes.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player_Attributes t1 JOIN Player_Attributes t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_api_id IN ( SELECT player_api_id FROM Player WHERE Player.height > 170 ) AND t2.date >= strftime('%Y', '2010-01-01') AND t2.date <= strftime('%Y', '2015-12-31');\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) FROM Player;\t----- bird -----\teuropean_football_2",
    "1070": "SELECT \"Country\".\"name\" FROM \"League\" INNER JOIN \"Country\" ON \"League\".\"country_id\" = \"Country\".\"id\" WHERE \"League\".\"name\" = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.buildUpPlaySpeed = 31 AND ta.buildUpPlayDribbling = 53 AND ta.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN Team_Attributes AS ta1 ON t1.team_fifa_api_id = ta1.team_fifa_api_id WHERE m1.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT PA.player_name, PA.balance FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.potential = 61 ORDER BY PA.balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(ball_control) - AVG(ball_control) FROM Player_Attributes WHERE player_name = 'Abdou Diallo' AND player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT p.player_name FROM Player AS p WHERE p.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY p.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player_height FROM Player WHERE player_name = 'Tallest Player';\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT \"Country\".\"name\" FROM \"Country\" JOIN \"League\" ON \"Country\".\"id\" = \"League\".\"country_id\" WHERE \"League\".\"name\" = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League L JOIN Country C ON L.country_id = C.id WHERE C.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_api_id, MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes GROUP BY player_api_id\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS best_crossing_player FROM Player_Attributes WHERE player_api_id IN (123, 456, 789) -- replace with actual player API IDs\t----- bird -----\teuropean_football_2",
    "1086": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT home_player_1 FROM Match WHERE match_api_id = (SELECT id FROM Match WHERE goal = 'Ariel Borysiuk'));\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volley_score > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT DISTINCT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE home_team_api_id IN (SELECT id FROM Country WHERE name = 'Belgium') AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(long_passing) AS oldest_long_passing FROM Player_Attributes JOIN Team ON Player_Attributes.player_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Match ON Team.team_api_id = Match.home_team_api_id WHERE Team_Attributes.buildUpPlaySpeedClass = 'Best' AND Team_Attributes.buildUpPlayDribblingClass = 'Best' AND Team_Attributes.buildUpPlayPassingClass = 'Best' AND Team_Attributes.buildUpPlayPositioningClass = 'Best';\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(league_name) AS league_with_most_matches FROM League WHERE season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100) AS percentage_difference FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk' AND player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS avg_rating FROM Player_Attributes T1 WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes JOIN Team ON Player_Attributes.player_api_id = Team.team_api_id JOIN Match ON Player_Attributes.home_player_1 = Match.home_player_1 WHERE Team.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT t.team_long_name, MAX(ta.chanceCreationPassing) AS highest_score, ta.chanceCreationPassingClass FROM Team t JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id WHERE t.team_long_name = 'Ajax' GROUP BY t.team_long_name, ta.chanceCreationPassingClass ORDER BY highest_score DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE T2.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) AS average_goals_parma FROM Match WHERE country_id IN (SELECT id FROM Country WHERE name = 'Italy') AND team_long_name = 'Parma';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT P.player_name FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.overall_rating = 77 AND PA.date LIKE '2016-06-23%' ORDER BY P.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT pa.overall_rating FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT pa.player_api_id FROM Player AS p JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Francesco Parravicini';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT Player_Attributes.attacking_work_rate FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francesco Migliore' AND Player_Attributes.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT Team_Attributes.defensive_work_rate FROM Player INNER JOIN Team_Attributes ON Player.player_api_id = Team_Attributes.team_api_id WHERE Player.player_name = 'Kevin Berigaud' AND Team_Attributes.date = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Match WHERE (home_player_X1 = 'Kevin Constant' OR away_player_X1 = 'Kevin Constant') ) AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes );\t----- bird -----\teuropean_football_2",
    "1108": "SELECT BuildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Country WHERE name = 'Willem II'); AND date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT T1.buildUpPlayDribblingClass FROM Team_Attributes AS T1 JOIN Match AS M1 ON T1.team_fifa_api_id = M1.team_fifa_api_id JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'LEI' AND M1.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT t3.buildUpPlayPassingClass FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id JOIN Team_Attributes AS t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'FC Lorient' AND t3.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT `chance_creation_passing` AS chance_creation_passing_class FROM `Team_Attributes` WHERE `team_fifa_api_id` = (SELECT `id` FROM `Team` WHERE `team_long_name` = 'PEC Zwolle'); AND `date` = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT t3.chance_creation_crossing_class FROM Team_Attributes t1 JOIN League t2 ON t1.league_id = t2.id JOIN Team t3 ON t1.team_fifa_api_id = t3.team_api_id WHERE t2.name = 'Hull City' AND t1.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT TA.defence_aggression_class FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id JOIN Match AS M ON T.team_api_id = M.home_team_api_id WHERE T.team_long_name = 'Hannover 96' AND M.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013/7/12') * 100 AS percentage_difference FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id, weight FROM Player_Attributes ORDER BY weight DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 WHERE t.id IN ( SELECT t2.id FROM Team t2 JOIN Country c ON t2.id = c.id WHERE c.name = 'Spain' ) AND m.date >= datetime('now', 'localtime') - interval '365 days' AND TIMESTAMP('now', 'localtime') - TIMESTAMP(p.birthday, 'localtime') > INTERVAL '34 years';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_player_1) AS total_home_goals FROM Match JOIN Player ON Match.home_player_1 = Player.player_api_id WHERE Player.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) AS total_away_goals FROM Match JOIN Player_Attributes ON MATCH(home_player_1 = Player_Attributes.player_api_id) AND MATCH(home_player_2 = Player_Attributes.player_api_id) AND... AND MATCH(home_player_11 = Player_Attributes.player_api_id) WHERE Player_Attributes.player_name IN ('Daan Smith', 'Filipe Ferreira');\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match WHERE home_player_X1.age <= 30 AND home_player_X2.age <= 30 AND home_player_X3.age <= 30 AND home_player_X4.age <= 30 AND home_player_X5.age <= 30 AND home_player_X6.age <= 30 AND home_player_X7.age <= 30 AND home_player_X8.age <= 30 AND home_player_X9.age <= 30 AND home_player_X10.age <= 30 AND home_player_X11.age <= 30;\t----- bird -----\teuropean_football_2",
    "1122": "SELECT MAX(overall_rating) AS strongest_player_rating FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT P.player_name, MAX(PA.potential) AS highest_potential FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id GROUP BY PA.player_api_id ORDER BY highest_potential DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Match m ON pa.home_player_X1 = m.home_player_1 OR pa.home_player_X1 = m.away_player_1 JOIN Match m2 ON pa.away_player_1 = m2.home_player_1 OR pa.away_player_1 = m2.away_player_1 WHERE m.goal = 'attack' AND m2.goal = 'attack' AND (pa.attacking_work_rate = 'high' OR pa.attacking_work_rate ='medium');\t----- bird -----\teuropean_football_2",
    "1125": "SELECT MAX(finishing) AS eldest_player_with_finishing_1_age FROM Player_Attributes WHERE finishing = 1 LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT t1.player_name FROM Player AS t1 JOIN Country AS t2 ON t1.player_name = t2.name WHERE t2.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT P.player_name, C.name AS country FROM Player P JOIN Team_Attributes TA ON P.player_api_id = TA.home_player_X1 JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id JOIN Country C ON T.team_api_id = C.id WHERE TA.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name, MAX(Player_Attributes.weight) AS heaviest_average_weight FROM Player JOIN Team ON Team.id = Player.team_api_id JOIN Team_Attributes ON Team_Attributes.team_api_id = Team.id JOIN Player_Attributes ON Player_Attributes.player_api_id = Team_Attributes.player_fifa_api_id GROUP BY Country.name;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t.team_long_name FROM Team t JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id WHERE ta.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player INNER JOIN Country ON Player.country_id = Country.id WHERE Country.name = 'Italy';\t----- bird -----\teuropean_football_2",
    "1132": "SELECT pa.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.height > 180 ORDER BY pa.player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player_Attributes WHERE player_name LIKE '%Aaron%' AND birthday > '1990' AND country_id IN ( SELECT id FROM Country WHERE name = 'Country with Aaron' );\t----- bird -----\teuropean_football_2",
    "1134": "SELECT Player_Attributes.jumping FROM Player_Attributes WHERE Player_Attributes.id IN (6, 23) AND Player_Attributes.player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE Player.id = 6) AND Player_Attributes.player_api_id = (SELECT player_api_id FROM Player WHERE Player.id = 23)\t----- bird -----\teuropean_football_2",
    "1135": "SELECT pa1.id FROM Player_Attributes pa1 JOIN Player_Attributes pa2 ON pa1.player_fifa_api_id = pa2.player_fifa_api_id WHERE pa1.potential < pa2.potential AND pa1.preferred_foot = 'right' ORDER BY pa1.potential, pa1.id LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT (COUNT(*) FILTER (WHERE strength > 80 AND stamina > 80)) * 100.0 / COUNT(*) AS percentage_with_high_scores FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT MATCH.home_team_goal AS home_team_score, MATCH.away_team_goal AS away_team_score FROM Match AS MATCH WHERE MATCH.date = '2008-09-24' AND MATCH.league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT pa.sprint_speed, pa.agility, pa.acceleration FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1144": "SELECT MAX(weight) AS heaviest_weight, PA.finishing_rate, PA.curve_score FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id JOIN Team T ON PA.team_api_id = T.team_api_id WHERE P.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "1145": "SELECT l.name AS league, COUNT(m.id) AS games_count FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT T2.team_long_name FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.goal = (SELECT MAX(goal) FROM Match AS T3 WHERE T3.away_team_api_id = T1.away_team_api_id)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id, overall_rating FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT PERCENTAGE FROM ( SELECT COUNT(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 END) AS player_count FROM Player_Attributes ) AS subquery\t----- bird -----\teuropean_football_2",
    "1149": "SELECT SEX, COUNT(*) AS count, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M')) AS percentage FROM Patient WHERE SEX = 'M' GROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT ( ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F' AND Patient.Birthday > '1930' ) / ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F' ) ) * 100 AS percentage_female_born_after_1930 FROM Examination;\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT * FROM Patient WHERE YEAR(Birthday) BETWEEN 1930 AND 1940;\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND Admission = '+') / (SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SLE' AND Admission = '-') AS outpatient_to_inpatient_ratio FROM Patient WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Examination WHERE ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT p.ID, (SUBTRACT(year(current_timestamp), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT p.SEX, p.ID, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE YEAR(p.Birthday) = 1937 AND T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT p.ID, p.SEX, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.ALB < 3.5 AND e.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT (COUNT(CASE WHEN l.SEX = 'F' AND l.TP < '6.0' OR l.TP > '8.5' THEN 1 END) / COUNT(p.ID WHERE p.SEX = 'F')) * 100 FROM Patient p JOIN Laboratory l ON p.ID = l.ID;\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL_IgG) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE SUBTRACT(year(current_timestamp), year(Birthday)) >= 50 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'F' AND e.Description = '1997-01-01' AND e.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(YEAR(SUBTRACT(DATE('first_date'), DATE('birthday'))) AS youngest_age FROM Patient JOIN Examination ON Patient.ID = Examination.ID;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT p.ID) AS num_patients FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 1 AND p.SEX = 'F' AND YEAR(e.Examination Date) = 1997;\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT MAX(age) - MIN(age) AS age_gap FROM Patient WHERE tg >= 200;\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT Patient.Description, Examination.Symptoms, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = (SELECT MIN(Patient.ID) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT DATE(L.Date) AS Month, AVG(COUNT(E.ID)) AS Avg_Male_Patients_Per_Month FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE DATE(L.Date) BETWEEN '1998-01-01' AND '1998-12-31' AND P.SEX = 'M' GROUP BY Month ORDER BY Month;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS oldest_lab_date, (YEAR(CURRENT_DATE) - YEAR(p.Birthday)) AS age_at_admission FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS lab ON e.ID = lab.ID WHERE p.Diagnosis = 'SJS' GROUP BY p.ID;\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT ( SELECT COUNT(*) FROM Examination WHERE aCL_IgG > 0 AND aCL_IgM > 0 AND ANA > 0 AND ANA_Pattern LIKE 'PM%' AND aCL_IgA > 0 AND Diagnosis LIKE 'Gout%' AND KCT LIKE 'High%' AND RVVT LIKE 'Normal%' AND LAC LIKE 'Normal%' AND Thrombosis > 0 INTERSECT SELECT COUNT(*) FROM Examination WHERE aCL_IgG > 0 AND aCL_IgM > 0 AND ANA > 0 AND ANA_Pattern LIKE 'PM%' AND aCL_IgA > 0 AND Diagnosis LIKE 'Gout%' AND KCT LIKE 'Normal%' AND RVVT LIKE 'Normal%' AND LAC LIKE 'Normal%' AND Thrombosis = 0 ) / ( SELECT COUNT(*) FROM Examination WHERE aCL_IgG > 0 AND aCL_IgM > 0 AND ANA > 0 AND ANA_Pattern LIKE 'PM%' AND aCL_IgA > 0 AND Diagnosis LIKE 'Gout%' AND KCT LIKE 'High%' AND RVVT LIKE 'Normal%' AND LAC LIKE 'Normal%' AND Thrombosis > 0 ) AS male_to_female_ratio\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE SUBTRACT(year(Examination.Examination Date), year(First Date)) > = 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'Underage' AND Examination.Examination_Date BETWEEN '1990-01-01' AND '1993-12-31';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-BIL >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS count FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY count DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT(year(Birthday), 1999)) AS avg_age_1999 FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE EXTRACT(MONTH FROM Date) = 10 AND EXTRACT(YEAR FROM Date) = 1991;\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT p.ID AS patient_id, p.SEX, p.Birthday, (YEAR(CURRENT_DATE) - YEAR(p.Birthday)) AS age, e.HGB, e.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.HGB = (SELECT MAX(HGB) FROM Examination) ORDER BY e.Examination_Date DESC;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = 3605340) AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT T1.aCL_IgG, T1.aCL_IgM, T1.ANA, T1.ANA_Pattern, T1.aCL_IgA, T2.Diagnosis FROM Examination AS T1 JOIN Patient AS P ON T1.ID = P.ID JOIN Laboratory AS L ON T1.ID = L.ID WHERE P.ID = 2927464 AND T1.Examination_Date = '1995-09-04' AND (L.T-CHO < 250);\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT Patient.SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'AORTITIS' AND Examination.ID = (SELECT MIN(ID) FROM Examination WHERE Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT ID FROM Patient WHERE Description = '1994-02-19' AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX, L.ALT FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Date = '1992-06-12' AND L.GPT = 9 AND (P.SEX = 'M' OR P.SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT SUBTRACT(year(t.date), year(p.birthday)) AS age_at_test FROM Examination t JOIN Patient p ON t.ID = p.ID WHERE t.UA = '8.4' AND t.date = '1991-10-21';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) AS total_tests_in_1995 FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.First_Date = '1991-06-13' AND Patient.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT p.SEX, p.Description, p.First Date FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'SLE' AND e.Examination Date = '1997-01-27' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination E JOIN Patient P ON E.ID = P.ID WHERE P.Birthday = '1959-03-01' AND E.Examination Date = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 11 THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 12 THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' THEN 1 ELSE 0 END) FROM Patient WHERE Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Behcet' AND Examination.Description BETWEEN '197-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Examination_Date BETWEEN '1987-07-06' AND '1996-01-31' AND e.GPT > 30 AND e.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(DISTINCT Patient.ID) AS female_hospital_admissions FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01'; [SQL] SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE (e.Thrombosis = 2 AND l.ANA = 'S') AND (e.aCL IgM = MULTIPLY(AVG(`aCL IgM`), 0.2))\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT (COUNT(*) FILTER (WHERE U-PRO > 0 AND U-PRO < 30 AND UA <= 6.5)) * 100.0 / COUNT(*) AS percentage FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (SUM(CASE WHEN SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' AND Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM Patient WHERE YEAR(`FIRST DATE`) = '1981' AND SEX = 'M') ) * 100 FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Admission = '-' AND l.Date LIKE '1991-10%' AND l.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE l.ANA Pattern!= 'P' AND p.SEX = 'F' AND e.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > '2' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) AS average_albumin_level FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT MAX(Examination.Description) AS earliest_documentation, Examination.Diagnosis AS disease FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE YEAR(Examination.Examination Date) = 1997 AND (Examination.aCL IgG > 8.5 OR Examination.aCL IgG < 6) AND (Examination.aCL IgM > 8.5 OR Examination.aCL IgM < 6) AND (Examination.aCL IgA > 8.5 OR Examination.aCL IgA < 6);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (COUNT(*) FILTER (WHERE diagnosis LIKE '%SLE%')) * 100.0 / (SELECT COUNT(*) FROM Examination WHERE symptoms LIKE '%thrombocytopenia%') AS proportion_of_sle_with_thrombocytopenia FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE symptoms LIKE '%thrombocytopenia%';\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT FROM Patient WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA' AND SEX = 'F' GROUP BY SEX ORDER BY SEX LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Examination.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND Laboratory.Diagnosis = 'Behcet' AND Examination.Admission!= '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT p.ID) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE p.SEX = 'F' AND e.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(First_Date, Admission) AS time_between_first_and_evaluation_start FROM Patient WHERE ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F' FROM Examination WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT E.Examination_Date, E.aCL_IgG, E.aCL_IgM, E.ANA, E.ANA_Pattern, E.aCL_IgA, E.Diagnosis, E.KCT, E.RVVT, E.LAC, E.Symptoms, E.Thrombosis FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.ID = '48473' AND L.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.Date = '1994-01-01' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GPT > 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.GPT > 60 ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) AS average_ldh FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT e.ID, (SUBTRACT(year(current_timestamp()), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.LDH BETWEEN 100 AND 300 AND e.LDH > (SELECT AVG(LDH) FROM Examination WHERE LDH BETWEEN 100 AND 300)\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT \"Admission\" FROM \"Patient\" WHERE \"ALP\" < 300 AND \"Admission\" IN ('+', '-');\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Birthday = '1982-04-01' LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.TP < 6.0 AND E.Diagnosis IS NOT NULL AND E.Examination Date = (SELECT MAX(Examination Date) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT p.SEX, l.TP, l.TP - 8.5 AS deviation FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.ALB NOT BETWEEN 3.5 AND 5.5 ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.SEX, Patient.Birthday, Albumin.ALB FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX IS NOT NULL AND Patient.Birthday = '1982' AND Albumin.ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(DISTINCT p.ID) * 100.0 / (SELECT COUNT(DISTINCT p.ID) FROM Patient p WHERE p.SEX = 'F') AS percentage FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.UA > 8.0 AND p.SEX = 'M' OR l.UA > 6.5 AND p.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS average_UA_index FROM Examination E JOIN Patient P ON E.ID = P.ID JOIN Laboratory L ON E.ID = L.ID WHERE (P.SEX = 'M' AND L.UA < 8.0) OR (P.SEX = 'F' AND L.UA < 6.5) GROUP BY E.ID HAVING COUNT(L.ID) = 1\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT DISTINCT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.UN < 30 AND e.Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT p.ID) AS male_patients_with_creatinine_out_of_normal_range FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT CASE WHEN SEX = 'M' THEN 'Male' WHEN SEX = 'F' THEN 'Female' END AS Gender, COUNT(*) AS PatientCount FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CRE > 1.5 GROUP BY Gender;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(DISTINCT Examination.ID) AS ExaminationIDs, COUNT(*) AS PatientCount FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.T-BIL >= 2.0 GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT Patient.ID, Laboratory.T_CHO FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Birthday = (SELECT MIN(Birthday) FROM Patient) AND Laboratory.T_CHO = (SELECT MAX(T_CHO) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, l.Diagnosis FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.TG > 200 AND DATEDIFF(year, p.Birthday, CURRENT_TIMESTAMP()) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.Birthday BETWEEN '1936' AND '1956' AND e.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT p.ID, p.SEX, p.birthday - INTERVAL '180' AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.GLU >= 180 AND e.T_CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Examination.GLU FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Patient.Birthday) = 1991 AND Examination.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.WBC < 3.5 OR l.WBC > 9.0 GROUP BY p.SEX ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT p.ID, p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T_BIL, l.T_CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U_PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA_II FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= DATE('now', '-50 years') AND l.RBC < 3.5 OR l.RBC > 6.0 AND p.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT p.ID, p.SEX FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY p.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT e.ID, e.age FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory lab ON e.ID = lab.ID WHERE p.SEX = 'Male' AND COUNT(lab.ID) > 2 AND HCT >= 52 GROUP BY e.ID, e.age;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS average_low_HCT FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS patients_with_lower_range, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS patients_with_higher_range FROM Examination WHERE abnormal_platelet_level = true\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date = '1984-01-01' AND SUBTRACT(year(current_timestamp), year(p.Birthday)) < 50 AND p.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT p.SEX, COUNT(p.ID) AS female_count, SUM(CASE WHEN p.PT > 14 AND p.SEX = 'F' THEN 1 ELSE 0 END) AS abnormal_pt_count_females, COUNT(p.ID) AS total_female_count, (SUM(CASE WHEN p.PT > 14 AND p.SEX = 'F' THEN 1 ELSE 0 END) / COUNT(p.ID) IF total_female_count > 0 ELSE 0) * 100 AS percentage_abnormal_pt_females FROM Patient p WHERE SUBTRACT(year(current_timestamp()), year(p.Birthday)) > 55 GROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT P.ID, P.SEX, P.Birthday, P.Description, P.FirstDate, P.Admission, P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.ExaminationDate > '1992-12-31' AND L.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.APTT > 45 AND l.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.WBC > 3.5 AND Examination.WBC < 9.0 AND Examination.FG <= 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Birthday > '1980-01-01' AND Examination.FG < 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT p.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE U-PRO > 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U_PRO BETWEEN 0 AND 30 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE aCL_IgG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.aCL IgG > 900 AND e.aCL IgG < 2000 AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.IGA BETWEEN 80 AND 500 GROUP BY p.ID HAVING COUNT(*) = 1 ORDER BY MAX(l.IGA) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 AND Laboratory.Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "```sql SELECT Diagnosis, COUNT(*) AS frequency FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis HAVING frequency = (SELECT MAX(frequency) FROM (SELECT Diagnosis, COUNT(*) AS frequency FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis) AS subquery); ``` Explanation: 1. We start by selecting the `Diagnosis` and the count of occurrences (`COUNT(*)`) for each diagnosis from the `Examination` table where the `IGM` level is abnormal (either less than or equal to 40 or greater than or equal to 400). 2. We group the results by `Diagnosis` to get the frequency of each diagnosis among patients with abnormal IgM levels. 3. Using a subquery, we find the maximum frequency among the abnormal IgM patients. The subquery selects `Diagnosis` and `COUNT(*)` from the same `Examination` table, but only for patients with abnormal IgM levels. 4. Finally, we use the `HAVING` clause to filter the main query results, keeping only those diagnoses with the maximum frequency found in the subquery. This approach allows us to determine the most common disease among patients with an abnormal IgM level, following the given schema and question.\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE Description IS NULL AND CRP = '+';\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Patient WHERE creatinine_level IS NOT NULL AND creatinine_level >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'normal' AND Laboratory.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday >= '1985-01-01' AND e.RA IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RF < 20 AND SUBSTRING(p.Birthday, 1, 4) - SUBSTRING(p.Birthday, 4, 2) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RF < 20 AND Examination.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.C3 > 35 AND Laboratory.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Hematoclit NOT BETWEEN 29 AND 52 AND Examination.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP = 'Normal' AND e.Diagnosis LIKE '%APS%';\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP = '-' AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.RNP NOT IN ('-', '+-') AND P.SEX = '?' AND E.ID = ( SELECT MIN(ID) FROM Examination WHERE P.ID = E.ID );\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ANA Pattern = 'normal anti-SM' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP = 'abnormal anti-SM' GROUP BY p.ID ORDER BY Birthday ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.ANA = '0' AND e.ANA_Pattern = 'normal' AND p.Sex = 'F' AND p.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) AS distinct_patients FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Laboratory.CRP = 'normal' AND Laboratory.RA = 'anti-SSA') AND Laboratory.First_Date < '2000-01-01';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT MIN(First_Date) AS first_patient_date FROM Patient WHERE SSA NOT IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSB' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE anti_SSB IN ('negative', '0') AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT t1.ID) FROM Examination AS t1 JOIN Patient AS t2 ON t1.ID = t2.ID JOIN Laboratory AS t3 ON t1.ID = t3.ID WHERE t3.CENTROMEA IN ('-','+') AND t3.SSB IN ('-','+') AND t2.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP LIKE '%anti-DNA%';\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE anti_DNA_level = 'normal' AND Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.aCL IgG BETWEEN 900 AND 2000 AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT (SUM(CASE WHEN GOT > 60 AND Diagnosis = 'SLE' THEN 1 ELSE 0 END) / COUNT(ID)) * 100 FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Patient.Birthday) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT p.SEX, p.Birthday, MAX(l.GPT) AS max_GPT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GPT < 60 GROUP BY p.SEX, p.Birthday ORDER BY max_GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MAX(LDH) AS max_LDH FROM Laboratory WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT T2.Examination_Date, T2.aCL_IgG, T2.aCL_IgM, T2.ANA, T2.ANA_Pattern, T2.aCL_IgA, T2.Diagnosis, T2.KCT, T2.RVVT, T2.LAC, T2.Symptoms, T2.Thrombosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Patient WHERE abnormal_alkaliphophatase = true AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT E.Diagnosis FROM Examination E INNER JOIN Patient P ON E.ID = P.ID INNER JOIN Laboratory L ON E.ID = L.ID WHERE L.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'SJS' AND Examination.TP > 6.0 AND Examination.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT e.Examination_Date FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE MAX(ALB) > 3.5 AND ALB < 5.5;\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient WHERE SEX ='male' AND ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT MAX(aCL_IgG) + MAX(aCL_IgM) + MAX(aCL_IgA) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE SEX = 'F' AND UA > 6.50;\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) AS highest_ANA FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.CRE < 1.5 AND l.aCL IgA = (SELECT MAX(aCL IgA) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(DISTINCT e.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.T-BIL > 2.0 AND p.ANA Pattern LIKE '%P%'\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(T-BIL) FROM Examination WHERE T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG > 0 AND Examination.T-CHO > 250 AND Examination.KCT!= '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID WHERE e.T-CHO < 250 AND p.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient WHERE TG < 200 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.SEX, Patient.Description, MAX(Laboratory.TG) AS max_triglyceride FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG < 200 GROUP BY Patient.SEX, Patient.Description;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CPK < 250 AND l.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Patient WHERE Examination.aCL IgG < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Diagnosis = 'Blood glucose is abnormal' AND L.GLU > 180 GROUP BY P.Birthday ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient WHERE ID IN ( SELECT Examination.ID FROM Examination WHERE Examination.Diagnosis = 'normal blood glucose' ) AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Admission = '+'; [EXPLANATION] 1. Identify the table and condition for the count: We need to find patients who were admitted to the hospital. This information is stored in the \"Admission\" column of the \"Patient\" table. 2. Filter the results based on the condition: Use the WHERE clause to filter patients based on their admission status (denoted by '+'). 3. Apply the COUNT function: Count the distinct number of patient IDs that meet the specified condition. The DISTINCT keyword ensures that each patient is only counted once, even if they have multiple entries in the table. The final SQLite statement is: [SQL] SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC > 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient WHERE \"SEX\" = 'Male' AND \"Birthday\" >= '2000-01-01' AND \"Birthday\" <= '2000-12-31' AND Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT p.SEX, p.Birthday, p.Description, l.PLT FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.PLT >= 100 AND l.PLT <= 400 AND p.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) AS average_PT FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 2 AND Laboratory.PT < 14 AND Examination.Diagnosis ='severe thrombosis';\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT m.major_name FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m.first_name = 'Angela' AND m.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT member.member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendees.member_id) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT m.phone FROM member m JOIN student_club sc ON m.member_id = sc.member_id JOIN event e ON sc.event_id = e.event_id WHERE e.event_name = 'Women''s Soccer' AND m.position ='student';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT m.member_id) FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name, COUNT(a.link_to_event) AS attendance_count FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mi ON m.link_to_major = mi.major_id WHERE mi.major_name = 'Student_Club' GROUP BY e.event_id, e.event_name ORDER BY attendance_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT m.college FROM member AS m JOIN major AS vm ON m.link_to_major = vm.major_id JOIN event AS e ON e.event_id = m.link_to_event WHERE e.event_name = 'Vice President' AND m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1320": "SELECT DISTINCT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(event.event_id) FROM event JOIN member ON event.event_id = member.member_id WHERE event.type = 'Student_Club' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND event_id IN ( SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(member_id) > 10 );\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE COUNT(a.event_id) > 20 AND e.type!= 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance.count) AS average_attendance FROM event AS e JOIN attendance ON e.event_id = attendance.link_to_event JOIN member AS m ON attendance.link_to_member = m.member_id WHERE e.type = 'Meeting' AND YEAR(e.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club event%';\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(DISTINCT member_id) FROM member WHERE link_to_major = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.link_to_major = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT m.college FROM major AS m JOIN event AS e ON m.major_id = e.type WHERE e.event_name = 'Tyler Hewitt''s Major';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) AS funds_received FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(e.budget.spent) AS total_spent FROM event e JOIN attendance att ON e.event_id = att.link_to_event JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON e.event_id = ex.link_to_event WHERE e.event_name = 'September Meeting' AND b.category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code, city, state FROM zip_code WHERE major_id = ( SELECT major_id FROM major WHERE major_name = 'President' );\t----- bird -----\tstudent_club",
    "1334": "SELECT member.first_name, member.last_name FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(spent) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id JOIN major ON event.type = 'Advertisement' WHERE event_name = 'September Meeting' AND link_to_member IN (SELECT member_id FROM member WHERE position = 'Student_Club');\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major AS m JOIN event AS e ON m.major_id = e.type JOIN member AS mi ON e.link_to_member = mi.member_id WHERE mi.first_name = 'Pierce' AND mi.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE link_to_event = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT approved FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event_name = 'October Meeting' AND event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) AS total_average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (month(expense_date) = 9 OR month(expense_date) = 10);\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(spent) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.type = 'Student_Club' AND (YEAR(event_date) = 2019 OR YEAR(event_date) = 2020);\t----- bird -----\tstudent_club",
    "1341": "SELECT \"location\" FROM \"event\" WHERE \"event_name\" = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS biggest_remaining_food_budget FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_date = '2019/9/14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(DISTINCT major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Adela' AND member.last_name = 'O\\'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'November Meeting') AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_for_September_Speaker FROM budget WHERE event_id = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT e.event_name, e.event_date, e.type, e.notes, e.location, b.spent, b.remaining, b.amount, b.event_status FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.notes LIKE '%Post Cards, Posters%' AND e.event_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT m.major_name FROM major m JOIN member m_member ON m.major_id = m_member.link_to_major WHERE m_member.first_name = 'Brent' AND m_member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE link_to_major = 'Business' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT \"type\" FROM \"zip_code\" WHERE \"zip\" = (SELECT \"zip_code\" FROM \"member\" WHERE \"first_name\" = 'Christof' AND \"last_name\" = 'Nielson');\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1356": "SELECT department FROM major WHERE major_id = (SELECT major_id FROM member WHERE position = 'President');\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM member i JOIN income j ON i.member_id = j.member_id WHERE j.source = 'Dues' AND i.member_name = 'Connor Hilton';\t----- bird -----\tstudent_club",
    "1358": "SELECT m.first_name, m.last_name FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.source = 'Dues' ORDER BY i.date_received LIMIT 1;\t----- bird -----\tstudent_club",
    "1359": "SELECT SUM(amount) / SUM(amount) AS ratio FROM budget WHERE category = 'Advertisement' AND (event_name = 'Yearly Kickoff' OR event_name = 'October Meeting');\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(expense.cost) WHERE expense.category = 'Parking' AND expense.event_name = 'November Speaker') / COUNT(DISTINCT event.event_name) * 100 AS percentage FROM event, expense, member WHERE event.link_to_event = expense.link_to_event AND expense.link_to_member = member.member_id AND event.link_to_member = member.member_id;\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT zip_code) AS city_count FROM zip_code WHERE type = 'city' AND county = 'Orange County, Virginia' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code.city, zip_code.county, zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Amy' AND member.last_name = 'Firth';\t----- bird -----\tstudent_club",
    "1365": "SELECT b.category, e.expense_description, e.cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE b.remaining = (SELECT MIN(remaining) FROM budget) ORDER BY e.cost ASC;\t----- bird -----\tstudent_club",
    "1366": "SELECT m.* FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT college, MAX(COUNT(*)) AS most_members_in_college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY college LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.first_name, m.last_name FROM member AS m JOIN zip_code AS z ON m.zip = z.zip_code WHERE m.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_id, e.event_name, MAX(b.amount) AS highest_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Vice President' AND last_name = 'First Last');\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE link_to_member = '123';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT zip) FROM member WHERE state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT e.event_id) AS event_count FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.phone_number = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(DIVIDE(b.spent, b.amount)) AS highest_spend_to_budget_ratio FROM event e JOIN expense b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_name ORDER BY highest_spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS highest_budget_spend FROM budget WHERE link_to_event IN (SELECT event_id FROM event);\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT e.member_id, m.first_name, m.last_name FROM event e JOIN member m ON e.link_to_member = m.member_id GROUP BY e.member_id, m.first_name, m.last_name HAVING COUNT(e.event_id) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.first_name, m.last_name FROM member AS m JOIN event AS e ON m.member_id = e.link_to_member WHERE m.zip.type = 'zip_code' AND e.event_name = 'Community Theater' AND m.major_id = (SELECT major_id FROM major WHERE major_name = 'Interior Design');\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code zc ON m.zip = zc.zip_code WHERE zc.city = 'Georgetown' AND zc.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT COUNT(*) FROM income AS i INNER JOIN member AS m ON i.link_to_member = m.member_id WHERE m.first_name = 'Grant' AND m.last_name = 'Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.member_id, m.first_name, m.last_name, i.income_id, i.date_received, i.amount, i.source, i.notes FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.first_name, m.last_name FROM member m JOIN \"budget\" b ON m.member_id = b.link_to_member WHERE b.category = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(amount) FROM income);\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name, b.spent FROM event e JOIN budget b ON e.event_id = b.link_to_event ORDER BY b.spent ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT DIVIDE(SUM(cost) WHERE event_name = 'Yearly Kickoff', SUM(cost)) * 100 FROM event;\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(major_name = 'Finance') / SUM(major_name = 'Physics') AS ratio FROM major;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_funds FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_funds DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT m.first_name, m.email FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Student_Club' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Community Theater' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT SUM(attendance_count) FROM ( SELECT link_to_event, COUNT(*) AS attendance_count FROM attendance WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Luisa' AND last_name = 'Guidi') GROUP BY link_to_event ) AS subquery;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(spent) AS average_food_spending FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' GROUP BY e.event_name ORDER BY MAX(b.spent) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT COUNT(t1.member_id) FROM member AS t1 JOIN attendance AS t2 ON t1.member_id = t2.link_to_member WHERE t2.link_to_event = 'Women\\'s Soccer' AND t1.first_name = 'Maya' AND t1.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost FROM expense JOIN income ON expense.income_id = income.income_id JOIN member ON income.link_to_member = member.member_id WHERE expense.expense_description = 'Posters' AND income.date_received = 'September Speaker' AND expense.link_to_budget = 'budget_id';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY b.remaining DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(cost) AS total_value FROM expense WHERE expense_description LIKE '%October Meeting%' AND approved = 'approved';\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS total_budget FROM budget WHERE category = 'April Speaker';\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id, MAX(spent) AS highest_budgeted_amount FROM budget WHERE category = 'Food' GROUP BY budget_id;\t----- bird -----\tstudent_club",
    "1407": "SELECT b.category, b.spent, b.remaining, b.amount, b.link_to_event FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.category, b.spent, b.remaining, b.amount, b.link_to_event ORDER BY b.amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_cost_spent_for_parking FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT e.expense_description, m.first_name, m.last_name FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id WHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT m.zip, m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT m.major_name FROM major m JOIN member me ON m.major_id = me.link_to_major WHERE me.first_name = 'Phillip' AND me.last_name = 'Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT m.first_name, m.last_name, m.position FROM member AS m JOIN major AS maj ON m.link_to_major = maj.major_id WHERE maj.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE first_name = 'Business' AND last_name = 'Members' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT event.event_name, event.type FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.remaining > 30 AND budget.category = 'fundraising';\t----- bird -----\tstudent_club",
    "1418": "SELECT event.type, event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN zip_code ON event.location = zip_code.city WHERE zip_code.city = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE e.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name FROM major AS m JOIN member AS j ON m.major_id = j.link_to_major WHERE j.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT DIVIDE(SUM(member.position = 'Member' AND member.major.name = 'Business'), COUNT(member.member_id)) * 100 FROM member INNER JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club",
    "1422": "SELECT event.type FROM event JOIN major ON event.location = 'MU 215' WHERE major.department = 'Arts';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(member_id) AS extra_large_members FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.major.department, m.major.college FROM member m JOIN major major ON m.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id JOIN zip_code z ON e.location = z.city WHERE z.city = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT member.first_name, member.last_name, zip.city, zip.state FROM member JOIN zip_code ON member.zip = zip.zip_code WHERE major.major_name = 'Electrical and Computer Engineering Department' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.position = 'Vice President' AND e.location LIKE '%900 E. Washington St.%' AND e.type = 'Social';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT AVG(income_amount) AS average_income FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Student_Club' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT t2.country FROM zip_code AS t1 JOIN major AS t2 ON t1.zip = t2.zip WHERE t1.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT DISTINCT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Game' AND e.status = 'Closed' AND e.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.paid_amount > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE b.event_status = 'approved' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19' AND m.approved = 'true';\t----- bird -----\tstudent_club",
    "1438": "SELECT m.first_name, m.college FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.first_name = 'Katy' AND mm.major_name ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member AS m JOIN major AS mj ON m.link_to_major = mj.major_id WHERE mj.major_name = 'Business' AND m.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.email FROM member AS m JOIN expense AS e ON m.member_id = e.link_to_member WHERE e.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND e.cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = 'College of Education & Human Services' AND county = 'University');\t----- bird -----\tstudent_club",
    "1442": "SELECT PERCENTAGE(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END), COUNT(event_id)) * 100 FROM event\t----- bird -----\tstudent_club",
    "1443": "SELECT e.event_id, e.location, e.status FROM event e JOIN major m ON e.type = m.department WHERE e.event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT AVG(cost) AS average_cost, expense_id FROM expense WHERE cost > 50 GROUP BY expense_id;\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT type, SUM(1) AS count, COUNT(*) AS total FROM zip_code WHERE type = 'PO Box' GROUP BY type;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Pizza' AND e_expense.cost > 50 AND e_expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.state AS country FROM event JOIN member ON event.link_to_member = member.member_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE ( SELECT COUNT(*) FROM attendance WHERE attendance.link_to_event = event.event_id ) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT e.event_id) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE link_to_member NOT IN ( SELECT member_id FROM member );\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name FROM event e JOIN ( SELECT category, AVG(cost) AS avg_cost FROM expense WHERE category = 'Parking' GROUP BY category ) p ON e.event_id = p.category WHERE e.cost < p.avg_cost;\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(cost) / COUNT(event_id)) * 100 AS percentage_of_cost FROM event WHERE type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.category, SUM(e.cost) AS total_spent FROM budget b JOIN expense e ON b.budget_id = e.link_to_event WHERE e.expense_description IN ('Water', 'Chips', 'Cookies') GROUP BY b.category ORDER BY total_spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spending FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id ORDER BY total_spending DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN ( SELECT expense_id, AVG(cost) AS avg_cost FROM expense GROUP BY expense_id ) avg_cost ON e.expense_id = avg_cost.expense_id WHERE e.cost > avg_cost.avg_cost\t----- bird -----\tstudent_club",
    "1458": "SELECT DIVIDE(SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END), COUNT(*)) AS new_jersey_percentage, DIVIDE(SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END), COUNT(*)) AS vermont_percentage FROM member\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.email = 'garrett.gerke@example.com';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT budget.category, budget.spent FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT category FROM budget WHERE expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name FROM member AS m JOIN expense AS e ON m.member_id = e.link_to_member JOIN budget AS b ON e.link_to_event = b.link_to_event JOIN attendance AS a ON e.link_to_event = a.link_to_event WHERE e.expense_description = 'Club Meeting Expenses' AND a.link_to_member ='member_id_of_secretary' AND b.category = 'Event Expenses';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip FROM member WHERE first_name = 'Garrett' AND last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.short_state = 'NC' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT gs.GasStationID) FROM gasstations gs JOIN products p ON gs.Segment = p.Segment WHERE gs.Country = 'CZE' AND p.Description LIKE '%Premium%';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(*) FILTER (WHERE Currency = 'EUR') / COUNT(*) FILTER (WHERE Currency = 'CZK') AS ratio_of_customers FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT c.Segment, ym.CustomerID, SUM(t1k.Amount) AS total_consumption FROM customers c JOIN gasstations g ON c.Segment = g.Segment JOIN transactions_1k t1k ON g.GasStationID = t1k.GasStationID JOIN yearmonth ym ON t1k.CustomerID = ym.CustomerID WHERE g.Country = 'LAM' AND t1k.Date BETWEEN '20120101' AND '20121231' GROUP BY c.Segment, ym.CustomerID ORDER BY total_consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '20130101' AND '20131231' AND CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' );\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumed FROM customers c JOIN gasstations g ON c.Segment = g.Segment JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Currency = 'CZK' AND t.Date BETWEEN '20110101' AND '20111231' GROUP BY c.CustomerID ORDER BY total_consumed DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT c.CustomerID) FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'KAM' AND y.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN t.Amount ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN t.Amount ELSE 0 END) AS difference_in_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT ym.Date AS YearMonth, SUM(tx.Amount * (SELECT Price FROM products WHERE ProductID = tx.ProductID)) AS TotalGUEuro FROM transactions_1k tx JOIN customers c ON tx.CustomerID = c.CustomerID JOIN gasstations gs ON tx.GasStationID = gs.GasStationID JOIN yearmonth ym ON tx.CustomerID = ym.CustomerID AND DATE(tx.Date) = DATE(ym.Date) WHERE tx.Amount > 0 AND c.Currency = 'EUR' GROUP BY YearMonth ORDER BY TotalGUEuro DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT c.Segment, MIN(y.Consumption) AS Least_Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID JOIN gasstations gs ON gs.Segment = c.Segment GROUP BY c.Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT y.Date, SUM(t.Amount) AS TotalConsumption FROM transactions_1k t JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE p.Description = 'gas product' AND t.Currency = 'CZK' GROUP BY y.Date, c.Segment ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT ym.Date, MAX(y.Consumption) AS peak_consumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID JOIN transactions_1k t ON ym.CustomerID = t.CustomerID JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN products p ON t.ProductID = p.ProductID JOIN products pr ON t.ProductID = pr.ProductID WHERE c.Segment = 'SME' AND YEAR(t.Date) = 2013 AND MONTH(t.Date) = MONTH(STR_TO_DATE('2013-12', '%Y-%m')) GROUP BY Date ORDER BY peak_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH least_consumption AS ( SELECT CustomerID, SUM(Amount) AS total_consumption FROM transactions_1k WHERE YEAR(Date) = 2013 GROUP BY CustomerID ORDER BY total_consumption ASC LIMIT 1 )\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, MAX(IncreaseOrDecrease) AS Biggest_Increase, MIN(IncreaseOrDecrease) AS Lowest_Decrease, (MAX(IncreaseOrDecrease) / consumption_2013 * 100) AS Percentage_Biggest_Increase, (MIN(IncreaseOrDecrease) / consumption_2013 * 100) AS Percentage_Lowest_Decrease FROM ( SELECT Segment, (Amount_2013 - Amount_2012) AS IncreaseOrDecrease, (Amount_2013 / consumption_2013) AS consumption_2013 FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE YEAR(Date) = 2013 ) subquery;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '20130801' AND '20131130';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) AS \"More_Discount_Gas_Stations\" FROM ( SELECT \"GasStationID\" FROM gasstations WHERE \"Country\" = 'CZE' INTERSECT SELECT \"GasStationID\" FROM gasstations WHERE \"Country\" = 'SVK' ) AS discount_stations;\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT c1.Consumption FROM yearmonth AS c1 JOIN customers AS c2 ON c1.CustomerID = c2.CustomerID JOIN customers AS c3 ON c2.CustomerID = c3.CustomerID WHERE c2.CustomerID = 7 AND c3.CustomerID = 5 AND c1.Date = '2013-04-01' GROUP BY c1.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN Currency = 'CZK' THEN Amount ELSE 0 END) AS CZK_SMEs, SUM(CASE WHEN Currency = 'EUR' THEN Amount ELSE 0 END) AS EUR_SMEs, (SUM(CASE WHEN Currency = 'CZK' THEN Amount ELSE 0 END) - SUM(CASE WHEN Currency = 'EUR' THEN Amount ELSE 0 END)) AS Difference FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE Segment = 'SME';\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, SUM(t1.Amount) AS total_consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Currency = 'Euro' AND ym.Date LIKE '2013-10%' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT t1.CustomerID, SUM(t1.Amount) AS TotalConsumption FROM transactions_1k t1 JOIN customers t2 ON t1.CustomerID = t2.CustomerID JOIN yearmonth t3 ON t1.CustomerID = t3.CustomerID WHERE t2.Segment = 'KAM' GROUP BY t1.CustomerID ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM' AND Date = '2013-05-01');\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT ( SUM(CASE WHEN transactions_1k.Amount > 46.73 THEN 1 ELSE 0 END) * 100.0 ) AS percentage FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT g.Country, COUNT(t1.GasStationID) AS total_value_for_money_stations FROM gasstations g JOIN transactions_1k t1 ON g.ChainID = t1.GasStationID JOIN products p ON t1.ProductID = p.ProductID JOIN ( SELECT t1.GasStationID, (t1.Amount - t1.Price) AS popularity FROM transactions_1k t1 JOIN products p ON t1.ProductID = p.ProductID WHERE p.Description LIKE '%value for money%' ) t2 ON g.GasStationID = t2.GasStationID GROUP BY g.Country ORDER BY total_value_for_money_stations DESC;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT ( SUM(CASE WHEN transactions_1k.Currency = 'EUR' THEN transactions_1k.Amount ELSE 0 END) * 100.0 / SUM(transactions_1k.Amount) ) AS percentage_euro_payers FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Segment = 'KAM';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage FROM yearmonth WHERE Date LIKE '201202%' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT (SUM(CASE WHEN \"Segment\" = 'Premium' THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM \"gasstations\" WHERE \"Country\" = 'Slovakia';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT MAX(Consumption) AS max_consumed FROM yearmonth WHERE date = '201309';\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, MIN(t1k.Amount) AS least_consumption FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date = '201309' GROUP BY c.Segment ORDER BY least_consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID, MIN(t1.Amount) AS least_consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '201206' GROUP BY c.CustomerID ORDER BY least_consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS Highest_Monthly_Consumption_2012 FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE substr(Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT c.CustomerID, MAX(ym.Consumption) AS BiggestMonthlyConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'Euro' GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM products p JOIN yearmonth ym ON p.ProductID = ym.ProductID WHERE ym.Date LIKE '201309%' ORDER BY ym.Date;\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE MONTH(t.Date) = 6 AND YEAR(t.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT g.ChainID, g.Country, g.Segment FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Currency = 'Euro' GROUP BY g.ChainID, g.Country, g.Segment;\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT p.Description FROM transactions_1k AS t JOIN products AS p ON t.ProductID = p.ProductID WHERE t.Amount IN ( SELECT SUM(t2.Amount) FROM transactions_1k AS t2 JOIN yearmonth AS ym ON t2.CustomerID = ym.CustomerID WHERE ym.Date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY t2.CustomerID ) AND t.Amount IN ( SELECT SUM(t3.Amount) FROM transactions_1k AS t3 JOIN gasstations AS gs ON t3.GasStationID = gs.GasStationID WHERE gs.Country = 'Germany' GROUP BY t3.CustomerID ) AND t.Amount * (SELECT ExchangeRate FROM exchange_rates WHERE Currency = 'EUR') >= 1;\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(transactions_1k.Price) AS avg_price_jan_2012 FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT yearmonth.CustomerID) AS num_customers FROM yearmonth JOIN transactions_1k ON yearmonth.CustomerID = transactions_1k.CustomerID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE gs.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT MIN(Date) AS earliest_transaction, MAX(Date) AS latest_transaction FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE ChainID = 11 );\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date >= '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN customers c ON t.CustomerID = c.CustomerID WHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t1.Price) AS average_total_price FROM transactions_1k t1 JOIN customers c ON t1.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT t1.CustomerID, SUM(t1.Amount) AS TotalAmountSpent FROM transactions_1k t1 JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID WHERE t2.Date = '2012-08-25' GROUP BY t1.CustomerID ORDER BY TotalAmountSpent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT g.Country FROM gasstations g JOIN transactions_1k t1 ON g.GasStationID = t1.GasStationID JOIN customers c ON t1.CustomerID = c.CustomerID WHERE t1.Date = '2012-08-25' GROUP BY g.Country ORDER BY g.Country LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT transactions_1k.Amount AS paid_currency FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date = '2012-08-24 16:25:00' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT c.Segment FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE DATE('2012-08-23 21:20:00') = DATE(y.Date);\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE customers.Currency = 'CZK' AND transactions_1k.Date = '2012-08-26' AND transactions_yearmonth.Time < '13:00:00';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT customers.Segment FROM customers WHERE customers.CustomerID = ( SELECT MIN(TransactionID) FROM transactions_1k )\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.ChainID = transactions_1k.GasStationID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT '2012/8/23 21:20:00' AS timestamp;\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(t1k.Amount) AS total_expenses_jan_2012, t1k.Date AS payment_date, t1k.Amount AS payment_amount FROM transactions_1k t1k JOIN yearmonth ym ON t1k.CustomerID = ym.CustomerID WHERE t1k.Date = '2012-08-24' AND ym.Date LIKE '2012-01-%';\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(DISTINCT transactions_1k.TransactionID) FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '2012-08-26' AND TIME(transactions_1k.Time) BETWEEN '08:00:00' AND '09:00:00' AND yearmonth.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT customers.Currency FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE DATE('transactions_1k.Date') = '2013-06-01' AND transactions_1k.Amount = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT g.Country FROM transactions_1k t JOIN yearmonth y ON t.CustomerID = y.CustomerID JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.TransactionID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT customers.CustomerID, customers.Segment, customers.Currency FROM transactions_1k JOIN customers ON customers.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT customers.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT customers.CustomerID) FROM customers WHERE customers.Segment = '2012/8/25') AS percentage_using_eur FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Date LIKE '2012-08-25%';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (SUM(CASE WHEN year = 2012 THEN consumption ELSE 0 END) - SUM(CASE WHEN year = 2013 THEN consumption ELSE 0 END)) / SUM(CASE WHEN year = 2012 THEN consumption ELSE 0 END) FROM (SELECT CustomerID, Date, SUM(Amount) AS consumption FROM transactions_1k WHERE TransactionID = 634.8 GROUP BY CustomerID, Date ) AS subquery\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT gs.GasStationID, gs.ChainID, gs.Country, SUM(tt.Amount) AS TotalRevenue FROM transactions_1k tt JOIN gasstations gs ON tt.GasStationID = gs.GasStationID GROUP BY gs.GasStationID, gs.ChainID, gs.Country ORDER BY TotalRevenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT AVG(CASE WHEN customers.Segment = 'premium' AND gasstations.Segment = 'premium' AND gasstations.Country = 'SVK' THEN 1.0 ELSE 0.0 END) * 100.0 AS percentage FROM customers JOIN gasstations ON 1=1 JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE gasstations.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description, COUNT(transactions_1k.ProductID) AS sales_count FROM products JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY sales_count DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, AVG(p.price / p.amount) AS avg_price_per_item, g.Currency FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN products p ON gs.ChainID = p.ChainID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Amount > 1000 GROUP BY c.CustomerID ORDER BY avg_price_per_item DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT gasstations.Country, MAX(transactions_1k.Amount) AS max_expensive_product_price FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.ProductID = 2 GROUP BY gasstations.Country HAVING MAX(transactions_1k.Amount) IS NOT NULL;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN transactions_1k tt ON t.ProductID = tt.ProductID AND p.ProductID = tt.ProductID WHERE t.ProductID = 5 AND t.Amount > 29 AND ym.Date = '2012-08-01';\t----- bird -----\tdebit_card_specializing"
}