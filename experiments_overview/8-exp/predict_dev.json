{
    "0": "SELECT MAX(`Percent (%) Eligible Free (K-12)`) AS highest_eligible_free_rate FROM `frpm` JOIN `satscores` ON `frpm`.`CDSCode` = `satscores`.`cds` WHERE `frpm`.`County Name` = 'Alameda County';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17), (s.FreeMealCount (Ages 5-17) / s.Enrollment (Ages 5-17)) AS eligible_free_rate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.SchoolType = 'Continuation School' GROUP BY s.CDSCode, s.Enrollment (Ages 5-17), s.FreeMealCount (Ages 5-17) ORDER BY eligible_free_rate ASC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT schools.Zip FROM schools JOIN fprm ON schools.CDSCode = fprm.CDSCode WHERE fprm.Charter = 1 AND fprm.County = 'Fresno County Office of Education';\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState FROM schools s JOIN ( SELECT CDSCode, MAX(FRPMCount(K-12)) AS max_FRPM FROM frpm WHERE AcademicYear = '2013-14' GROUP BY CDSCode ) f ON s.CDSCode = f.CDSCode;\t----- bird -----\tcalifornia_schools",
    "4": "SELECT schools.Phone FROM schools JOIN satscores ON schools.CDSCode = satscores.cds JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Charter = 1 AND frpm.OpenDate > '2000-01-01' AND satscores.rtype = 'Charter' GROUP BY schools.CDSCode HAVING COUNT(DISTINCT satscores.sname) = 1;\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 400 AND schools.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered = 'Yes' OR s.GSserved = 'Yes') GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumGE1500 > 0 ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate HAVING f.FRPMCount(K-12) = ( SELECT MAX(FRPMCount(K-12)) FROM frpm );\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(DISTINCT s.CDSCode) FROM satscores AS s JOIN schools AS sch ON s.cds = sch.CDSCode WHERE s.AvgScrMath > 560 AND sch.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.SchoolName, s.Enrollment(Ages 5-17), s.FRPMCount(Ages 5-17) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE sc.rtype = 'SAT' AND sc.sname = 'Reading' GROUP BY s.CDSCode, s.SchoolName ORDER BY s.FRPMCount(Ages 5-17) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT schools.CDSCode FROM schools JOIN satscores ON schools.CDSCode = satscores.cds GROUP BY schools.CDSCode HAVING SUM(satscores.enroll12) + SUM(satscores.enroll12) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(NumGE1500 / NumTstTakr) AS highest_eligible_free_rate FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE ExcellenceRate > 0.3;\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT cds, AVG(NumGE1500 / NumTstTakr) AS excellence_rate FROM satscores GROUP BY cds ORDER BY excellence_rate DESC LIMIT 3 ) ex ON s.CDSCode = ex.cds WHERE ex.excellence_rate IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT s.CDSCode, s.NCESSchool, s.Enrollment (Ages 5-17) AS popularity FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode, s.NCESSchool ORDER BY popularity DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT s.CDSCode, s.sname, s.AvgScrRead FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.StatusType = 'Active' ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr < 100 AND schools.NCESDist = 'Alameda';\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.charter_num FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrWrite > 499 GROUP BY s.CDSCode, s.charter_num ORDER BY sc.AvgScrWrite DESC LIMIT 10;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Fresno' AND schools.FundingType = 'Directly Funded' AND schools.Charter = 0 AND schools.NumTstTakr <= 250;\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores) ORDER BY sc.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE Amador = 'Amador' AND Low_Grade = '9' AND High_Grade = '12';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.NCESDist = 'Los Angeles' AND (satscores.NumTstTakr * satscores.AvgScrRead + satscores.NumTstTakr * satscores.AvgScrMath + satscores.NumTstTakr * satscores.AvgScrWrite) > 500 AND (satscores.NumTstTakr * satscores.AvgScrRead + satscores.NumTstTakr * satscores.AvgScrMath + satscores.NumTstTakr * satscores.AvgScrWrite) < 700;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, MAX(s.NumTstTakr) AS max_test_takers FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Contra Costa' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School ORDER BY max_test_takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.CDSCode, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE (sc.AvgScrRead + sc.AvgScrMath + sc.AvgScrWrite) - (sc.NumTstTakr * 100) > 30 GROUP BY s.CDSCode, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate ORDER BY (sc.AvgScrRead + sc.AvgScrMath + sc.AvgScrWrite) - (sc.NumTstTakr * 100) DESC;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 1500 AND sc.AvgScrMath >= 1500 AND sc.AvgScrWrite >= 1500 AND s.Percent (%) Eligible Free (K-12) > 0.1\t----- bird -----\tcalifornia_schools",
    "25": "SELECT schools.CDSCode, schools.FundingType FROM schools JOIN satscores ON schools.CDSCode = satscores.cds JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.DistrictName = 'Riverside' AND satscores.rtype = 'SAT' AND satscores.AvgScrMath > 400 GROUP BY schools.CDSCode, schools.FundingType HAVING SUM(satscores.AvgScrMath) / COUNT(DISTINCT schools.CDSCode) > 400;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'High' AND s.District = 'Monterey' AND sc.rtype = 'Ages 15-17' AND sc.NumTstTakr > 800 GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate ORDER BY sc.NumTstTakr DESC;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.school, AVG(s.AvgScrWrite) AS avg_writing_score, COALESCE(s.phone, 'N/A') AS communication_number FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OpenDate < '1991-01-01' OR s.ClosedDate > '2000-12-31' GROUP BY s.school;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.CDSCode, s.DOCType FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.FundingType = 'Locally Funded' GROUP BY s.CDSCode, s.DOCType HAVING AVG(sc.enroll12 - sc.enroll517) > ( SELECT AVG(sc2.enroll12 - sc2.enroll517) FROM schools s2 JOIN satscores sc2 ON s2.CDSCode = sc2.cds WHERE s2.FundingType = 'Locally Funded' );\t----- bird -----\tcalifornia_schools",
    "29": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, MAX(s.enroll12) AS max_enroll FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2013-14' AND f.DistrictType = 'K-12' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet HAVING max_enroll = (SELECT MAX(enroll12) FROM (SELECT s.enroll12, s.CDSCode FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.AcademicYear = '2013-14' AND f.DistrictType = 'K-12' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet) subquery) ORDER BY s.OpenDate LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "30": "SELECT s.City, s.Enrollment (K-12) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Academic Year = '2013-14' GROUP BY s.City ORDER BY s.Enrollment (K-12) ASC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "SELECT CDSCode, Enrollment (K-12) AS total_enrollment, FreeMealCount (K-12) AS total_free_meals, Percent (%) EligibleFree (K-12) AS eligible_free_rate FROM frpm ORDER BY total_enrollment DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "32": "[SQL] SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-12) DESC LIMIT 5; SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, s.Enrollment (K-12), s.FreeMealCount (K-12), s.FRPMCount (K-12), s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName ORDER BY s.FreeMealCount (K-1\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.website, s.school_name FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.enroll12 BETWEEN 1900 AND 2000 AND sc.dname = 'Ages 5-17' AND sc.rtype = 'Free Meal';\t----- bird -----\tcalifornia_schools",
    "34": "SELECT f.Enrollment (Ages 5-17), f.Free Meal Count (Ages 5-17), f.Percent (%) Eligible Free (Ages 5-17), s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.School Name = 'Kacey Gibson' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.CharterSchool = 1 AND f.Enrollment (K-12) = (SELECT MIN(Enrollment (K-12)) FROM frpm) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead >= 150 AND sc.AvgScrMath >= 150 AND sc.AvgScrWrite >= 150 AND sc.NumGE1500 >= 1 ORDER BY sc.NumGE1500 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT schools.Street, schools.City, schools.Zip, schools.State FROM schools JOIN satscores ON schools.CDSCode = satscores.cds JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) / satscores.NumTstTakr AS excellence_rate = (SELECT MIN(excellence_rate) FROM (SELECT (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) / satscores.NumTstTakr AS excellence_rate FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode) AS subquery) ORDER BY excellence_rate ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT s.Website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Los Angeles County' AND sc.NumTstTakr BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) AS average_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.NCESDist = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.Phone FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, AVG(AvgScrRead) AS avg_reading_score FROM satscores GROUP BY CDSCode ORDER BY avg_reading_score ASC LIMIT 1 ) subq ON s.CDSCode = subq.CDSCode WHERE s.District = 'Fresno Unified';\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.School, AVG(s.AvgScrRead) AS avg_reading_score FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.Virtual = 'F' GROUP BY s.School ORDER BY avg_reading_score DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.SchoolType FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.rtype = 'SAT' AND ss.sname = 'Math' GROUP BY s.SchoolType ORDER BY MAX(ss.AvgScrMath) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT AVG(satscores.AvgScrMath) AS avg_math_score FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (satscores.AvgScrMath + satscores.AvgScrRead + satscores.AvgScrWrite) = ( SELECT MAX(AvgScrMath + AvgScrRead + AvgScrWrite) FROM ( SELECT satscores.cds, AVG(satscores.AvgScrMath) AS AvgScrMath, AVG(satscores.AvgScrRead) AS AvgScrRead, AVG(satscores.AvgScrWrite) AS AvgScrWrite FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode GROUP BY satsscores.cds ) AS subquery ) AND schools.County = ( SELECT schools.County FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE (satsscores.AvgScrMath + satsscores.AvgScrRead + satsscores.AvgScrWrite) = ( SELECT MAX(AvgScrMath + AvgScrRead + AvgScrWrite) FROM ( SELECT satsscores.cds, AVG(satsscores.AvgScrMath) AS AvgScrMath, AVG(satsscores.AvgScrRead) AS AvgScrRead, AVG(satsscores.AvgScrWrite) AS AvgScrWrite FROM satsscores JOIN frpm ON satsscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode GROUP BY satsscores.cds ) AS subquery ) );\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.city, AVG(s.AvgScrWrite) AS avg_writing_score FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.NumTstTakr >= 1500 AND sc.AvgScrRead >= 1500 AND sc.AvgScrMath >= 1500 GROUP BY s.city ORDER BY avg_writing_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.CDSCode, AVG(satscores.AvgScrWrite) AS avg_writing_score FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.AdmFName1 = 'Ricci Ulrich' GROUP BY schools.CDSCode ORDER BY avg_writing_score DESC;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, SUM(ss.enroll12) AS total_enroll_k12 FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet ORDER BY total_enroll_k12 DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(DISTINCT s.CDSCode) / 12 FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County Name = 'Alameda County' AND f.District Type = 'Elementary School District' AND YEAR(s.OpenDate) = 1980;\t----- bird -----\tcalifornia_schools",
    "48": "SELECT ( SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Orange County' AND schools.DOC = 54 ) AS unified_count, ( SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Orange County' AND schools.DOC = 52 ) AS elementary_count, unified_count / elementary_count AS ratio;\t----- bird -----\tcalifornia_schools",
    "49": "SELECT s.County, s.School, s.ClosedDate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.County, s.School ORDER BY COUNT(s.CDSCode) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.school_name, s.street FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, AVG(AvgScrMath) AS avg_math FROM satscores GROUP BY CDSCode ORDER BY avg_math DESC LIMIT 7 ) sub ON s.CDSCode = sub.CDSCode WHERE sc.rtype = 'Math';\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, ss.AvgScrRead FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.rtype = 'Reading' GROUP BY s.CDSCode, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState ORDER BY ss.AvgScrRead ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE (satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) >= 1500 AND schools.City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(NumTstTakr) AS total_test_takers FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "SELECT schools.CDSCode, schools.Zip FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Active' AND schools.Charter = 0 AND (schools.AdmFName1 = 'Avetik Atoian' OR schools.AdmFName2 = 'Avetik Atoian' OR schools.AdmFName3 = 'Avetik Atoian') GROUP BY schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "55": "SELECT COUNT(DISTINCT schools.CDSCode) AS colusa_count, COUNT(DISTINCT schools.CDSCode) AS humboldt_count, (colusa_count / humboldt_count) AS ratio FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.State = 'California' AND (schools.County = 'Colusa' OR schools.County = 'Humboldt') GROUP BY schools.CDSCode;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(DISTINCT s.CDSCode) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.State = 'California' AND s.City = 'San Joaquin' AND s.StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.Phone, s.Ext FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.AvgScrWrite IS NOT NULL GROUP BY s.CDSCode, s.Phone, s.Ext ORDER BY ss.AvgScrWrite DESC LIMIT 333;\t----- bird -----\tcalifornia_schools",
    "58": "SELECT s.Phone, s.Ext FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Zip = '95203-3704' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s.website FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.StatusType = 'Charter' AND (f.AdmFName1 = 'Mike Larson' OR f.AdmFName2 = 'Mike Larson' OR f.AdmFName3 = 'Mike Larson') AND (f.AdmFName1 = 'Dante Alvarez' OR f.AdmFName2 = 'Dante Alvarez' OR f.AdmFName3 = 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "SELECT s.website FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.DistrictType = 'Charter' AND f.SchoolType = 'Charter' AND f.EducationalOptionType = 'Partially Virtual' AND s.County = 'San Joaquin';\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.DOC = 52 AND schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.County = 'Los Angeles' AND frpm.DistrictType = 'Public' AND frpm.SchoolType = 'Non-Chartered' AND frpm.2013_14_CALPADS_Fall_1_Certification_Status = 1 AND frpm.Percent_Eligible_Free_K_12 < 0.0018\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Charter = 1 AND s.CharterNum = '00D2' GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate ORDER BY s.City;\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Hickman' AND schools.CharterNum = '00D4';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SUM(CASE WHEN s.CharterFundingType = 'L' THEN 1 ELSE 0 END) / SUM(CASE WHEN s.CharterFundingType!= 'L' THEN 1 ELSE 0 END)) * 100 FROM frpm f JOIN satscores s ON f.CDSCode = s.cds WHERE f.NCESDist = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(DISTINCT s.CDSCode) FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.AcademicYear BETWEEN '2000-01-01' AND '2005-12-31' AND s.FundingType = 'Directly Funded' AND s.County = 'Stanislaus';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(Charter) AS total_closure_1989 FROM schools WHERE City = 'San Francisco' AND Year = 1989;\t----- bird -----\tcalifornia_schools",
    "68": "SELECT s.County, COUNT(s.SchoolCode) AS ClosureCount FROM schools s JOIN school_closures sc ON s.CDSCode = sc.CDSCode WHERE sc.AcademicYear BETWEEN 1980 AND 1989 AND s.FundingType = 'Youth Authority Facilities (CEA)' GROUP BY s.County ORDER BY ClosureCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.rtype = 'State Special Schools' AND s.SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(DISTINCT schools.CDSCode) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Active' AND schools.ClosedDate IS NULL AND schools.County = 'Alpine';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT s.CDSCode FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Magnet = 0 AND s.City = 'Fresno' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "72": "SELECT SUM(s.enroll12) AS total_enrollment FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.CDSCode = 'SSS' AND f.County = 'Fremont' AND f.AcademicYear = '2014-2015' AND s.sname = 'State Special School';\t----- bird -----\tcalifornia_schools",
    "73": "SELECT s.enroll12 FROM satscores s JOIN schools sc ON s.cds = sc.CDSCode WHERE sc.MailStreet = 'PO Box 1040' AND sc.School = 'Youth Authority School';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT s.LowGrade FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.NCESDist = '0613360' AND f.DistrictType = 'District Special Education Consortia School' AND f.EdOpsCode = 'SPECON' ORDER BY s.LowGrade ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "75": "SELECT s.school_name, s.educational_level FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.FRPM_Count_K_12 > 0 AND f.County_Code = '37' AND sc.rtype = 'Breakfast Provision 2';\t----- bird -----\tcalifornia_schools",
    "76": "SELECT s.City FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.EducationalOptionType = 'Lunch Provision 2' AND f.LowGrade = '9' AND f.HighGrade = '12' AND f.County = 'Merced' AND s.SchoolType = 'High School' AND s.EILCode = 'HS';\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.County = 'Los Angeles' AND (sc.sname LIKE 'Kindergarten%' OR sc.sname LIKE '9th Grade%') GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate HAVING COUNT(DISTINCT sc.rtype) >= 2 AND sc.AvgScrRead >= 250 AND sc.AvgScrMath >= 250 AND sc.AvgScrWrite >= 250 AND sc.NumGE1500 >= 10 AND sc.enroll12 > 0 AND sc.NumTstTakr > 0 AND (sc.FRPMCount(Ages 5-17) / sc.enroll12 * 100) >= 10;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT s.stype FROM satscores s JOIN frpm f ON s.cds = f.CDSCode WHERE f.CountyName = 'Adelanto' GROUP BY s.stype ORDER BY COUNT(s.stype) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT s.County Name, COUNT(s.CDSCode) AS school_count FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.Charter = 0 GROUP BY s.County Name ORDER BY school_count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.school_type, s.school_name, s.latitude FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores sc2 WHERE sc2.cds = s.CDSCode) AND sc.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores sc3 WHERE sc3.cds = s.CDSCode) AND sc.AvgScrWrite = (SELECT MAX(AvgScrWrite) FROM satscores sc4 WHERE sc4.cds = s.CDSCode) AND sc.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores sc5 WHERE sc5.cds = s.CDSCode) AND s.latitude = (SELECT MAX(latitude) FROM schools s2 WHERE s2.CDSCode = s.CDSCode);\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.City, s.LowestGrade, s.SchoolName FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, MIN(Latitude) AS MinLatitude FROM schools WHERE state = 'CA' GROUP BY CDSCode ) min_lat ON s.CDSCode = min_lat.CDSCode WHERE s.Latitude = min_lat.MinLatitude ORDER BY s.Latitude ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName, MAX(ABS(s.Longitude)) AS MaxLongitude FROM frpm s JOIN schools sch ON s.CDSCode = sch.CDSCode JOIN satscores sc ON sch.CDSCode = sc.cds GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName HAVING MAX(ABS(s.Longitude)) = ( SELECT MAX(ABS(longitude)) FROM (SELECT s.CDSCode, s.Longitude FROM frpm s JOIN schools sch ON s.CDSCode = sch.CDSCode JOIN satscores sc ON sch.CDSCode = sc.cds) subquery ) SELECT sc.rtype, sc.sname, sc.dname, sc.cname, sc.enroll12, sc.NumTstTakr, sc.AvgScrRead, sc.AvgScrMath, sc.AvgScrWrite, sc.NumGE1500 FROM satscores sc WHERE sc.cds = ( SELECT CDSCode FROM (SELECT s.CDSCode, MAX(ABS(s.Longitude)) AS MaxLongitude FROM frpm s JOIN schools sch ON s.CDSCode = sch.CDSCode JOIN satscores sc ON sch.CDSCode = sc.cds GROUP BY s.CDSCode, s.CountyName, s.DistrictName, s.SchoolName HAVING MAX(ABS(s.Longitude)) = ( SELECT MAX(ABS(longitude)) FROM (SELECT s.CDSCode, s.Longitude FROM frpm s JOIN schools sch ON s.CDSCode = sch.CDSCode JOIN satscores sc ON sch.CDSCode = sc.cds) subquery ) ) LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "83": "SELECT schools.City, COUNT(satscores.cds) AS num_schools FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Magnet = 1 AND schools.GradeSpan = 'K-8' AND satscores.NSLPProvisionStatus = 'Multiple Provision Types' GROUP BY schools.City HAVING COUNT(satscores.cds) > 0;\t----- bird -----\tcalifornia_schools",
    "84": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, COUNT(CASE WHEN s.AdmFName1 = 'First Name 1' THEN 1 END) AS popularity_1, COUNT(CASE WHEN s.AdmFName1 = 'First Name 2' THEN 1 END) AS popularity_2 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet ORDER BY popularity_1 DESC, popularity_2 DESC LIMIT 2;\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.CDSCode, s.DistrictCode FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.AdmFName1 = 'Alusine' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "86": "SELECT s.CDSCode, s.NCESDist, s.County, s.School FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.CharterNum = '40' LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "87": "SELECT s.AdmFName1, s.AdmLName1, s.AdmEmail1 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.County = 'San Bernardino' AND f.District = 'City Unified' AND f.AcademicYear BETWEEN '2009-01-01' AND '2010-12-31' AND (f.SchoolType = 'Intermediate/Middle Schools' OR f.SchoolType = 'Unified Schools') AND s.Charter = 0 AND s.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND s.ClosedDate IS NULL LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.CDSCode, s.AdmFName1, s.AdmEmail1 FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.AvgScrRead >= 1500 OR ss.AvgScrMath >= 1500 OR ss.AvgScrWrite >= 1500 GROUP BY s.CDSCode, s.AdmFName1, s.AdmEmail1 HAVING COUNT(ss.cds) = ( SELECT MAX(total_test_takers) FROM ( SELECT COUNT(ss.cds) AS total_test_takers FROM satscores AS ss JOIN schools AS s ON ss.cds = s.CDSCode WHERE ss.AvgScrRead >= 1500 OR ss.AvgScrMath >= 1500 OR ss.AvgScrWrite >= 1500 GROUP BY s.CDSCode ) AS subquery ) LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK PO OBRATU' AND district_id IN ( SELECT district_id FROM district WHERE A3 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(DISTINCT a.account_id) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A3 = 'Prague' AND EXISTS ( SELECT 1 FROM loan l WHERE l.account_id = a.account_id AND l.status = 'eligible' );\t----- bird -----\tfinancial",
    "91": "[SQL] SELECT AVG(A12) AS avg_unemployment_1995, AVG(A13) AS avg_unemployment_1996 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = (SELECT client_id FROM account WHERE account_id = (SELECT account_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_\t----- bird -----\tfinancial",
    "92": "SELECT COUNT(DISTINCT district_id) FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'North Bohemia' AND c.gender = 'M' AND c.average_salary > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT c.account_id, d.A11 AS lowest_avg_salary, (SELECT MAX(A11) FROM district) AS highest_avg_salary, (SELECT MAX(A11) FROM district) - (SELECT MIN(A11) FROM district) AS salary_gap FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, d.A11 DESC;\t----- bird -----\tfinancial",
    "95": "SELECT a.account_id, AVG(d.A11) AS avg_salary FROM client AS a JOIN district AS d ON a.district_id = d.district_id WHERE a.birth_date = (SELECT MIN(birth_date) FROM client) GROUP BY a.account_id ORDER BY avg_salary DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN account ON client.district_id = account.district_id JOIN trans ON account.account_id = trans.account_id JOIN loan ON account.account_id = loan.account_id WHERE trans.type = 'weekly issuance' AND loan.status = 'Owner';\t----- bird -----\tfinancial",
    "97": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender ='male' AND c.birth_date BETWEEN '2000-01-01' AND '2005-12-31' AND EXISTS ( SELECT 1 FROM disp d WHERE d.client_id = c.client_id AND d.type = 'Disponent' );\t----- bird -----\tfinancial",
    "98": "SELECT a.account_id, a.district_id, l.amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE YEAR(l.date) = 1997 AND l.status = 'approved' GROUP BY a.account_id, a.district_id ORDER BY MIN(l.amount) ASC LIMIT 1;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, a.frequency, a.date, MAX(l.amount) AS highest_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date >= '1993-01-01' GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING MAX(l.amount) = (SELECT MAX(l2.amount) FROM loan l2 WHERE l2.account_id = a.account_id);\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A2 = 'Sokolov' AND c.gender = 'F' AND c.birth_date < '1950-01-01';\t----- bird -----\tfinancial",
    "101": "SELECT t1.account_id, t1.date FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id WHERE t2.date = '1995-01-01' GROUP BY t1.account_id ORDER BY t1.date ASC LIMIT 1;\t----- bird -----\tfinancial",
    "102": "SELECT a.account_id, a.district_id, a.frequency, a.date, SUM(t.amount) AS total_amount FROM account a JOIN trans t ON a.account_id = t.account_id WHERE a.date < '1997-01-01' AND t.amount > 3000 GROUP BY a.account_id, a.district_id, a.frequency, a.date HAVING total_amount > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client.client_id FROM client JOIN disp ON client.client_id = disp.client_id JOIN card ON disp.card_id = card.card_id WHERE card.issued = '1994-03-03' AND card.type = 'card';\t----- bird -----\tfinancial",
    "104": "SELECT a.opened_date FROM account a JOIN trans t ON a.account_id = t.account_id WHERE t.date = '1998-10-14' AND t.amount = 840;\t----- bird -----\tfinancial",
    "105": "SELECT d.district_id FROM account AS a JOIN trans AS t ON a.account_id = t.account_id JOIN loan AS l ON a.account_id = l.account_id WHERE t.date = '1994-08-25' AND t.type = 'loan_approved' JOIN district AS d ON a.district_id = d.district_id;\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS biggest_transaction_amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE client.birth_date <= '1996-10-21' AND trans.date >= '1996-10-21';\t----- bird -----\tfinancial",
    "107": "SELECT c.gender, d.A11 FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date = (SELECT MIN(birth_date) FROM client c2 WHERE c2.district_id = c.district_id) AND d.A11 = (SELECT AVG(A11) FROM district d2 WHERE d2.district_id = c.district_id) ORDER BY c.birth_date DESC;\t----- bird -----\tfinancial",
    "108": "SELECT t1.client_id, t1.first_transaction_amount FROM client AS t1 JOIN trans AS t2 ON t1.client_id = t2.account_id WHERE t2.trans_id = ( SELECT MIN(trans_id) FROM trans WHERE account_id = t1.account_id ) ORDER BY t1.first_transaction_amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN account ON district.district_id = account.district_id WHERE district.A2 = 'Jesenik' AND district.gender = 'F';\t----- bird -----\tfinancial",
    "110": "SELECT c.disp_id FROM client c JOIN trans t ON c.client_id = t.account_id WHERE t.amount = 5100 AND YEAR(t.date) = 1998 AND MONTH(t.date) = 9 AND DAY(t.date) = 2 LIMIT 1;\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Litomerice') AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "112": "SELECT d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "113": "SELECT c.birth_date FROM client c JOIN trans t ON c.client_id = t.account_id JOIN loan l ON t.account_id = l.account_id WHERE l.amount = 98832 AND l.date = '1996-01-03' LIMIT 1;\t----- bird -----\tfinancial",
    "114": "SELECT c.account_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'Prague' ORDER BY c.client_id LIMIT 1;\t----- bird -----\tfinancial",
    "115": "SELECT district_id FROM district WHERE A3 = 'South Bohemia';\t----- bird -----\tfinancial",
    "116": "SELECT client_id, MIN(date) AS loan_approval_date FROM loan WHERE YEAR(date) = 1993 AND MONTH(date) = 7 AND DAY(date) = 5 GROUP BY client_id;\t----- bird -----\tfinancial",
    "117": "SELECT AVG(payments) * 100.0 AS percentage_fully_paid FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT SUM(CASE WHEN loan_amount < 100000 AND status = 'C' THEN 1 ELSE 0 END) * 100.0 / SUM(loan_amount) FROM loan\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2, d.A3 FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.date BETWEEN '1993-01-01' AND '1993-12-31' AND EXISTS ( SELECT 1 FROM trans t WHERE t.account_id = a.account_id AND t.type = 'transaction' AND t.date > a.date );\t----- bird -----\tfinancial",
    "120": "SELECT a.account_id, c.frequency FROM account a JOIN client c ON a.district_id = c.district_id WHERE a.district = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT a.account_id, a.date FROM account AS a JOIN district AS d ON a.district_id = d.district_id WHERE d.A2 = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT d.A2, d.A3 FROM district AS d JOIN account AS ac ON d.district_id = ac.district_id WHERE ac.account_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT a.account_id, d.district_name, r.region_name FROM account AS a JOIN district AS d ON a.district_id = d.district_id JOIN region AS r ON d.region_id = r.region_id JOIN loan AS l ON a.account_id = l.account_id WHERE l.amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loans.loan_id, districts.district_id, AVG(clients.average_salary) AS average_salary FROM loans JOIN accounts ON loans.account_id = accounts.account_id JOIN districts ON accounts.district_id = districts.district_id JOIN clients ON accounts.client_id = clients.client_id WHERE loans.duration = 60 GROUP BY loans.loan_id, districts.district_id;\t----- bird -----\tfinancial",
    "125": "SELECT a.district_id, d.A12 AS unemployment_rate_1995, d.A13 AS unemployment_rate_1996, (d.A13 - d.A12) / d.A12 * 100 AS unemployment_rate_increment FROM account a JOIN district d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id JOIN trans t ON a.account_id = t.account_id WHERE l.status = 'D' AND t.date >= '1996-01-01' AND t.date < '1997-01-01';\t----- bird -----\tfinancial",
    "126": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin') AND YEAR(date) = 1993) AS percentage FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin') AND YEAR(date) = 1993;\t----- bird -----\tfinancial",
    "127": "SELECT a.account_id FROM account AS a JOIN trans AS t ON a.account_id = t.account_id WHERE t.date >= DATE('now', '-1 month') GROUP BY a.account_id HAVING COUNT(t.trans_id) >= 1;\t----- bird -----\tfinancial",
    "128": "SELECT d.district_id, d.A2, COUNT(c.client_id) AS female_count FROM district d JOIN client c ON d.district_id = c.district_id WHERE c.gender = 'F' GROUP BY d.district_id, d.A2 ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT d.district_id, d.A2, SUM(t.amount) AS total_withdrawals FROM account AS a JOIN district AS d ON a.district_id = d.district_id JOIN trans AS t ON a.account_id = t.account_id WHERE t.type = 'VYDAJ' AND MONTH(t.date) = 1 AND YEAR(t.date) = 1996 GROUP BY d.district_id, d.A2 ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(DISTINCT client.client_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'South Bohemia' AND client.card_id IS NULL;\t----- bird -----\tfinancial",
    "131": "SELECT d.district_id, d.A3, SUM(l.amount) AS total_active_loans FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'C' GROUP BY d.district_id, d.A3 ORDER BY total_active_loans DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(loans.amount) AS average_loan_amount_by_male_borrowers FROM account JOIN loan ON account.account_id = loan.account_id JOIN client ON account.district_id = client.district_id WHERE client.gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT d.district_id, d.A2 AS branch_location, d.A13 AS unemployment_rate FROM district d JOIN loan l ON d.district_id = l.account_id WHERE l.date = '1996-01-01' GROUP BY d.district_id, d.A2 ORDER BY d.A13 DESC LIMIT 1;\t----- bird -----\tfinancial",
    "134": "SELECT district_id, COUNT(*) AS crime_count FROM district WHERE YEAR(date) = 1996 GROUP BY district_id ORDER BY crime_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN loan ON account.account_id = loan.account_id WHERE trans.type = 'VYBER KARTOU' AND loan.date >= DATE('now', '-1 month') AND account.frequency = 'POPLATEK MESICNE' AND trans.amount < 0\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loans JOIN account ON loans.account_id = account.account_id WHERE account.frequency = 'POPLATEK MESICNE' AND loans.date BETWEEN '1995-01-01' AND '1997-12-31' AND loans.amount >= 250000 AND loans.status = 'APPROVED';\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN loan ON account.account_id = loan.account_id WHERE account.district_id = 1 AND loan.status = 'C';\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(DISTINCT c.client_id) FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.client_id = l.account_id WHERE YEAR(l.date) = 1995 AND d.A15 > (SELECT A15 FROM district WHERE district_id = d.district_id) AND c.gender = 'M';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER' AND disp_id IN ( SELECT client_id FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A1 = 'HIGH-LEVEL' ) );\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek');\t----- bird -----\tfinancial",
    "141": "SELECT t.district_id, SUM(t.amount) AS total_transactions FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.date BETWEEN '1997-01-01' AND '1997-12-31' AND t.amount > 10000 GROUP BY t.district_id HAVING SUM(t.amount) > 10000\t----- bird -----\tfinancial",
    "142": "SELECT a.account_id, c.client_id, o.order_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN order o ON a.account_id = o.account_id WHERE o.k_symbol = 'SIPO' AND a.district_id = 'Pisek';\t----- bird -----\tfinancial",
    "143": "SELECT a.account_id FROM account AS a JOIN card AS c ON a.account_id = c.account_id JOIN client AS client ON a.district_id = client.district_id WHERE c.type = 'gold';\t----- bird -----\tfinancial",
    "144": "SELECT AVG(trans.amount) AS avg_credit_card_amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN card ON account.card_id = card.card_id WHERE card.type = 'credit card' AND trans.date BETWEEN '2021-01-01' AND '2021-12-31';\t----- bird -----\tfinancial",
    "145": "SELECT t1.account_id, t1.district_id, t1.frequency, t1.date FROM account AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan AS t3 ON t1.account_id = t3.account_id WHERE t2.type = 'VYBER KARTOU' AND t3.amount < (SELECT AVG(t4.amount) FROM loan AS t4 WHERE t4.date BETWEEN '1998-01-01' AND '1998-12-31') AND t2.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY t1.account_id, t1.district_id, t1.frequency, t1.date;\t----- bird -----\tfinancial",
    "146": "SELECT c.client_id, c.gender, c.birth_date, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16 FROM client c JOIN district d ON c.district_id = d.district_id JOIN loan l ON c.account_id = l.account_id WHERE c.gender = 'F' AND c.account_id IN ( SELECT a.account_id FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON t.account_id = l.account_id GROUP BY a.account_id HAVING COUNT(DISTINCT l.loan_id) > 0 ) AND d.A2 IS NOT NULL AND d.A3 IS NOT NULL AND d.A4 IS NOT NULL AND d.A5 IS NOT NULL AND d.A6 IS NOT NULL AND d.A7 IS NOT NULL AND d.A8 IS NOT NULL AND d.A9 IS NOT NULL AND d.A10 IS NOT NULL AND d.A11 IS NOT NULL AND d.A12 IS NOT NULL AND d.A13 IS NOT NULL AND d.A14 IS NOT NULL AND d.A15 IS NOT NULL AND d.A16 IS NOT NULL;\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'F' AND district_id IN ( SELECT district_id FROM district WHERE A3 = 'South Bohemia' );\t----- bird -----\tfinancial",
    "148": "SELECT a.account_id, a.district_id, a.frequency, a.date FROM account AS a JOIN client AS c ON a.district_id = c.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE a.district = 'Tabor' AND c.gender = 'OWNER' AND l.status = 'ELIGIBLE'\t----- bird -----\tfinancial",
    "149": "SELECT a.account_type FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A11 > 8000 AND d.A11 <= 9000 AND a.account_type!= 'OWNER';\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN trans ON account.account_id = trans.account_id JOIN order ON account.account_id = order.account_id WHERE account.district_id = (SELECT district_id FROM district WHERE A3 = 'North Bohemia') AND trans.bank = 'AB';\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account JOIN trans ON account.account_id = trans.account_id JOIN loan ON account.account_id = loan.account_id WHERE trans.type = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN ( SELECT district_id FROM account WHERE YEAR(date) >= 1997 );\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic' AND account_id IN ( SELECT account_id FROM account WHERE account_type = 'OWNER' );\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(DISTINCT client_id) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha') AND gender = 'M';\t----- bird -----\tfinancial",
    "155": "SELECT ( COUNT(CASE WHEN type = 'gold' AND issued_date < '1998-01-01' THEN 1 END) / COUNT(ALL type) ) * 100 AS percent_of_gold_cards_issued_before_1998 FROM card\t----- bird -----\tfinancial",
    "156": "SELECT t1.client_id, t1.gender, t1.birth_date, t1.district_id FROM client AS t1 JOIN account AS t2 ON t1.district_id = t2.district_id JOIN loan AS t3 ON t2.account_id = t3.account_id JOIN trans AS t4 ON t2.account_id = t4.account_id WHERE t3.amount = (SELECT MAX(amount) FROM loan) ORDER BY t3.amount DESC LIMIT 1;\t----- bird -----\tfinancial",
    "157": "SELECT d.A15 FROM district d JOIN account ac ON d.district_id = ac.district_id WHERE ac.account_id = 532;\t----- bird -----\tfinancial",
    "158": "SELECT d.district_id FROM account AS a JOIN order AS o ON a.account_id = o.account_id JOIN district AS d ON a.district_id = d.district_id WHERE o.order_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN order o ON t.account_id = o.account_id JOIN client c ON o.client_id = c.client_id JOIN disp d ON o.disp_id = d.disp_id JOIN card k ON d.card_id = k.card_id JOIN account a ON k.account_id = a.account_id WHERE c.client_id = 3356 AND t.type = 'VYBER' AND t.operation = 'cash';\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(DISTINCT a.account_id) FROM account AS a JOIN trans AS t ON a.account_id = t.account_id JOIN loan AS l ON a.account_id = l.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND l.amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT c.type FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card k ON d.card_id = k.card_id WHERE c.client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT district.A3 FROM district WHERE district.district_id = ( SELECT client.district_id FROM client WHERE client.client_id = 3541 );\t----- bird -----\tfinancial",
    "163": "SELECT d.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, COUNT(t.account_id) AS loan_count FROM district d JOIN trans t ON d.district_id = t.account_id JOIN loan l ON t.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16 ORDER BY loan_count DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT o.bank_to, o.account_to, o.amount FROM order o WHERE o.order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5;\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT c.client_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card cc ON d.card_id = cc.card_id WHERE cc.issued >= '1997-01-01' GROUP BY c.client_id;\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT d.district_id) FROM district d WHERE d.A11 > 10000) AS percentage_women FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON a.district_id = d.district_id WHERE d.A11 > 10000 AND c.gender = 'F' OR c.gender = 'W';\t----- bird -----\tfinancial",
    "169": "SELECT (SUM(loan_amount_1997) - SUM(loan_amount_1996)) / (SUM(loan_amount_1996)) * 100 AS growth_rate FROM (SELECT account_id, SUM(amount) AS loan_amount_1996, SUM(amount) AS loan_amount_1997 FROM trans JOIN account ON trans.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE client.gender = 'M' AND trans.date BETWEEN '1996-01-01' AND '1997-12-31' AND trans.type = 'loan' GROUP BY account_id) AS subquery;\t----- bird -----\tfinancial",
    "170": "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(A16) AS east_bohemia_crimes, SUM(A16) AS north_bohemia_crimes FROM district WHERE A3 = 'East Bohemia' INTERSECT SELECT SUM(A16) AS east_bohemia_crimes, SUM(A16) AS north_bohemia_crimes FROM district WHERE A3 = 'North Bohemia' AND YEAR(date) = 1996;\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(DISTINCT disp.disp_id) AS owner_dispositions, COUNT(DISTINCT client.client_id) AS disponent_dispositions FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id WHERE account.account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT t.type, COUNT(t.trans_id) AS transaction_count, SUM(t.amount) AS total_debit FROM account AS a JOIN trans AS t ON a.account_id = t.account_id JOIN client AS c ON a.district_id = c.district_id WHERE a.account_id = 3 GROUP BY t.type;\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id JOIN trans ON account.account_id = trans.account_id WHERE trans.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT SUM(loans.amount) AS total_debt FROM client JOIN account ON client.district_id = account.district_id JOIN loan ON account.account_id = loan.account_id WHERE client.client_id = 992; SELECT loan.status FROM client JOIN account ON client.district_id = account.district_id JOIN loan ON account.account_id = loan.account_id WHERE client.client_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(trans.amount) AS client_4_account_sum FROM account JOIN trans ON account.account_id = trans.account_id WHERE trans.trans_id = 851 AND account.client_id = 4; SELECT client.gender FROM client WHERE client.client_id = 4;\t----- bird -----\tfinancial",
    "178": "SELECT c.type FROM client c JOIN disp d ON c.client_id = d.client_id JOIN card k ON d.card_id = k.card_id WHERE c.client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, c.gender, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND d.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, c.birth_date, c.district_id, l.amount FROM client c JOIN loan l ON c.client_id = l.client_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON client.account_id = loan.account_id WHERE district.A2 BETWEEN '1974' AND '1976' AND district.A3 BETWEEN '1974' AND '1976' AND district.A4 BETWEEN '1974' AND '1976' AND district.A5 BETWEEN '1974' AND '1976' AND district.A6 BETWEEN '1974' AND '1976' AND district.A7 BETWEEN '1974' AND '1976' AND district.A8 BETWEEN '1974' AND '1976' AND district.A9 BETWEEN '1974' AND '1976' AND district.A10 BETWEEN '1974' AND '1976' AND district.A11 BETWEEN '1974' AND '1976' AND district.A12 BETWEEN '1974' AND '1976' AND district.A13 BETWEEN '1974' AND '1976' AND district.A14 BETWEEN '1974' AND '1976' AND district.A15 BETWEEN '1974' AND '1976' AND district.A16 BETWEEN '1974' AND '1976' AND client.gender = 'M' AND loan.amount > 4000;\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(DISTINCT account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON client.account_id = loan.account_id WHERE client.gender = 'F' AND loan.type = 'Junior Credit Card';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 LIKE '%Prague%')) AS female_percentage FROM client WHERE district_id = (SELECT district_id FROM district WHERE A3 LIKE '%Prague%');\t----- bird -----\tfinancial",
    "186": "SELECT COUNT(DISTINCT client_id) * 100.0 / (SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'M' AND poplatek_tydne = 'POPLATEK TYDNE') AS percentage_of_male_clients_requesting_weekly_statements FROM client WHERE gender = 'M' AND poplatek_tydne = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(DISTINCT client_id) FROM client WHERE gender = 'Owner' AND frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, a.district_id, MIN(t.amount) AS lowest_approved_amount FROM account a JOIN trans t ON a.account_id = t.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.duration > 24 AND a.date < '1997-01-01' GROUP BY a.account_id, a.district_id HAVING MIN(t.amount) = (SELECT MIN(t2.amount) FROM trans t2 WHERE t2.account_id = a.account_id AND t2.duration > 24 AND a.date < '1997-01-01');\t----- bird -----\tfinancial",
    "189": "SELECT a.account_id FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON a.district_id = d.district_id WHERE c.gender = 'F' GROUP BY c.client_id HAVING MIN(avg_salary) = (SELECT MIN(avg_salary) FROM ( SELECT client_id, AVG(salary) AS avg_salary FROM loan GROUP BY client_id )) AND MAX(birth_date) = (SELECT MAX(birth_date) FROM client);\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(DISTINCT client_id) FROM client WHERE birth_date = '1920-01-01' AND district_id = ( SELECT district_id FROM district WHERE A3 = 'East Bohemia' );\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(DISTINCT loan.account_id) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.duration = 24 AND account.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "192": "SELECT AVG(loans.amount) FROM loans JOIN account ON loans.account_id = account.account_id JOIN client ON account.district_id = client.district_id WHERE loans.status = 'C' AND EXISTS ( SELECT 1 FROM order ON order.account_id = loans.account_id JOIN trans ON trans.account_id = loans.account_id WHERE order.k_symbol = 'POPLATEK PO OBRATU' );\t----- bird -----\tfinancial",
    "193": "SELECT c.client_id, d.district_id FROM client AS c JOIN district AS d ON c.district_id = d.district_id WHERE c.gender = 'M' AND c.birth_date < '1980-01-01' AND ( SELECT COUNT(*) FROM loan AS l WHERE l.account_id = c.client_id ) > 0 AND ( SELECT COUNT(*) FROM trans AS t WHERE t.account_id = c.client_id AND t.type = 'permanent_order' ) > 0 OR ( SELECT COUNT(*) FROM loan AS l WHERE l.account_id = c.client_id AND l.status = 'approved' ) > 0\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, c.age FROM client c JOIN trans t ON c.client_id = t.account_id JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id JOIN card cr ON a.account_id = cr.account_id WHERE cr.type = 'gold' AND l.status = 'eligible' AND a.district_id = c.district_id;\t----- bird -----\tfinancial",
    "195": "SELECT bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(element = 'o') AS average_oxygen_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN m.label = '+' AND b.bond_type = '-' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE atom.element = 'na' AND molecule.label = '-';\t----- bird -----\ttoxicology",
    "200": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = '#3' AND m.label = '+';\t----- bird -----\ttoxicology",
    "201": "SELECT AVG(element = 'c') * 100 AS carbon_percentage FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(DISTINCT bond_id) AS triple_type_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR099';\t----- bird -----\ttoxicology",
    "205": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'c';\t----- bird -----\ttoxicology",
    "206": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double' GROUP BY e.element;\t----- bird -----\ttoxicology",
    "208": "SELECT label, COUNT(*) AS popularity FROM atom WHERE element = 'h' GROUP BY label ORDER BY popularity DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM bond WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "211": "SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id2 = a3.atom_id JOIN connected AS c3 ON c2.bond_id = c3.bond_id JOIN atom AS a4 ON c3.atom_id2 = a4.atom_id JOIN connected AS c4 ON c3.bond_id = c4.bond_id JOIN atom AS a5 ON c4.atom_id2 = a5.atom_id WHERE a1.molecule_id = a2.molecule_id AND a2.molecule_id = a3.molecule_id AND a3.molecule_id = a4.molecule_id AND a4.molecule_id = a5.molecule_id AND c1.bond_type ='single' AND c2.bond_type ='single' AND c3.bond_type ='single' AND c4.bond_type ='single' AND a1.label = '-' AND a2.label = '-' AND a3.label = '-' AND a4.label = '-' AND a5.label = '-';\t----- bird -----\ttoxicology",
    "212": "SELECT a.element, MIN(count) AS least_numerous FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' GROUP BY a.element;\t----- bird -----\ttoxicology",
    "213": "SELECT b.bond_type FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = 'TR004_8' AND a2.atom_id = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE molecule_id NOT IN ( SELECT molecule_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'Sn' ) );\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) AS iodine_atoms, COUNT(DISTINCT a.atom_id) AS sulfur_atoms FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT a1.atom_id, a2.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "[SQL] SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id = a3.atom_id JOIN connected AS c3 ON c2.atom_id2 = c3.atom_id JOIN atom AS a4 ON c3.atom_id = a4.atom_id JOIN connected AS c4 ON c3.atom_id2 = c4.atom_id JOIN atom AS a5 ON c4.atom_id = a5.atom_id JOIN connected AS c5 ON c4.atom_id2 = c5.atom_id JOIN atom AS a6 ON c5.atom_id = a6.atom_id JOIN connected AS c6 ON c5.atom_id2 = c6.atom_id JOIN atom AS a7 ON c6.atom_id = a7.atom_id JOIN connected AS c7 ON c6.atom_id2 = c7.atom_id JOIN atom AS a8 ON c7.atom_id = a8.atom_id JOIN connected AS c8 ON c7.atom_id2 = c8.atom_id JOIN atom AS a9 ON c8.atom_id = a9.atom_id JOIN connected AS c9 ON c8.atom_id2 = c9.atom_id JOIN atom AS a10 ON c9.atom_id = a10.atom_id JOIN connected AS c10 ON c9.atom_id2 = c10.atom_id JOIN atom AS a11 ON c10.atom_id = a11.atom_id JOIN connected AS c11 ON c10.atom_id2 = c11.atom_id JOIN atom AS a12 ON c11.atom_id = a12.atom_id JOIN connected AS c12 ON c11.atom_id2 = c12.atom_id JOIN atom AS a13 ON c12.atom_id = a13.atom_id JOIN connected AS c13 ON c12.atom_id2 = c13.atom_id JOIN atom AS a14 ON c13.atom_id = a14.atom_id JOIN connected AS c14 ON c13.atom_id2 = c14.atom_id JOIN atom AS a15 ON c14.atom_id = a15.atom_id JOIN connected AS c15 ON c14.atom_id2 = c15.atom_id JOIN atom AS a16 ON c15.atom_id = a16.atom_id JOIN connected AS c16 ON c15.atom_id2 = c16.atom_id JOIN atom AS a17 ON c16.atom_id = a17.atom_id JOIN connected AS c17 ON c16.atom_id2 = c17.atom_id JOIN atom AS a18 ON c17.atom_id = a18.atom_id JOIN connected AS c18 ON c17.atom_id2 = c18.atom_id JOIN atom AS a19 ON c18.atom_id = a19.atom_id JOIN connected AS c19 ON c18.atom_id2 = c19.atom_id JOIN atom AS a20 ON c19.atom_id = a20.atom_id JOIN connected AS c20 ON c19.atom_id2 = c20.atom_id JOIN atom AS a21 ON c20.atom_id = a21.atom_id JOIN connected AS c21 ON c20.atom_id2 = c21.atom_id JOIN atom AS a22 ON c21.atom_id = a22.atom_id JOIN connected AS c22 ON c21.atom_id2 = c22.atom_id JOIN atom AS a23 ON c22.atom_id = a23.atom_id JOIN connected AS c23 ON c22.atom_id2 = c2\t----- bird -----\ttoxicology",
    "218": "SELECT ( SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) AND bond.element = 'f' ) AS carcinogenic_with_fluorine, ( SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) AND NOT bond.element = 'f' ) AS carcinogenic_without_fluorine, ( SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) ) AS total_carcinogenic_molecules, ( ( SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) AND NOT bond.element = 'f' ) / ( SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) ) ) * 100 AS percentage_without_fluorine;\t----- bird -----\ttoxicology",
    "219": "SELECT m.molecule_id, COUNT(b.bond_id) AS triple_bond_count, (COUNT(b.bond_id) * 100.0 / SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END)) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.atom_id = b.atom_id WHERE m.label = '+' AND b.bond_type = '#' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "220": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR000' GROUP BY e.element ORDER BY e.element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "221": "SELECT a1.atom_id, a2.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN atom AS a2 ON c1.atom_id2 = a2.atom_id JOIN connected AS c2 ON c1.bond_id = c2.bond_id JOIN atom AS a3 ON c2.atom_id = a3.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id WHERE a1.molecule_id = 'TR001' AND b.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END)) AS difference FROM molecule;\t----- bird -----\ttoxicology",
    "223": "SELECT a1.atom_id FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON b.bond_id = c2.bond_id WHERE b.bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT b.bond_id FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_2' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR000_2' WHERE c1.atom_id2!= c2.atom_id2;\t----- bird -----\ttoxicology",
    "225": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 5;\t----- bird -----\ttoxicology",
    "226": "SELECT molecule_id, COUNT(CASE WHEN bond_type = '=' THEN 1 ELSE NULL END) * 100.0 / SUM(COUNT(CASE WHEN bond_type = '=' THEN 1 ELSE NULL END)) AS percent FROM connected WHERE atom_id = 'TR008' GROUP BY molecule_id HAVING molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT DIVIDE(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END), COUNT(DISTINCT molecule_id)) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT molecule_id, SUM(element = 'h') AS hydrogen_count, (SUM(element = 'h') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR206')) * 100 AS percentage FROM connected WHERE atom_id = 'TR206' AND atom_id2 = 'TR206' GROUP BY molecule_id HAVING molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "229": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR000' AND a2.molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "230": "SELECT m.label, a.element FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT b.bond_type, COUNT(b.bond_id) AS bond_count FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.molecule_id = 'TR010' GROUP BY b.bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = '-' GROUP BY m.molecule_id, m.label ORDER BY m.label ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "233": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR006' AND a2.molecule_id = 'TR006' ORDER BY b.bond_type ASC, b.bond_id ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(DISTINCT bond_id) AS bond_count FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12') AND atom_id2 IN (SELECT atom_id FROM atom WHERE atom_id = 'TR009_12');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element = 'br' AND m.label = '+';\t----- bird -----\ttoxicology",
    "236": "SELECT b.bond_type, a1.element, a2.element FROM bond b JOIN connected c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_6_9' JOIN connected c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_6_9' JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id;\t----- bird -----\ttoxicology",
    "237": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(DISTINCT connected.atom_id) AS connections_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id LIKE 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT e.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN connected AS c2 ON c.atom_id2 = c2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN bond AS b2 ON c2.bond_id = b2.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id JOIN molecule AS m2 ON b2.molecule_id = m2.molecule_id WHERE m.molecule_id = 'TR004' AND m2.molecule_id = 'TR004' GROUP BY e.element;\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT m.molecule_id, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.bond_type FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type ='= ' GROUP BY m.molecule_id ORDER BY COUNT(b.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(bond_count) AS average_bonds FROM ( SELECT atom_id, COUNT(bond_id) AS bond_count FROM connected WHERE element = 'i' GROUP BY atom_id ) AS subquery;\t----- bird -----\ttoxicology",
    "246": "SELECT b.bond_type, b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE atom_id NOT IN ( SELECT atom_id FROM connected );\t----- bird -----\ttoxicology",
    "248": "SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.molecule_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "250": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS double_bonds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type ='= ' GROUP BY m.molecule_id, m.label ORDER BY double_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE molecule.label = '+' ) GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "252": "SELECT b.molecule_id FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'pb' GROUP BY b.molecule_id HAVING COUNT(DISTINCT a2.atom_id) > 0;\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS e ON c.atom_id = e.atom_id AND c.atom_id2 = e.atom_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT element1, element2, COUNT(*) AS popularity FROM connected GROUP BY element1, element2 ORDER BY popularity DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT (SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT bond_id)) AS carcinogenic_proportion FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT SUM(CASE WHEN element IN ('c', 'h') THEN 1 ELSE 0 END) AS total_carbon_hydrogen_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id1 AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id;\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id WHERE atom.element ='s';\t----- bird -----\ttoxicology",
    "258": "SELECT b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element ='sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) AS num_elements FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '#3' AND (m.element = 'p' OR m.element = 'br')\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+';\t----- bird -----\ttoxicology",
    "262": "SELECT m.molecule_id FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type = '-' AND a.element = 'C';\t----- bird -----\ttoxicology",
    "263": "SELECT m.molecule_id, m.label, ROUND(100.0 * SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) / COUNT(a.atom_id), 2) AS percent FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-' GROUP BY m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002');\t----- bird -----\ttoxicology",
    "265": "SELECT m.molecule_id FROM molecule m WHERE m.label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT m.label, COUNT(c.molecule_id) AS total_carcinogenic_molecules FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE m.label = '+' AND a.molecule_id BETWEEN 'TR000' AND 'TR030' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology",
    "267": "SELECT m.label, b.bond_type FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.molecule_id IN ('TR000', 'TR001', 'TR002', 'TR003', 'TR004', 'TR005', 'TR006', 'TR007', 'TR008', 'TR009', 'TR010', 'TR011', 'TR012', 'TR013', 'TR014', 'TR015', 'TR016', 'TR017', 'TR018', 'TR019', 'TR020', 'TR021', 'TR022', 'TR023', 'TR024', 'TR025', 'TR026', 'TR027', 'TR028', 'TR029', 'TR030', 'TR031', 'TR032', 'TR033', 'TR034', 'TR035', 'TR036', 'TR037', 'TR038', 'TR039', 'TR040', 'TR041', 'TR042', 'TR043', 'TR044', 'TR045', 'TR046', 'TR047', 'TR048', 'TR049', 'TR050');\t----- bird -----\ttoxicology",
    "268": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(DISTINCT bond_id) AS iodine_bond_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN atom ON connected.atom_id2 = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'i';\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'ca' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label IN ('+', '-') ) )\t----- bird -----\ttoxicology",
    "271": "SELECT b.element FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR001_1_8' JOIN connected AS c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR001_1_8' JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id2 = a1.atom_id WHERE a1.element = 'cl' AND a2.element = 'c';\t----- bird -----\ttoxicology",
    "272": "SELECT m.molecule_id FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE a.element = 'c' AND b.bond_type = '#3' AND d.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT a.atom_id) = 2;\t----- bird -----\ttoxicology",
    "273": "SELECT ( SELECT COUNT(*) FROM connected AS c1 JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN molecule AS m1 ON a1.molecule_id = m1.molecule_id WHERE m1.label = '+' ) AS chlorine_count, ( SELECT COUNT(*) FROM connected AS c2 JOIN atom AS a2 ON c2.atom_id = a2.atom_id JOIN molecule AS m2 ON a2.molecule_id = m2.molecule_id WHERE m2.label = '+' ) AS total_carcinogenic_count, ( SELECT ( SELECT COUNT(*) FROM connected AS c3 JOIN atom AS a3 ON c3.atom_id = a3.atom_id JOIN bond AS b3 ON a3.molecule_id = b3.molecule_id JOIN atom AS a4 ON b3.atom_id2 = a4.atom_id WHERE a4.element = 'cl' ) / ( SELECT COUNT(*) FROM connected AS c4 JOIN atom AS a5 ON c4.atom_id = a5.atom_id JOIN molecule AS m4 ON a5.molecule_id = m4.molecule_id WHERE m4.label = '+' ) ) * 100 AS chlorine_percentage;\t----- bird -----\ttoxicology",
    "274": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT \"molecule_id\" FROM \"bond\" WHERE \"bond_type\" ='= ';\t----- bird -----\ttoxicology",
    "276": "SELECT a1.atom_id, a2.atom_id FROM atom a1 JOIN bond b1 ON a1.atom_id = b1.atom_id JOIN connected c1 ON b1.bond_id = c1.bond_id JOIN atom a2 ON c1.atom_id2 = a2.atom_id JOIN bond b2 ON c1.bond_id = b2.bond_id JOIN atom a3 ON b2.atom_id2 = a3.atom_id WHERE b1.bond_type = '#3' GROUP BY a1.atom_id, a2.atom_id;\t----- bird -----\ttoxicology",
    "277": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '-' AND m.label = '-';\t----- bird -----\ttoxicology",
    "279": "SELECT b.label FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT b.bond_id, m.label FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT m.label, a.element FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN atom a ON c1.atom_id = a.atom_id AND c2.atom_id2 = a.atom_id WHERE m.label = '+' AND a.atom_id = SUBSTR(a.atom_id, 7, 1) GROUP BY m.label, a.element;\t----- bird -----\ttoxicology",
    "282": "SELECT ratio, label FROM ( SELECT molecule_id, COUNT(element = 'h') AS hydrogen_count, (COUNT(element = 'h')::FLOAT / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006')) AS ratio FROM connected WHERE atom_id = 'TR006' AND atom_id2 = 'TR006' AND bond_id IN ( SELECT bond_id FROM connected WHERE atom_id = 'TR006' AND atom_id2 = 'TR006' ) GROUP BY molecule_id ) AS subquery WHERE ratio IS NOT NULL;\t----- bird -----\ttoxicology",
    "283": "SELECT m.label FROM molecule m JOIN connected c ON m.atom_id = c.atom_id AND m.atom_id = c.atom_id2 JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'ca';\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT atom_id FROM atom WHERE element = 'c' );\t----- bird -----\ttoxicology",
    "285": "SELECT atom.element FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON atom.atom_id2 = c2.atom_id2 JOIN bond AS b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(DISTINCT molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule) AS triple_bond_percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT molecule_id, COUNT(CASE WHEN bond_type ='='THEN 1 END) * 100.0 / SUM(COUNT(CASE WHEN bond_type ='='THEN 1 END)) AS percent FROM connected WHERE atom_id = 'TR047' AND atom_id2 = 'TR047' GROUP BY molecule_id HAVING molecule_id = 'TR047';\t----- bird -----\ttoxicology",
    "288": "SELECT m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON c1.atom_id2 = c2.atom_id JOIN bond b ON c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'TR' AND a.atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR151' AND (e.element = 'cl' OR e.element = 'c' OR e.element = 'h' OR e.element = 'o' OR e.element ='s' OR e.element = 'n' OR e.element = 'p' OR e.element = 'na' OR e.element = 'br' OR e.element = 'f' OR e.element = 'i' OR e.element ='sn' OR e.element = 'pb' OR e.element = 'te' OR e.element = 'ca');\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(DISTINCT molecule_id) FROM connected WHERE label = '+';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom d ON c.atom_id = d.atom_id JOIN atom e ON c.atom_id2 = e.atom_id WHERE substr(a.molecule_id, 3, 3) >= '10' AND substr(a.molecule_id, 3, 3) <= '50' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id2 = a2.atom_id JOIN molecule AS m ON a1.molecule_id = m.molecule_id JOIN molecule AS n ON a2.molecule_id = n.molecule_id WHERE m.label = '+' AND n.label = '+' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology",
    "296": "SELECT b.molecule_id FROM bond AS b JOIN connected AS c1 ON b.bond_id = c1.bond_id AND c1.atom_id = 'TR000_1' JOIN connected AS c2 ON b.bond_id = c2.bond_id AND c2.atom_id2 = 'TR000_1' JOIN atom AS a1 ON c1.atom_id = a1.atom_id JOIN atom AS a2 ON c2.atom_id2 = a2.atom_id WHERE b.bond_type = 'TR000_1_2' LIMIT 1;\t----- bird -----\ttoxicology",
    "297": "SELECT a.atom_id FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE a.element = 'c' AND m.label!= '-';\t----- bird -----\ttoxicology",
    "298": "SELECT AVG(percentage) * 100.0 AS carcinogenic_hydrogen_percentage FROM ( SELECT m.molecule_id, COUNT(CASE WHEN a.element = 'h' AND m.label = '+' THEN 1 END) AS carcinogenic_hydrogen_count, COUNT(m.molecule_id) AS total_molecules FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN atom a ON c.atom_id2 = a.atom_id GROUP BY m.molecule_id ) subquery\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom.atom_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN connected ON atom.atom_id2 = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.molecule_id = 'TR007_4_19' AND a2.molecule_id = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS double_bonds FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id2 = c.atom_id2 JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR006'; SELECT label FROM molecule WHERE molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT m.label, a.element FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE m.label = '+' AND a.element IN ('cl', 'c', 'h', 'o','s', 'n', 'p', 'na', 'br', 'f', 'i','sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "305": "SELECT b.molecule_id, a1.element, a2.element FROM bond b JOIN atom a1 ON b.molecule_id = a1.molecule_id AND b.atom_id = a1.atom_id JOIN atom a2 ON b.molecule_id = a2.molecule_id AND b.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN atom a ON c1.bond_id = a.bond_id OR c2.bond_id = a.bond_id WHERE c1.bond_type = '#3' AND a.element IN ('cl', 'c', 'h', 'o','s', 'n', 'p', 'na', 'br', 'f', 'i','sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology",
    "307": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_id = 'TR000_2_3' LIMIT 1;\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(DISTINCT bond_id) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl';\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(b.bond_type) AS bond_types FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS double_bonds_count FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type ='= '; SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_double_bonds_count FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE b.bond_type ='='AND m.label = '+';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(DISTINCT m.molecule_id) FROM atom AS a JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE a.element!='s' AND NOT EXISTS ( SELECT 1 FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS d ON c.atom_id = d.atom_id JOIN atom AS e ON c.atom_id2 = e.atom_id WHERE d.element ='s' AND b.bond_type ='= ' );\t----- bird -----\ttoxicology",
    "312": "SELECT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(DISTINCT bond_id) AS single_bonds_count FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE a1.element = 'C' AND a2.element = 'L' AND EXISTS ( SELECT 1 FROM connected c3 JOIN bond b3 ON c3.bond_id = b3.bond_id JOIN atom a3 ON b3.atom_id = a3.atom_id WHERE c3.atom_id = a1.atom_id AND c3.atom_id2 = a2.atom_id ) AND EXISTS ( SELECT 1 FROM molecule m2 WHERE m.molecule_id = m2.molecule_id AND m2.label = '+' );\t----- bird -----\ttoxicology",
    "316": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id JOIN atom a1 ON c1.atom_id = a1.atom_id JOIN atom a2 ON c2.atom_id2 = a2.atom_id WHERE a1.element = 'C' AND a2.element = 'C' AND NOT EXISTS ( SELECT 1 FROM connected c3 JOIN bond b3 ON c3.bond_id = b3.bond_id JOIN atom a3 ON b3.atom_id = a3.atom_id WHERE a3.element = 'C' AND a3.molecule_id = m.molecule_id );\t----- bird -----\ttoxicology",
    "317": "SELECT AVG(percentage) AS carcinogenic_chlorine_percentage FROM ( SELECT m.molecule_id, COUNT(CASE WHEN a.element = 'Cl' AND m.label = '+' THEN 1 END) AS carcinogenic_chlorine_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON m.molecule_id = c.molecule_id AND a.atom_id = c.atom_id2 GROUP BY m.molecule_id ) subquery\t----- bird -----\ttoxicology",
    "318": "SELECT m.molecule_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE b.bond_id = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(DISTINCT element) FROM connected WHERE bond_id = 'TR001_3_4';\t----- bird -----\ttoxicology",
    "320": "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.atom_id = 'TR000_1' AND a2.atom_id = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT m.label FROM molecule m JOIN connected c1 ON c1.atom_id = 'TR000_2' JOIN connected c2 ON c2.atom_id2 = 'TR000_4' JOIN atom a ON a.atom_id = c1.atom_id JOIN atom a2 ON a2.atom_id = c2.atom_id2 JOIN bond b ON b.bond_id = c1.bond_id JOIN bond b2 ON b2.bond_id = c2.bond_id WHERE a.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id AND b.molecule_id = m.molecule_id AND b2.molecule_id = m.molecule_id;\t----- bird -----\ttoxicology",
    "322": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id AND a.atom_id = 'TR000_1' JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'Toxicology';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT m.label, AVG(CASE WHEN b.bond_type = '-' THEN 1 ELSE 0 END) * 100.0 AS single_bond_percentage FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN bond b ON c.bond_id = b.bond_id GROUP BY m.molecule_id, m.label;\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected cc ON c.atom_id2 = cc.atom_id JOIN bond b ON cc.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE a.element = 'n' AND m.label = '+';\t----- bird -----\ttoxicology",
    "326": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c1 ON m.molecule_id = c1.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 JOIN bond b ON c1.bond_id = b.bond_id AND c2.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id AND a.element ='s' WHERE b.bond_type ='= ' GROUP BY m.molecule_id, m.label HAVING COUNT(DISTINCT c1.atom_id) = 2 AND COUNT(DISTINCT c2.atom_id) = 2;\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id, m.label FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected c2 ON m.molecule_id = c2.atom_id2 WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(DISTINCT c.bond_id) > 5;\t----- bird -----\ttoxicology",
    "328": "SELECT e.element FROM atom AS a JOIN bond AS b ON a.molecule_id = b.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT m.molecule_id, m.label, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id GROUP BY m.molecule_id, m.label ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT AVG(percentage) FROM ( SELECT m.molecule_id, COUNT(CASE WHEN a.element = 'h' AND b.bond_type = '#' THEN 1 END) AS triple_h_count, COUNT(CASE WHEN m.label = '+' THEN 1 END) AS carcinogenic_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON a.atom_id = b.atom_id GROUP BY m.molecule_id ) AS subquery WHERE triple_h_count > 0;\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(DISTINCT molecule_id) FROM connected JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN ( SELECT molecule_id FROM molecule WHERE label BETWEEN 'TR004' AND 'TR010' ) AND bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' );\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(DISTINCT atom.atom_id) AS carbon_count FROM atom JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id = connected.atom_id2 JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR008';\t----- bird -----\ttoxicology",
    "334": "SELECT a.element FROM atom AS a JOIN connected AS c1 ON a.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '-' AND a.atom_id = 'TR004_7';\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(DISTINCT m.molecule_id) AS total_molecules FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON a.atom_id = m.molecule_id WHERE a.element = 'o' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id JOIN connected cc ON c.atom_id2 = cc.atom_id JOIN bond b ON cc.bond_id = b.bond_id JOIN atom a ON b.molecule_id = a.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "337": "SELECT a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT a1.atom_id FROM atom AS a1 JOIN bond AS b ON a1.molecule_id = b.molecule_id JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'c' AND b.bond_type ='= ' AND a2.molecule_id = 'TR012';\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM atom JOIN connected AS c1 ON atom.atom_id = c1.atom_id JOIN connected AS c2 ON c1.atom_id2 = c2.atom_id JOIN bond AS b ON c2.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = '+' AND atom.element = 'o';\t----- bird -----\ttoxicology",
    "340": "SELECT id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "341": "SELECT c.id, c.name, c.borderColor, c.cardKingdomFoilId, c.cardKingdomId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%borderless%' AND c.cardKingdomFoilId IS NULL AND c.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT cards.name, MAX(cards.faceConvertedManaCost) AS max_face_converted_mana_cost FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'English' GROUP BY cards.name ORDER BY max_face_converted_mana_cost DESC;\t----- bird -----\tcard_games",
    "343": "SELECT c.name, c.faceConvertedManaCost, c.edhrecRank FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE s.frameVersion = 2015 AND l.status = 'legal' AND c.edhrecRank < 100 AND st.language = 'English' AND r.date >= '2015-01-01' AND r.date <= '2015-12-31';\t----- bird -----\tcard_games",
    "344": "SELECT c.name, c.rarity, c.format, c.status FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity ='mythic' AND l.status = 'Banned' AND fd.language = 'English' AND c.format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT l.status FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.type = 'Artifact' AND c.side IS NULL AND c.format = 'vintage';\t----- bird -----\tcard_games",
    "346": "SELECT c.id, c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.format = 'commander' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "347": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Stephen Daniel%' AND l.hasContentWarning = 1 AND r.uuid = c.uuid;\t----- bird -----\tcard_games",
    "348": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s' );\t----- bird -----\tcard_games",
    "349": "SELECT c.name AS card_name, c.artist AS artist_name, CASE WHEN c.isPromo = 1 THEN 'Promotional Printing' ELSE 'Regular Card' END AS card_type FROM cards c JOIN (SELECT uuid, COUNT(*) AS ruling_count FROM rulings GROUP BY uuid ORDER BY ruling_count DESC LIMIT 1) r ON c.uuid = r.uuid;\t----- bird -----\tcard_games",
    "350": "SELECT f.language, f.flavorText FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.name = 'Annul numbered 29';\t----- bird -----\tcard_games",
    "351": "SELECT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese';\t----- bird -----\tcard_games",
    "352": "SELECT SUM(id) / (SELECT COUNT(id) FROM foreign_data WHERE language = 'Chinese Simplified') * 100 AS percentage_chinese_simplified FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT s.name, SUM(ct.totalSetSize) AS total_cards_per_set FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'Italian' AND tr.multiverseid = fd.uuid JOIN cards c ON fd.uuid = c.uuid GROUP BY s.name ORDER BY total_cards_per_set DESC;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) AS total_types FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE keywords = 'infinite power';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM cards WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT \"borderColor\" FROM \"cards\" WHERE \"name\" = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "359": "SELECT originaltype FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT s.language FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN sets AS s ON s.code = c.setCode WHERE c.name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities JOIN cards ON legalities.uuid = cards.uuid WHERE legalities.status ='restricted' AND cards.isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Condemn' );\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities JOIN foreign_data ON legalities.uuid = foreign_data.uuid WHERE legalities.status ='restricted' AND foreign_data.isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT status FROM legalities WHERE uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Cloudchaser Eagle' );\t----- bird -----\tcard_games",
    "365": "SELECT \"type\" FROM \"cards\" WHERE \"name\" = 'Benalish Knight';\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text AS rule_of_playing_card FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Benalish Knight' );\t----- bird -----\tcard_games",
    "367": "SELECT f.name FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.setCode = 'Phyrexian' AND f.language = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage_borderless FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE foreign_data.language = 'German' AND legalities.status ='reprinted';\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE borderColor = 'borderless' AND language = 'Russian';\t----- bird -----\tcard_games",
    "371": "SELECT (COUNT(*) FILTER (WHERE language = 'French' AND isStorySpotlight = 1)) * 100.0 / COUNT(*) AS percentage FROM foreign_data WHERE isStorySpotlight = 1 AND language = 'French';\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = '99';\t----- bird -----\tcard_games",
    "373": "SELECT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.flavorText LIKE '%Aaron Boyd%';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid WHERE c.convertedManaCost = 0 GROUP BY c.id HAVING COUNT(DISTINCT fd.flavorText) > 0 AND COUNT(DISTINCT l.status) > 0 AND COUNT(DISTINCT s.code) > 0;\t----- bird -----\tcard_games",
    "376": "SELECT c.name, c.layout FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.set_code JOIN rulings r ON c.uuid = r.uuid WHERE c.keywords LIKE '%flying%' GROUP BY c.name, c.layout;\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtype!= 'Angel';\t----- bird -----\tcard_games",
    "378": "SELECT c.id FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE f.flavorText LIKE '%incredibly powerful%' AND (c.cardKingdomFoilId IS NOT NULL OR c.cardKingdomId IS NOT NULL) GROUP BY c.id HAVING COUNT(DISTINCT f.language) > 1;\t----- bird -----\tcard_games",
    "379": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%duel deck a%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese' AND st.language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT c.uuid, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.format = 'legacy';\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Beacon of Immortality' );\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS total_cards, legality_status FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE frameVersion = 'future' AND status = 'legal';\t----- bird -----\tcard_games",
    "387": "SELECT c.name, c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'OGW' GROUP BY c.name, c.colorIdentity;\t----- bird -----\tcard_games",
    "388": "SELECT f.flavorText, s.language, st.translation FROM foreign_data f JOIN sets s ON f.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode WHERE s.code = '10E' AND s.convertedManaCost = 5 AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf';\t----- bird -----\tcard_games",
    "390": "SELECT DISTINCT c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.id BETWEEN 1 AND 20; SELECT DISTINCT l.format FROM legalities l JOIN cards c ON l.uuid = c.uuid WHERE c.id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND st.language IS NOT NULL;\t----- bird -----\tcard_games",
    "392": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.rarity = 'uncommon' ORDER BY r.date ASC;\t----- bird -----\tcard_games",
    "393": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'John Avon' AND (cardKingdomId IS NULL OR cardKingdomFoilId IS NULL) AND rarity = 'Non-Foil';\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE artist = 'UDON' AND availability ='mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE sets.frameVersion = '1993' AND foreign_data.availability = 'paper' AND legalities.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.layout = 'normal' AND c.frameVersion = 2003 AND c.borderColor = 'black' AND (l.format = 'paper' OR l.format ='mtgo') AND s.isForeignOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0 AND s.isNonFoilOnly = 0 AND s.isFoilOnly = 0 AND st.translation IS NOT NULL AND r.date >= '2020-01-01' AND r.date < '2021-01-01';\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_unconverted_mana_cost FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT type FROM cards WHERE availability = 'arena';\t----- bird -----\tcard_games",
    "400": "SELECT s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'Spanish' AND fd.uuid = tr.uuid WHERE tr.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "401": "SELECT ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' AND isOnlineOnly = 1 ) AS online_only_legendary_frame_effect_count, ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' ) AS total_legendary_frame_effect_count, ( SELECT ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' AND isOnlineOnly = 1 ) / ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' ) FROM sqlite_master ) * 100 AS percentage;\t----- bird -----\tcard_games",
    "402": "SELECT COUNT(id) AS story_spotlight_count, SUM(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS non_text_box_count, (SUM(CASE WHEN isStorylight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) / SUM(COUNT(id))) * 100 AS percentage FROM cards WHERE isStorylight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "403": "SELECT c.name, 100.0 * COUNT(CASE WHEN f.language = 'Spanish' THEN 1 END) / COUNT(*) AS percentage FROM cards c JOIN foreign_data f ON c.uuid = f.uuid GROUP BY c.name ORDER BY percentage DESC;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT language FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.baseSetSize = 309;\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE foreign_data.language = 'Portuguese (Brasil)' AND sets.block = 'Commander';\t----- bird -----\tcard_games",
    "406": "SELECT c.id, c.name, c.type, c.legal FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.type = 'Creature' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM cards WHERE subtypes IS NOT NULL AND supertypes IS NOT NULL AND language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "409": "SELECT COUNT(*) FROM cards WHERE format = 'premodern' AND ruling_text = 'This is a triggered mana ability.' AND side IS NULL;\t----- bird -----\tcard_games",
    "410": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Erica Yang' AND s.format = 'pauper' AND s.isOnlineOnly = 0 AND st.language = 'English' AND r.text LIKE '%available in paper%';\t----- bird -----\tcard_games",
    "411": "SELECT \"artist\" FROM \"cards\" WHERE \"asciiName\" = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.type = 'Creature' AND cards.layout = 'normal' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.print_rarity = 'true' AND rulings.date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT set_translations.language FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Ravnica' AND sets.baseSetSize = 180;\t----- bird -----\tcard_games",
    "415": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0)) AS percentage FROM foreign_data WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0;\t----- bird -----\tcard_games",
    "416": "SELECT (COUNT(*) FILTER (WHERE language = 'French' AND power IS NULL OR power = '*')) * 100.0 / COUNT(*) AS percentage FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.power IS NULL OR cards.power = '*';\t----- bird -----\tcard_games",
    "417": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Japanese')) AS percentage FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE language = 'Japanese' AND type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT \"availability\" FROM \"cards\" WHERE \"artist\" = 'Daren Bader';\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE (borderColor = 'borderless') AND (edhrecRank > 12000) AND (flavorText IS NOT NULL) AND (language IS NOT NULL) AND (multiverseid IS NOT NULL) AND (name IS NOT NULL) AND (text IS NOT NULL) AND (type IS NOT NULL) AND (uuid IS NOT NULL);\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT c.name, c.power, c.promoTypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE c.power IS NULL AND l.promoTypes = 'arenaleague' ORDER BY c.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.multiverse = 149934;\t----- bird -----\tcard_games",
    "423": "SELECT c1.id, c1.cardKingdomFoilId, c1.cardKingdomId FROM cards c1 JOIN cards c2 ON c1.id = c2.id WHERE c1.cardKingdomFoilId IS NOT NULL AND c1.cardKingdomId IS NOT NULL AND c2.cardKingdomFoilId IS NOT NULL AND c2.cardKingdomId IS NOT NULL ORDER BY c1.cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT ( SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal' ) AS num_cards_without_text_box , ( SELECT COUNT(*) FROM cards ) AS total_cards , ( SELECT ( SELECT COUNT(*) FROM cards WHERE isTextless = 1 AND layout = 'normal' ) / ( SELECT COUNT(*) FROM cards ) ) * 100 AS proportion_without_text_box;\t----- bird -----\tcard_games",
    "425": "SELECT c.id, c.name, c.subtypes FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND fd.flavorText IS NULL GROUP BY c.id, c.name, c.subtypes HAVING COUNT(DISTINCT st.language) = 1;\t----- bird -----\tcard_games",
    "426": "SELECT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.multiverseid IS NULL ORDER BY s.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT flavorText.language FROM foreign_data JOIN sets ON sets.code = foreign_data.uuid WHERE sets.name = 'Archenemy' AND sets.code = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT s.name, t.translation FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE s.id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT s.language, s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.id = 206;\t----- bird -----\tcard_games",
    "430": "SELECT s.id AS set_id, s.name AS set_name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.block = 'Shadowmoor' AND fd.language = 'Italian' ORDER BY s.name ASC, s.id ASC LIMIT 2;\t----- bird -----\tcard_games",
    "431": "SELECT s.id AS set_id, s.name AS set_name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE s.isForeignOnly = 1 AND l.status = 'available' AND fd.language = 'Japanese' AND s.isFoilOnly = 1 GROUP BY s.id HAVING COUNT(DISTINCT l.format) = 1 ORDER BY s.releaseDate DESC LIMIT 1;\t----- bird -----\tcard_games",
    "432": "SELECT s.name AS russian_set, MAX(s.baseSetSize) AS total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.language = 'Russian' GROUP BY s.name ORDER BY total_cards DESC LIMIT 1;\t----- bird -----\tcard_games",
    "433": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Chinese Simplified' AND isOnlineOnly = 1) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified' AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(DISTINCT sets.id) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE foreign_data.language = 'Japanese' AND sets.mtgoCode IS NULL OR sets.mtgoCode = '';\t----- bird -----\tcard_games",
    "435": "SELECT c.id, c.borderColor FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE fd.flavorText LIKE '%border with black%' GROUP BY c.id, c.borderColor HAVING COUNT(DISTINCT fd.language) = (SELECT COUNT(DISTINCT language) FROM foreign_data);\t----- bird -----\tcard_games",
    "436": "SELECT c.id FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT * FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\t----- bird -----\tcard_games",
    "438": "SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.id = 174;\t----- bird -----\tcard_games",
    "439": "SELECT \"name\" FROM \"sets\" WHERE \"code\" = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT flavorText FROM foreign_data WHERE uuid = ( SELECT cards.uuid FROM cards WHERE name = 'A Pedra Fellwar' );\t----- bird -----\tcard_games",
    "441": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.releaseDate = '2007-07-13';\t----- bird -----\tcard_games",
    "442": "SELECT s.baseSetSize, s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.block LIKE '%Masques%' AND s.block LIKE '%Mirage%';\t----- bird -----\tcard_games",
    "443": "SELECT s.id, s.name, s.code FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'boros' LIMIT 1;\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'colorpie' LIMIT 1;\t----- bird -----\tcard_games",
    "446": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE convertedManaCost = 10 AND setCode = 'Abyssal Horror') AS percentage FROM cards WHERE convertedManaCost = 10 AND setCode = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT s.code FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.type = 'Expansion' AND s.name LIKE '%Commander%';\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'abzan' LIMIT 1;\t----- bird -----\tcard_games",
    "449": "SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'azorius';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT converted_mana_cost AS unconverted_mana_cost FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.borderColor = 'white' AND (cards.power = '*' OR cards.power IS NULL);\t----- bird -----\tcard_games",
    "455": "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE isPromo = 1 AND side IS NOT NULL GROUP BY c.name HAVING COUNT(DISTINCT st.language) > 1;\t----- bird -----\tcard_games",
    "456": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT p.name, pu.purchase_url FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code JOIN set_translations st ON s.code = st.set_code JOIN rulings r ON c.uuid = r.uuid JOIN promotions p ON c.uuid = p.uuid JOIN bundle_promotions bp ON c.uuid = bp.card_uuid JOIN bundle_websites bw ON bp.card_uuid = bw.card_uuid WHERE p.promotional_type = 'bundle' AND l.status = 'legal' AND s.type ='set' AND st.language = 'English' AND r.date >= '2022-01-01' AND r.date < '2023-01-01' AND bp.card_uuid = c.uuid AND bw.website = 'https://example.com';\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(DISTINCT c.artist) FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.borderColor = 'black' AND (s.printings LIKE '%arena,mtgo%' OR s.printings LIKE '%mtgo,arena%') AND l.status = 'legal';\t----- bird -----\tcard_games",
    "459": "SELECT name, converted_mana_cost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.frameVersion = '2003' ORDER BY c.convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT s.name FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid JOIN cards c ON s.uuid = c.uuid WHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(DISTINCT set_translations.translation) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation LIKE '%Angel of Mercy%';\t----- bird -----\tcard_games",
    "464": "SELECT DISTINCT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT * FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE name LIKE '%Ancestor''s Chosen%' AND language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.flavorText LIKE '%Adam Rex%' AND sets.name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "467": "SELECT SUM(baseSetSize) AS total_cards FROM sets WHERE name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT s.translation FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.name = 'Eighth Edition' AND tr.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "469": "SELECT 1 FROM foreign_data WHERE flavorText LIKE '%Angel of Mercy%' AND mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT sets.name AS expansion_type FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND foreign_data.name = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'Ice Age' AND set_translations.language = 'Italian' AND set_translations.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "473": "SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE foreign_data.language = 'Italian' AND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_id = sets.id JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE sets.name = 'Coldsnap' AND foreign_data.flavorText LIKE '%black border%' AND legalities.status = 'legal' AND rulings.text LIKE '%black border%';\t----- bird -----\tcard_games",
    "476": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT artist FROM cards WHERE set_code = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name, number FROM cards WHERE setCode = 'Coldsnap' AND number = 4;\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.T1.power IS NULL);\t----- bird -----\tcard_games",
    "480": "SELECT foreign_data.flavorText FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND cards.language = 'Italian';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL;\t----- bird -----\tcard_games",
    "482": "SELECT flavorText FROM foreign_data WHERE language = 'German' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": "SELECT f.flavorText, r.text FROM foreign_data f JOIN legalities l ON f.uuid = l.uuid JOIN rulings r ON l.uuid = r.uuid WHERE f.language = 'Italian' AND l.format = 'card set' AND l.status = 'ruling' AND r.setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "484": "SELECT f.flavorText, c.name, c.convertedManaCost FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE c.setCode = 'Coldsnap' AND f.language = 'Italian' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings WHERE rulings.uuid = ( SELECT cards.uuid FROM cards WHERE cards.name = 'Reminisce' );\t----- bird -----\tcard_games",
    "486": "SELECT * FROM cards WHERE convertedManaCost = 7 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN name = 'Coldsnap' THEN 1 ELSE 0 END)) AS percentage_of_incredibly_powerful_cards FROM cards\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT s.mcmId FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT s.mcmName FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'English' AND s.releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "492": "SELECT \"type\" FROM \"sets\" WHERE \"code\" = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT parent_code FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "SELECT c.id, c.name, r.text FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE fd.flavorText LIKE '%Jim Pavelec%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "495": "SELECT s.releaseDate FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE s.name = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT SUM(baseSetSize) AS total_cards FROM sets WHERE name = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT s.type FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.translation = 'Huiti\u00e8me \u00e9dition';\t----- bird -----\tcard_games",
    "498": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = 'French' AND fd.uuid = tr.translation WHERE s.name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(DISTINCT translations.language) AS translation_count FROM foreign_data JOIN sets ON foreign_data.uuid = sets.uuid WHERE sets.name = 'Tenth Edition';\t----- bird -----\tcard_games",
    "500": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE tr.language = 'Japanese' AND s.name = 'Fellwar Stone';\t----- bird -----\tcard_games",
    "501": "SELECT c.name, c.convertedManaCost FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Journey into Nyx Hero''s Path' ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE name = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "SELECT s.name AS expansion_type FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid WHERE fd.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.set_code = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.converted_mana_cost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT set_translations.translation FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "506": "SELECT s.name AS set_name, COUNT(c.id) AS total_cards, SUM(CASE WHEN s.isNonFoilOnly = 1 AND s.language = 'Japanese' THEN 1 ELSE 0 END) AS non_foil_only_japanese, SUM(CASE WHEN s.isNonFoilOnly = 0 AND s.language = 'Japanese' THEN 1 ELSE 0 END) AS non_foil_not_japanese, (SUM(CASE WHEN s.isNonFoilOnly = 1 AND s.language = 'Japanese' THEN 1 ELSE 0 END) / COUNT(c.id)) * 100 AS percentage_non_foil_only_japanese FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN cards c ON s.uuid = c.uuid WHERE s.language = 'Japanese' GROUP BY s.name\t----- bird -----\tcard_games",
    "507": "SELECT s.name, COUNT(c.id) AS total_cards, SUM(CASE WHEN c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_cards, SUM(CASE WHEN s.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) AS brazil_portuguese_cards, (SUM(CASE WHEN c.isOnlineOnly = 1 AND s.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) / SUM(CASE WHEN s.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END)) * 100 AS percentage_online_only_brazil_portuguese FROM sets s JOIN foreign_data f ON s.code = f.multiverseid JOIN cards c ON f.uuid = c.uuid WHERE s.language = 'Portuguese (Brazil)' GROUP BY s.name;\t----- bird -----\tcard_games",
    "508": "SELECT * FROM cards WHERE artist = 'Aleksi Briclot';\t----- bird -----\tcard_games",
    "509": "SELECT s.id, s.name, s.baseSetSize FROM sets s JOIN ( SELECT setCode, MAX(baseSetSize) AS max_base_set_size FROM sets GROUP BY setCode ) max_sets ON s.setCode = max_sets.setCode WHERE s.baseSetSize = max_sets.max_base_set_size ORDER BY s.id DESC LIMIT 1;\t----- bird -----\tcard_games",
    "510": "SELECT c.name, c.artist, c.convertedManaCost FROM cards c JOIN ( SELECT name, MAX(convertedManaCost) AS max_cost FROM cards WHERE isMultiFace = 0 GROUP BY name ) max_cost_cards ON c.name = max_cost_cards.name WHERE c.isMultiFace = 0 AND c.convertedManaCost = max_cost_cards.max_cost ORDER BY c.convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effect FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM cards WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT s.id, MAX(s.totalSetSize) AS highest_total_cards FROM sets s JOIN foreign_data fd ON s.uuid = fd.uuid JOIN legalities l ON s.uuid = l.uuid WHERE s.type = 'commander' GROUP BY s.id;\t----- bird -----\tcard_games",
    "514": "SELECT c.name, c.convertedManaCost FROM cards c JOIN ( SELECT set_code, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE format = 'duel' GROUP BY set_code ) subquery ON c.set_code = subquery.set_code AND c.convertedManaCost = subquery.max_converted_mana_cost ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity ='mythic' AND status = 'legal';\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.type = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT s.name AS play_format, c.name AS card_name FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN foreign_data fd ON t.multiverseid = fd.uuid JOIN cards c ON fd.uuid = c.uuid WHERE s.isForeignOnly = 1 AND c.status = 'Banned' GROUP BY s.name, c.name ORDER BY MAX(COUNT(c.status = 'Banned')) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT s.language FROM sets s JOIN set_translations tr ON s.code = tr.setCode WHERE s.name = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT fd.flavorText AS illustrator, s.format FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid JOIN sets s ON c.setCode = s.code GROUP BY fd.flavorText HAVING COUNT(c.id) = (SELECT MIN(COUNT(c2.id)) FROM cards c2 JOIN foreign_data fd2 ON c2.uuid = fd2.uuid GROUP BY fd2.flavorText)\t----- bird -----\tcard_games",
    "521": "SELECT c.* FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE c.frameVersion = '1997' AND fd.flavorText LIKE '%illustrated by D. Alexander Gregory%' AND s.format = 'legacy' AND (l.hasContentWarning = 1 OR l.status = 'Wizards of the Coast')\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned' AND l.format = 'EDHRec' ORDER BY c.edhrecRank ASC LIMIT 1;\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS average_sets_per_year FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY YEAR(sets.releaseDate);\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT c.artist FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE c.borderColor = 'black' AND s.availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status IN ('banned','restricted') AND c.format = 'oldschool';\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC;\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.set_code = s.code WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "529": "SELECT s.name FROM sets s JOIN set_translations tr ON s.code = tr.setCode JOIN foreign_data fd ON tr.language = fd.language WHERE tr.translation LIKE '%Korean%' AND tr.language NOT LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT f.frameVersion, c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode WHERE c.artist = 'Allen Williams' GROUP BY f.frameVersion, c.name HAVING COUNT(DISTINCT s.code) > 1; SELECT name FROM cards JOIN legalities l ON cards.uuid = l.uuid WHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "532": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE YEAR(v.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id GROUP BY u.Id ORDER BY Views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id WHERE posts.Score > 100 GROUP BY users.Id HAVING SUM(CASE WHEN votes.VoteTypeId = 1 THEN 1 ELSE 0 END) > 1 AND SUM(CASE WHEN votes.VoteTypeId = 2 THEN 1 ELSE 0 END) > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Views > 10 AND YEAR(v.CreationDate) > 2013;\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "538": "SELECT p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "539": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "540": "SELECT p.Title, MAX(p.ViewCount) AS highest_popularity FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' GROUP BY p.Title ORDER BY highest_popularity DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN ( SELECT PostId, MAX(FavoriteCount) AS MaxFavoriteCount FROM posts GROUP BY PostId ) subq ON p.Id = subq.PostId WHERE p.FavoriteCount = subq.MaxFavoriteCount LIMIT 1;\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(c.CommentCount) AS total_comments FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN comments c ON p.Id = c.PostId WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answers FROM posts WHERE OwnerDisplayName = 'csgillespie' AND OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "544": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE p.Title = 'Examples for teaching: Correlation does not mean causation' AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = p.Id);\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' AND posts.ParentId IS NULL;\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE ph.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Age > 65 AND p.Score >= 20;\t----- bird -----\tcodebase_community",
    "548": "SELECT `Location` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Title` = 'Eliciting priors from experts');\t----- bird -----\tcodebase_community",
    "549": "SELECT tags.TagName FROM tags JOIN tags_posts ON tags.Id = tags_posts.TagId JOIN posts ON tags_posts.PostId = posts.Id WHERE tags.TagName = 'bayesian' LIMIT 1; SELECT posts.Body FROM posts JOIN tags_posts ON posts.Id = tags_posts.PostId JOIN tags ON tags_posts.TagId = tags.Id WHERE tags.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "550": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE t.Count = (SELECT MAX(t2.Count) FROM tags t2) ORDER BY p.CreaionDate DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(DISTINCT \"badges\".\"Id\") AS \"badge_count\" FROM \"badges\" WHERE \"badges\".\"UserId\" = (SELECT \"Id\" FROM \"users\" WHERE \"users\".\"DisplayName\" = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name FROM badges AS b JOIN posts AS p ON b.Id = p.OwnerUserId JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'csgillespie' AND EXTRACT(YEAR FROM b.Date) = 2011;\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.Id ORDER BY COUNT(b.Id) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(b.Id) AS average_badges FROM badges b JOIN users u ON b.UserId = u.Id JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN badges b_comments ON c.UserId = b_comments.UserId WHERE u.Views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT COUNT(DISTINCT p.Id) AS elder_user_post_count, COUNT(DISTINCT u.Id) AS total_user_count, (COUNT(DISTINCT p.Id) / COUNT(DISTINCT u.Id)) * 100 AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id OR p.LastEditorUserId = u.Id WHERE p.Score > 5 AND u.Age > 65;\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes AS v WHERE v.PostId = (SELECT Id FROM posts WHERE OwnerUserId = 58) AND v.CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(Count(Id)) AS max_creation_date_of_votes FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE OwnerUserId IN (SELECT Id FROM badges));\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT p.Title FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.Score = (SELECT MAX(c2.Score) FROM comments c2 WHERE c2.PostId = p.Id) AND u.Id = (SELECT MAX(u2.Id) FROM users u2 WHERE u2.Id = c.UserId);\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "563": "SELECT SUM(posts.FavoriteCount) AS total_favorite_counts FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId WHERE users.Id = 3025 AND votes.UserId = 3025 AND posts.CreaionDate = '2014/4/23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "564": "SELECT comments.Text FROM comments JOIN postHistory ON comments.PostId = postHistory.PostId JOIN posts ON postHistory.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = 107829 AND postHistory.RevisionGUID = ( SELECT RevisionGUID FROM postHistory WHERE PostId = 107829 AND CreationDate = ( SELECT MIN(CreationDate) FROM postHistory WHERE PostId = 107829 ) );\t----- bird -----\tcodebase_community",
    "565": "SELECT 1 FROM comments AS c JOIN posts AS p ON c.PostId = p.Id JOIN users AS u ON c.UserId = u.Id WHERE p.OwnerUserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18.0' AND (p.ClosedDate IS NULL OR p.ClosedDate!= '2013-07-12 09:08:18.0');\t----- bird -----\tcodebase_community",
    "566": "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.Id = 6347;\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(votes.VoteTypeId) AS total_votes FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.Title LIKE '%data visualization%' AND users.AccountId = (SELECT Id FROM users WHERE DisplayName = 'YourUsername');\t----- bird -----\tcodebase_community",
    "570": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(posts.Id) AS num_posts, COUNT(votes.Id) AS num_votes, (COUNT(posts.Id) / COUNT(votes.Id)) AS popularity FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE u.Id = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT SUM(views) AS total_views FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id JOIN badges b ON u.Id = b.Id WHERE b.Name = 'Score of 17' AND c.Score = 17;\t----- bird -----\tcodebase_community",
    "574": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT p.Id FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON ph.PostId = pl.PostId JOIN postHistory ph2 ON ph.RevisionGUID = ph2.RevisionGUID JOIN postLinks pl2 ON ph2.PostId = pl2.RelatedPostId JOIN posts p2 ON pl2.RelatedPostId = p2.Id WHERE p2.Title = 'http://stackoverflow.com' ) LIMIT 1;\t----- bird -----\tcodebase_community",
    "575": "SELECT b.Name FROM badges AS b JOIN posts AS p ON b.Id = p.OwnerUserId WHERE p.DisplayName = 'SilentGhost';\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE u.DisplayName = 'A Lion';\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Title = 'Understanding what Dassault iSight is doing?' LIMIT 1;\t----- bird -----\tcodebase_community",
    "579": "SELECT comment_text FROM comments WHERE post_title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT u.Id, u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'Necromancer' GROUP BY u.Id, u.DisplayName HAVING COUNT(DISTINCT v.PostId) >= 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT u.DisplayName AS editor FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Vebjorn Ljosa' AND v.CreationDate >= p.CreaionDate;\t----- bird -----\tcodebase_community",
    "583": "SELECT u.DisplayName, SUM(v.Score) AS total_score FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Yevgeny' GROUP BY u.DisplayName ORDER BY total_score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "584": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.PostId = ( SELECT Id FROM posts WHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?' );\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(votes.BountyAmount) AS total_bounty_amount FROM votes JOIN posts ON votes.PostId = posts.Id JOIN users ON votes.UserId = users.Id WHERE posts.Title LIKE '%data%' AND users.AccountId = posts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN bounties AS bo ON p.Id = bo.PostId WHERE bo.BountyAmount = 50 AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount FROM posts p JOIN post_tags pt ON p.Id = pt.PostId JOIN tags t ON pt.TagId = t.Id WHERE t.TagName = 'humor' GROUP BY p.Title, c.Text ORDER BY AverageViewCount DESC;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(c.Id) AS total_comments FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.Id = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT u.Id AS user_id, MAX(u.Reputation) AS highest_reputation FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id ORDER BY highest_reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "590": "SELECT u.Id, MIN(p.Views) AS lowest_views FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.PostTypeId = (SELECT Id FROM post_types WHERE name = 'question') GROUP BY u.Id ORDER BY lowest_views ASC LIMIT 1;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND YEAR(votes.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(DISTINCT users.Id) AS num_users_with_more_than_five_badges FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id GROUP BY users.Id HAVING COUNT(DISTINCT badges.Name) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.UserId JOIN locations ON users_locations.LocationId = locations.Id WHERE locations.Name = 'New York' AND ( SELECT COUNT(*) FROM badges WHERE badges.Name IN ('Supporter', 'Teachers') AND badges.UserId = users.Id ) > 0;\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN ( SELECT PostId, MAX(CreationDate) AS MaxCreationDate FROM postHistory GROUP BY PostId ) max_ph ON p.Id = max_ph.PostId AND ph.CreationDate = max_ph.MaxCreationDate JOIN ( SELECT PostId, COUNT(*) AS view_count FROM postHistory GROUP BY PostId ) view_count ON p.Id = view_count.PostId WHERE ph.UserId = u.Id AND view_count.view_count >= 1000 GROUP BY u.Id, u.DisplayName HAVING COUNT(ph.Id) = 1;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.DisplayName, b.Name AS badge_name FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN comments c ON p.Id = c.PostId JOIN badges b ON c.UserId = b.Id GROUP BY u.DisplayName ORDER BY COUNT(c.Id) DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN users_locations ON users.Id = users_locations.UserId JOIN locations ON users_locations.LocationId = locations.Id WHERE locations.Name = 'India' AND tags.TagName = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT ( (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2010) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') ) * 100 AS 2010_percentage, ( (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2011) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') ) * 100 AS 2011_percentage, (( (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2010) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') ) * 100 - ( (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND Year(Date) = 2011) / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') ) * 100 ) AS percentage_difference;\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT u.UserId) AS unique_commenters FROM postHistory ph JOIN posts p ON ph.PostId = p.Id JOIN comments c ON ph.Id = c.PostHistoryId JOIN users u ON c.UserId = u.Id WHERE p.Id = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.Title, p.ViewCount FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN postLinks rl ON pl.RelatedPostId = rl.PostId WHERE rl.RelatedPostId = 61217 LIMIT 1;\t----- bird -----\tcodebase_community",
    "601": "SELECT c.Score, t.PostHistoryTypeId FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId JOIN posts p ON ph.PostId = p.Id JOIN tags t ON p.TagId = t.Id WHERE p.Id = 395;\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, u.Id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(posts.FavoriteCount) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Id = 686 AND YEAR(posts.CreaitionDate) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(votes.UpVotes) AS average_up_votes, AVG(users.Age) AS average_user_age FROM users JOIN votes ON users.Id = votes.UserId WHERE users.PostCount > 10 GROUP BY users.Id;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges AS b JOIN votes AS v ON b.Id = v.PostId JOIN users AS u ON v.UserId = u.Id WHERE v.CreationDate = '2010-07-19 19:39:08.0' GROUP BY b.Name HAVING COUNT(DISTINCT u.Id) = 1;\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) AS positive_comments_count FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT c.Text FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:25:47.0' AND u.Id = (SELECT Id FROM users WHERE DisplayName = 'John Doe');\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(posts.Id) FROM posts JOIN votes ON posts.Id = votes.PostId WHERE votes.Score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT u.DisplayName, b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.OwnerUserId = b.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users) GROUP BY u.DisplayName, b.Name;\t----- bird -----\tcodebase_community",
    "611": "SELECT u.Id, u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE b.Name = '7/19/2010 7:39:08 PM' AND b.Date = '2010-07-19 19:39:08.0' GROUP BY u.Id, u.DisplayName, u.Reputation ORDER BY u.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "612": "SELECT b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.DisplayName = 'Pierre';\t----- bird -----\tcodebase_community",
    "613": "SELECT u.Id, u.DisplayName, b.Name, b.Date FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE u.Location = 'Rochester, NY' GROUP BY u.Id, u.DisplayName, b.Name ORDER BY b.Date DESC;\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT users.Id) AS total_teachers, COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users) AS percentage_teachers FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'Teacher';\t----- bird -----\tcodebase_community",
    "615": "SELECT (COUNT(DISTINCT users.Id) * 100.0 / (SELECT COUNT(DISTINCT users.Id) FROM users)) AS teenager_percentage FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer' AND users.Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "616": "SELECT c.Score FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CreaionDate = '2010-07-19 19:19:56.0';\t----- bird -----\tcodebase_community",
    "617": "SELECT comments.Text FROM comments JOIN postHistory ON comments.PostId = postHistory.PostId JOIN posts ON postHistory.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId WHERE posts.CreaionDate = '2010-07-19 19:37:33';\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Id, u.Reputation, u.Location, u.Age FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.PostId WHERE u.Location = 'Vienna, Austria' GROUP BY u.Id, u.Reputation, u.Location, u.Age HAVING COUNT(DISTINCT b.Name) > 0;\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "620": "SELECT u.UserId, SUM(u.views) AS total_views FROM users u JOIN badges b ON u.UserId = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0' GROUP BY u.UserId HAVING SUM(u.views) = ( SELECT MAX(total_views) FROM ( SELECT u.UserId, SUM(u.views) AS total_views FROM users u JOIN badges b ON u.UserId = b.UserId WHERE b.Date = '2010-07-19 19:39:08.0' GROUP BY u.UserId ) AS subquery\t----- bird -----\tcodebase_community",
    "621": "SELECT u.DisplayName, b.Name FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN badges b ON p.Id = b.Id WHERE u.Reputation = (SELECT MIN(Reputation) FROM users) AND p.PostTypeId = (SELECT MIN(PostTypeId) FROM posts);\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b JOIN votes AS v ON b.Id = v.PostId JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'Sharpie';\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(DISTINCT users.Id) AS elders_with_supporter_badge FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Supporter' AND users.Age > 65;\t----- bird -----\tcodebase_community",
    "624": "SELECT users.DisplayName FROM users WHERE users.Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(DISTINCT users.Id) FROM users WHERE users.Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010;\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.Id, u.DisplayName, MAX(v.Views) AS max_views FROM users u JOIN votes v ON u.Id = v.UserId GROUP BY u.Id, u.DisplayName ORDER BY max_views DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2010) AS votes_2010, COUNT(Id) FILTER (WHERE YEAR(CreationDate) = 2011) AS votes_2011, (votes_2010::FLOAT / votes_2011::FLOAT) AS ratio FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT t.TagName FROM tags t JOIN users u ON t.ExcerptPostId = u.Id WHERE u.DisplayName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(DISTINCT posts.Id) AS post_count FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes AS v WHERE v.UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT posts.Id FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE users.DisplayName ='slashnick' GROUP BY posts.Id ORDER BY MAX(AnswerCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(posts.ViewCount) AS max_popularity FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY posts.Id;\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Matt Parker' AND posts.Score > 4;\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments JOIN users ON comments.UserId = users.Id JOIN posts ON comments.PostId = posts.Id WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t.TagName FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT DISTINCT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Organizer';\t----- bird -----\tcodebase_community",
    "639": "SELECT (COUNT(PostId) * 100.0 / (SELECT COUNT(*) FROM posts WHERE DisplayName = 'Community')) AS percentage FROM posts WHERE TagName = 'r';\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) - SUM(ViewCount) FROM posts WHERE DisplayName = 'Mornington' - SUM(ViewCount) FROM posts WHERE DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'commentator' AND badges.Date >= '2014-01-01' AND badges.Date < '2015-01-01';\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT u.DisplayName, u.Age FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Views = (SELECT MAX(Views) FROM posts) GROUP BY u.Id, u.DisplayName, u.Age;\t----- bird -----\tcodebase_community",
    "644": "SELECT p.LastEditorUserId, p.LastEditorDate FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Title = 'Detecting a given face in a database of facial images' LIMIT 1;\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, u1.DisplayName AS User1, u2.DisplayName AS User2 FROM posts p JOIN comments c1 ON p.Id = c1.PostId JOIN comments c2 ON p.Id = c2.PostId JOIN users u1 ON c1.UserId = u1.Id JOIN users u2 ON c2.UserId = u2.Id WHERE c1.Score > 60 AND c2.Score > 60 GROUP BY p.Id, u1.Id, u2.Id HAVING COUNT(DISTINCT c1.UserId) > 1 AND COUNT(DISTINCT c2.UserId) > 1;\t----- bird -----\tcodebase_community",
    "647": "SELECT b.Name FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE u.Location = 'North Pole' AND b.Date >= '2011-01-01' AND b.Date <= '2011-12-31';\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE p.FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(phh.Id) AS post_history_count, MAX(phh.CreationDate) AS last_edit_date FROM postHistory AS phh JOIN posts AS p ON phh.PostId = p.Id WHERE p.Title = 'What is the best introductory Bayesian statistics textbook?' GROUP BY p.Id;\t----- bird -----\tcodebase_community",
    "650": "SELECT u.Id, u.DisplayName, u.Location, u.LastAccessDate FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT p.Id FROM posts p JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'outliers' ) AND v.CreationDate = ( SELECT MAX(v2.CreationDate) FROM votes v2 WHERE v2.PostId IN ( SELECT p.Id FROM posts p JOIN badges b ON p.Id = b.PostId WHERE b.Name = 'outliers' ) )\t----- bird -----\tcodebase_community",
    "651": "SELECT TOP 1 p.Title FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Text LIKE '%How to tell if something happened in a data set which monitors a value over time%';\t----- bird -----\tcodebase_community",
    "652": "SELECT p.PostId, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId JOIN badges b ON v.UserId = b.Id WHERE u.DisplayName = 'Samuel' AND EXTRACT(YEAR FROM p.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.ViewCount = (SELECT MAX(ViewCount) FROM posts) LIMIT 1;\t----- bird -----\tcodebase_community",
    "654": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.Id = t.PostId WHERE t.TagName = 'hypothesis-testing' AND p.ExcerptPostId = u.Id\t----- bird -----\tcodebase_community",
    "655": "(SELECT r.Title, l.LinkTypeId FROM posts p JOIN postHistory rh ON p.Id = rh.PostId JOIN postLinks rl ON rh.PostId = rl.PostId JOIN posts r ON rl.RelatedPostId = r.Id JOIN tags t ON r.Id = t.ExcerptPostId WHERE p.Id = ( SELECT Id FROM posts WHERE Title = 'What are principal component scores?' ));\t----- bird -----\tcodebase_community",
    "656": "SELECT u.DisplayName FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id JOIN votes AS v ON p.Id = v.PostId JOIN ( SELECT PostId, MAX(Score) AS Score FROM votes GROUP BY PostId ) AS max_votes ON p.Id = max_votes.PostId WHERE p.ParentId IS NOT NULL AND v.UserId = u.Id ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users AS u JOIN votes AS v ON u.Id = v.UserId WHERE v.VoteTypeId = 8 ORDER BY v.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT p.Title, p.ViewCount FROM posts p JOIN ( SELECT PostId, MAX(ViewCount) AS max_view_count FROM posts GROUP BY PostId ) max_views ON p.PostId = max_views.PostId AND p.ViewCount = max_views.max_view_count ORDER BY p.ViewCount DESC LIMIT 5;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(DISTINCT tags.Id) AS tag_count FROM tags JOIN posts ON tags.ExcerptPostId = posts.Id WHERE posts.PostCount BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT u.Id AS owner_user_id FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN ( SELECT post_id, MAX(favorite_count) AS max_favorite_count FROM votes GROUP BY post_id ) v ON p.Id = v.post_id ORDER BY v.max_favorite_count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.PostTypeId = 1 GROUP BY u.Id ORDER BY MAX(u.Reputation) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts JOIN votes ON posts.Id = votes.PostId JOIN users ON votes.UserId = users.Id WHERE YEAR(CreationDate) = 2011 AND BountyAmount = 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(users.Age) AS youngest_user_id FROM users WHERE users.Id = (SELECT MIN(users.Id) FROM users);\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(score) FROM comments WHERE creation_date = '2010-07-19' AND post_id IN (SELECT id FROM posts WHERE las_activity_date = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(COUNT(post_links.Id)) AS average_monthly_links FROM post_links JOIN posts ON post_links.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId WHERE YEAR(posts.CreationDate) = 2010 AND posts.AnswerCount <= 2 GROUP BY MONTH(posts.CreationDate)\t----- bird -----\tcodebase_community",
    "666": "SELECT p.Id FROM posts AS p JOIN votes AS v ON p.Id = v.PostId WHERE v.UserId = 1465 GROUP BY p.Id HAVING MAX(v.Score) = v.Score ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "667": "SELECT p.Title FROM posts p JOIN postLinks pl ON p.Id = pl.PostId JOIN users u ON pl.RelatedPostId = u.Id WHERE pl.CreationDate = (SELECT MIN(pl2.CreationDate) FROM postLinks pl2 WHERE pl2.RelatedPostId = u.Id) LIMIT 1;\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id GROUP BY u.DisplayName ORDER BY MAX(COUNT(b.Name)) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "669": "SELECT MIN(votes.CreationDate) AS first_vote_date FROM votes JOIN users ON votes.UserId = users.Id JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE users.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(users.Age) AS youngest_user_age, MIN(posts.CreaionDate) AS first_post_date FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'post';\t----- bird -----\tcodebase_community",
    "671": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN badges b ON v.PostId = b.Id WHERE b.Name = 'Autobiographer' AND v.CreationDate = (SELECT MIN(v2.CreationDate) FROM votes v2 WHERE v2.PostId = b.Id) AND u.Id = (SELECT MIN(u2.Id) FROM users u2 WHERE u2.Id = v.UserId);\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(DISTINCT u.Id) FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN votes AS v ON p.Id = v.PostId WHERE u.Location = 'United Kingdom' AND v.FavoriteCount >= 4 GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(votes.PostId) AS average_posts_voted_by_oldest_users FROM votes JOIN users ON votes.UserId = users.Id JOIN posts ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MAX(Age) FROM users) GROUP BY users.Id;\t----- bird -----\tcodebase_community",
    "674": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.VoteTypeId = 1 GROUP BY u.DisplayName ORDER BY MAX(v.UpVotes) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN votes ON users.Id = votes.UserId JOIN posts ON votes.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Reputation > 2000 AND posts.Views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT p.Id FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON ph.PostId = pl.PostId WHERE pl.RelatedPostId IS NULL ) AND u.Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(DISTINCT posts.Id) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Jay Stevens' AND YEAR(posts.CreaionDate) = 2010;\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p JOIN votes v ON p.Id = v.PostId JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'JohnDoe' GROUP BY p.Id, p.Title ORDER BY MAX(v.Score) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(posts.Score) AS average_score FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner';\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN postHistory AS ph ON p.Id = ph.PostId WHERE ph.CreationDate >= '2011-01-01' AND ph.CreationDate < '2012-01-01' AND p.ViewCount > 20000 GROUP BY u.DisplayName HAVING COUNT(DISTINCT p.Id) = ( SELECT COUNT(DISTINCT p2.Id) FROM posts AS p2 WHERE p2.ViewCount > 20000 AND p2.CreationDate >= '2011-01-01' AND p2.CreationDate < '2012-01-01' );\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE EXTRACT(YEAR FROM p.CreationDate) = 2010 AND p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE EXTRACT(YEAR FROM p.CreationDate) = 2010);\t----- bird -----\tcodebase_community",
    "683": "SELECT (COUNT(Id) * 100.0 / (SELECT COUNT(Id) FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000)) AS percentage FROM posts WHERE YEAR(CreationDate) = 2011 AND Reputation > 1000;\t----- bird -----\tcodebase_community",
    "684": "SELECT AVG(Reputation) * 100.0 / (SELECT COUNT(*) FROM users WHERE Age BETWEEN 13 AND 18) AS percentage FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "SELECT SUM(posts.ViewCount) AS total_views FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Text = 'Computer Game Datasets' AND users.Id = ( SELECT users.Id FROM users JOIN votes ON users.Id = votes.UserId WHERE votes.PostId = ( SELECT posts.Id FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Text = 'Computer Game Datasets' ) AND votes.CreationDate = ( SELECT MAX(votes.CreationDate) FROM votes WHERE votes.PostId = ( SELECT posts.Id FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Text = 'Computer Game Datasets' ) ) ]\t----- bird -----\tcodebase_community",
    "686": "SELECT SUM(CASE WHEN posts.ViewCount > (SELECT AVG(ViewCount) FROM posts) THEN 1 ELSE 0 END) AS total_posts_above_average_views FROM posts WHERE posts.OwnerUserId IN (SELECT Id FROM users);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(c.Id) AS comment_count FROM comments c JOIN posts p ON c.PostId = p.Id JOIN ( SELECT PostId, MAX(Score) AS max_score FROM comments GROUP BY PostId ) max_scores ON c.PostId = max_scores.PostId AND c.Score = max_scores.max_score WHERE p.OwnerUserId IN ( SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1 );\t----- bird -----\tcodebase_community",
    "688": "SELECT p.Id, p.Title, p.ViewCount, p.CommentCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE p.ViewCount > 35000 AND v.UserId = u.Id GROUP BY p.Id, p.Title, p.ViewCount, p.CommentCount HAVING p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE p.Id = 183 AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = 183) LIMIT 1;\t----- bird -----\tcodebase_community",
    "690": "SELECT b.Name, MAX(b.Date) AS latest_badge_date FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.DisplayName = 'Emmett' GROUP BY b.Name ORDER BY latest_badge_date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(DISTINCT u.Id) FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Age BETWEEN 19 AND 65 AND v.UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "SELECT MAX(stats_badges.Date) - MIN(stats_badges.Date) AS time_to_badge FROM stats_badges JOIN users ON stats_badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon' AND stats_badges.PostId = ( SELECT MIN(PostId) FROM posts WHERE posts.OwnerUserId = stats_badges.UserId );\t----- bird -----\tcodebase_community",
    "693": "SELECT u.Id, COUNT(p.Id) AS post_count, COUNT(c.Id) AS comment_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId WHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users) GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "694": "SELECT c.Text, u.DisplayName FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Analysing wind data with R' AND u.DisplayName = ( SELECT u2.DisplayName FROM users u2 WHERE u2.Id = c.UserId ORDER BY c.CreationDate DESC LIMIT 1 ) ORDER BY c.CreationDate DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(DISTINCT users.Id) AS user_count FROM users JOIN votes ON users.Id = votes.UserId JOIN badges ON votes.PostId = badges.Id WHERE badges.Name = 'Citizen Patrol';\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts JOIN posts_tags ON posts.Id = posts_tags.PostId JOIN tags ON posts_tags.TagName = tags.TagName WHERE tags.TagName = 'careers';\t----- bird -----\tcodebase_community",
    "697": "SELECT u.Reputation, u.Views FROM users AS u WHERE u.DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(DISTINCT c.UserId) AS comments, COUNT(DISTINCT a.UserId) AS answers FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON c.UserId = u.Id WHERE p.Title = 'Clustering 1D data' UNION ALL SELECT COUNT(DISTINCT a.UserId) AS answers FROM answers a JOIN posts p ON a.PostId = p.Id JOIN users u ON a.UserId = u.Id WHERE p.Title = 'Clustering 1D data';\t----- bird -----\tcodebase_community",
    "699": "SELECT MAX(CreationDate) AS creation_date FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount >= 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT u.DisplayName, (COUNT(sp.Id) * 100.0 / COUNT(DISTINCT u.Id)) AS influence_percentage FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN stats_posts sp ON p.Id = sp.PostId WHERE sp.Score > 50 GROUP BY u.Id, u.DisplayName ORDER BY influence_percentage DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags JOIN posts ON tags.Id = posts.TagId WHERE tags.Id < 15 AND posts.PostCount <= 20 GROUP BY tags.Id HAVING COUNT(posts.PostId) <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, SUM(v.UpVotes) AS TotalUpVotes FROM users u JOIN votes v ON u.Id = v.UserId JOIN comments c ON v.PostId = c.PostId WHERE c.Text = 'fine, you win :)' GROUP BY u.Id;\t----- bird -----\tcodebase_community",
    "706": "SELECT comments.Text FROM comments JOIN posts ON comments.PostId = posts.Id JOIN badges ON posts.OwnerUserId = badges.Id WHERE badges.Name = 'linear regression';\t----- bird -----\tcodebase_community",
    "707": "SELECT c.* FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 GROUP BY p.Id HAVING SUM(c.Score) = ( SELECT MAX(sum_score) FROM ( SELECT SUM(c.Score) AS sum_score FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount BETWEEN 100 AND 150 GROUP BY p.Id ) AS subquery ) JOIN comments c_max ON p.Id = c_max.PostId AND c_max.Score = ( SELECT MAX(c.Score) FROM comments c WHERE c.PostId = p.Id AND p.ViewCount BETWEEN 100 AND 150 );\t----- bird -----\tcodebase_community",
    "708": "SELECT u.Id, u.DisplayName, u.CreationDate, TIMESTAMPDIFF(YEAR, u.CreationDate, CURDATE()) AS Age FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId IN ( SELECT p.Id FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON ph.PostId = pl.PostId JOIN postHistory ph2 ON pl.RelatedPostId = ph2.PostId JOIN posts p2 ON ph2.PostId = p2.Id WHERE p2.Title LIKE '%website%' )\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(DISTINCT comments.PostId) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE comments.Score = 0 AND posts.ViewCount < 5;\t----- bird -----\tcodebase_community",
    "710": "SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.PostId = p.Id JOIN users u ON p.OwnerUserId = u.Id WHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(DISTINCT u.Id) FROM users AS u JOIN comments AS c ON c.PostId = u.Id WHERE c.Score = 0 AND u.Age >= 40\t----- bird -----\tcodebase_community",
    "712": "SELECT p.Id AS post_id, c.Text AS comment_text FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT u.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.DisplayName = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT c.UserId, u.DisplayName FROM comments AS c JOIN users AS u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND c.DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT (COUNT(DISTINCT comments.UserId) * 100.0 / (SELECT COUNT(DISTINCT comments.UserId) FROM comments WHERE comments.Score BETWEEN 5 AND 10)) AS percentage FROM comments WHERE comments.Score BETWEEN 5 AND 10 AND comments.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "717": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id GROUP BY s.full_name HAVING COUNT(DISTINCT sp.id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Blue';\t----- bird -----\tsuperhero",
    "722": "SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Apocalypse' AND attribute.attribute_name ='skin_colour';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Blue' AND attribute.attribute_name = 'Eye Colour' AND hero_attribute.attribute_value = 1; JOIN superpower ON superhero.id = hero_power.hero_id JOIN power ON hero_power.power_id = power.id WHERE power.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "724": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN attribute a1 ON ha1.attribute_id = a1.id JOIN colour c1 ON a1.colour_id = c1.id WHERE c1.colour = 'Blue' AND ha1.attribute_value = 1 JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN attribute a2 ON ha2.attribute_id = a2.id JOIN colour c2 ON a2.colour_id = c2.id WHERE c2.colour = 'Blond' AND ha2.attribute_value = 1;\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT s.superhero_name, h.height_cm FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON ha.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2 ON r.race_id = al2.id JOIN alignment al3 ON p.publisher_id = al3.id JOIN alignment al4 ON s.alignment_id = al4.id WHERE p.publisher_name = 'Marvel Comics' ORDER BY h.height_cm DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT colour.colour, COUNT(superhero.id) AS popularity FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE superhero.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT s.* FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Super Strength' AND s.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT p.publisher_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id JOIN hero_attribute AS ha ON sp.id = ha.power_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.publisher_id ORDER BY MIN(a.attribute_value) ASC LIMIT 1;\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Gold' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "734": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.id = colour.id WHERE colour.colour = 'Blond';\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute WHERE attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON attribute.id = race.id WHERE superhero.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT s.superhero_name, h.attribute_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Durability' AND h.attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Female') AND attribute_name = 'Strength' AND attribute_value = 100;\t----- bird -----\tsuperhero",
    "741": "SELECT superhero_name, COUNT(superhero_power.power_id) AS power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id GROUP BY superhero_name ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(*) AS total_superheroes, SUM(CASE WHEN hero_power.power_id = (SELECT id FROM superpower WHERE power_name ='self-interest') THEN 1 ELSE 0 END) AS self_interested_superheroes, COUNT(*) FILTER (WHERE publisher_name = 'Marvel Comics') AS marvel_superheroes FROM superhero LEFT JOIN hero_power ON superhero.id = hero_power.hero_id LEFT JOIN superpower ON hero_power.power_id = superpower.id GROUP BY superhero.id, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id HAVING hero_power.power_id = (SELECT id FROM superpower WHERE power_name ='self-interest');\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_superheroes, SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS dc_superheroes, (SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END)) AS superhero_difference FROM superhero;\t----- bird -----\tsuperhero",
    "745": "SELECT \"publisher_id\" FROM \"superhero\" WHERE \"publisher_name\" = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.superhero_name IS NOT NULL GROUP BY superhero.id;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id WHERE s.id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender' AND attribute_value = 'Male') GROUP BY s.power_name HAVING COUNT(DISTINCT h.id) >= 5;\t----- bird -----\tsuperhero",
    "752": "SELECT s.superhero_name FROM superhero s JOIN race r ON s.race_id = r.id WHERE r.race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h_a ON s.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id WHERE s.height_cm BETWEEN 170 AND 190 AND a.attribute_name = 'eye_colour' AND a.colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 56;\t----- bird -----\tsuperhero",
    "755": "SELECT superhero_name, full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE attribute_name = 'Bad');\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'weight_kg' AND hero_attribute.attribute_value = 169 JOIN race ON superhero.race_id = race.id;\t----- bird -----\tsuperhero",
    "758": "SELECT h.hair_colour FROM superhero AS s JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id JOIN colour AS c ON a.colour_id = c.id WHERE s.race_id = (SELECT id FROM race WHERE race = 'human') AND s.height_cm = 185 AND a.attribute_name = 'hair_colour';\t----- bird -----\tsuperhero",
    "759": "SELECT c.colour AS eye_colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN hero_power hp ON ha.hero_id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN superhero s ON hp.hero_id = s.id WHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero);\t----- bird -----\tsuperhero",
    "760": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics')) AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "761": "[SQL] SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON s.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON s.alignment_id = al.id WHERE g.gender = 'Male' GROUP BY s.superhero_name HAVING SUM(CASE WHEN c.colour_id = 1 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 2 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 3 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 4 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 5 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 6 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 7 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 8 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 9 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 10 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 11 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 12 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 13 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 14 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 15 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 16 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 17 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 18 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 19 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 20 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 21 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 22 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 23 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 24 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 25 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 26 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 27 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 28 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 29 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 30 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 31 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 32 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 33 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id = 34 THEN 1 ELSE 0 END) > 0 AND SUM(CASE WHEN c.colour_id =\t----- bird -----\tsuperhero",
    "762": "SELECT power_name, MAX(COUNT(*)) AS most_common_power FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id GROUP BY superpower.id ORDER BY most_common_power DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "763": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "764": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name ='strength' GROUP BY superhero.full_name HAVING MAX(hero_attribute.attribute_value) = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute.attribute_name ='strength' );\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(superhero.id) AS average_superhero_id FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN colour ON attribute.colour_id = colour.id WHERE colour.id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(h.attribute_value) AS max_durability FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'durability' AND s.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name ORDER BY max_durability DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM alignment JOIN hero_attribute AS ha1 ON alignment.id = ha1.attribute_id JOIN hero_attribute AS ha2 ON alignment.id = ha2.attribute_id JOIN colour ON ha1.attribute_value = colour.id JOIN colour ON ha2.attribute_value = colour.id WHERE ha1.attribute_name = 'eye_colour' AND ha2.attribute_name = 'eye_colour' AND alignment.superhero_name = 'Abraham Sapien';\t----- bird -----\tsuperhero",
    "771": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT a.attribute_name, c.colour FROM attribute a JOIN hero_attribute ha ON a.id = ha.attribute_id JOIN superhero s ON ha.hero_id = s.id JOIN colour c ON s.eye_colour_id = c.id WHERE s.gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND value = 'Female') AND s.publisher_id = (SELECT id FROM alignment WHERE attribute_name = 'Publisher' AND value = 'Dark Horse Comics');\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN hero_attribute ha1 ON s.id = ha1.hero_id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN hero_attribute ha3 ON s.id = ha3.hero_id JOIN colour c1 ON ha1.attribute_id = c1.id JOIN colour c2 ON ha2.attribute_id = c2.id JOIN colour c3 ON ha3.attribute_id = c3.id WHERE c1.id = c2.id AND c2.id = c3.id AND c1.colour = c2.colour AND c2.colour = c3.colour AND ha1.attribute_value = 1 AND ha2.attribute_value = 1 AND ha3.attribute_value = 1 JOIN publisher p ON s.publisher_id = p.id WHERE s.superhero_name IS NOT NULL;\t----- bird -----\tsuperhero",
    "774": "SELECT superhero_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT MULTIPLY( DIVIDE( SUM( CASE WHEN colour = 'Blue' AND gender = 'Female' THEN 1 ELSE 0 END ), SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) ) ) * 100 AS percentage FROM superhero\t----- bird -----\tsuperhero",
    "776": "SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE superhero.superhero_name = 'Agent 13';\t----- bird -----\tsuperhero",
    "778": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(DISTINCT hero_power.power_id) AS num_powers FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id WHERE superhero.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "780": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Hunter Zolomon';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.full_name, superhero.height_cm FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id WHERE colour.colour = 'Amber' AND hero_attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "782": "SELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_id JOIN colour AS c1 ON ha1.attribute_id = c1.id JOIN colour AS c2 ON ha2.attribute_id = c2.id WHERE c1.colour = 'Black' AND c2.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN hero_power ON hero_attribute.hero_id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.skin_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero",
    "785": "SELECT s.superhero_name FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute WHERE attribute_name = 'Strength' AND attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength' );\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, superhero.alignment FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT (SUM(CASE WHEN g.gender = 'Female' AND p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / COUNT(p.publisher_name = 'Marvel Comics')) * 100 AS percent FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE s.gender_id = g.id AND p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(superhero.weight_kg) AS average_weight FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON hero_attribute.race_id = race.id JOIN publisher ON hero_attribute.publisher_id = publisher.id JOIN alignment ON hero_attribute.alignment_id = alignment.id WHERE race.race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) - SUM(weight_kg) FROM superhero WHERE full_name = 'Emil Blonsky' AND full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT s.superhero_name, AVG(h.height_cm) AS average_height FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id JOIN alignment al ON sp.id = al.id GROUP BY s.superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN race ON hero_attribute.attribute_id = race.id WHERE race.race = 'god/eternal' AND attribute.attribute_name = 'gender' AND hero_attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT s.superhero_name, h.attribute_value FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_name = 'Speed' GROUP BY s.superhero_name ORDER BY MAX(h.attribute_value) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT a.attribute_name, h.attribute_value FROM superhero AS s JOIN hero_attribute AS h ON s.id = h.hero_id JOIN attribute AS a ON h.attribute_id = a.id WHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "797": "SELECT s.superhero_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id JOIN colour AS c1 ON a1.attribute_value = c1.id JOIN hero_attribute AS ha2 ON s.id = ha2.hero_id JOIN attribute AS a2 ON ha2.attribute_id = a2.id JOIN colour AS c2 ON a2.attribute_value = c2.id WHERE c1.colour = 'Blue' AND c2.colour = 'Brown';\t----- bird -----\tsuperhero",
    "798": "SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT PERCENTAGE FROM ( SELECT SUM(superhero_name) AS total_blue_eyed_superheroes, COUNT(superhero_name) AS total_superheroes FROM superhero WHERE color = 'Blue' AND eye_colour_id = 7 ) AS subquery CROSS JOIN alignment WHERE alignment_id = (SELECT id FROM alignment WHERE id = (SELECT id FROM superhero WHERE color = 'Blue' AND eye_colour_id = 7));\t----- bird -----\tsuperhero",
    "801": "SELECT SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS male_superheroes, SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS female_superheroes, (SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END)) AS ratio FROM superhero;\t----- bird -----\tsuperhero",
    "802": "SELECT MAX(height_cm) AS tallest_superhero FROM superhero;\t----- bird -----\tsuperhero",
    "803": "SELECT superpower.id AS power_id FROM superpower JOIN hero_power ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT s.full_name FROM superhero s WHERE s.weight_kg = 0 OR s.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT c.colour_name FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN hero_power hp ON ha.attribute_id = hp.attribute_id JOIN superpower sp ON hp.power_id = sp.id JOIN superhero sh ON sp.power_id = sh.power_id WHERE sh.full_name = 'Karen Beecher-Duncan' LIMIT 1;\t----- bird -----\tsuperhero",
    "807": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.full_name = 'Helen Parr';\t----- bird -----\tsuperhero",
    "808": "SELECT T2.race FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'weight_kg' AND T2.attribute_value = 108 AND T1.id = ( SELECT T4.id FROM superhero AS T4 JOIN hero_attribute AS T5 ON T4.id = T5.hero_id JOIN attribute AS T6 ON T5.attribute_id = T6.id WHERE T6.attribute_name = 'height_cm' AND T5.attribute_value = 188 AND T4.id = T1.id )\t----- bird -----\tsuperhero",
    "809": "SELECT p.publisher_name FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE s.id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT T3.race FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id JOIN ( SELECT hero_id, MAX(attribute_value) AS max_attribute_value FROM hero_attribute GROUP BY hero_id ) AS T4 ON T1.id = T4.hero_id AND T2.attribute_value = T4.max_attribute_value JOIN race AS T3 ON T4.hero_id = T3.id;\t----- bird -----\tsuperhero",
    "811": "SELECT a.attribute_name, s.power_name FROM alignment AS a JOIN hero_attribute AS ha ON a.id = ha.attribute_id JOIN superpower AS s ON ha.attribute_id = s.id JOIN hero_power AS hp ON hp.hero_id = a.id AND hp.power_id = s.id JOIN superhero AS sh ON sh.id = hp.hero_id WHERE sh.superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT full_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye_colour' AND colour.colour = 'Blue' AND hero_attribute.attribute_value = 1 GROUP BY full_name HAVING COUNT(DISTINCT hero_attribute.attribute_id) = 5;\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.alignment_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT c.colour FROM colour c JOIN hero_attribute ha ON c.id = ha.colour_id JOIN superhero s ON ha.hero_id = s.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN alignment ON gender.id = alignment.id AND race.id = alignment.id AND publisher.id = alignment.id AND superhero.alignment_id = alignment.id WHERE attribute.attribute_name = 'good' AND gender.id = 2 AND race.id = 1 AND publisher.id = 1 AND superhero.alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT s.superhero_name FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN alignment a ON h.attribute_id = a.id WHERE a.attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT superhero.full_name, race.race FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN race ON colour.race_id = race.id WHERE colour.colour = 'blue' AND attribute.attribute_name = 'hair_colour' AND hero_attribute.attribute_value = 1 AND superhero.gender_id = (SELECT id FROM gender WHERE gender_name ='male') AND superhero.race_id = (SELECT id FROM race WHERE race_name = 'blue-skinned');\t----- bird -----\tsuperhero",
    "818": "SELECT 100.0 * SUM(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) / COUNT(alignment.id = 2) AS percentage FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN hero_attribute.eye_colour_id = 7 THEN 1 ELSE 0 END) AS blue_eyes, SUM(CASE WHEN hero_attribute.eye_colour_id = 1 THEN 1 ELSE 0 END) AS no_eye_colour, (SUM(CASE WHEN hero_attribute.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN hero_attribute.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.weight_kg IS NULL OR hero_attribute.weight_kg = 0;\t----- bird -----\tsuperhero",
    "820": "SELECT hero_attribute.attribute_value FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE alignment.attribute_name = 'Strength' AND superhero.superhero_name = 'Hulk';\t----- bird -----\tsuperhero",
    "821": "SELECT s.power_name FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.superhero_name = 'Ajax';\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON hero_attribute.attribute_id = colour.id JOIN race ON superhero.race_id = race.id JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.power_name = 'Villain';\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "824": "SELECT s.superhero_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC;\t----- bird -----\tsuperhero",
    "825": "SELECT superhero.full_name, superhero.gender_id FROM superhero JOIN alignment ON superhero.gender_id = alignment.id WHERE alignment.attribute_name = 'Phoenix Force' LIMIT 1;\t----- bird -----\tsuperhero",
    "826": "SELECT s.superhero_name, h.weight_kg FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON a.colour_id = c.id JOIN gender g ON ha.gender_id = g.id JOIN race r ON s.race_id = r.id JOIN publisher p ON s.publisher_id = p.id JOIN alignment al ON g.gender_id = al.id JOIN alignment al2 ON r.race_id = al2.id JOIN alignment al3 ON p.publisher_id = al3.id JOIN alignment al4 ON s.alignment_id = al4.id WHERE p.publisher_name = 'DC Comics' GROUP BY s.superhero_name ORDER BY MAX(h.weight_kg) DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON hero_attribute.race_id = race.id JOIN publisher ON hero_attribute.publisher_id = publisher.id JOIN alignment ON hero_attribute.alignment_id = alignment.id WHERE race.race <> 'Human' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "828": "SELECT COUNT(DISTINCT hero_id) AS fastest_superheroes FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_name = 'Speed' AND attribute_value = 100;\t----- bird -----\tsuperhero",
    "829": "SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, (SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics')) AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "830": "SELECT a.attribute_name, MIN(h.attribute_value) AS weakest_attribute_value FROM superhero h JOIN hero_attribute h_a ON h.id = h_a.hero_id JOIN attribute a ON h_a.attribute_id = a.id WHERE h.superhero_name = 'Black Panther' GROUP BY a.attribute_name;\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.attribute_id JOIN colour ON hero_attribute.colour_id = colour.id WHERE superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name FROM superhero WHERE height_cm = ( SELECT MAX(height_cm) FROM superhero );\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT 100.0 * COUNT(CASE WHEN t1.gender = 'Female' AND t1.publisher_name = 'George Lucas' THEN 1 END) / COUNT(t1.publisher_name = 'George Lucas') AS percentage FROM superhero AS t1 JOIN publisher AS t2 ON t1.publisher_id = t2.id WHERE t2.publisher_name = 'George Lucas';\t----- bird -----\tsuperhero",
    "835": "SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Good' ) AS total_good_superheroes, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' ) AS total_marvel_superheroes, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Bad' ) AS total_bad_superheroes, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Neutral' ) AS total_neutral_superheroes, ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Evil' ) AS total_evil_superheroes, ( SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' AND alignment = 'Good' ) / ( SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics' ) * 100.0 ) AS percentage_good_superheroes FROM alignment;\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN alignment ON hero_attribute.attribute_id = alignment.id WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = superhero.id)\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT s.full_name FROM superhero AS s JOIN hero_attribute AS ha1 ON s.id = ha1.hero_id JOIN attribute AS a1 ON ha1.attribute_id = a1.id JOIN colour AS c1 ON a1.colour_id = c1.id WHERE c1.colour = 'brown' AND s.weight_kg < 100;\t----- bird -----\tsuperhero",
    "840": "SELECT h.attribute_value FROM superhero h JOIN hero_attribute ha ON h.id = ha.hero_id JOIN alignment a ON ha.attribute_id = a.id WHERE h.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(superhero.height_cm) AS average_height FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON hero_attribute.race_id = race.id JOIN publisher ON hero_attribute.publisher_id = publisher.id JOIN alignment ON hero_attribute.alignment_id = alignment.id WHERE alignment.attribute_name = 'neutral' GROUP BY superhero.id;\t----- bird -----\tsuperhero",
    "843": "SELECT superhero.id FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT colour.colour FROM alignment JOIN hero_attribute ON alignment.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye_colour' AND alignment.superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT s.power_name, s.height_cm FROM superpower s JOIN hero_power hp ON s.id = hp.power_id JOIN superhero h ON hp.hero_id = h.id WHERE h.height_cm > (SELECT AVG(h2.height_cm) FROM superhero h2) * 0.8\t----- bird -----\tsuperhero",
    "846": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.raceId = 20 AND q.q1 IS NOT NULL GROUP BY d.forename, d.surname HAVING COUNT(*) = 5;\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Race number 19' AND r.round = 2 AND lt.position = (SELECT MIN(position) FROM lapTimes WHERE raceId = r.raceId AND stop = 2);\t----- bird -----\tformula_1",
    "848": "SELECT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT races.name FROM races JOIN seasons ON races.year = seasons.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "850": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN constructorResults ON races.raceId = constructorResults.raceId JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.name = 'Renault';\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.country NOT IN ('Asia', 'Europe') AND r.year = 2010;\t----- bird -----\tformula_1",
    "853": "SELECT r.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Spain';\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "856": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Sepang International Circuit' AND MONTH(r.date) = 9;\t----- bird -----\tformula_1",
    "857": "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT c.country FROM circuits c JOIN races r ON c.circuitId = r.circuitId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors con ON cr.constructorId = con.constructorId WHERE r.raceId = 24 AND cr.points = 1;\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna');\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructorResults cr ON q.constructorId = cr.constructorId JOIN constructors c ON cr.constructorId = c.constructorId WHERE q.q2_time = '0:01:40' AND r.raceId = 355 LIMIT 1;\t----- bird -----\tformula_1",
    "861": "SELECT d.forename, d.surname, r.number FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.number = 903 AND r.q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(DISTINCT driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "863": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceNumber = 592 AND lt.time IS NOT NULL ORDER BY TIMESTAMP(d.dob, 'localtime') ASC LIMIT 1;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 161 AND lt.time LIKE 'M:SS%';\t----- bird -----\tformula_1",
    "867": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.raceId = 933 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 933) AND cr.constructorId = (SELECT constructorId FROM constructors WHERE nationality = (SELECT nationality FROM drivers WHERE forename = (SELECT forename FROM drivers WHERE surname = d.forename) AND surname = d.surname));\t----- bird -----\tformula_1",
    "868": "SELECT races.location, races.lat, races.lng FROM races WHERE races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9);\t----- bird -----\tformula_1",
    "870": "SELECT q1 FROM qualifying WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi') AND raceId = 345;\t----- bird -----\tformula_1",
    "871": "SELECT d.forename, d.surname, c.nationality FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.name = 'Race No. 347' AND cr.points = 0 AND cr.status = 'Q2' AND cr.time = '0:01:15';\t----- bird -----\tformula_1",
    "872": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 45 AND lt.lap = 1 AND lt.time LIKE 'M:33%';\t----- bird -----\tformula_1",
    "873": "SELECT r.time FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE d.forename = 'Bruce' AND d.surname = 'McLaren' AND r.raceId = 743;\t----- bird -----\tformula_1",
    "874": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, rs.position FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN driverStandings rs ON d.driverId = rs.driverId AND r.raceId = rs.raceId WHERE r.name = 'San Marino Grand Prix' AND r.year = 2006 ORDER BY rs.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "875": "SELECT s.url FROM seasons s JOIN races r ON s.year = r.year WHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(DISTINCT driverId) FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE races.date = '2015-11-29';\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, MIN(d.dob) AS youngest_dob FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 872 GROUP BY d.driverId, d.forename, d.surname;\t----- bird -----\tformula_1",
    "878": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 348 ORDER BY lt.time ASC LIMIT 1;\t----- bird -----\tformula_1",
    "879": "SELECT d.nationality FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId JOIN qualifying q ON r.raceId = q.raceId AND d.driverId = q.driverId WHERE lt.time = (SELECT MAX(time) FROM lapTimes WHERE raceId = r.raceId AND driverId = d.driverId) GROUP BY d.driverId, d.forename, d.surname, d.number, d.code, d.dob, d.nationality HAVING COUNT(*) = 1;\t----- bird -----\tformula_1",
    "880": "SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853) * 100 FROM results WHERE driverId = (SELECT id FROM drivers WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta') AND raceId = 853;\t----- bird -----\tformula_1",
    "881": "SELECT raceId FROM races WHERE date = '1983-07-16';\t----- bird -----\tformula_1",
    "882": "SELECT MIN(seasons.year) AS first_singapore_grand_prix_year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "883": "SELECT COUNT(*) FROM races WHERE year = 2005;\t----- bird -----\tformula_1",
    "884": "SELECT r.name FROM races r JOIN seasons s ON r.year = s.year WHERE (s.year, s.month) = (SELECT MIN(year, month) FROM seasons);\t----- bird -----\tformula_1",
    "885": "SELECT r.name, MAX(r.date) AS last_round_date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 1999 GROUP BY r.name ORDER BY last_round_date DESC LIMIT 1;\t----- bird -----\tformula_1",
    "886": "SELECT seasons.year, COUNT(races.raceId) AS total_races FROM seasons JOIN races ON seasons.year = races.year GROUP BY seasons.year ORDER BY total_races DESC LIMIT 1;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races AS r JOIN seasons AS s ON r.year = s.year WHERE s.year = 2000 AND NOT EXISTS ( SELECT 1 FROM races AS t WHERE t.year = 2017 AND t.circuitId = r.circuitId );\t----- bird -----\tformula_1",
    "888": "SELECT circuits.name, circuits.location FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.year = (SELECT MIN(year) FROM seasons) AND races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "889": "SELECT s.year FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Brands Hatch' AND r.name = 'British Grand Prix';\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(DISTINCT seasons.year) FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit' AND circuits.country = 'United Kingdom';\t----- bird -----\tformula_1",
    "891": "SELECT d.forename, d.surname, rs.position, rs.positionText FROM drivers d JOIN driverStandings rs ON d.driverId = rs.driverId JOIN races r ON rs.raceId = r.raceId WHERE r.name = '2010 Singapore Grand Prix' ORDER BY rs.position;\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE results.points = (SELECT MAX(points) FROM results) LIMIT 1;\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, r.points FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = '2017 Chinese Grand Prix' ORDER BY r.points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "SELECT MIN(milliseconds) AS best_lap_time, drivers.forename, drivers.surname, races.name FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId GROUP BY drivers.forename, drivers.surname, races.name;\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "896": "SELECT 100.0 * COUNT(DISTINCT r.raceId) AS percentage FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE d.surname = 'Hamilton' AND r.date >= '2010-01-01' AND r.position > 1 GROUP BY NULL;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, c.nationality, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId GROUP BY d.driverId ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT drivers.forename, drivers.surname, drivers.dob, drivers.nationality FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId, c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url HAVING COUNT(DISTINCT r.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT r.name, c.name AS circuit_name, r.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE MONTH(r.date) = 9 AND YEAR(r.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT races.name FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Alex' AND drivers.surname = 'Yoong' AND lapTimes.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId JOIN constructors AS c ON r.constructorId = c.constructorId JOIN circuits AS ci ON r.circuitId = ci.circuitId WHERE ci.name = 'Sepang International Circuit' AND d.forename = 'Michael' AND d.surname = 'Schumacher';\t----- bird -----\tformula_1",
    "904": "SELECT r.name, s.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN constructors c ON res.constructorId = c.constructorId WHERE d.forename = 'Michael' AND d.surname = 'Schumacher' AND res.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes l WHERE l.raceId = r.raceId AND l.driverId = d.driverId) GROUP BY r.raceId, r.name, s.year;\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000;\t----- bird -----\tformula_1",
    "906": "SELECT r.name AS first_race, s.points AS points_recorded FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "907": "SELECT r.name, s.country FROM races r JOIN seasons s ON r.year = s.year WHERE s.year = 2017 ORDER BY r.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, s.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN seasons s ON r.year = s.year WHERE r.laps = (SELECT MAX(laps) FROM races);\t----- bird -----\tformula_1",
    "909": "SELECT 100.0 * COUNT(CASE WHEN races.country = 'Germany' AND races.name = 'European Grand Prix' THEN 1 END) / COUNT(races.name = 'European Grand Prix') AS percentage FROM races WHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "910": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE location IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;\t----- bird -----\tformula_1",
    "912": "SELECT \"circuitRef\" FROM \"circuits\" WHERE \"name\" = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT c.country FROM circuits c JOIN ( SELECT circuitId, MAX(alt) AS max_altitude FROM circuits GROUP BY circuitId ) max_altitude_circuits ON c.circuitId = max_altitude_circuits.circuitId WHERE c.alt = max_altitude_circuits.max_altitude;\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT c.country, d.forename, d.surname FROM drivers d JOIN ( SELECT driverId, MAX(dob) AS max_dob FROM drivers GROUP BY driverId ) max_dob ON d.driverId = max_dob.driverId JOIN circuits c ON d.driverId = c.circuitId WHERE d.dob = (SELECT max_dob FROM max_dob);\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT forename, surname FROM drivers WHERE nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';\t----- bird -----\tformula_1",
    "918": "SELECT forename FROM drivers WHERE driverRef = 'Lewis Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = '2009 Spanish Grand Prix';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "921": "SELECT r.name FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "922": "SELECT r.name, r.date, r.time FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Abu Dhabi' AND r.year BETWEEN 2010 AND 2019;\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(DISTINCT r.raceId) FROM races AS r JOIN circuits AS c ON r.circuitId = c.circuitId WHERE c.location LIKE '%Italy%';\t----- bird -----\tformula_1",
    "924": "SELECT r.name, r.date FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Barcelona-Catalunya';\t----- bird -----\tformula_1",
    "925": "SELECT c.circuitRef, c.name, c.location, c.country, c.lat, c.lng, c.alt, c.url FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.name = 'Spanish Grand Prix' AND r.year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON races.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN lapTimes lt ON r.driverId = lt.driverId JOIN qualifying q ON r.driverId = q.driverId WHERE r.raceId = ( SELECT raceId FROM races ORDER BY fastestLapTime DESC LIMIT 1 ) AND lt.time = ( SELECT time FROM lapTimes WHERE driverId = r.driverId ORDER BY time DESC LIMIT 1 );\t----- bird -----\tformula_1",
    "928": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE e.name = 'Canadian Grand Prix' AND YEAR(e.date) = 2007 ORDER BY r.position ASC LIMIT 1;\t----- bird -----\tformula_1",
    "929": "SELECT r.name FROM races AS r JOIN drivers AS d ON r.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name FROM races AS r JOIN results AS res ON r.raceId = res.raceId JOIN drivers AS d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY res.rank ASC LIMIT 1;\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_2009_spanish_grand_prix FROM races WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT seasons.year FROM seasons JOIN races ON seasons.year = races.year JOIN drivers ON races.driverId = drivers.driverId JOIN constructorResults ON races.raceId = constructorResults.raceId JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Chinese Grand Prix') AND driverId = (SELECT id FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.year = 1989 AND r.name = 'Australian Grand Prix' AND q.grid = 4;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.name = '2008 Australian Grand Prix' AND races.time IS NOT NULL;\t----- bird -----\tformula_1",
    "936": "SELECT l.time FROM races AS r JOIN lapTimes AS l ON r.raceId = l.raceId JOIN drivers AS d ON l.driverId = d.driverId WHERE r.year = 2008 AND r.name = 'Australian Grand Prix' AND d.forename = 'Lewis' AND d.surname = 'Hamilton' LIMIT 1;\t----- bird -----\tformula_1",
    "937": "SELECT r.time FROM races r JOIN driverStandings ds ON r.raceId = ds.raceId JOIN drivers d ON ds.driverId = d.driverId WHERE r.year = 2008 AND r.name = 'AustChineseralian Grand Prix' AND ds.position = 2;\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, r.name AS race_name, r.date, r.time, s.status FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN seasons s ON r.year = s.year WHERE r.name = 'Australian Grand Prix' AND s.year = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND qualifying.nationality = 'UN';\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN seasons ON races.year = seasons.year WHERE races.name = '2008 Chinese Grand Prix' AND seasons.year = 2008;\t----- bird -----\tformula_1",
    "941": "SELECT SUM(driverStandings.points) FROM races JOIN driverStandings ON races.raceId = driverStandings.raceId JOIN status ON driverStandings.statusId = status.statusId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "942": "SELECT AVG(CAST(SUBSTRING(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS REAL) * 60 + CAST(SUBSTRING(fastestLapTime, INSTR(fastestLapTime, ':') + 1, 6) AS REAL)) AS avg_fastest_lap_time FROM races JOIN drivers ON races.driverId = drivers.driverId JOIN results ON races.raceId = results.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "943": "SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "944": "SELECT ( ( SELECT SUM(incremental_time) AS champion_time FROM races AS r WHERE r.name = '2008 Australian Grand Prix' AND r.driverId = ( SELECT driverId FROM results AS res WHERE res.raceId = ( SELECT MAX(raceId) FROM races AS r2 WHERE r2.name = '2008 Australian Grand Prix' ) ) ) - ( SELECT SUM(incremental_time) AS last_driver_time FROM races AS r WHERE r.name = '2008 Australian Grand Prix' AND r.driverId = ( SELECT driverId FROM results AS res WHERE res.raceId = ( SELECT MIN(raceId) FROM races AS r2 WHERE r2.name = '2008 Australian Grand Prix' ) ) ) ) / ( SELECT SUM(incremental_time) AS last_driver_time FROM races AS r WHERE r.name = '2008 Australian Grand Prix' ) * 100 AS percentage_difference;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';\t----- bird -----\tformula_1",
    "946": "SELECT circuits.location, circuits.lat, circuits.lng FROM circuits WHERE circuits.country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';\t----- bird -----\tformula_1",
    "948": "SELECT c.nationality, MAX(r.points) AS max_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId JOIN races r ON rr.raceId = r.raceId WHERE c.nationality = 'British' GROUP BY c.nationality;\t----- bird -----\tformula_1",
    "949": "SELECT c.constructorRef, c.name, rs.points FROM constructors c JOIN constructorStandings rs ON c.constructorId = rs.constructorId WHERE rs.points = (SELECT MAX(points) FROM constructorStandings) LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(DISTINCT constructors.constructorId) FROM constructors JOIN races ON constructors.constructorId = races.constructorId JOIN constructorResults ON races.raceId = constructorResults.raceId AND constructors.constructorId = constructorResults.constructorId JOIN status ON constructorResults.statusId = status.statusId WHERE constructors.nationality = 'Japanese' AND constructorResults.points = 0 AND races.raceId IN ( SELECT raceId FROM races GROUP BY raceId HAVING COUNT(raceId) = 2 );\t----- bird -----\tformula_1",
    "952": "SELECT c.constructorRef, c.name FROM constructors c JOIN constructorStandings cs ON c.constructorId = cs.constructorId WHERE cs.position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(DISTINCT constructorId) FROM constructorResults JOIN constructors ON constructorResults.constructorId = constructors.constructorId WHERE constructors.nationality = 'French' AND lapNumber > 50;\t----- bird -----\tformula_1",
    "954": "SELECT COUNT(DISTINCT drivers.driverId) AS japanese_drivers, COUNT(races.raceId) AS total_races, SUM(CASE WHEN races.time IS NOT NULL AND races.year BETWEEN 2007 AND 2009 THEN 1 ELSE 0 END) AS completed_races, (COUNT(DISTINCT drivers.driverId) * 100.0 / COUNT(races.raceId)) AS completion_percentage FROM drivers JOIN races ON drivers.driverId = races.driverId WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 GROUP BY drivers.nationality;\t----- bird -----\tformula_1",
    "955": "SELECT r.year, AVG(r.milliseconds / 1000) AS avg_time_seconds FROM results r JOIN drivers d ON r.driverId = d.driverId JOIN constructors c ON r.constructorId = c.constructorId WHERE r.year < 1975 GROUP BY r.year\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year > 1975 AND ds.position = 2 AND d.dob > '1975-01-01';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON qualifying.raceId = races.raceId WHERE drivers.nationality = 'Italian' AND races.time IS NULL;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE lt.time = ( SELECT MAX(time) FROM lapTimes WHERE driverId = d.driverId );\t----- bird -----\tformula_1",
    "959": "SELECT r.resultId, r.driverId, r.constructorId, r.number, r.grid, r.position, r.positionText, r.positionOrder, r.points, r.laps, r.time, r.milliseconds, r.fastestLap, r.rank, r.fastestLapTime, r.fastestLapSpeed, r.statusId FROM results r JOIN races c ON r.raceId = c.raceId JOIN drivers d ON r.driverId = d.driverId JOIN constructors con ON r.constructorId = con.constructorId JOIN status st ON r.statusId = st.statusId WHERE c.year = 2009 AND st.status = 'Champion' ORDER BY r.fastestLap DESC LIMIT 1;\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM results WHERE raceId = (SELECT circuitId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009);\t----- bird -----\tformula_1",
    "961": "SELECT r.name, s.year FROM races r JOIN results res ON r.raceId = res.raceId JOIN status st ON res.statusId = st.statusId WHERE st.status = 'Finish' AND res.milliseconds IS NOT NULL GROUP BY r.raceId, r.name, s.year ORDER BY MIN(res.milliseconds) ASC LIMIT 1;\t----- bird -----\tformula_1",
    "962": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM drivers WHERE year(dob) < 1985 AND laps > 50 AND year(dob) BETWEEN 2000 AND 2005)) AS percentage FROM drivers WHERE year(dob) < 1985 AND laps > 50 AND year(dob) BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN races ON driverStandings.raceId = races.raceId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId WHERE lapTimes.time < '02:00:00' AND drivers.nationality = 'France';\t----- bird -----\tformula_1",
    "964": "SELECT d.driverId, d.forename, d.surname, d.nationality FROM drivers d WHERE d.nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races JOIN seasons ON races.year = seasons.year WHERE seasons.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1",
    "967": "SELECT d.driverId, d.forename, d.surname, s.status FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN status s ON r.statusId = s.statusId WHERE r.raceId IN ( SELECT r.raceId FROM races ORDER BY r.date DESC LIMIT 3 ) GROUP BY d.driverId, d.forename, d.surname, s.status HAVING s.status = 'Winner' ORDER BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "968": "SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId WHERE c.name = 'Robert Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE nationality = 'British' AND YEAR(dob) = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, r.lap FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.country = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND r.lap = (SELECT MIN(r2.lap) FROM races r2 WHERE r2.driverId = d.driverId) ORDER BY r.lap ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT d.forename, d.surname, d.dob, d.nationality FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN seasons s ON q.year = s.year WHERE s.url LIKE '%Germany%' AND d.nationality = 'German' ORDER BY d.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.year = (SELECT year FROM seasons WHERE url = 'https://example.com/season/1971') AND l.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId AND driverId = d.driverId) AND d.dob = '1971-01-01';\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.date, r.time FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01' AND r.time = (SELECT MAX(time) FROM lapTimes WHERE raceId = r.raceId) GROUP BY d.forename, d.surname, r.date ORDER BY d.forename, d.surname, r.date LIMIT 10;\t----- bird -----\tformula_1",
    "974": "SELECT r.year FROM races r JOIN lapTimes lt ON r.raceId = lt.raceId JOIN drivers d ON lt.driverId = d.driverId WHERE lt.time = (SELECT MIN(time) FROM lapTimes lt2 WHERE lt2.raceId = r.raceId) GROUP BY r.year ORDER BY r.year DESC LIMIT 1;\t----- bird -----\tformula_1",
    "975": "SELECT s.year FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN seasons s ON r.year = s.year WHERE l.time = (SELECT MAX(time) FROM lapTimes WHERE raceId = r.raceId) LIMIT 1;\t----- bird -----\tformula_1",
    "976": "SELECT d.driverId, r.name AS raceName, lt.time AS fastestLapTime FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN lapTimes lt ON d.driverId = lt.driverId AND lt.lap = 1 ORDER BY lt.time DESC LIMIT 5;\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM races WHERE raceId BETWEEN 50 AND 100 AND statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT circuits.name, circuits.location, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year WHERE seasons.url LIKE '%Austria%' GROUP BY circuits.circuitId, circuits.name, circuits.location, circuits.lat, circuits.lng HAVING COUNT(DISTINCT seasons.year) = 1;\t----- bird -----\tformula_1",
    "979": "SELECT r.name, COUNT(l.driverId) AS finishers_count FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId GROUP BY r.name ORDER BY finishers_count DESC LIMIT 1;\t----- bird -----\tformula_1",
    "980": "SELECT d.driverRef, d.forename, d.surname, d.nationality, d.dob FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 23 AND lt.lap = 2 AND q.q2 IS NOT NULL GROUP BY d.driverRef, d.forename, d.surname, d.nationality, d.dob HAVING MAX(lt.position) = 2;\t----- bird -----\tformula_1",
    "981": "SELECT r.year, r.name, r.date, r.time FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE d.dob = (SELECT MIN(dob) FROM drivers) AND r.raceId = (SELECT MIN(raceId) FROM races WHERE s.url = (SELECT url FROM seasons WHERE year = (SELECT MIN(year) FROM seasons)));\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN driverStandings ON drivers.driverId = driverStandings.driverId JOIN seasons ON driverStandings.raceId = seasons.raceId JOIN races ON races.raceId = driverStandings.raceId JOIN status ON driverStandings.statusId = status.statusId WHERE status.status = 'Puncture' AND drivers.nationality = 'American';\t----- bird -----\tformula_1",
    "983": "SELECT c.constructorRef, c.name, SUM(rr.points) AS total_points FROM constructors c JOIN constructorResults rr ON c.constructorId = rr.constructorId WHERE c.nationality = 'Italian' GROUP BY c.constructorRef, c.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "984": "SELECT c.constructorRef, c.name, s.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId JOIN driverStandings ds ON r.driverId = ds.driverId JOIN drivers d ON ds.driverId = d.driverId JOIN seasons s ON r.year = s.year WHERE cr.points = (SELECT MAX(cr2.points) FROM constructorResults cr2 WHERE cr2.constructorId = c.constructorId) ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT d.forename, d.surname, l.time FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN races r ON l.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY d.forename, d.surname, l.time LIMIT 1;\t----- bird -----\tformula_1",
    "986": "SELECT r.name AS race_name, l.time AS fastest_lap_time FROM races r JOIN lapTimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId JOIN constructors c ON r.circuitId = c.circuitId WHERE l.lap = 1 GROUP BY r.name ORDER BY fastest_lap_time DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'United States Grand Prix' AND races.year = 2006 AND drivers.forename IN ( SELECT forename FROM drivers ORDER BY points DESC LIMIT 10 )\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverId = p.driverId JOIN races r ON p.raceId = r.raceId WHERE d.nationality = 'Germany' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverId, d.forename, d.surname ORDER BY avg_pit_stop_duration ASC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT d.forename, d.surname, r.time FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = 'Canadian Grand Prix' AND YEAR(r.date) = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, c.url FROM races r JOIN results res ON r.raceId = res.raceId JOIN constructorResults cr ON res.resultId = cr.resultId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' AND res.rank = 1;\t----- bird -----\tformula_1",
    "991": "SELECT drivers.forename, drivers.surname, drivers.dob FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE drivers.nationality = 'Austrian' AND drivers.dob BETWEEN '1981-01-01' AND '1991-12-31';\t----- bird -----\tformula_1",
    "992": "SELECT d.forename, d.surname, 'https://de.wikipedia.org/wiki/' || d.forename || '_' || d.surname AS wikipedia_link, d.dob FROM drivers d WHERE d.nationality = 'German' AND d.dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY d.dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT name, location, country, lat, lng FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(results.points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId JOIN constructors ON races.constructorId = constructors.constructorId WHERE circuits.name = 'Istanbul Park' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "996": "SELECT EXTRACT(YEAR FROM races.date) AS year, COUNT(races.raceId) AS race_count FROM races WHERE races.date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year HAVING race_count > 0;\t----- bird -----\tformula_1",
    "997": "SELECT MAX(nationality) AS majority_nationality FROM drivers;\t----- bird -----\tformula_1",
    "998": "SELECT SUM(points) FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE drivers.forename = 'Driver Name' AND drivers.surname = 'Driver Surname' AND results.rank = 91;\t----- bird -----\tformula_1",
    "999": "SELECT r.name FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId JOIN constructors c ON res.constructorId = c.constructorId JOIN lapTimes lt ON d.driverId = lt.driverId AND lt.lap = res.position JOIN pitStops ps ON d.driverId = ps.driverId AND ps.stop = res.position WHERE lt.time = (SELECT MIN(fastestLapTime) FROM lapTimes lt2 WHERE lt2.raceId = r.raceId AND lt2.driverId = d.driverId) GROUP BY r.name HAVING MAX(lt.milliseconds) = (SELECT MAX(milliseconds) FROM lapTimes lt3 WHERE lt3.raceId = r.raceId);\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.name, circuits.location +'(' + circuits.country + ')' AS full_location FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.date = (SELECT MAX(date) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON lt.raceId = r.raceId JOIN circuits c ON r.circuitId = c.circuitId WHERE c.name = 'Marina Bay Street Circuit' AND r.round = 3 AND q.q3 = '1st' AND r.year = 2008 LIMIT 1;\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename ||'' || d.surname AS full_name, c.nationality, r.name FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId JOIN constructors c ON cr.constructorId = c.constructorId WHERE d.dob = (SELECT MIN(dob) FROM drivers);\t----- bird -----\tformula_1",
    "1003": "SELECT drivers.driverId, drivers.forename, drivers.surname, COUNT(results.resultId) AS accidents FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Canadian Grand Prix' GROUP BY drivers.driverId, drivers.forename, drivers.surname ORDER BY accidents DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS wins FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.forename, d.surname ORDER BY wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_time_spent_at_pitstop FROM pitstops WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons ORDER BY year DESC LIMIT 1)));\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(time) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'Monaco Grand Prix');\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) AS longest_pit_stop_time FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT id FROM races WHERE name = '2011 Australian Grand Prix');\t----- bird -----\tformula_1",
    "1009": "SELECT d.forename, p.time FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.name = '2011 Australian Grand Prix' AND d.driverId IN ( SELECT driverId FROM qualifying WHERE raceId = '2011 Australian Grand Prix' );\t----- bird -----\tformula_1",
    "1010": "SELECT races.raceId, races.name FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races e ON r.raceId = e.raceId WHERE r.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = e.raceId AND driverId = d.driverId) ORDER BY r.position ASC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT circuits.name, races.name AS race_name, results.position FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId WHERE results.driverId = (SELECT driverId FROM qualifying WHERE q1 = 'Lewis Hamilton' AND q2 = 'Lewis Hamilton' AND q3 = 'Lewis Hamilton') AND results.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = races.raceId AND driverId = (SELECT driverId FROM qualifying WHERE q1 = 'Lewis Hamilton' AND q2 = 'Lewis Hamilton' AND q3 = 'Lewis Hamilton')) GROUP BY circuits.name, races.race_name;\t----- bird -----\tformula_1",
    "1013": "SELECT MAX(time) AS lap_record FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'Austrian Grand Prix Circuit';\t----- bird -----\tformula_1",
    "1014": "SELECT circuits.name, races.name AS race_name, results.time AS lap_record FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId WHERE circuits.country = 'Italy' GROUP BY circuits.name, race_name HAVING MAX(results.milliseconds) = ( SELECT MAX(milliseconds) FROM ( SELECT results.milliseconds, races.name AS race_name, circuits.name AS circuit_name FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN results ON races.raceId = results.raceId WHERE circuits.country = 'Italy' GROUP BY circuits.name, race_name ) AS subquery );\t----- bird -----\tformula_1",
    "1015": "SELECT r.name FROM races AS r JOIN lap_times AS lt ON r.raceId = lt.raceId JOIN drivers AS d ON lt.driverId = d.driverId WHERE r.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit') AND lt.time = (SELECT MAX(time) FROM lap_times WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "1016": "SELECT pit_stops.duration FROM races JOIN pit_stops ON races.raceId = pit_stops.raceId WHERE races.name = 'Austrian Grand Prix Circuit' AND drivers.driverId = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Austrian Grand Prix Circuit' ) AND points = ( SELECT MAX(points) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Austrian Grand Prix Circuit' ) ) )\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.name, circuits.location, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN lapTimes ON races.raceId = lapTimes.raceId AND drivers.driverId = lapTimes.driverId JOIN results ON results.raceId = races.raceId AND results.driverId = drivers.driverId WHERE lapTimes.time = '1:29.488' GROUP BY circuits.name, circuits.location, circuits.lat, circuits.lng HAVING MAX(results.position) = 1;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(pit_stops.milliseconds) FROM pit_stops JOIN drivers ON pit_stops.driverId = drivers.driverId JOIN races ON pit_stops.raceId = races.raceId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) AS average_lap_time FROM lap_times JOIN races ON lap_times.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1021": "SELECT MAX(height) AS tallest_player_height, player_name FROM Player JOIN Team_Attributes ON Player.team_api_id = Team_Attributes.team_api_id JOIN Match ON Player.home_player_1 = Match.home_player_1 OR Player.away_player_1 = Match.away_player_1 JOIN Team ON Match.home_team_api_id = Team.team_api_id OR Match.away_team_api_id = Team.team_api_id WHERE (home_player_1 = Match.home_player_1 OR away_player_1 = Match.away_player_1) GROUP BY player_name ORDER BY tallest_player_height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1022": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN League l ON t.team_api_id = l.team_api_id WHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes) AND ta.buildUpPlayPositioningClass = 'preferred_foot';\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT pa.player_api_id FROM Player_Attributes pa JOIN ( SELECT player_api_id, MAX(crossing) AS max_crossing FROM Player_Attributes GROUP BY player_api_id ) max_crossings ON pa.player_api_id = max_crossings.player_api_id ORDER BY max_crossings.max_crossing DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1025": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.id ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id, COUNT(*) AS lost_matches FROM Match WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name, penalties FROM Player_Attributes WHERE penalties = (SELECT MAX(penalties) FROM Player_Attributes) LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1028": "SELECT t.team_long_name FROM Team t JOIN League l ON t.league_id = l.id JOIN Match m ON l.id = m.league_id JOIN Player_Attributes pa_home ON m.home_player_1 = pa_home.player_api_id JOIN Player_Attributes pa_away ON m.away_player_1 = pa_away.player_api_id WHERE l.name = 'Scotland Premier League' AND m.season = '2009/2010' AND pa_home.overall_rating > 0 AND pa_away.overall_rating > 0 GROUP BY t.team_long_name HAVING COUNT(*) = ( SELECT MAX(COUNT(*)) FROM ( SELECT t.team_long_name FROM Team t JOIN League l ON t.league_id = l.id JOIN Match m ON l.id = m.league_id JOIN Player_Attributes pa_home ON m.home_player_1 = pa_home.player_api_id JOIN Player_Attributes pa_away ON m.away_player_1 = pa_away.player_api_id WHERE l.name = 'Scotland Premier League' AND m.season = '2009/2010' AND pa_home.overall_rating > 0 AND pa_away.overall_rating > 0 GROUP BY t.team_long_name ) AS subquery );\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t.team_long_name, MAX(ta.buildUpPlaySpeed) AS top_build_up_play_speed FROM Team t JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id GROUP BY t.team_long_name ORDER BY top_build_up_play_speed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT l.name, COUNT(m.id) AS draw_matches FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' AND (m.home_team_goal = m.away_team_goal) GROUP BY l.name ORDER BY draw_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT p.player_api_id, p.player_name, p.birthday, p.height, p.weight, p.sprint_speed FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND YEAR(pa.date) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "1032": "SELECT \"League\".\"name\" AS league_name, MAX(COUNT(\"Match\".\"league_id\")) AS total_matches FROM \"League\" JOIN \"Match\" ON \"League\".\"id\" = \"Match\".\"league_id\" GROUP BY \"League\".\"name\" ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT pa.player_api_id, MAX(pa.overall_rating) AS highest_overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE substr(pa.date, 1, 4) = '2010' GROUP BY pa.player_api_id HAVING MAX(pa.overall_rating) = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE substr(date, 1, 4) = '2010');\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT T1.team_long_name FROM Team_Attributes AS T1 JOIN Player_Attributes AS P1 ON T1.home_player_1 = P1.player_api_id JOIN Player_Attributes AS P2 ON T1.away_player_1 = P2.player_api_id JOIN Player_Attributes AS P3 ON T1.home_player_2 = P3.player_api_id JOIN Player_Attributes AS P4 ON T1.away_player_2 = P4.player_api_id JOIN Player_Attributes AS P5 ON T1.home_player_3 = P5.player_api_id JOIN Player_Attributes AS P6 ON T1.away_player_3 = P6.player_api_id JOIN Player_Attributes AS P7 ON T1.home_player_4 = P7.player_api_id JOIN Player_Attributes AS P8 ON T1.away_player_4 = P8.player_api_id JOIN Player_Attributes AS P9 ON T1.home_player_5 = P9.player_api_id JOIN Player_Attributes AS P10 ON T1.home_player_6 = P10.player_api_id JOIN Player_Attributes AS P11 ON T1.home_player_7 = P11.player_api_id JOIN Player_Attributes AS P12 ON T1.home_player_8 = P12.player_api_id JOIN Player_Attributes AS P13 ON T1.home_player_9 = P13.player_api_id JOIN Player_Attributes AS P14 ON T1.home_player_10 = P14.player_api_id JOIN Player_Attributes AS P15 ON T1.home_player_11 = P15.player_api_id JOIN Player_Attributes AS P16 ON T1.away_player_1 = P16.player_api_id JOIN Player_Attributes AS P17 ON T1.away_player_2 = P17.player_api_id JOIN Player_Attributes AS P18 ON T1.away_player_3 = P18.player_api_id JOIN Player_Attributes AS P19 ON T1.away_player_4 = P19.player_api_id JOIN Player_Attributes AS P20 ON T1.away_player_5 = P20.player_api_id JOIN Player_Attributes AS P21 ON T1.away_player_6 = P21.player_api_id JOIN Player_Attributes AS P22 ON T1.away_player_7 = P22.player_api_id JOIN Player_Attributes AS P23 ON T1.away_player_8 = P23.player_api_id JOIN Player_Attributes AS P24 ON T1.away_player_9 = P24.player_api_id JOIN Player_Attributes AS P25 ON T1.away_player_10 = P25.player_api_id JOIN Player_Attributes AS P26 ON T1.away_player_11 = P26.player_api_id WHERE T1.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE T1.team_fifa_api_id = Team_Attributes.team_fifa_api_id AND strftime('%Y', T1.date) = '2012')\t----- bird -----\teuropean_football_2",
    "1037": "SELECT (SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) * 100.0 / COUNT(player_fifa_api_id)) AS percentage FROM Player_Attributes WHERE YEAR(birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT l.name, SUM(m.home_team_goal + m.away_team_goal) AS total_goals FROM League l JOIN Country c ON l.country_id = c.id JOIN Team t ON l.team_id = t.team_api_id JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id OR t.team_api_id = m.away_team_api_id GROUP BY l.name ORDER BY total_goals ASC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "1040": "SELECT p.player_name, AVG(pa.heading_accuracy) AS average_heading_accuracy FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 GROUP BY p.player_name ORDER BY average_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT t1.team_long_name, t1.chance_creation_passing FROM Team_Attributes AS t1 JOIN Player_Attributes AS p1 ON t1.home_player_1 = p1.player_api_id JOIN Player_Attributes AS p2 ON t1.away_player_1 = p2.player_api_id WHERE t1.buildUpPlayDribblingClass = 'Normal' AND t1.date >= '2014-01-01 00:00:00' AND t1.date <= '2014-12-31 23:59:59' AND p1.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 23:59:59') ORDER BY t1.chance_creation_passing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name FROM League l JOIN Match m ON l.id = Match.league_id JOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(CASE WHEN m.home_team_goal > m.away_team_goal THEN m.home_team_goal ELSE m.away_team_goal END) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT \"attacking_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT TA.buildUpPlayPositioningClass FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id WHERE T.team_long_name = 'ADO Den Haag';\t----- bird -----\teuropean_football_2",
    "1047": "SELECT overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes FROM Player_Attributes WHERE player_name = 'Francois Affolter' AND date = '2014-09-18 00:00:00';\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Gabriel Tamas' ) AND date = strftime('%Y', date) = '2011' );\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(MATCH_ID) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2015/2016';\t----- bird -----\teuropean_football_2",
    "1050": "SELECT pa.preferred_foot FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN League l ON t.team_api_id = l.team_api_id JOIN Country c ON l.country_id = c.id WHERE p.latest_birthday = (SELECT MIN(birthday) FROM Player) AND pa.date = (SELECT MAX(date) FROM Player_Attributes WHERE player_api_id = p.player_api_id);\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_api_id, player_name, MAX(potential) AS highest_potential FROM Player_Attributes GROUP BY player_api_id, player_name ORDER BY highest_potential DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT \"defensive_work_rate\" FROM \"Player_Attributes\" WHERE \"player_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT t1.player_name, t1.birthday FROM Player AS t1 JOIN ( SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id ORDER BY MAX(overall_rating) DESC LIMIT 1 ) AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes WHERE player_api_id = t2.player_api_id );\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League L JOIN Country C ON L.country_id = C.id WHERE C.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(AVG(finishing)) AS highest_avg_finishing_rate FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height ASC LIMIT 1 ) AND player_api_id IN ( SELECT player_api_id FROM Player ORDER BY height DESC LIMIT 1 );\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player WHERE player_name LIKE '%Adam%' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating > 80 AND strftime('%Y', Player_Attributes.date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT t.team_long_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_api_id WHERE ta.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT Team_Attributes.buildUpPlayPassingClass FROM Team_Attributes JOIN Match ON Team_Attributes.match_api_id = Match.match_api_id JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id WHERE Team.team_short_name = 'CLB';\t----- bird -----\teuropean_football_2",
    "1067": "SELECT t.team_short_name FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE ta.buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(t2.overall_rating) AS average_overall_rating FROM Player_Attributes AS t1 JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.height > 170 AND t2.date >= '2010-01-01' AND t2.date <= '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height FROM Player WHERE height = (SELECT MIN(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1070": "SELECT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT t1.team_short_name FROM Team AS t1 JOIN Match AS m1 ON t1.team_api_id = m1.home_team_api_id JOIN Team_Attributes AS ta1 ON t1.team_fifa_api_id = ta1.team_fifa_api_id JOIN Player_Attributes AS pa1 ON ta1.home_player_1 = pa1.player_api_id JOIN Player_Attributes AS pa2 ON ta1.home_player_2 = pa2.player_api_id JOIN Player_Attributes AS pa3 ON ta1.home_player_3 = pa3.player_api_id JOIN Player_Attributes AS pa4 ON ta1.home_player_4 = pa4.player_api_id JOIN Player_Attributes AS pa5 ON ta1.home_player_5 = pa5.player_api_id JOIN Player_Attributes AS pa6 ON ta1.home_player_6 = pa6.player_api_id JOIN Player_Attributes AS pa7 ON ta1.home_player_7 = pa7.player_api_id JOIN Player_Attributes AS pa8 ON ta1.home_player_8 = pa8.player_api_id JOIN Player_Attributes AS pa9 ON ta1.home_player_9 = pa9.player_api_id JOIN Player_Attributes AS pa10 ON ta1.home_player_10 = pa10.player_api_id JOIN Player_Attributes AS pa11 ON ta1.home_player_11 = pa11.player_api_id WHERE m1.home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT pa.player_name, pa.balance FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.potential = 61 AND pa.balance = (SELECT MAX(balance) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "1076": "SELECT SUBTRACT(AVG(ball_control) FILTER (WHERE player_name = 'Abdou Diallo'), AVG(ball_control) FILTER (WHERE player_name = 'Aaron Appindangoye')) AS difference_of_average_ball_control FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player FROM Player;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT Country.name FROM Country JOIN League ON Country.id = League.country_id WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT l.name FROM League l JOIN Country c ON l.country_id = c.id WHERE c.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1083": "SELECT MAX(overall_rating) AS strongest_overall_strength FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(DISTINCT player_api_id) FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS best_crosser FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone'));\t----- bird -----\teuropean_football_2",
    "1086": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk' );\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height > 180 AND Player_Attributes.volley_score > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player p JOIN Player_Attributes pa1 ON p.player_api_id = pa1.player_api_id JOIN Player_Attributes pa2 ON p.player_api_id = pa2.player_api_id WHERE pa1.attribute_name = 'volleys' AND pa1.value > 70 AND pa2.attribute_name = 'dribbling' AND pa2.value > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE home_team_country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(long_passing) AS long_passing_score_of_oldest_player FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id JOIN Team_Attributes ON Player_Attributes.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Match ON Player_Attributes.home_player_1 = Match.home_player_1 OR Player_Attributes.home_player_1 = Match.away_player_1 OR Player_Attributes.home_player_2 = Match.home_player_2 OR Player_Attributes.home_player_2 = Match.away_player_2 OR Player_Attributes.home_player_3 = Match.home_player_3 OR Player_Attributes.home_player_3 = Match.away_player_3 OR Player_Attributes.home_player_4 = Match.home_player_4 OR Player_Attributes.home_player_4 = Match.away_player_4 OR Player_Attributes.home_player_5 = Match.home_player_5 OR Player_Attributes.home_player_5 = Match.away_player_5 OR Player_Attributes.home_player_6 = Match.home_player_6 OR Player_Attributes.home_player_6 = Match.away_player_6 OR Player_Attributes.home_player_7 = Match.home_player_7 OR Player_Attributes.home_player_7 = Match.away_player_7 OR Player_Attributes.home_player_8 = Match.home_player_8 OR Player_Attributes.home_player_8 = Match.away_player_8 OR Player_Attributes.home_player_9 = Match.home_player_9 OR Player_Attributes.home_player_9 = Match.away_player_9 OR Player_Attributes.home_player_10 = Match.home_player_10 OR Player_Attributes.home_player_10 = Match.away_player_10 OR Player_Attributes.home_player_11 = Match.home_player_11 OR Player_Attributes.home_player_11 = Match.away_player_11 AND Player.birthday = (SELECT MIN(birthday) FROM Player);\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT MAX(league_name) AS league_with_most_matches FROM League WHERE season = '2008/2009';\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100) AS percentage_difference FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk' AND player_name = 'Paulin Puel';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian';\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS average_overall_rating FROM Player_Attributes T1 WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Player_Attributes WHERE player_api_id = (SELECT id FROM Player WHERE player_name = 'Aaron Lennox');\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chance_creation_passing) AS highest_score, chance_creation_passing_class AS classification FROM Team_Attributes WHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player_Attributes WHERE player_name = 'Abdou Diallo';\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS highest_overall_rating FROM Player_Attributes WHERE T2.player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) FROM Match WHERE team_long_name = 'Parma' AND country_id IN (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1102": "SELECT t1.player_name FROM Player AS t1 JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id JOIN Player_Attributes AS t3 ON t2.team_fifa_api_id = t3.player_fifa_api_id WHERE t3.overall_rating = 77 AND t2.date LIKE '2016-06-23%' ORDER BY t1.birthday DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00';\t----- bird -----\teuropean_football_2",
    "1105": "SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_name` = 'Francesco Migliore' AND `date` LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "1106": "SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_name` = 'Kevin Berigaud' AND `date` = '2013-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1107": "SELECT date FROM Player_Attributes WHERE player_name = 'Kevin Constant' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_name = 'Kevin Constant');\t----- bird -----\teuropean_football_2",
    "1108": "SELECT t3.buildUpPlaySpeedClass FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_fifa_ai_id JOIN Team AS t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'Willem II' AND t1.date = '2012-02-22';\t----- bird -----\teuropean_football_2",
    "1109": "SELECT t3.buildUpPlayDribblingClass FROM Team_Attributes t1 JOIN Team t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id JOIN Match m ON t2.team_api_id = m.away_team_api_id WHERE t2.team_long_name = 'LEI' AND m.date = '2015-09-10 00:00:00';\t----- bird -----\teuropean_football_2",
    "1110": "SELECT t3.buildUpPlayPassingClass FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id JOIN Team_Attributes AS t3 ON t1.team_api_id = t3.team_api_id WHERE t2.team_long_name = 'FC Lorient' AND t1.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "1111": "SELECT tc.chance_creation_passing_class FROM Team_Attributes ta JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id WHERE t.team_long_name = 'PEC Zwolle' AND ta.date = '2013-09-20 00:00:00';\t----- bird -----\teuropean_football_2",
    "1112": "SELECT TA.chance_creation_crossing_class FROM Team_Attributes TA JOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id JOIN Match M ON T.team_api_id = M.home_team_api_id WHERE T.team_long_name = 'Hull City' AND M.date = '2010-02-22 00:00:00';\t----- bird -----\teuropean_football_2",
    "1113": "SELECT TA.defence_aggression_class FROM Team_Attributes AS TA JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id WHERE T.team_long_name = 'Hannover 96' AND TA.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "SELECT (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12') - (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013/7/12') / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013/7/12') * 100\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM ( SELECT player_api_id, weight FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes GROUP BY player_api_id ORDER BY SUM(weight) DESC LIMIT 10 ) ) AS subquery;\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.home_player_1 = m.home_player_1 OR p.home_player_2 = m.home_player_1 OR p.home_player_3 = m.home_player_1 OR p.home_player_4 = m.home_player_1 OR p.home_player_5 = m.home_player_1 OR p.home_player_6 = m.home_player_1 OR p.home_player_7 = m.home_player_1 OR p.home_player_8 = m.home_player_1 OR p.home_player_9 = m.home_player_1 OR p.home_player_10 = m.home_player_1 OR p.home_player_11 = m.home_player_1 AND p.away_player_1 = m.away_player_1 OR p.away_player_2 = m.away_player_1 OR p.away_player_3 = m.away_player_1 OR p.away_player_4 = m.away_player_1 OR p.away_player_5 = m.away_player_1 OR p.away_player_6 = m.away_player_1 OR p.away_player_7 = m.away_player_1 OR p.away_player_8 = m.away_player_1 OR p.away_player_9 = m.away_player_1 OR p.away_player_10 = m.away_player_1 OR p.away_player_11 = m.away_player_1 JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN League l ON t.country_id = l.id JOIN Country c ON l.id = c.id WHERE pa.overall_rating >= 35 AND pa.potential >= 35 AND pa.buildUpPlaySpeed >= 35 AND pa.buildUpPlaySpeedClass = 'Excellent' AND pa.buildUpPlayDribbling >= 35 AND pa.buildUpPlayDribblingClass = 'Excellent' AND pa.buildUpPlayPassing >= 35 AND pa.buildUpPlayPassingClass = 'Excellent' AND pa.buildUpPlayPositioningClass = 'Excellent' AND pa.chanceCreationPassing >= 35 AND pa.chanceCreationPassingClass = 'Excellent' AND pa.chanceCreationCrossing >= 35 AND pa.chanceCreationCrossingClass = 'Excellent' AND pa.chanceCreationShooting >= 35 AND pa.chanceCreationShootingClass = 'Excellent' AND pa.chanceCreationPositioningClass = 'Excellent' AND ta.defencePressure >= 35 AND ta.defencePressureClass = 'Excellent' AND ta.defenceAggression >= 35 AND ta.defenceAggressionClass = 'Excellent' AND ta.defenceTeamWidth >= 35 AND ta.defenceTeamWidthClass = 'Excellent' AND ta.defenceDefenderLineClass = 'Excellent';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT SUM(home_player_1.goal) FROM Match JOIN Team_Attributes ON Match.home_team_api_id = Team_Attributes.team_api_id JOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id JOIN Player_Attributes ON Team.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE (home_player_name = 'Daan Smith' OR home_player_name = 'Filipe Ferreira') AND (home_player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Daan Smith') OR home_player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Filipe Ferreira'));\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match JOIN Team_Attributes ON Match.home_team_api_id = Team_Attributes.team_api_id JOIN Player_Attributes ON Team_Attributes.team_fifa_api_id = Player_Attributes.player_fifa_api_id JOIN Player ON Team_Attributes.player_api_id = Player.player_api_id WHERE Player.birthday < DATE('now', '-30 years');\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_api_id, player_name FROM Player WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1123": "SELECT p.player_name FROM Player p JOIN ( SELECT player_api_id, MAX(potential) AS max_potential FROM Player_Attributes GROUP BY player_api_id ) max_potential ON p.player_api_id = max_potential.player_api_id WHERE p.potential = max_potential.max_potential;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p.player_name FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.attacking_work_rate = 'high' AND EXISTS ( SELECT 1 FROM Player_Attributes pa2 JOIN Player p2 ON pa2.player_api_id = p2.player_api_id WHERE pa2.player_api_id = pa.player_api_id AND pa2.attacking_work_rate = 'high' AND p2.player_name <> p.player_name );\t----- bird -----\teuropean_football_2",
    "1125": "SELECT p.player_name FROM Player_Attributes pa JOIN Team_Attributes ta ON pa.team_fifa_api_id = ta.team_fifa_api_id JOIN Match m ON pa.home_player_1 = m.home_player_1 OR pa.home_player_2 = m.home_player_1 OR pa.home_player_3 = m.home_player_1 OR pa.home_player_4 = m.home_player_1 OR pa.home_player_5 = m.home_player_1 OR pa.home_player_6 = m.home_player_1 OR pa.home_player_7 = m.home_player_1 OR pa.home_player_8 = m.home_player_1 OR pa.home_player_9 = m.home_player_1 OR pa.home_player_10 = m.home_player_1 OR pa.home_player_11 = m.home_player_1 JOIN Player p ON pa.team_api_id = p.team_api_id WHERE pa.finishing = 1 GROUP BY p.player_name ORDER BY MAX(SUBTRACT(CURRENT_TIMESTAMP, pa.birthday)) ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT p.player_name FROM Player p JOIN Team t ON p.team_api_id = t.team_api_id JOIN League l ON t.country_id = l.id WHERE l.name = 'Belgium';\t----- bird -----\teuropean_football_2",
    "1127": "SELECT p.player_name, c.name AS country FROM Player p JOIN Team_Attributes ta ON p.player_api_id = ta.home_player_X1 JOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id JOIN Country c ON t.team_api_id = c.id WHERE ta.vision > 89;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT Country.name, MAX(Player_Attributes.weight) AS heaviest_average_weight FROM Player JOIN Team ON Player.team_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Match ON Team.team_api_id = Match.home_team_api_id OR Team.team_api_id = Match.away_team_api_id JOIN Player_Attributes ON Match.home_player_X1 OR Match.home_player_X2 OR Match.home_player_X3 OR Match.home_player_X4 OR Match.home_player_X5 OR Match.home_player_X6 OR Match.home_player_X7 OR Match.home_player_X8 OR Match.home_player_X9 OR Match.home_player_X10 OR Match.home_player_X11 = Player_Attributes.player_api_id JOIN Player_Attributes ON Match.away_player_X1 OR Match.away_player_X2 OR Match.away_player_X3 OR Match.away_player_X4 OR Match.away_player_X5 OR Match.away_player_X6 OR Match.away_player_X7 OR Match.away_player_X8 OR Match.away_player_X9 OR Match.away_player_X10 OR Match.away_player_X11 = Player_Attributes.player_api_id GROUP BY Country.name ORDER BY heaviest_average_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1129": "SELECT t1.team_long_name FROM Team_Attributes AS t1 JOIN Team AS t2 ON t1.team_fifa_api_id = t2.team_api_id WHERE t1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT t.team_short_name FROM Team AS t JOIN Match AS m ON t.team_api_id = m.away_team_api_id JOIN Team_Attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT pa.player_name FROM Player_Attributes pa JOIN Team t ON pa.home_player_1 = t.team_api_id JOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id JOIN Match m ON t.team_api_id = m.home_team_api_id WHERE pa.height > 180 AND pa.overall_rating > 80 ORDER BY pa.player_name ASC LIMIT 3;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990' AND EXTRACT(YEAR FROM birthday) >= 1990;\t----- bird -----\teuropean_football_2",
    "1134": "SELECT SUBTRACT(jumping, jumping) FROM Player_Attributes WHERE player_api_id = 6 AND player_api_id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT pa.id FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team t ON p.team_api_id = t.team_api_id JOIN Match m ON p.player_api_id = m.home_player_1 OR p.player_api_id = m.away_player_1 WHERE pa.potential = (SELECT MIN(potential) FROM Player_Attributes) AND pa.preferred_foot = 'right' ORDER BY pa.overall_rating DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes JOIN Team_Attributes ON Player_Attributes.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Team_Attributes.buildUpPlayCrossing = (SELECT MAX(buildUpPlayCrossing) FROM Team_Attributes) AND Player_Attributes.preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes) AS percentage FROM Player_Attributes WHERE strength > 80 AND stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT c.name FROM Country c JOIN League l ON c.id = l.country_id WHERE l.name = 'Poland Ekstraklasa';\t----- bird -----\teuropean_football_2",
    "1139": "SELECT MATCH.home_team_goal + MATCH.away_team_goal AS final_score FROM MATCH WHERE MATCH.date = '2008-09-24' AND MATCH.country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND MATCH.league_id = (SELECT id FROM League WHERE name = 'Belgian Jupiler League');\t----- bird -----\teuropean_football_2",
    "1140": "SELECT pa.sprint_speed, pa.agility, pa.acceleration FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id = ( SELECT id FROM League WHERE name = 'Italian Serie A' );\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS highest_home_team_score FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1144": "SELECT pa.overall_rating AS finishing_rate, ta.curve AS curve_score FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id JOIN Team_Attributes ta ON p.team_fifa_api_id = ta.team_fifa_api_id JOIN Match m ON p.player_api_id IN (m.home_player_1, m.away_player_1) WHERE p.weight = (SELECT MAX(weight) FROM Player WHERE player_api_id = p.player_api_id) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT l.name, COUNT(m.id) AS games_count FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2015/2016' GROUP BY l.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT t2.team_long_name FROM Team AS t1 JOIN Match AS m ON t1.team_api_id = m.away_team_api_id JOIN Team_Attributes AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id WHERE m.goal = (SELECT MAX(goal) FROM Match AS m2 WHERE m2.away_team_api_id = m.away_team_api_id)\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id, player_name, overall_rating FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes WHERE height < 180 AND overall_rating > 70)) AS percentage FROM Player_Attributes WHERE height < 180 AND overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT SEX, COUNT(CASE WHEN Admission = '+' THEN ID ELSE NULL END) AS in_patients, COUNT(CASE WHEN Admission = '-' THEN ID ELSE NULL END) AS out_patients, (COUNT(CASE WHEN Admission = '+' THEN ID ELSE NULL END) * 100.0 / COUNT(*)) AS in_patient_percentage, (COUNT(CASE WHEN Admission = '-' THEN ID ELSE NULL END) * 100.0 / COUNT(*)) AS out_patient_percentage FROM Patient WHERE SEX = 'M' GROUP BY SEX ORDER BY in_patient_percentage DESC, out_patient_percentage DESC;\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_born_after_1930 FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE year(Patient.Birthday) > '1930' AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE YEAR(Patient.Birthday) BETWEEN 1930 AND 1940) AS inpatient_percentage FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE YEAR(Patient.Birthday) BETWEEN 1930 AND 1940 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT ( SELECT COUNT(*) FROM Examination AS e1 WHERE e1.Diagnosis = 'SLE' AND e1.Admission = '+' ) AS inpatient_count, ( SELECT COUNT(*) FROM Examination AS e2 WHERE e2.Diagnosis = 'SLE' AND e2.Admission = '-' ) AS outpatient_count, ( SELECT ( SELECT COUNT(*) FROM Examination AS e3 WHERE e3.Diagnosis = 'SLE' AND e3.Admission = '+' ) / ( SELECT COUNT(*) FROM Examination AS e4 WHERE e4.Diagnosis = 'SLE' AND e4.Admission = '-' ) ) AS ratio FROM Patient AS p WHERE p.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Patient WHERE ID = 30609; SELECT Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSB, CENTROMEA, DNA, DNA-II FROM Examination WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday, Examination.Examination Date FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = '163109';\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT P.ID, SUBTRACT(year(current_timestamp()), year(P.Birthday)) AS age FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = 2 AND Examination.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Patient.Birthday) = 1937 AND Laboratory.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_with_abnormal_total_protein FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (Laboratory.TP < '6.0' OR Laboratory.TP > '8.5');\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL_IgG) AS average_aCL_IgG FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE SUBTRACT(year(current_timestamp()), year(Birthday)) >= 50 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1997-01-01' AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(SUBTRACT(YEAR(`First Date`),YEAR(Birthday))) AS youngest_age FROM Patient;\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 1 AND Patient.SEX = 'F' AND Examination.Examination_Date >= '1997-01-01' AND Examination.Examination_Date < '1998-01-01';\t----- bird -----\tthrombosis_prediction",
    "1165": "To find the age gap between the youngest and oldest patient with a normal triglyceride recorded, we need to follow these steps: 1. Identify patients with normal triglyceride levels (tg > = 200). 2. Calculate the age gap for each of these patients. 3. Determine the minimum and maximum age gaps. Here's the SQLite statement to achieve this: [SQL] SELECT MIN(age_gap) AS youngest_age_gap, MAX(age_gap) AS oldest_age_gap FROM ( SELECT PATIENT.ID AS patient_id, PATIENT.SEX, PATIENT.Birthday, PATIENT.Description, PATIENT.First_Date, PATIENT.Admission, PATIENT.Diagnosis, EXTRACT(YEAR FROM AGE(CURRENT_DATE, PATIENT.Birthday)) AS age, CASE WHEN GOT <= 200 AND GPT <= 200 AND LDH <= 200 AND ALP <= 200 AND TP <= 200 AND ALB <= 200 AND UA <= 200 AND UN <= 200 AND CRE <= 200 AND T_BIL <= 200 AND T_CHO <= 200 AND TG <= 200 AND CPK <= 200 AND GLU <= 200 AND WBC <= 200 AND RBC <= 200 AND HGB <= 200 AND HCT <= 200 AND PLT <= 200 AND PT <= 200 AND APTT <= 200 AND FG <= 200 AND PIC <= 200 AND TAT <= 200 AND TAT2 <= 200 AND U_PRO = '' AND IGG = 0 AND IGA = 0 AND IGM = 0 AND CRP = '' AND RA = '' AND RF = '' AND C3 = 0 AND C4 = 0 AND RNP = '' AND SM = '' AND SC170 = '' AND SSA = '' AND SSB = '' AND CENTROMEA = '' AND DNA = '' AND DNA_II = 0 THEN 1 ELSE 0 END AS normal_triglyceride FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE GOT <= 200 AND GPT <= 200 AND LDH <= 200 AND ALP <= 200 AND TP <= 200 AND ALB <= 200 AND UA <= 200 AND UN <= 200 AND CRE <= 200 AND T_BIL <= 200 AND T_CHO <= 200 AND TG <= 200 AND CPK <= 200 AND GLU <= 200 AND WBC <= 200 AND RBC <= 200 AND HGB <= 200 AND HCT <= 200 AND PLT <= 200 AND PT <= 200 AND APTT <= 200 AND FG <= 200 AND PIC <= 200 AND TAT <= 200 AND TAT2 <= 200 AND U_PRO = '' AND IGG = 0 AND IGA = 0 AND IGM = 0 AND CRP = '' AND RA = '' AND RF = '' AND C3 = 0 AND C4 = 0 AND RNP = '' AND SM = '' AND SC170 = '' AND SSA = '' AND SSB = '' AND CENTROMEA = '' AND DNA = '' AND DNA_II = 0 GROUP BY patient_id, sex, birthday, description, first_date, admission, diagnosis ) AS patients_with_normal_triglyceride; SELECT MIN(age_gap) AS youngest_age_gap, MAX(age_gap) AS oldest_age_gap FROM ( SELECT PATIENT.ID AS patient_id, PATIENT.SEX, PATIENT.Birthday, PATIENT.Description, PATIENT.First_Date, PATIENT.Admission, PATIENT.Diagnosis, EXTRACT(YEAR FROM AGE(CURRENT_DATE, PATIENT.Birthday)) AS age, CASE WHEN GOT <= 200 AND GPT <= 200 AND LDH <= 200 AND ALP <= 200 AND TP <= 200 AND ALB <= 20\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT p.Symptoms, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Birthday = (SELECT MIN(Birthday) FROM Patient) AND p.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT DATE_PART('month', Date) AS Month, AVG(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS AverageMalePatients FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY Month ORDER BY Month;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS oldest_lab_date, (year(Patient.Birthday) - year(Laboratory.Date)) AS age_at_admission FROM Examination AS E JOIN Patient AS P ON E.ID = P.ID JOIN Laboratory AS L ON E.ID = L.ID WHERE P.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction",
    "1169": "WITH abnormal_uric_acid AS ( SELECT ID FROM Examination WHERE UA <= '8.0' AND SEX = 'M' UNION ALL SELECT ID FROM Examination WHERE UA <= '6.5' AND SEX = 'F' ), male_female_counts AS ( SELECT CASE WHEN ID IN (SELECT ID FROM abnormal_uric_acid WHERE SEX = 'M') THEN 'Male' WHEN ID IN (SELECT ID FROM abnormal_uric_acid WHERE SEX = 'F') THEN 'Female' ELSE 'Other' END AS Gender, COUNT(*) AS Count FROM Examination JOIN abnormal_uric_acid ON Examination.ID = abnormal_uric_acid.ID GROUP BY Gender ) SELECT (male_female_counts.Count_Male / male_female_counts.Count_Female) AS Ratio FROM male_female_counts WHERE Gender IN ('Male', 'Female');\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBTRACT(year(Examination.Examination Date), year(Patient.First Date)) >= 1;\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date BETWEEN '1990-01-01' AND '1993-12-31' AND Examination.aCL IgG IS NOT NULL AND Examination.aCL IgM IS NOT NULL AND Examination.ANA IS NOT NULL AND Examination.ANA Pattern IS NOT NULL AND Examination.aCL IgA IS NOT NULL AND Examination.Diagnosis IS NOT NULL AND Examination.KCT IS NOT NULL AND Examination.RVVT IS NOT NULL AND Examination.LAC IS NOT NULL AND Examination.Symptoms IS NOT NULL AND Examination.Thrombosis IS NOT NULL AND Patient.SEX = 'underage' AND Patient.Birthday < '1994-01-01';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-BIL >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(p.Birthday)) AS avg_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination_Date BETWEEN '1991-10-01' AND '1991-10-30' AND YEAR(CURRENT_DATE) - YEAR(p.Birthday) = 1999;\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT p.ID AS patient_id, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, e.Diagnosis, (SUBTRACT(year(e.Examination Date), year(p.Birthday))) AS age_at_examination, e.HGB AS highest_hemoglobin_count FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.HGB = (SELECT MAX(HGB) FROM Examination) LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG, aCL_IgM, ANA, ANA_Pattern, aCL_IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT L.GOT, L.GPT, L.LDH, L.ALP, L.TP, L.ALB, L.UA, L.UN, L.CRE, L.T-BIL, L.T-CHO, L.TG, L.CPK, L.GLU, L.WBC, L.RBC, L.HGB, L.HCT, L.PLT, L.PT, L.APTT, L.FG, L.PIC, L.TAT, L.TAT2, L.U-PRO, L.IGG, L.IGA, L.IGM, L.CRP, L.RA, L.RF, L.C3, L.C4, L.RNP, L.SM, L.SC170, L.SSA, L.SSB, L.CENTROMEA, L.DNA, L.DNA-II FROM Examination L JOIN Patient P ON L.ID = P.ID WHERE P.ID = 2927464 AND L.Date = '1995-09-04';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'AORTITIS' AND Examination.ID = (SELECT MIN(ID) FROM Examination WHERE Examination.Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT aCL_IgM FROM Examination WHERE ID = ( SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' ) AND Examination_Date = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT P.SEX, L.GOT FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE E.Examination_Date = '1992-06-12' AND L.GOT = 9 AND (P.SEX = 'M' OR P.SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT Patient.SEX, Patient.Birthday, SUBTRACT(year(Examination.Examination Date), year(Patient.Birthday)) AS age_at_test FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date = '1991-10-21' AND Examination.UA = '8.4';\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(Laboratory.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.First Date = '1991-06-13' AND Patient.Diagnosis = 'SJS' AND Laboratory.Date >= '1995-01-01' AND Laboratory.Date < '1996-01-01';\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT p.Description FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Diagnosis = 'SLE' AND e.Examination_Date = '1997-01-27' AND EXISTS ( SELECT 1 FROM Examination e2 WHERE e2.Patient_ID = p.ID AND e2.Examination_Date < e.Examination_Date AND e2.Diagnosis!= 'SLE' );\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT p.Symptoms FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Birthday = '1959-03-01' AND e.Examination_Date = '1993-09-27';\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT (SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 11 THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 12 THEN `T-CHO` ELSE 0 END)) / (SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 11 THEN `T-CHO` ELSE 0 END) + SUM(CASE WHEN SUBSTRING(Birthday, 1, 4) = '1981' AND MONTH(Date) = 12 THEN `T-CHO` ELSE 0 END)) FROM Examination WHERE SUBSTRING(Birthday, 1, 4) = '1959' AND Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Diagnosis ON Examination.ID = Diagnosis.ID WHERE Diagnosis.Diagnosis = 'Behcet' AND Examination.Examination Date BETWEEN '197-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4 GROUP BY Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis HAVING COUNT(*) = 1;\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.Birthday = '1964-01-01' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 2 AND Laboratory.ANA = 'S' AND Laboratory.aCL IgM = AVG(Laboratory.aCL IgM) * 1.2;\t----- bird -----\tthrombosis_prediction",
    "1190": "WITH normal_proteinuria AS ( SELECT * FROM Examination WHERE U-PRO > 0 AND U-PRO < 30 ), low_uric_acid AS ( SELECT * FROM Examination WHERE UA <= 6.5 ), common_patients AS ( SELECT e1.*, e2.* FROM normal_proteinuria e1 JOIN low_uric_acid e2 ON TRUE ) SELECT (COUNT(*) FILTER (WHERE common_patients.UA <= 6.5 AND common_patients.U-PRO > 0 AND common_patients.U-PRO < 30)) * 100.0 / COUNT(*) AS percentage FROM common_patients;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT (COUNT(*) FILTER (WHERE SEX = 'M' AND YEAR(FIRST_DATE) = '1981' AND DIAGNOSIS = 'BEHCET')) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(FIRST_DATE) = '1981') AS percentage FROM Patient p JOIN Examination e ON p.ID = e.ID;\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Admission = '-' AND l.Date LIKE '%1991-10%' AND l.T-BIL < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ANA Pattern!= 'P' AND Patient.SEX = 'F' AND Examination.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > 2 AND Laboratory.CRE = 1 AND Laboratory.LDH = 123;\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) AS average_blood_albumin_level FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.PLT > 400 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT Patient.Description, Examination.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Examination.Examination Date) = 1997 AND (Examination.TP > 8.5 OR Examination.TP < 6);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT DIVIDE( SUM( CASE WHEN Examination.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END ), SUM( CASE WHEN Examination.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END ) ) * 100 AS proportion FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Symptoms LIKE '%thrombocytopenia%' AND Examination.Diagnosis LIKE '%SLE%';\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT (COUNT(*) FILTER (WHERE SEX = 'F')) * 100.0 / COUNT(*) AS percentage_of_women FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Diagnosis d ON e.ID = d.ID WHERE p.SEX = 'M' AND e.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND d.Diagnosis = 'Behcet';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'F' AND Examination.WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(\"Examination Date\", \"First Date\") FROM \"Patient\" WHERE \"ID\" = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT UA > 8.0 AND SEX = 'M' OR UA > 6.5 AND SEX = 'F' FROM Examination WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT EXAMINATION.Examination_Date FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.ID = 48473 AND Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Examination Date = '1994-01-01' AND l.GOT < 60 GROUP BY p.ID, p.SEX, p.Birthday;\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'M' AND l.GPT > 60 AND e.Diagnosis IS NOT NULL AND e.Diagnosis LIKE '%ALT glutamic pylvic transaminase (GPT) exceed the normal range%' GROUP BY p.ID HAVING COUNT(DISTINCT e.Diagnosis) > 0;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT p.SEX, p.Birthday, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.GPT > 60 ORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(Laboratory.LDH) AS average_ldh FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH < 500 GROUP BY Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT p.ID, (SUBTRACT(year(current_timestamp), year(p.Birthday))) AS age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.LDH BETWEEN 100 AND 300 AND e.LDH > (SELECT AVG(LDH) FROM Examination WHERE LDH BETWEEN 100 AND 300)\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT Patient.SEX, Patient.Birthday, Patient.Description, Patient.First_Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.aCL_IgG < 300 AND Examination.aCL_IgM < 300 AND Examination.ANA < 1 AND Examination.ANA_Pattern = '' AND Examination.aCL_IgA < 300 GROUP BY Patient.SEX, Patient.Birthday, Patient.Description, Patient.First_Date, Patient.Admission, Patient.Diagnosis HAVING Examination.aCL_IgG < 300 AND Examination.aCL_IgM < 300 AND Examination.ANA < 1 AND Examination.ANA_Pattern = '' AND Examination.aCL_IgA < 300;\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.Birthday = '1982-04-01' LIMIT 1; [SQL] SELECT CASE WHEN e.ALP < 300 THEN 'Within normal range' ELSE 'Not within normal range' END AS ALP_status FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT p.SEX, l.TP, (l.TP - 8.5) AS deviation FROM Examination AS e JOIN Patient AS p ON e.ID = p.ID JOIN Laboratory AS l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.TP > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT P.ID, P.SEX, P.Birthday FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE P.SEX = 'M' AND E.ALB < 3.5 OR E.ALB > 5.5 ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.First Date, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Patient.Birthday) = 1982 AND Albumin BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(DISTINCT Patient.ID) * 100.0 / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F') AS percentage_female_ua_above_normal FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.UA > 8.0 AND Patient.SEX = 'M' OR Laboratory.UA > 6.5 AND Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(L.UA) AS average_UA_index FROM Examination AS E JOIN Laboratory AS L ON E.ID = L.ID WHERE (E.SEX = 'M' AND E.UA < 8.0) OR (E.SEX = 'F' AND E.UA < 6.5) GROUP BY E.ID HAVING COUNT(*) = 1 ORDER BY E.Examination_Date DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'RA' AND Laboratory.UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT SEX, COUNT(*) AS male_count, COUNT(*) FILTER (WHERE SEX = 'F') AS female_count FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE CRE >= 1.5 GROUP BY SEX HAVING male_count > female_count;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.SEX, GROUP_CONCAT(Patient.ID) AS Patients FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T-BIL >= 2.0 AND Laboratory.T-BIL IS NOT NULL GROUP BY Patient.SEX;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT P.ID, L.T_CHO FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE P.Birthday = (SELECT MIN(P2.Birthday) FROM Patient P2) AND L.T_CHO = (SELECT MAX(L2.T_CHO) FROM Laboratory L2)\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(YEAR(NOW()) - YEAR(p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE p.SEX = 'M' AND e.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.TG > 300 GROUP BY p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG > 200 AND DATEDIFF(year, Patient.Birthday, CURRENT_DATE) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CPK < 250 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Examination.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT p.ID, p.SEX, p.age FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.GLU >= 180 AND e.T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT p.ID, l.GLU FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Description = '1991' AND l.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.WBC < 3.5 OR l.WBC > 9.0 GROUP BY p.SEX, p.Birthday ORDER BY p.SEX, p.Birthday;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RBC < 3.5 AND e.Diagnosis IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First_Date, p.Admission, p.Diagnosis, l.GOT, l.GPT, l.LDH, l.ALP, l.TP, l.ALB, l.UA, l.UN, l.CRE, l.T_BIL, l.T_CHO, l.TG, l.CPK, l.GLU, l.WBC, l.RBC, l.HGB, l.HCT, l.PLT, l.PT, l.APTT, l.FG, l.PIC, l.TAT, l.TAT2, l.U_PRO, l.IGG, l.IGA, l.IGM, l.CRP, l.RA, l.RF, l.C3, l.C4, l.RNP, l.SM, l.SC170, l.SSA, l.SSB, l.CENTROMEA, l.DNA, l.DNA_II FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND p.Birthday <= DATE('now', '-50 years') AND l.RBC < 3.5 OR l.RBC > 6.0;\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT p.ID, p.SEX FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.HGB BETWEEN 10 AND 17 ORDER BY Examination.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT p.ID, p.age FROM Patient p JOIN Examination e1 ON p.ID = e1.ID JOIN Examination e2 ON p.ID = e2.ID WHERE e1.HCT >= 52 AND e2.HCT >= 52 GROUP BY p.ID HAVING COUNT(DISTINCT e1.ID) > 2 AND COUNT(DISTINCT e2.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) AS average_low_HCT FROM Examination WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal_range, SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal_range FROM Examination WHERE abnormal_platelet_level = 'true';\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Examination Date = '1984-01-01' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) < 50 AND Laboratory.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT P.SEX, COUNT(P.ID) AS Female_Patients, SUM(CASE WHEN L.PT > = 14 AND P.SEX = 'F' THEN 1 ELSE 0 END) AS Abnormal_PT_Females, (SUM(CASE WHEN L.PT > = 14 AND P.SEX = 'F' THEN 1 ELSE 0 END) / COUNT(P.ID)) * 100 AS Percentage_Abnormal_PT_Females FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND SUBTRACT(year(current_timestamp()), year(P.Birthday)) > 55 GROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.FirstDate, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.ExaminationDate >= '1992-01-01' AND e.PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination_Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(DISTINCT Examination.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.APTT > 45 AND Laboratory.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.WBC > 3.5 AND Examination.WBC < 9.0 AND Examination.FG <= 150 OR Examination.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Birthday > '1980-01-01' AND Laboratory.FG < 150 OR Laboratory.FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO >= 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U_PRO BETWEEN 0 AND 30 AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE aCL_IgG > 2000;\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.aCL IgG > 900 AND Examination.aCL IgG < 2000 AND Patient.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT P.Diagnosis FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.IGA BETWEEN 80 AND 500 GROUP BY P.ID HAVING MAX(L.IGA) = (SELECT MAX(IGA) FROM Examination WHERE IGA BETWEEN 80 AND 500);\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgA > 80 AND Examination.aCL IgA < 500 AND Examination.First Date >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis, COUNT(*) AS frequency FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis HAVING frequency = (SELECT MAX(frequency) FROM (SELECT Diagnosis, COUNT(*) AS frequency FROM Examination WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis) AS subquery);\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRP = '+'; AND Patient.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(Patient.Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.aCL IgG = 'normal' AND Laboratory.KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT e.Diagnosis FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE p.Birthday >= '1985-01-01' AND e.RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.RF < 20 AND SUBSTR(P.Birthday, 1, 4) - SUBSTR(CURDATE(), 1, 4) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RF < 20 AND Laboratory.Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.C3 > 35 AND Laboratory.ANA_Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.Hematoclit NOT BETWEEN 29 AND 52 AND e.aCL IgA = (SELECT MAX(aCL_IgA) FROM Laboratory l WHERE l.ID = e.ID);\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Diagnosis LIKE '%APS%' AND l.C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.RNP = '-' AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.RNP NOT IN ('-', '+-') AND p.SEX = 'M' -- Assuming the youngest patient is male ORDER BY p.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.aCL IgG = 0 AND Examination.ANA Pattern = 'normal anti-SM' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT e.ID, p.ID FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.aCL IgG IS NOT NULL AND e.aCL IgM IS NOT NULL AND e.ANA IS NOT NULL AND e.ANA Pattern IS NOT NULL AND e.aCL IgA IS NOT NULL AND e.Diagnosis LIKE '%abnormal anti-SM%' GROUP BY e.ID, p.ID HAVING COUNT(*) = 3 ORDER BY MIN(p.Birthday) ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination_Date > '1997-01-01' AND Examination.SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(DISTINCT t1.ID) FROM Examination AS t1 JOIN Patient AS t2 ON t1.ID = t2.ID JOIN Laboratory AS t3 ON t1.ID = t3.ID WHERE t3.SC170 IN ('negative', '0') AND t2.SEX = 'F' AND t2.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSA' AND Examination.First Date < '2000-01-01';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient P JOIN Examination E ON P.ID = E.ID WHERE E.First Date = (SELECT MIN(First Date) FROM Patient) AND E.SSA NOT IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP = 'normal anti-SSB' AND Examination.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP IS NOT NULL AND Laboratory.RA IS NOT NULL AND Laboratory.RF IS NOT NULL AND Laboratory.C3 IS NOT NULL AND Laboratory.C4 IS NOT NULL AND Laboratory.RNP IS NOT NULL AND Laboratory.SM IS NOT NULL AND Laboratory.SC170 IS NOT NULL AND Laboratory.SSA IS NOT NULL AND Laboratory.SSB IS NOT NULL AND Laboratory.CENTROMEA IS NOT NULL AND Laboratory.DNA IS NOT NULL AND Laboratory.DNA_II IS NOT NULL AND Laboratory.SSB IN ('negative', '0') AND Patient.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CENTROMEA IN ('-', '+-') AND l.SSB IN ('-', '+-') AND p.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.CRP LIKE '%anti-DNA%';\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRP = 'normal anti-DNA level' AND Examination.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG > 900 AND Examination.aCL IgG < 2000 AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT MULTIPLY(DIVIDE(COUNT(ID), COUNT(ID WHERE GOT > = 60 AND Diagnosis = 'SLE')), 1.0) AS percentage FROM Examination WHERE GOT > = 60 AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) AS YoungestBirthdate FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT > 60;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT Patient.ID, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GPT < 60 GROUP BY Patient.ID, Patient.Birthday ORDER BY MAX(Laboratory.GPT) DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.GOT < 60 AND Patient.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MIN(Patient.First_Date) AS first_recorded_date FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.LDH < 500 GROUP BY Patient.ID HAVING MAX(Laboratory.LDH) = Laboratory.LDH;\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(First_Date) AS latest_patient_date FROM Patient WHERE ID IN ( SELECT ID FROM Examination ORDER BY First_Date DESC LIMIT 1 ) AND LDH >= 500;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.ALP > 300 AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALP < 300 AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.U-PRO LIKE '%total protein is lower than normal%' AND Examination.TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'SJS' AND Examination.TP > 6.0 AND Examination.TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT e.Examination_Date FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.ALB > 3.5 AND l.ALB < 5.5 GROUP BY e.Examination_Date HAVING MAX(l.ALB) = (SELECT MAX(ALB) FROM Examination e2 WHERE e2.Examination_Date = e.Examination_Date);\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.SEX = 'M' AND Examination.ALB > 3.5 AND Examination.ALB < 5.5 AND Examination.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT e.aCL_IgG, e.aCL_IgM, e.aCL_IgA FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.50 AND (e.aCL_IgG, e.aCL_IgM, e.aCL_IgA) IN (SELECT MAX(aCL_IgG), MAX(aCL_IgM), MAX(aCL_IgA) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.50);\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(ANA) AS highest_ANA FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE CRE < 1.5;\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE l.CRE < 1.5 AND MAX(l.aCL IgA) = l.aCL IgA GROUP BY p.ID HAVING COUNT(DISTINCT l.CRE) = 1 AND COUNT(DISTINCT l.aCL IgA) = 1;\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-BIL > 2.0 AND Laboratory.ANA Pattern LIKE '%P%';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT e.ANA FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE MAX(e.T-BIL) < 2.0;\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.T-CHO >= 250 AND l.KCT = '-';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.T-CHO < 250 AND Laboratory.ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.TG < 200 AND Patient.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.TG < 200 GROUP BY Patient.Diagnosis ORDER BY MAX(Laboratory.TG) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 0 AND l.CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.aCL IgG < 250 AND (Laboratory.KCT = '+' OR Laboratory.RVVT = '+' OR Laboratory.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT p.ID, p.SEX, p.Birthday, p.Description FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GLU > 180 GROUP BY p.ID, p.SEX, p.Birthday, p.Description ORDER BY p.ID DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'normal blood glucose' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Symptoms LIKE '%normal%' AND Examination.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'SLE' AND Examination.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC < 3.5 OR Examination.RBC > 6.0) AND Examination.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(DISTINCT p.ID) FROM Examination e JOIN Patient p ON e.ID = p.ID WHERE e.PLT > 100 AND e.PLT < 400 AND p.Diagnosis IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.FirstDate, Patient.Admission, Patient.Diagnosis FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Examination.Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) AS average_prothrombin_time FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'M' AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Thrombosis = 2 OR Examination.Thrombosis = 1 AND Laboratory.PT < 14 AND Examination.Diagnosis ='severe thrombosis';\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT m.major_name FROM major m JOIN member m_member ON m.major_id = m_member.link_to_major WHERE m_member.first_name = 'Angela' AND m_member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(DISTINCT m.member_id) FROM member AS m JOIN student_club AS sc ON m.link_to_major = sc.major_id JOIN major AS me ON sc.major_id = me.major_id WHERE me.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1314": "SELECT m.first_name, m.last_name FROM member m JOIN link_to_major lm ON m.member_id = lm.member_id JOIN major ma ON lm.major_id = ma.major_id WHERE ma.department = 'Art and Design';\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(DISTINCT attendees.member_id) FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE e.event_name = 'Women''s Soccer' AND m.link_to_major.major_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "1316": "SELECT m.phone FROM member m JOIN student_club sc ON m.link_to_major = sc.major_id JOIN event e ON sc.event_id = e.event_id WHERE e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(DISTINCT m.member_id) FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT e.event_name, COUNT(a.link_to_event) AS attendance_count FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mc ON m.link_to_major = mc.major_id WHERE mc.major_name = 'Student_Club' GROUP BY e.event_id, e.event_name ORDER BY attendance_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT major.college FROM major JOIN member ON major.major_id = member.link_to_major JOIN event ON event.event_id = attendance.link_to_event JOIN budget ON budget.link_to_event = event.event_id JOIN expense ON expense.link_to_member = member.member_id AND expense.link_to_budget = budget.budget_id JOIN income ON income.link_to_member = member.member_id WHERE member.position = 'Vice President' AND event.event_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "1320": "SELECT e.event_name FROM event AS e JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' AND event.type = 'Student_Club' AND YEAR(event.event_date) = 2019;\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND member_id IN ( SELECT member_id FROM member WHERE zip = ( SELECT zip_code FROM zip_code WHERE city = 'Student_Club' ) ) AND member_count > 10;\t----- bird -----\tstudent_club",
    "1323": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event WHERE COUNT(a.event_id) > 20 AND e.type!= 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance.link_to_member) AS average_attendance FROM event JOIN attendance ON event.event_id = attendance.link_to_event WHERE event.type = 'Meeting' AND YEAR(event.event_date) = 2020;\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description LIKE '%club events%';\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(DISTINCT m.member_id) FROM member AS m JOIN major AS me ON m.link_to_major = me.major_id WHERE me.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Laugh Out Loud' AND m.link_to_major.department = 'Student_Club';\t----- bird -----\tstudent_club",
    "1328": "SELECT m.first_name, m.last_name FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.major_name = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code FROM zip_code WHERE city = 'Sherri Ramsey grew up city' AND county = 'Sherri Ramsey grew up county';\t----- bird -----\tstudent_club",
    "1330": "SELECT m.college FROM major AS m JOIN event AS e ON m.major_id = e.type JOIN attendance AS a ON e.event_id = a.link_to_event JOIN member AS t ON a.link_to_member = t.member_id WHERE t.first_name = 'Tyler' AND t.last_name = 'Hewitt';\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE source = 'Vice President';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(spent) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Student_Club' AND event.event_name = 'September Meeting' AND category = 'Food';\t----- bird -----\tstudent_club",
    "1333": "SELECT m.city, m.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'President' AND m.link_to_major IS NOT NULL;\t----- bird -----\tstudent_club",
    "1334": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(budget.spent) FROM budget JOIN event ON budget.link_to_event = event.event_id JOIN member ON budget.link_to_member = member.member_id WHERE member.position = 'Student_Club' AND event.event_name = 'September Meeting' AND budget.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1336": "SELECT m.department FROM major m JOIN event e ON m.major_id = e.type JOIN member mi ON e.link_to_member = mi.member_id WHERE mi.first_name = 'Pierce' AND mi.last_name = 'Guidi';\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(budget.amount) AS total_budgeted_amount FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT approved FROM expense WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08');\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) AS total_average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN event ON expense.link_to_event = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND MONTH(STR_TO_DATE(expense.expense_date, '%Y-%m-%d')) BETWEEN 9 AND 10;\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM budget WHERE event_id IN ( SELECT event_id FROM event WHERE type = 'Student_Club' ) AND YEAR(event_date) = 2019 UNION ALL SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM budget WHERE event_id IN ( SELECT event_id FROM event WHERE type = 'Student_Club' ) AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1341": "SELECT \"location\" FROM \"event\" WHERE \"event_name\" = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS biggest_remaining_food_budget FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM event WHERE event_name = 'fundraising' AND event_date = '2019-09-14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(DISTINCT major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_id = ( SELECT event_id FROM event WHERE event_name = 'November Meeting' ) AND remaining < 0;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) AS total_budget_amount FROM budget WHERE event_id = ( SELECT event_id FROM event WHERE event_name = 'September Speaker' );\t----- bird -----\tstudent_club",
    "1350": "SELECT e.event_status FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Post Cards, Posters' AND e_expense.expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major WHERE major_id = (SELECT member_id FROM member WHERE full_name = 'Brent Thomason');\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT \"type\" FROM \"zip_code\" WHERE \"zip_code\" = (SELECT \"zip\" FROM \"member\" WHERE \"first_name\" = 'Christof' AND \"last_name\" = 'Nielson');\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip.city, zip.county, zip.state, zip.short_state FROM zip_code AS zip WHERE zip.zip = ( SELECT member.zip FROM member WHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison' );\t----- bird -----\tstudent_club",
    "1356": "SELECT m.department FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE m.first_name = 'President' AND m.last_name = 'Unknown';\t----- bird -----\tstudent_club",
    "1357": "SELECT i.date_received FROM member i JOIN income j ON i.member_id = j.link_to_member WHERE j.source = 'Dues' AND i.first_name = 'Connor' AND i.last_name = 'Hilton';\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member WHERE MIN(received_date) = ( SELECT MIN(received_date) FROM income WHERE source = 'Dues' );\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND (event_name = 'Yearly Kickoff' AND spent > spent) OR (event_name = 'October Meeting' AND spent < spent);\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(budget.spent) WHERE budget.category = 'Parking' AND budget.event_id = (SELECT event_id FROM event WHERE event_name = 'November Speaker')) / (SELECT COUNT(event_id) FROM event WHERE event_name = 'November Speaker') * 100\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(DISTINCT city) FROM zip_code JOIN city ON zip_code.zip = city.zip WHERE zip_code.type = 'county' AND zip_code.state = 'Virginia' AND zip_code.county = 'Orange';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code FROM zip_code WHERE city = (SELECT city FROM member WHERE first_name = 'Amy' AND last_name = 'Firth');\t----- bird -----\tstudent_club",
    "1365": "SELECT b.category, e.expense_description, e.cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_budget WHERE b.remaining = (SELECT MIN(remaining) FROM budget) ORDER BY e.cost ASC;\t----- bird -----\tstudent_club",
    "1366": "SELECT m.member_id, m.first_name, m.last_name, m.email FROM member m JOIN attendance a ON m.member_id = a.link_to_member WHERE a.link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1367": "SELECT college, COUNT(member_id) AS popularity FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY college ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN member_phone p ON m.member_id = p.member_id WHERE p.phone_number = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT e.event_name, MAX(b.amount) AS highest_budget FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1370": "SELECT e.expense_description, m.first_name, m.last_name FROM expense AS e JOIN member AS m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Women's Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE member_id = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(DISTINCT zip) AS maryland_count FROM member WHERE state = 'Maryland';\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(DISTINCT event.event_id) FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1376": "SELECT e.event_name, MAX(DIVIDE(b.spent, b.amount)) AS highest_spend_to_budget_ratio FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Closed' GROUP BY e.event_id, e.event_name ORDER BY highest_spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(DISTINCT member_id) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT e.event_name, MAX(b.spent) AS highest_budget_spend FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY highest_budget_spend DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT m.first_name, m.last_name FROM member m JOIN event e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(e.event_id) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT m.member_id, m.first_name, m.last_name, e.event_name FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.major_id = (SELECT major_id FROM major WHERE major_name = 'Interior Design') AND e.event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT m.first_name, m.last_name FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(amount) FROM income WHERE link_to_member = 'Grant Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT m.member_id, m.first_name, m.last_name, i.income_id, i.date_received, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_description = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT m.member_id, m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE b.category = 'budget for Yearly Kickoff' LIMIT 1;\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(i.amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT e.event_name, MIN(b.cost) AS lowest_cost FROM event e JOIN budget b ON e.event_id = b.link_to_event GROUP BY e.event_id, e.event_name ORDER BY lowest_cost ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "1390": "SELECT DIVIDE(SUM(cost) WHERE event_name = 'Yearly Kickoff', SUM(cost)) * 100 AS percentage FROM event;\t----- bird -----\tstudent_club",
    "1391": "SELECT (SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END)) AS finance_to_physics_ratio FROM member;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_funds FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_funds DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT m.first_name, m.email FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Student_Club' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(DISTINCT member_id) FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(DISTINCT member_id) FROM attendance WHERE link_to_event = 'Community Theater' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT m.member_id, m.first_name, m.last_name, COUNT(a.link_to_event) AS event_count FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.email = 'luisa.guidi@example.com' GROUP BY m.member_id, m.first_name, m.last_name ORDER BY event_count DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(SUM(spent) / COUNT(spent)) AS average_food_spending FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT e.event_name, MAX(b.spent) AS highest_advertisement_spend FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Advertisement' GROUP BY e.event_name ORDER BY highest_advertisement_spend DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT (SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) / COUNT(event_id)) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT expense.cost FROM expense JOIN income ON expense.income_id = income.income_id JOIN member ON income.link_to_member = member.member_id JOIN event ON expense.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT e.event_name FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event JOIN budget b ON e_expense.link_to_event = b.link_to_event WHERE e.status = 'Closed' AND b.remaining < 0 ORDER BY SUM(e_expense.cost) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1404": "SELECT e.type, SUM(e.cost) AS total_value FROM expense e JOIN income i ON e.link_to_member = i.link_to_member JOIN budget b ON e.link_to_event = b.budget_id WHERE i.date_received BETWEEN '2023-10-01' AND '2023-10-31' AND b.event_name = 'October Meeting' AND e.approved = 'approved' GROUP BY e.type;\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS amount_budgeted FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'April Speaker');\t----- bird -----\tstudent_club",
    "1406": "SELECT b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Food' GROUP BY b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event ORDER BY b.spent DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1407": "SELECT b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Advertising' GROUP BY b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status ORDER BY b.amount DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) AS total_cost_spent_for_parking FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE link_to_member = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT e.expense_description, i.amount FROM expense AS e JOIN income AS i ON e.link_to_member = i.link_to_member JOIN member AS m ON e.link_to_member = m.member_id JOIN zip_code AS z ON m.zip = z.zip_code WHERE m.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1413": "SELECT m.zip, m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN event e2 ON b.link_to_event = e2.event_id WHERE e.cost < 50 GROUP BY m.zip, m.first_name, m.last_name HAVING SUM(e.cost) < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major_name FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Phillip' AND last_name = 'Cullen' );\t----- bird -----\tstudent_club",
    "1415": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.major_name = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE major_id = (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT e.event_name, e.type FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT event.type FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN zip_code ON event.location = zip_code.city WHERE zip_code.city = 'MU 215';\t----- bird -----\tstudent_club",
    "1419": "SELECT b.category FROM event AS e JOIN budget AS b ON e.event_id = b.link_to_event WHERE e.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT m.major_name FROM major m JOIN member mj ON m.major_id = mj.link_to_major WHERE mj.position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT (SUM(position = 'Member' and major_name = 'Business') / COUNT(member_id)) * 100 FROM member;\t----- bird -----\tstudent_club",
    "1422": "SELECT e.type AS event_category FROM event e INNER JOIN member m ON e.location = 'MU 215' INNER JOIN zip_code z ON m.zip = z.zip_code;\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(DISTINCT major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.first_name, m.last_name, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, a.department, a.college FROM member m JOIN major a ON m.link_to_major = a.major_id WHERE a.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM budget b JOIN event e ON b.link_to_event = e.event_id JOIN zip_code z ON e.location = z.city WHERE z.city = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
    "1428": "SELECT zip.city, zip.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.major_name = 'Electrical and Computer Engineering Department' AND member.position = 'Member';\t----- bird -----\tstudent_club",
    "1429": "SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Vice President' AND m.last_name = 'Student_Club' AND e.location = '900 E. Washington St' AND e.type = 'Social';\t----- bird -----\tstudent_club",
    "1430": "SELECT m.last_name, m.position FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Pizza' AND e.expense_date = '2019-09-10';\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1432": "SELECT AVG(amount) * 100 AS percentage FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.link_to_major.major_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT state FROM zip_code JOIN major ON zip_code.zip = major.major_id WHERE zip_code.type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.event_status = 'Closed' AND e.type = 'Game' AND e.event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.zip IN ( SELECT z.zip_code FROM zip_code z JOIN major m ON z.zip = m.zip JOIN member mm ON z.zip = mm.zip WHERE mm.first_name = 'John' AND mm.last_name = 'Doe' AND mm.email = 'john.doe@example.com' ) AND e.status = 'paid' AND e.cost > 50;\t----- bird -----\tstudent_club",
    "1437": "SELECT m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE m.approved = 'true' AND e.event_date BETWEEN '2019-01-10' AND '2019-11-19' GROUP BY m.member_id, m.first_name, m.last_name, e.event_id, e.event_name, e.event_date, e.location HAVING COUNT(DISTINCT e.event_id) >= 1;\t----- bird -----\tstudent_club",
    "1438": "SELECT m.college FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m.first_name = 'Katy' AND m_major.major_name ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT m.phone FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE ma.major_name = 'Business' AND m.college = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club",
    "1440": "SELECT m.email FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received BETWEEN '2019-09-10' AND '2019-11-19' AND i.amount > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'education' AND college = 'College of Education & Human Services');\t----- bird -----\tstudent_club",
    "1442": "SELECT (SUM(CASE WHEN budget.spent < 0 THEN 1 ELSE 0 END) / COUNT(DISTINCT event.event_id)) * 100 FROM event LEFT JOIN budget ON event.event_id = budget.link_to_event;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_id, AVG(cost) AS avg_cost FROM expense WHERE cost > 50 GROUP BY expense_id HAVING AVG(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT m.first_name, m.last_name FROM member m JOIN major m_major ON m.link_to_major = m_major.major_id WHERE m_major.t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT (COUNT(zip_code) * 100.0 / DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code))) AS percentage_of_po_boxes FROM zip_code;\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0;\t----- bird -----\tstudent_club",
    "1448": "SELECT e.event_name, e.event_date FROM event e JOIN expense e_expense ON e.event_id = e_expense.link_to_event WHERE e_expense.expense_description = 'Pizza' AND e_expense.cost > 50 AND e_expense.cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event WHERE e.cost > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT e.city, e.state, e.short_state FROM event e JOIN zip_code z ON e.location = z.zip_code WHERE e.status = 'active' AND ( SELECT COUNT(*) FROM income i WHERE i.link_to_event = e.event_id AND i.amount > 40 ) > 50;\t----- bird -----\tstudent_club",
    "1451": "SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id, m.first_name, m.last_name HAVING COUNT(DISTINCT e.event_id) > 1 ORDER BY total_expense DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE link_to_member NOT IN ( SELECT member_id FROM member );\t----- bird -----\tstudent_club",
    "1453": "SELECT e.event_name, AVG(b.cost) AS avg_parking_cost FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Parking' GROUP BY e.event_id, e.event_name HAVING AVG(b.cost) < (SELECT AVG(cost) FROM budget WHERE category = 'Parking')\t----- bird -----\tstudent_club",
    "1454": "SELECT (SUM(cost) / COUNT(event_id)) * 100 AS percentage_of_cost FROM event WHERE type = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT b.category, SUM(e.cost) AS total_cost FROM budget b JOIN expense e ON b.budget_id = e.link_to_event WHERE e.expense_description LIKE '%water%' AND e.expense_description LIKE '%chips%' AND e.expense_description LIKE '%cookies%' GROUP BY b.category ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event GROUP BY m.member_id ORDER BY SUM(e.cost) DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN ( SELECT category, AVG(cost) AS avg_cost FROM expense GROUP BY category ) avg_cost ON e.category = avg_cost.category WHERE e.cost > avg_cost.avg_cost\t----- bird -----\tstudent_club",
    "1458": "SELECT (SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS new_jersey_percentage, (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS vermont_percentage FROM member WHERE position = 'Member'; [SQL] SELECT (SUM(CASE WHEN state = 'New Jersey' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS new_jersey_percentage, (SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS vermont_percentage FROM member WHERE position = 'Member';\t----- bird -----\tstudent_club",
    "1459": "SELECT m.major_name, m.department FROM major m JOIN member mg ON m.major_id = mg.link_to_major WHERE mg.first_name = 'Garrett' AND mg.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies' GROUP BY m.member_id, m.first_name, m.last_name LIMIT 1;\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m JOIN major me ON m.link_to_major = me.major_id WHERE me.major_name = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT b.category, b.spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT m.first_name, m.last_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "1465": "SELECT b.category FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT m.first_name, m.last_name, m.position, m.college FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_event = b.link_to_event JOIN event e2 ON b.link_to_event = e2.event_id WHERE e.expense_description = 'Club Meeting Expenses' AND m.position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent_on_speaker_gifts FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id, e.event_name ORDER BY total_spent_on_speaker_gifts DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1468": "SELECT z.city FROM zip_code z JOIN member m ON z.zip = m.zip WHERE m.first_name = 'Garrett' AND m.last_name = 'Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT m.first_name, m.last_name, m.position FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092;\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(DISTINCT gs.GasStationID) FROM gasstations gs JOIN products p ON gs.Segment = p.Segment WHERE gs.Country = 'CZE' AND p.Description LIKE '%Premium%';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 END) / COUNT(CASE WHEN customers.Currency = 'CZK' THEN 1 END) AS ratio_of_eur_to_czk FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT c.Segment, ym.CustomerID, ym.Consumption FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN products p ON gs.ChainID = p.ChainID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Date BETWEEN '2012-01-01' AND '2012-12-31' AND p.ProductID = (SELECT ProductID FROM products WHERE Description = 'LAM') ORDER BY ym.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(c.Consumption) AS average_monthly_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE c.Segment = 'SME' AND ym.Date BETWEEN '20130101' AND '20131231';\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE c.Currency = 'CZK' AND YEAR(t.Date) = 2011 AND MONTH(t.Date) BETWEEN 1 AND 12 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date BETWEEN '20120101' AND '20121231';\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN t1k.Amount ELSE 0 END) AS CZK_Consumption, SUM(CASE WHEN c.Currency = 'EUR' THEN t1k.Amount ELSE 0 END) AS EUR_Consumption, (SUM(CASE WHEN c.Currency = 'CZK' THEN t1k.Amount ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN t1k.Amount ELSE 0 END)) AS Difference FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE t1k.Date BETWEEN '20120101' AND '20121231' GROUP BY c.Currency;\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT ym.Date, SUM(t1k.Amount * t1k.Price) AS Total_Gas_Use_EUR FROM transactions_1k t1k JOIN yearmonth ym ON t1k.CustomerID = ym.CustomerID GROUP BY DATE(ym.Date) ORDER BY Total_Gas_Use_EUR DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT customers.Segment, MIN(yearmonth.Consumption) AS least_consumption FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT ym.Date AS Year, SUM(ym.Consumption) AS TotalConsumption FROM yearmonth ym JOIN transactions_1k tm ON ym.CustomerID = tm.CustomerID JOIN products p ON tm.ProductID = p.ProductID WHERE p.Description LIKE '%gas%' GROUP BY YEAR(ym.Date) ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT ym.Date, SUM(ym.Consumption) AS TotalGasConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'SME' AND YEAR(ym.Date) = 2013 GROUP BY MONTH(ym.Date) ORDER BY TotalGasConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT c.Segment, g.ChainID, ym.CustomerID, ym.Consumption FROM customers c JOIN gasstations g ON c.Segment = g.Segment JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date BETWEEN '20130101' AND '20131231' GROUP BY c.Segment, g.ChainID, ym.CustomerID ORDER BY c.Segment, ym.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT c.Segment, (SUM(CASE WHEN t1.Year = 2013 THEN t1.Amount ELSE 0 END) - SUM(CASE WHEN t1.Year = 2012 THEN t1.Amount ELSE 0 END)) AS IncreaseOrDecrease, (SUM(CASE WHEN t1.Year = 2013 THEN t1.Amount ELSE 0 END) - SUM(CASE WHEN t1.Year = 2012 THEN t1.Amount ELSE 0 END)) / SUM(CASE WHEN t1.Year = 2012 THEN t1.Amount ELSE 0 END) * 100 AS PercentageIncrease FROM customers c JOIN gasstations gs ON c.CustomerID = gs.CustomerID JOIN products p ON gs.Segment = p.Segment JOIN transactions_1k t1 ON t1.CustomerID = c.CustomerID AND t1.GasStationID = gs.GasStationID AND t1.ProductID = p.ProductID WHERE t1.Date BETWEEN '2012-01-01' AND '2013-12-31' GROUP BY c.Segment ORDER BY PercentageIncrease DESC, PercentageIncrease ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(transactions_1k.Amount) FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.CustomerID = 6 AND yearmonth.Date BETWEEN '2013-08-01' AND '2013-11-30';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(DISTINCT gasstations.GasStationID) - COUNT(DISTINCT gasstations.GasStationID) FROM gasstations WHERE gasstations.Country IN ('CZE', 'SVK');\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(Consumption) AS total_consumption_7, SUM(Consumption) AS total_consumption_5 FROM ( SELECT t1.CustomerID, t1.Date, t1.Consumption FROM yearmonth t1 JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date LIKE '2013-04%' ) subquery WHERE CustomerID = 7; UNION ALL SELECT SUM(Consumption) AS total_consumption_7, SUM(Consumption) AS total_consumption_5 FROM ( SELECT t1.CustomerID, t1.Date, t1.Consumption FROM yearmonth t1 JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date LIKE '2013-04%' ) subquery WHERE CustomerID = 5; SELECT (total_consumption_7 - total_consumption_5) AS consumption_difference FROM ( SELECT SUM(Consumption) AS total_consumption_7, SUM(Consumption) AS total_consumption_5 FROM ( SELECT t1.CustomerID, t1.Date, t1.Consumption FROM yearmonth t1 JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date LIKE '2013-04%' ) subquery WHERE CustomerID = 7 ) subquery_7 UNION ALL SELECT (total_consumption_7 - total_consumption_5) AS consumption_difference FROM ( SELECT SUM(Consumption) AS total_consumption_7, SUM(Consumption) AS total_consumption_5 FROM ( SELECT t1.CustomerID, t1.Date, t1.Consumption FROM yearmonth t1 JOIN transactions_1k t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date LIKE '2013-04%' ) subquery WHERE CustomerID = 5 ) subquery_5;\t----- bird -----\tdebit_card_specializing",
    "1486": "WITH czk_smes AS ( SELECT COUNT(*) AS total_czk_smes FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND transactions_1k.Currency = 'CZK' ), eur_smes AS ( SELECT COUNT(*) AS total_eur_smes FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND transactions_1k.Currency = 'EUR' ), exclusive_czk AS ( SELECT COUNT(DISTINCT transactions_1k.CustomerID) AS exclusive_czk_smes FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND transactions_1k.Currency = 'CZK' ), exclusive_eur AS ( SELECT COUNT(DISTINCT transactions_1k.CustomerID) AS exclusive_eur_smes FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND transactions_1k.Currency = 'EUR' ) SELECT (exclusive_czk.exclusive_czk_smes - exclusive_eur.exclusive_eur_smes) AS more_czk_smes FROM czk_smes, eur_smes, exclusive_czk, exclusive_eur;\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, c.Segment, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN gasstations gs ON t.GasStationID = gs.GasStationID WHERE c.Currency = 'Euro' AND ym.Date = '2013-10-01' ORDER BY ym.Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.Segment, SUM(t1k.Amount) AS total_consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON ym.CustomerID = t1k.CustomerID GROUP BY c.Segment ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(Consumption) FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'KAM' AND yearmonth.Date = '201305';\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT customers.CustomerID FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE customers.Segment = 'LAM' AND transactions_1k.Amount > 46.73;\t----- bird -----\tdebit_card_specializing",
    "1491": "CREATE TEMPORARY TABLE gas_station_value_for_money AS SELECT g.GasStationID, g.Country, SUM(t.Amount) AS total_amount_spent, SUM(p.Price) AS total_price_of_products FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID JOIN products p ON t.ProductID = p.ProductID GROUP BY g.GasStationID, g.Country;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT 100.0 * SUM(CASE WHEN transactions_1k.Currency = 'EUR' THEN 1 ELSE 0 END) / COUNT(DISTINCT transactions_1k.CustomerID) FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Date >= '2022-01-01' AND transactions_1k.Date <= '2022-12-31';\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers) AS percentage FROM yearmonth WHERE YEAR(date) = 2012 AND MONTH(date) = 2 AND consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT * FROM gasstations WHERE Country = 'Slovakia' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT c.CustomerID, SUM(t1k.Amount) AS total_consumption FROM customers c JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID WHERE MONTH(t1k.Date) = 9 AND YEAR(t1k.Date) = 2013 GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT c.Segment, SUM(t1k.Amount) AS TotalConsumption FROM transactions_1k t1k JOIN customers c ON t1k.CustomerID = c.CustomerID WHERE t1k.Date BETWEEN '2013-09-01' AND '2013-09-30' GROUP BY c.Segment ORDER BY TotalConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT c.CustomerID, MIN(t1.Amount) AS least_consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '201206' GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS highest_monthly_consumption_2012 FROM yearmonth WHERE YEAR(Date) = 2012;\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(Consumption) AS biggest_monthly_consumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'Euro';\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT p.Description FROM transactions_1k AS t JOIN yearmonth AS ym ON t.CustomerID = ym.CustomerID JOIN products AS p ON t.ProductID = p.ProductID WHERE MONTH(ym.Date) = 9 AND YEAR(ym.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE MONTH(transactions_1k.Date) = 6 AND YEAR(transactions_1k.Date) = 2013;\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT gasstations.ChainID, gasstations.Country, gasstations.Segment FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Amount IN (SELECT SUM(Amount) FROM transactions_1k WHERE transactions_1k.Amount % 100 = 0 AND transactions_1k.Currency = 'EUR') GROUP BY gasstations.ChainID, gasstations.Country, gasstations.Segment;\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT products.Description FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Amount * transactions_1k.Price = 1000 AND transactions_1k.Date >= '2022-01-01' AND transactions_1k.Date <= '2022-12-31' AND customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(t.Price) AS average_total_price FROM transactions_1k t JOIN yearmonth y ON t.TransactionID = y.TransactionID WHERE y.Date LIKE '2012-01%';\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT products.Description FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT gasstations.GasStationID, transactions_1k.Date, transactions_1k.Time, transactions_1k.Amount FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.ChainID = 11 GROUP BY gasstations.GasStationID, transactions_1k.Date, transactions_1k.Time, transactions_1k.Amount ORDER BY gasstations.GasStationID, transactions_1k.Date, transactions_1k.Time, transactions_1k.Amount;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date >= '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(transactions_1k.Price) AS average_total_price FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(t1.Amount * t1.Price) AS average_total_price FROM transactions_1k AS t1 JOIN customers AS c ON t1.CustomerID = c.CustomerID WHERE c.Currency = 'euro';\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT t1.CustomerID, SUM(t1.Amount) AS total_spent FROM transactions_1k t1 JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID AND t1.Date = t2.Date WHERE t2.Date = '2012-08-25' GROUP BY t1.CustomerID ORDER BY total_spent DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT gasstations.Country FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.Date = '2012-08-25' ORDER BY transactions_1k.TransactionID LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT products.Currency FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Date = '2012-08-24 16:25:00' AND transactions_1k.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT c.Segment FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE ym.Date = '2012-08-23' AND ym.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT COUNT(*) FROM transactions_1k WHERE Amount > 0 AND Currency = 'CZK' AND Time < '13:00:00' AND Date = '2012-08-26';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE t.TransactionID = (SELECT MIN(TransactionID) FROM transactions_1k) LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.ChainID = transactions_1k.GasStationID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' AND CustomerID = (SELECT CustomerID FROM yearmonth WHERE Date = '2012-08-23' AND Time = '21:20:00');\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT c.CustomerID, SUM(t1.Amount) AS total_2012_aug_24, ym.Consumption FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t1.Date = '2012-08-24' AND ym.Date = '2012-01-01' GROUP BY c.CustomerID HAVING total_2012_aug_24 > 0 ORDER BY total_2012_aug_24 DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE Time BETWEEN '08:00:00' AND '09:00:00' AND Date = '2012-08-26' AND Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT t1.Currency FROM customers AS t1 JOIN transactions_1k AS t2 ON t1.CustomerID = t2.CustomerID JOIN yearmonth AS t3 ON t2.CustomerID = t3.CustomerID WHERE t3.Date LIKE '201306%' AND t2.Amount = 214582.17;\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT gasstations.Country FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE transactions_1k.CardID = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT c.Segment FROM customers c JOIN transactions_1k t1 ON c.CustomerID = t1.CustomerID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t1.Date = '2012-08-24' AND t1.Amount = 548.4 AND ym.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(DISTINCT customers.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT customers.CustomerID) FROM customers WHERE customers.Currency = 'EUR' AND EXTRACT(YEAR FROM yearmonth.Date) = 2012 AND EXTRACT(MONTH FROM yearmonth.Date) = 8 AND EXTRACT(DAY FROM yearmonth.Date) = 25) AS percentage FROM customers JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE EXTRACT(YEAR FROM yearmonth.Date) = 2012 AND EXTRACT(MONTH FROM yearmonth.Date) = 8 AND EXTRACT(DAY FROM yearmonth.Date) = 25 AND customers.Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT ( SELECT consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ) ) AS consumption_2012, ( SELECT consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2013-08-25' ) ) AS consumption_2013, ( ( ( SELECT consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2013-08-25' ) ) - ( SELECT consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ) ) ) / ( SELECT consumption FROM yearmonth WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ) ) ) AS consumption_decrease_rate;\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT gasstations.GasStationID, SUM(transactions_1k.Amount) AS total_revenue FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID GROUP BY gasstations.GasStationID ORDER BY total_revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT (SUM(CASE WHEN c.Segment = 'premium' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM customers c JOIN gasstations gs ON c.CustomerID = gs.CustomerID WHERE gs.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(transactions_1k.Amount) AS total_spent_by_customer_38508 FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508; SELECT SUM(transactions_1k.Amount) AS total_spent_in_january_2012 FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.CustomerID = 38508 AND EXTRACT(YEAR FROM transactions_1k.Date) = 2012 AND EXTRACT(MONTH FROM transactions_1k.Date) = 1;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description AS full_name, SUM(transactions_1k.Amount) AS total_sold FROM products JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY total_sold DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT c.CustomerID, AVG(p.Price / t.Amount) AS avg_price_per_item, c.Currency FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth ym ON c.CustomerID = ym.CustomerID WHERE t.Amount > 1000 GROUP BY c.CustomerID, c.Currency ORDER BY avg_price_per_item DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT T3.Country FROM transactions_1k AS T1 JOIN products AS T2 ON T1.ProductID = T2.ProductID JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID JOIN customers AS T4 ON T1.CustomerID = T4.CustomerID WHERE T2.ProductID = 2 GROUP BY T3.Country ORDER BY MAX(T1.Amount) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, ym.Consumption FROM customers c JOIN yearmonth ym ON c.CustomerID = ym.CustomerID JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID JOIN products p ON t1k.ProductID = p.ProductID JOIN transactions_1k t2k ON t1k.CustomerID = t2k.CustomerID AND t1k.ProductID = t2k.ProductID AND t2k.Amount > 29 WHERE p.ProductID = 5 AND MONTH(t2k.Date) = 8 AND YEAR(t2k.Date) = 2012 GROUP BY c.CustomerID, ym.Consumption ORDER BY c.CustomerID, ym.Date;\t----- bird -----\tdebit_card_specializing"
}