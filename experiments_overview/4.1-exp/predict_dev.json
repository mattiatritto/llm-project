{
    "0": "SELECT MAX(FRPM_Count_K12) AS max_FRPM_Count_K12 FROM satscores WHERE rtype = 'K12' AND sname ='satscores' AND dname ='satscores' AND cname ='satscores' AND enroll12 = 'enroll12' AND NumTstTakr = 'NumTstTakr' AND AvgScrRead = 'AvgScrRead' AND AvgScrMath = 'AvgScrMath' AND AvgScrWrite = 'AvgScrWrite' AND NumGE1500 = 'NumGE1500';\t----- bird -----\tcalifornia_schools",
    "1": "SELECT cds, avg_scr_read, avg_scr_math, avg_scr_write, num_ge1500 FROM satscores WHERE rtype = 'SAT' AND sname = 'Math' AND dname = 'Algebra I' AND cname = 'Continuation' AND enroll12 > 0 AND NumTstTakr > 0 AND AvgScrRead > 0 AND AvgScrMath > 0 AND AvgScrWrite > 0 AND NumGE1500 > 0 AND 2013-14 CALPADS Fall 1 Certification Status = 1;\t----- bird -----\tcalifornia_schools",
    "2": "SELECT schools.zip FROM schools WHERE schools.Charter = 1;\t----- bird -----\tcalifornia_schools",
    "3": "SELECT s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s WHERE s.CDSCode = (SELECT CDSCode FROM frpm WHERE FRPMCount = (SELECT MAX(FRPMCount) FROM frpm));\t----- bird -----\tcalifornia_schools",
    "4": "SELECT s.phone FROM schools s WHERE s.Charter = 1 AND s.OpenDate > '2000-01-01' AND s.ClosedDate IS NULL;\t----- bird -----\tcalifornia_schools",
    "5": "SELECT COUNT(*) FROM satscores WHERE AvgScrMath > 400 AND Charter = 0 AND Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "6": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.NumTstTakr > 500 AND s.Magnet = 1;\t----- bird -----\tcalifornia_schools",
    "7": "SELECT s.phone, s.enroll12, s.NumTstTakr, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrRead > 1500 ORDER BY sc.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "8": "SELECT MAX(NumTstTakr) AS max_num_test_takers FROM satscores WHERE cds IN (SELECT CDSCode FROM frpm WHERE FRPMCount (K-12) = (SELECT MAX(FRPMCount (K-12)) FROM frpm));\t----- bird -----\tcalifornia_schools",
    "9": "SELECT COUNT(*) FROM satscores WHERE rtype = 'SAT' AND AvgScrMath > 560 AND Charter = 1;\t----- bird -----\tcalifornia_schools",
    "10": "SELECT s.CDSCode, s.AvgScrRead, s.FRPMCount (Ages 5-17) AS FRPM_Count_5_17 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE sc.rtype = 'SAT' AND sc.sname = 'Reading' AND sc.cname = 'SAT' GROUP BY s.CDSCode, s.AvgScrRead ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM schools WHERE (Enrollment (K-12) + Enrollment (Ages 5-17)) > 500;\t----- bird -----\tcalifornia_schools",
    "12": "SELECT MAX(FRPM_Count_Ages_5_17) AS max_FRPM_Count_Ages_5_17 FROM satscores WHERE cds = (SELECT CDSCode FROM frpm WHERE SAT_Excellence_Rate > 0.3);\t----- bird -----\tcalifornia_schools",
    "13": "SELECT s.Phone, s.CDSCode FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, COUNT(*) AS NumGE1500, COUNT(*) AS NumTstTakr FROM satscores GROUP BY CDSCode ) t ON s.CDSCode = t.CDSCode WHERE t.NumGE1500 / t.NumTstTakr >= 0.3 ORDER BY t.NumGE1500 / t.NumTstTakr DESC LIMIT 3;\t----- bird -----\tcalifornia_schools",
    "14": "SELECT CDSCode, Enrollment (Ages 5-17) AS popularity FROM schools ORDER BY popularity DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "15": "SELECT CDSCode, AVG(AvgScrRead) AS avg_reading_score FROM satscores WHERE rtype = 'Reading' GROUP BY CDSCode ORDER BY avg_reading_score DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "16": "SELECT COUNT(*) FROM schools WHERE NumTstTakr < 100 AND CDSCode IN (SELECT CDSCode FROM frpm WHERE Academic Year = '2013-14' AND District Code = 100000000);\t----- bird -----\tcalifornia_schools",
    "17": "SELECT s.CDSCode, s.AvgScrWrite AS avg_write, s.CharterNum AS charter_num FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrWrite > 499 AND sch.Charter = 1 ORDER BY avg_write DESC;\t----- bird -----\tcalifornia_schools",
    "18": "SELECT COUNT(*) FROM schools WHERE CDSCode = 'FRESNO' AND NumTstTakr <= 250 AND StatusType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "19": "SELECT s.phone, s.AvgScrMath AS avg_math_score FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE sc.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE s.CDSCode = sc.cds);\t----- bird -----\tcalifornia_schools",
    "20": "SELECT COUNT(*) FROM schools WHERE LowGrade = '9' AND HighGrade = '12' AND CDSCode = 'AMAD';\t----- bird -----\tcalifornia_schools",
    "21": "SELECT COUNT(*) FROM satscores WHERE cds = 'frpm' AND rtype = 'K-12' AND NumTstTakr > 500 AND NumTstTakr < 700 AND AvgScrRead > 0 AND AvgScrMath > 0 AND AvgScrWrite > 0 AND NumGE1500 > 0;\t----- bird -----\tcalifornia_schools",
    "22": "SELECT CDSCode, MAX(NumTstTakr) AS max_num_test_takers FROM satscores GROUP BY CDSCode;\t----- bird -----\tcalifornia_schools",
    "23": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN ( SELECT CDSCode, COUNT(*) AS diff FROM satscores GROUP BY CDSCode HAVING COUNT(*) > 30 ) diff ON s.CDSCode = diff.CDSCode WHERE s.Enrollment (K-12) - s.Enrollment (Ages 5-17) > 30 ORDER BY diff DESC;\t----- bird -----\tcalifornia_schools",
    "24": "SELECT s.CDSCode, s.Percent, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.Percent >= 0.1 AND sc.AvgScrRead >= 1500;\t----- bird -----\tcalifornia_schools",
    "25": "SELECT s.CDSCode, s.FundingType FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.AvgScrMath > 400 GROUP BY s.CDSCode, s.FundingType HAVING COUNT(*) > 0;\t----- bird -----\tcalifornia_schools",
    "26": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s WHERE s.NCESDist = 'Monterey' AND s.NCESSchool = 'High School' AND s.StatusType = 'Open' AND s.County = 'Monterey' AND s.District = 'Monterey' AND s.School = 'High School' AND s.Street = 'Street' AND s.StreetAbr = 'Street Abr' AND s.City = 'City' AND s.Zip = 'Zip' AND s.State = 'State' AND s.MailStreet = 'Mail Street' AND s.MailStrAbr = 'Mail Street Abr' AND s.MailCity = 'Mail City' AND s.MailZip = 'Mail Zip' AND s.MailState = 'Mail State' AND s.Phone = 'Phone' AND s.Ext = 'Ext' AND s.Website = 'Website' AND s.OpenDate = 'Open Date' AND s.ClosedDate = 'Closed Date' AND s.Charter = 1 AND s.CharterNum = 'Charter Num' AND s.FundingType = 'Funding Type' AND s.DOC = 'DOC' AND s.DOCType = 'DOC Type' AND s.SOC = 'SOC' AND s.SOCType = 'SOC Type' AND s.EdOpsCode = 'EdOps Code' AND s.EdOpsName = 'EdOps Name' AND s.EILCode = 'EIL Code' AND s.EILName = 'EIL Name' AND s.GSoffered = 'GSoffered' AND s.GSserved = 'GSserved' AND s.Virtual = 'Virtual' AND s.Magnet = 1 AND s.Latitude = 'Latitude' AND s.Longitude = 'Longitude' AND s.AdmFName1 = 'AdmFName1' AND s.AdmLName1 = 'AdmLName1' AND s.AdmEmail1 = 'AdmEmail1' AND s.AdmFName2 = 'AdmFName2' AND s.AdmLName2 = 'AdmLName2' AND s.AdmEmail2 = 'AdmEmail2' AND s.AdmFName3 = 'AdmFName3' AND s.AdmLName3 = 'AdmLName3' AND s.AdmEmail3 = 'AdmEmail3' AND s.LastUpdate = 'Last Update' AND s.Enrollment (Ages 5-17) > 800 AND s.Free Meal Count (Ages 5-17) > 800;\t----- bird -----\tcalifornia_schools",
    "27": "SELECT s.cname, s.AvgScrWrite AS avg_write_score FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01' GROUP BY s.cname;\t----- bird -----\tcalifornia_schools",
    "28": "SELECT s.CDSCode, s.DOCType FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.rtype = 'K-12' AND ss.dname = 'Local' GROUP BY s.CDSCode, s.DOCType HAVING MAX(ss.AvgScrRead) - MIN(ss.AvgScrRead) > (SELECT AVG(ss.AvgScrRead) FROM satscores ss WHERE ss.rtype = 'K-12' AND ss.dname = 'Local')\t----- bird -----\tcalifornia_schools",
    "29": "SELECT MAX(enroll12) AS max_enrollment FROM schools WHERE StatusType = 'Open';\t----- bird -----\tcalifornia_schools",
    "30": "SELECT CDSCode, COUNT(*) AS enrollment_count FROM schools WHERE District = 'District Name' AND School = 'School Name' AND Grade = 'Grade' GROUP BY CDSCode ORDER BY enrollment_count DESC LIMIT 5;\t----- bird -----\tcalifornia_schools",
    "31": "[SQL] SELECT s.CDSCode, s.Enrollment (K-12), s.Free Meal Count (K-12), s.Percent (%) Eligible Free (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Open' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.County = 'County 1' AND s.District = 'District 1' AND s.School = 'School 1' AND s.Count\t----- bird -----\tcalifornia_schools",
    "32": "[SQL] SELECT s.CDSCode, s.Enrollment (K-12), s.FRPM Count (K-12), s.Percent (%) Eligible FRPM (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.OwnershipCode = 66 AND sc.rtype = 'SAT' AND sc.sname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.dname = 'SAT' AND sc.cname = 'SAT' AND sc.d\t----- bird -----\tcalifornia_schools",
    "33": "SELECT s.cname, s.enroll12, s.NumTstTakr, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE sch.StatusType = 'Open' AND sch.ClosedDate IS NULL AND sch.NCESDist = '00000' AND sch.NCESSchool = '00000' AND sch.District = '00000' AND sch.School = '00000' AND sch.Street = '00000' AND sch.StreetAbr = '00000' AND sch.City = '00000' AND sch.Zip = '00000' AND sch.State = '00000' AND sch.MailStreet = '00000' AND sch.MailStrAbr = '00000' AND sch.MailCity = '00000' AND sch.MailZip = '00000' AND sch.MailState = '00000' AND sch.Phone = '00000' AND sch.Ext = '00000' AND sch.Website = '00000' AND sch.OpenDate = '2022-01-01' AND sch.ClosedDate IS NULL AND sch.Charter = 0 AND sch.CharterNum IS NULL AND sch.FundingType = 'Public' AND sch.DOC = '00000' AND sch.DOCType = 'Public' AND sch.SOC = '00000' AND sch.SOCType = 'Public' AND sch.EdOpsCode = '00000' AND sch.EdOpsName = '00000' AND sch.EILCode = '00000' AND sch.EILName = '00000' AND sch.GSoffered = '00000' AND sch.GSserved = '00000' AND sch.Virtual = '00000' AND sch.Magnet = 0 AND sch.Latitude = 0 AND sch.Longitude = 0 AND sch.AdmFName1 = '00000' AND sch.AdmLName1 = '00000' AND sch.AdmEmail1 = '00000' AND sch.AdmFName2 = '00000' AND sch.AdmLName2 = '00000' AND sch.AdmEmail2 = '00000' AND sch.AdmFName3 = '00000' AND sch.AdmLName3 = '00000' AND sch.AdmEmail3 = '00000' AND sch.LastUpdate = '2022-01-01' AND s.AvgScrRead BETWEEN 1900 AND 2000 AND s.AvgScrMath BETWEEN 1900 AND 2000 AND s.AvgScrWrite BETWEEN 1900 AND 2000 AND s.NumGE1500 BETWEEN 1900 AND 2000;\t----- bird -----\tcalifornia_schools",
    "34": "SELECT AVG(FRPM_Count_Ages_5_17) AS avg_FRPM_Count_Ages_5_17 FROM satscores WHERE cds = (SELECT CDSCode FROM schools WHERE CDSCode = 'KACEY GIBSON');\t----- bird -----\tcalifornia_schools",
    "35": "SELECT admfname1, admlname1, admemail1 FROM schools WHERE county = 'San Francisco' AND district = 'San Francisco Unified School District' AND school = 'San Francisco Unified School District' AND status = 'Charter' AND charter = 1 AND charternum = '1' AND fundingtype = 'Charter' AND doc = 'San Francisco Unified School District' AND doctype = 'Charter' AND soc = 'San Francisco Unified School District' AND soctype = 'Charter' AND edopscode = 'San Francisco Unified School District' AND edopsname = 'San Francisco Unified School District' AND eilcode = 'San Francisco Unified School District' AND eilname = 'San Francisco Unified School District' AND gsoffered = 'Yes' AND gsserved = 'Yes' AND virtual = 'No' AND magnet = 0 AND latitude = 37.7749 AND longitude = -122.4194 AND admfname1 = 'John Doe' AND admlname1 = 'Doe' AND admemail1 = 'johndoe@sanfrancisco.edu';\t----- bird -----\tcalifornia_schools",
    "36": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE ss.AvgScrRead >= 1500 AND ss.AvgScrMath >= 1500 AND ss.AvgScrWrite >= 1500 GROUP BY s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate ORDER BY MAX(ss.AvgScrRead) DESC, MAX(ss.AvgScrMath) DESC, MAX(ss.AvgScrWrite) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "37": "SELECT s.Street, s.City, s.Zip, s.State FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, COUNT(*) AS NumGE1500, COUNT(*) AS NumTstTakr FROM satscores GROUP BY CDSCode ) sc_count ON s.CDSCode = sc_count.CDSCode WHERE sc_count.NumGE1500 / sc_count.NumTstTakr = (SELECT MIN(NumGE1500 / NumTstTakr) FROM (SELECT CDSCode, COUNT(*) AS NumGE1500, COUNT(*) AS NumTstTakr FROM satscores GROUP BY CDSCode) sc_count) ORDER BY sc_count.NumGE1500 / sc_count.NumTstTakr DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "38": "SELECT * FROM schools WHERE CDSCode = (SELECT CDSCode FROM satscores WHERE rtype = 'SAT' AND sname = 'California' AND dname = 'Los Angeles' AND cname = 'Los Angeles' AND enroll12 BETWEEN 2000 AND 3000);\t----- bird -----\tcalifornia_schools",
    "39": "SELECT AVG(NumTstTakr) AS avg_num_test_takers FROM satscores WHERE cds IN (SELECT CDSCode FROM frpm WHERE Academic Year = '1980' AND OpenDate BETWEEN '1980-01-01' AND '1980-12-31');\t----- bird -----\tcalifornia_schools",
    "40": "SELECT s.phone FROM satscores s JOIN schools sch ON s.cds = sch.CDSCode WHERE s.AvgScrRead = (SELECT MIN(AvgScrRead) FROM satscores s2 JOIN schools sch2 ON s2.cds = sch2.CDSCode WHERE sch2.NCESDist = 'Fresno Unified') AND sch.StatusType = 'Open';\t----- bird -----\tcalifornia_schools",
    "41": "SELECT s.CDSCode, s.AvgScrRead, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN ( SELECT CDSCode, COUNT(*) AS popularity FROM satscores GROUP BY CDSCode ORDER BY popularity DESC LIMIT 5 ) p ON s.CDSCode = p.CDSCode WHERE s.Virtual = 'F' AND s.NCESDist = 'County' AND s.NCESSchool = 'School' AND s.StatusType = 'Open' AND s.County = 'County' AND s.District = 'District' AND s.School = 'School' AND s.Street = 'Street' AND s.StreetAbr = 'StreetAbr' AND s.City = 'City' AND s.Zip = 'Zip' AND s.State = 'State' AND s.MailStreet = 'MailStreet' AND s.MailStrAbr = 'MailStrAbr' AND s.MailCity = 'MailCity' AND s.MailZip = 'MailZip' AND s.MailState = 'MailState' AND s.Phone = 'Phone' AND s.Ext = 'Ext' AND s.Website = 'Website' AND s.OpenDate = 'OpenDate' AND s.ClosedDate = 'ClosedDate' AND s.Charter = 'Charter' AND s.CharterNum = 'CharterNum' AND s.FundingType = 'FundingType' AND s.DOC = 'DOC' AND s.DOCType = 'DOCType' AND s.SOC = 'SOC' AND s.SOCType = 'SOCType' AND s.EdOpsCode = 'EdOpsCode' AND s.EdOpsName = 'EdOpsName' AND s.EILCode = 'EILCode' AND s.EILName = 'EILName' AND s.GSoffered = 'GSoffered' AND s.GSserved = 'GSserved' AND s.Virtual = 'Virtual' AND s.Magnet = 'Magnet' AND s.Latitude = 'Latitude' AND s.Longitude = 'Longitude' AND s.AdmFName1 = 'AdmFName1' AND s.AdmLName1 = 'AdmLName1' AND s.AdmEmail1 = 'AdmEmail1' AND s.AdmFName2 = 'AdmFName2' AND s.AdmLName2 = 'AdmLName2' AND s.AdmEmail2 = 'AdmEmail2' AND s.AdmFName3 = 'AdmFName3' AND s.AdmLName3 = 'AdmLName3' AND s.AdmEmail3 = 'AdmEmail3' AND s.LastUpdate = 'LastUpdate'\t----- bird -----\tcalifornia_schools",
    "42": "SELECT satscores.rtype, satscores.sname, satscores.dname, satscores.cname, satscores.enroll12, satscores.NumTstTakr, satscores.AvgScrRead, satscores.AvgScrMath, satscores.AvgScrWrite, satscores.NumGE1500 FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.StatusType = 'Open' AND schools.NCESDist = '00000' AND schools.NCESSchool = '00000' AND schools.District = '00000' AND schools.School = '00000' AND schools.Street = '00000' AND schools.StreetAbr = '00000' AND schools.City = '00000' AND schools.Zip = '00000' AND schools.State = '00000' AND schools.MailStreet = '00000' AND schools.MailStrAbr = '00000' AND schools.MailCity = '00000' AND schools.MailZip = '00000' AND schools.MailState = '00000' AND schools.Phone = '00000' AND schools.Ext = '00000' AND schools.Website = '00000' AND schools.OpenDate = '2022-01-01' AND schools.ClosedDate = '2022-12-31' AND schools.Charter = 0 AND schools.CharterNum = '00000' AND schools.FundingType = 'Public' AND schools.DOC = '00000' AND schools.DOCType = 'Public' AND schools.SOC = '00000' AND schools.SOCType = 'Public' AND schools.EdOpsCode = '00000' AND schools.EdOpsName = '00000' AND schools.EILCode = '00000' AND schools.EILName = '00000' AND schools.GSoffered = '00000' AND schools.GSserved = '00000' AND schools.Virtual = '00000' AND schools.Magnet = 0 AND schools.Latitude = 0 AND schools.Longitude = 0 AND schools.AdmFName1 = '00000' AND schools.AdmLName1 = '00000' AND schools.AdmEmail1 = '00000' AND schools.AdmFName2 = '00000' AND schools.AdmLName2 = '00000' AND schools.AdmEmail2 = '00000' AND schools.AdmFName3 = '00000' AND schools.AdmLName3 = '00000' AND schools.AdmEmail3 = '00000' AND schools.LastUpdate = '2022-01-01' WHERE satscores.rtype = 'Math' AND satscores.sname = 'School Name' AND satscores.dname = 'District Name' AND satscores.cname = 'School Code' AND satscores.enroll12 = 1000 AND satscores.NumTstTakr = 500 AND satscores.AvgScrRead = 90 AND satscores.AvgScrMath = 95 AND satscores.AvgScrWrite = 90 AND satscores.NumGE1500 = 100 ORDER BY satscores.AvgScrMath DESC;\t----- bird -----\tcalifornia_schools",
    "43": "SELECT s.CDSCode, s.AvgScrMath, s.AvgScrRead, s.AvgScrWrite, s.AvgScrTotal FROM satscores s JOIN schools s2 ON s.cds = s2.CDSCode WHERE s2.StatusType = 'Open' AND s2.County = 'San Francisco' GROUP BY s.CDSCode ORDER BY s.AvgScrTotal DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "44": "SELECT s.cname, s.AvgScrWrite, s.NumGE1500, s.AvgScrRead, s.AvgScrMath, s.NumTstTakr, s.CDSCode, s.NCESDist, s.NCESSchool, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM satscores s WHERE s.NumTstTakr = (SELECT MAX(NumTstTakr) FROM satscores) AND s.AvgScrWrite >= 1500 AND s.CDSCode IN (SELECT CDSCode FROM frpm WHERE NumGE1500 = (SELECT MAX(NumGE1500) FROM frpm));\t----- bird -----\tcalifornia_schools",
    "45": "SELECT s.CDSCode, AVG(s.AvgScrWrite) AS avg_writing_score FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Active' AND s.Charter = 0 GROUP BY s.CDSCode;\t----- bird -----\tcalifornia_schools",
    "46": "SELECT CDSCode, SUM(Enrollment (K-12)) AS total_enrollment FROM satscores GROUP BY CDSCode ORDER BY total_enrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "47": "SELECT COUNT(*) FROM schools WHERE CDSCode = '52' AND OpenDate >= '1980-01-01' AND OpenDate <= '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "48": "[SQL] SELECT COUNT(*) FROM schools WHERE (DOC = 52 AND (CDSCodet----- bird -----\tcalifornia_schools",
    "49": "SELECT s.CDSCode, s.ClosedDate, s.SchoolName FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds WHERE s.StatusType = 'Closed' GROUP BY s.CDSCode, s.ClosedDate, s.SchoolName ORDER BY s.ClosedDate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "50": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s WHERE s.AvgScrMath = (SELECT MAX(AvgScrMath) FROM schools) ORDER BY s.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "51": "SELECT s.cname, s.enroll12, s.AvgScrRead, s.AvgScrMath, s.AvgScrWrite, s.NumGE1500 FROM satscores s JOIN schools s2 ON s.cds = s2.CDSCode WHERE s2.StatusType = 'Open' AND s2.School = 'School Name' ORDER BY s.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "52": "SELECT COUNT(*) FROM schools WHERE NumGE1500 >= 1500 AND City = 'Lakeport';\t----- bird -----\tcalifornia_schools",
    "53": "SELECT COUNT(*) FROM schools WHERE City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "54": "[SQL] SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.rtype = 'SAT' AND ss.sname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Avetik Atoian' AND ss.cname = 'Av\t----- bird -----\tcalifornia_schools",
    "55": "SELECT ratio FROM (SELECT count(schools in Colusa) AS colusa_count, count(schools in Humboldt) AS humboldt_count FROM schools WHERE state = 'CA' AND mailing_state = 'CA') AS school_counts WHERE colusa_count > 0 AND humboldt_count > 0;\t----- bird -----\tcalifornia_schools",
    "56": "SELECT COUNT(*) FROM schools WHERE State = 'California' AND City = 'San Joaquin' AND StatusType = 'Active';\t----- bird -----\tcalifornia_schools",
    "57": "SELECT s.phone, s.ext FROM schools s WHERE s.enroll12 = (SELECT MAX(enroll12) FROM schools WHERE s.enroll12 > 333);\t----- bird -----\tcalifornia_schools",
    "58": "SELECT phone, ext FROM schools WHERE zip = '95203-3704';\t----- bird -----\tcalifornia_schools",
    "59": "SELECT s.website FROM schools s WHERE s.StatusType = 'Active' AND s.CDSCode IN (SELECT cds FROM satscores WHERE rtype = 'SAT' AND sname = 'Mike Larson' AND dname = 'Dante Alvarez');\t----- bird -----\tcalifornia_schools",
    "60": "[SQL] SELECT s.website FROM schools s WHERE s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType = 'Charter' AND s.DOC = 'Charter' AND s.SOC = 'Charter' AND s.EdOpsCode = 'Charter' AND s.EILCode = 'Charter' AND s.GSoffered = 'Charter' AND s.GSserved = 'Charter' AND s.Virtual = 'P' AND s.Charter = 1 AND s.CharterNum IS NOT NULL AND s.FundingType\t----- bird -----\tcalifornia_schools",
    "61": "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND CDSCode = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "62": "SELECT COUNT(*) FROM schools WHERE Charter = 0 AND (SELECT COUNT(*) FROM satscores WHERE cds = schools.CDSCode AND rtype = 'K-12' AND NumTstTakr > 0) / (SELECT COUNT(*) FROM satscores WHERE cds = schools.CDSCode AND rtype = 'K-12') < 0.0018;\t----- bird -----\tcalifornia_schools",
    "63": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s WHERE s.Charter = 1 AND s.CharterNum = '00D2';\t----- bird -----\tcalifornia_schools",
    "64": "SELECT COUNT(*) FROM schools WHERE CDSCode = '00D4' AND MailCity = 'Hickman';\t----- bird -----\tcalifornia_schools",
    "65": "SELECT (SELECT COUNT(*) FROM satscores WHERE rtype = 'Locally Funded' AND cds = 'Santa Clara') / (SELECT COUNT(*) FROM satscores WHERE cds = 'Santa Clara') * 100 AS ratio FROM schools WHERE CDSCode = 'Santa Clara';\t----- bird -----\tcalifornia_schools",
    "66": "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly Funded';\t----- bird -----\tcalifornia_schools",
    "67": "SELECT SUM(CASE WHEN satscores.rtype = 'SAT' AND satscores.sname = 'SAT' AND satscores.dname = 'SAT' AND satscores.cname = 'SAT' AND satscores.enroll12 > 0 THEN 1 ELSE 0 END) AS total_sat_scores FROM satscores WHERE satscores.cds = 'frpm' AND satscores.rtype IN ('SAT', 'ACT', 'PSAT') AND satscores.sname IN ('SAT', 'ACT', 'PSAT') AND satscores.dname IN ('SAT', 'ACT', 'PSAT') AND satscores.cname IN ('SAT', 'ACT', 'PSAT') AND satscores.enroll12 > 0;\t----- bird -----\tcalifornia_schools",
    "68": "SELECT CDSCode, COUNT(*) AS num_closures FROM schools WHERE YEAR(OpenDate) BETWEEN 1980 AND 1989 AND StatusType = 'Youth Authority Facilities (CEA)' GROUP BY CDSCode ORDER BY num_closures DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "69": "SELECT DISTINCT CDSCode FROM schools WHERE SOC = 31;\t----- bird -----\tcalifornia_schools",
    "70": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Active' AND County = 'Alpine';\t----- bird -----\tcalifornia_schools",
    "71": "SELECT CDSCode FROM schools WHERE Magnet = 0 AND District = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "72": "[SQL] SELECT SUM(FRPM_Count) AS total_FRPM_Count FROM satscores WHERE cds = 'Fremont' AND rtype = 'FRPM' AND sname = 'State Special School' AND dname = 'Fremont' AND cname = 'Fremont' AND enroll12 >= 5 AND enroll12 <= 17 AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname = 'Fremont' AND cname = 'Fremont' AND dname =\t----- bird -----\tcalifornia_schools",
    "73": "SELECT * FROM schools WHERE CDSCode = 'Youth Authority School' AND Street = 'PO Box 1040';\t----- bird -----\tcalifornia_schools",
    "74": "SELECT MAX(LowGrade) AS max_low_grade FROM schools WHERE EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools",
    "75": "[SQL] SELECT s.school_name, s.ed_level_name FROM schools s JOIN satscores sc ON s.cds = sc.cds JOIN frpm f ON s.cds = f.cds WHERE sc.rtype = 'SAT' AND sc.sname = '2013-14' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname = 'SAT' AND sc.cname =\t----- bird -----\tcalifornia_schools",
    "76": "[SQL] SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE f.Academic Year = '2013-14' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Merced' AND f.District Type = 'High School' AND f.District Name = 'Mer\t----- bird -----\tcalifornia_schools",
    "77": "SELECT s.CDSCode, s.NCESDist, s.NCESSchool, s.StatusType, s.County, s.District, s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State, s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState, s.Phone, s.Ext, s.Website, s.OpenDate, s.ClosedDate, s.Charter, s.CharterNum, s.FundingType, s.DOC, s.DOCType, s.SOC, s.SOCType, s.EdOpsCode, s.EdOpsName, s.EILCode, s.EILName, s.GSoffered, s.GSserved, s.Virtual, s.Magnet, s.Latitude, s.Longitude, s.AdmFName1, s.AdmLName1, s.AdmEmail1, s.AdmFName2, s.AdmLName2, s.AdmEmail2, s.AdmFName3, s.AdmLName3, s.AdmEmail3, s.LastUpdate, s.FRPMCount(Ages 5-17) / s.Enrollment(Ages 5-17) * 100 AS PercentEligibleFRPM FROM schools s WHERE s.NCESDist = 'Los Angeles' AND s.NCESSchool LIKE 'K-9%' AND s.StatusType = 'Open' AND s.County = 'Los Angeles' AND s.District = 'Los Angeles' AND s.School = 'Los Angeles' AND s.Street LIKE 'K-9%' AND s.StreetAbr LIKE 'K-9%' AND s.City LIKE 'K-9%' AND s.Zip LIKE 'K-9%' AND s.State LIKE 'K-9%' AND s.MailStreet LIKE 'K-9%' AND s.MailStrAbr LIKE 'K-9%' AND s.MailCity LIKE 'K-9%' AND s.MailZip LIKE 'K-9%' AND s.MailState LIKE 'K-9%' AND s.Phone LIKE 'K-9%' AND s.Ext LIKE 'K-9%' AND s.Website LIKE 'K-9%' AND s.OpenDate LIKE 'K-9%' AND s.ClosedDate LIKE 'K-9%' AND s.Charter = 1 AND s.CharterNum LIKE 'K-9%' AND s.FundingType LIKE 'K-9%' AND s.DOC LIKE 'K-9%' AND s.DOCType LIKE 'K-9%' AND s.SOC LIKE 'K-9%' AND s.SOCType LIKE 'K-9%' AND s.EdOpsCode LIKE 'K-9%' AND s.EdOpsName LIKE 'K-9%' AND s.EILCode LIKE 'K-9%' AND s.EILName LIKE 'K-9%' AND s.GSoffered LIKE 'K-9%' AND s.GSserved LIKE 'K-9%' AND s.Virtual LIKE 'K-9%' AND s.Magnet = 1 AND s.Latitude LIKE 'K-9%' AND s.Longitude LIKE 'K-9%' AND s.AdmFName1 LIKE 'K-9%' AND s.AdmLName1 LIKE 'K-9%' AND s.AdmEmail1 LIKE 'K-9%' AND s.AdmFName2 LIKE 'K-9%' AND s.AdmLName2 LIKE 'K-9%' AND s.AdmEmail2 LIKE 'K-9%' AND s.AdmFName3 LIKE 'K-9%' AND s.AdmLName3 LIKE 'K-9%' AND s.AdmEmail3 LIKE 'K-9%' AND s.LastUpdate LIKE 'K-9%' ORDER BY s.LastUpdate DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "78": "SELECT COUNT(*) AS count, CDSCode FROM schools WHERE CDSCode = 'ADELANTO' AND EILCode = 'EIL' AND Latitude > 34.2 AND Latitude < 34.3 AND Longitude > -115.8 AND Longitude < -115.7;\t----- bird -----\tcalifornia_schools",
    "79": "SELECT COUNT(*) AS count FROM schools WHERE Charter = 0 AND Virtual = 1 AND (EdOpsCode = 'SD' OR EdOpsCode = 'SB') AND (EILCode = 'SD' OR EILCode = 'SB');\t----- bird -----\tcalifornia_schools",
    "80": "SELECT s.CDSCode, s.School, s.Latitude FROM schools s JOIN ( SELECT CDSCode, MAX(Latitude) AS max_latitude FROM schools GROUP BY CDSCode ) max_latitudes ON s.CDSCode = max_latitudes.CDSCode WHERE s.Latitude = max_latitudes.max_latitude;\t----- bird -----\tcalifornia_schools",
    "81": "SELECT s.CDSCode, s.Latitude, s.Longitude, s.SchoolName FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.Latitude = (SELECT MIN(s2.Latitude) FROM schools s2) AND s.Longitude = (SELECT MIN(s2.Longitude) FROM schools s2) AND f.FRPMCount (K-12) = (SELECT MIN(f2.FRPMCount (K-12)) FROM satscores sc2, frpm f2 WHERE sc2.cds = f2.CDSCode) AND f.FRPMCount (Ages 5-17) = (SELECT MIN(f2.FRPMCount (Ages 5-17)) FROM satscores sc2, frpm f2 WHERE sc2.cds = f2.CDSCode) ORDER BY s.Latitude DESC, s.Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "82": "SELECT s.cname, s.cname AS grade_span FROM schools s WHERE s.Longitude = (SELECT MAX(Longitude) FROM schools);\t----- bird -----\tcalifornia_schools",
    "83": "SELECT COUNT(*) FROM schools WHERE Magnet = 1 AND GradeSpan BETWEEN 'Kindergarten' AND '8th grade' AND NCSLType = 'Multiple Provision Types';\t----- bird -----\tcalifornia_schools",
    "84": "[SQL] SELECT s.FirstName, s.LastName, s.District FROM schools s JOIN satscores ss ON s.CDSCode = ss.cds WHERE ss.rtype = 'SAT' AND ss.sname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment' AND ss.cname = 'California Statewide Assessment'\t----- bird -----\tcalifornia_schools",
    "85": "SELECT s.CDSCode, s.Percent (%) Eligible Free (K-12) FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.StatusType = 'Active' AND s.Charter = 0 AND s.CharterNum IS NULL AND s.FundingType = 'Public' AND s.DOCType = 'Public' AND s.SOCType = 'Public' AND s.EdOpsCode = 'Public' AND s.EILName = 'Public' AND s.GSoffered = 'Public' AND s.GSserved = 'Public' AND s.Virtual = 'Public' AND s.Magnet = 0 AND s.AdmFName1 = 'Alusine' AND s.AdmLName1 = 'Alusine' AND s.AdmEmail1 = 'Alusine@example.com' AND s.AdmFName2 = 'Alusine' AND s.AdmLName2 = 'Alusine' AND s.AdmEmail2 = 'Alusine@example.com' AND s.AdmFName3 = 'Alusine' AND s.AdmLName3 = 'Alusine' AND s.AdmEmail3 = 'Alusine@example.com' AND s.LastUpdate = '2023-01-01';\t----- bird -----\tcalifornia_schools",
    "86": "[SQL] SELECT s.LastName, s.FirstName, s.MiddleName, s.Title, s.Department, s.Office, s.OfficePhone, s.OfficeFax, s.OfficeEmail, s.OfficeHours, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s.OfficeHoursDescription, s.OfficeHoursStart, s.OfficeHoursEnd, s\t----- bird -----\tcalifornia_schools",
    "87": "SELECT DISTINCT adm_email FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City Unified' AND (open_date BETWEEN '2009-01-01' AND '2010-12-31') AND (ed_ops_code = '62' OR ed_ops_code = '54') AND (doc_type = 'Unified School' OR doc_type = 'Public Intermediate/Middle School') AND (soc_type = 'Unified School' OR soc_type = 'Public Intermediate/Middle School');\t----- bird -----\tcalifornia_schools",
    "88": "SELECT s.AdmFName1 AS administrator_name, s.AdmEmail1 AS administrator_email FROM schools s JOIN satscores sc ON s.CDSCode = sc.cds JOIN ( SELECT CDSCode, COUNT(*) AS num_test_takers FROM satscores GROUP BY CDSCode HAVING COUNT(*) >= 1500 ) t ON s.CDSCode = t.CDSCode WHERE s.StatusType = 'Open' AND s.ClosedDate IS NULL ORDER BY num_test_takers DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "89": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'POPLATEK PO OBRATU' AND A1 = 'EAST BOHEMIA');\t----- bird -----\tfinancial",
    "90": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Prague');\t----- bird -----\tfinancial",
    "91": "SELECT A12, A13 FROM district WHERE A12 = (SELECT MAX(A12) FROM district);\t----- bird -----\tfinancial",
    "92": "SELECT district_id FROM district WHERE A11 > 6000 AND A11 < 10000;\t----- bird -----\tfinancial",
    "93": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = 1 AND average_salary > 8000;\t----- bird -----\tfinancial",
    "94": "SELECT DISTINCT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC LIMIT 1; SELECT MAX(a.average_salary) AS max_avg_salary FROM ( SELECT AVG(a.salary) AS average_salary FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' GROUP BY a.district_id ) AS subquery; SELECT (MAX(a.average_salary) - MIN(a.average_salary)) AS gap FROM ( SELECT AVG(a.salary) AS average_salary FROM account a JOIN client c ON a.district_id = c.district_id WHERE c.gender = 'F' GROUP BY a.district_id ) AS subquery;\t----- bird -----\tfinancial",
    "95": "SELECT account_id, AVG(salary) AS avg_salary FROM client JOIN district ON client.district_id = district.district_id JOIN loan ON loan.account_id = client.account_id GROUP BY client.account_id ORDER BY avg_salary DESC LIMIT 1;\t----- bird -----\tfinancial",
    "96": "SELECT COUNT(*) FROM client WHERE gender = 'Owner' AND district_id = (SELECT district_id FROM account WHERE frequency = 'weekly');\t----- bird -----\tfinancial",
    "97": "SELECT DISTINCT client_id FROM client WHERE gender ='male' AND birth_date > '1990-01-01' AND district_id IN (SELECT district_id FROM account WHERE frequency ='monthly');\t----- bird -----\tfinancial",
    "98": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date, c.client_id, c.gender, c.birth_date, d.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, l.loan_id, l.account_id, l.date, l.amount, l.duration, l.payments, l.status, o.order_id, o.account_id, o.bank_to, o.account_to, o.amount, o.k_symbol, t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM account a JOIN card c ON a.district_id = c.disp_id JOIN client d ON a.district_id = d.district_id JOIN loan l ON a.district_id = l.account_id JOIN order o ON a.district_id = o.account_id JOIN trans t ON a.district_id = t.account_id WHERE l.date >= '1997-01-01' AND l.status = 'approved' ORDER BY l.amount ASC;\t----- bird -----\tfinancial",
    "99": "SELECT a.account_id, a.district_id, a.frequency, a.date, c.client_id, c.gender, c.birth_date, c.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, l.loan_id, l.account_id, l.date, l.amount, l.duration, l.payments, l.status, o.account_id, o.bank_to, o.account_to, o.amount, o.k_symbol, t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM account a JOIN card c ON a.district_id = c.disp_id JOIN client c ON a.district_id = c.district_id JOIN loan l ON a.district_id = l.account_id JOIN order o ON a.district_id = o.account_id JOIN trans t ON a.district_id = t.account_id WHERE a.date >= '1993-01-01' AND l.duration > 12 GROUP BY a.account_id, a.district_id, a.frequency, a.date, c.client_id, c.gender, c.birth_date, c.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, l.loan_id, l.account_id, l.date, l.amount, l.duration, l.payments, l.status, o.account_id, o.bank_to, o.account_to, o.amount, o.k_symbol, t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account HAVING MAX(l.amount) = (SELECT MAX(l.amount) FROM loan l WHERE a.district_id = l.account_id AND l.duration > 12) AND MAX(c.birth_date) = (SELECT MAX(c.birth_date) FROM client c WHERE a.district_id = c.district_id AND c.birth_date >= '1993-01-01')\t----- bird -----\tfinancial",
    "100": "SELECT COUNT(*) FROM account WHERE gender = 'F' AND birth_date < '1950-01-01' AND district_id = (SELECT district_id FROM district WHERE A2 = 'Sokolov');\t----- bird -----\tfinancial",
    "101": "SELECT account_id, MIN(date) AS earliest_trading_date FROM trans WHERE date >= '1995-01-01' AND account_id IN (SELECT account_id FROM trans WHERE date >= '1995-01-01');\t----- bird -----\tfinancial",
    "102": "SELECT DISTINCT a.account_id, a.district_id, a.frequency, a.date FROM account a JOIN card c ON a.account_id = c.account_id WHERE a.date < '1997-01-01' AND a.amount > 3000;\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM client WHERE gender ='male' AND birth_date = '1994-03-03';\t----- bird -----\tfinancial",
    "104": "SELECT MAX(date) AS max_date FROM trans WHERE account_id = 12345 AND type = 'withdrawal' AND amount > 0 AND balance > 0 AND status = 'active';\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25';\t----- bird -----\tfinancial",
    "106": "SELECT MAX(amount) AS max_amount FROM trans WHERE account_id = (SELECT account_id FROM client WHERE gender ='male' AND birth_date = '1996-10-21' AND district_id = (SELECT district_id FROM account WHERE date = '1996-10-21'));\t----- bird -----\tfinancial",
    "107": "SELECT gender, birth_date, district_id FROM client WHERE birth_date = (SELECT MAX(birth_date) FROM client) AND district_id = (SELECT MAX(district_id) FROM client);\t----- bird -----\tfinancial",
    "108": "SELECT MAX(amount) AS max_amount FROM trans WHERE account_id = (SELECT MAX(account_id) FROM trans);\t----- bird -----\tfinancial",
    "109": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM account WHERE branch = 'Jesenik');\t----- bird -----\tfinancial",
    "110": "SELECT client_id FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'A2' AND A3 = 'A3' AND A4 = 'A4' AND A5 = 'A5' AND A6 = 'A6' AND A7 = 'A7' AND A8 = 1 AND A9 = 1 AND A10 = 1 AND A11 = 1 AND A12 = 1 AND A13 = 1 AND A14 = 1 AND A15 = 1 AND A16 = 1);\t----- bird -----\tfinancial",
    "111": "SELECT COUNT(*) FROM account WHERE district_id = 'Litomerice' AND YEAR(date) = 1996;\t----- bird -----\tfinancial",
    "112": "SELECT district_id FROM client WHERE gender = 'F' AND birth_date = '1976-01-29' AND district_id = (SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM disp WHERE client_id = (SELECT client_id FROM client WHERE gender = 'F' AND birth_date = '1976-01-29')));\t----- bird -----\tfinancial",
    "113": "SELECT birth_date FROM client WHERE client_id = (SELECT client_id FROM disp WHERE disp_id = (SELECT disp_id FROM loan WHERE loan_id = (SELECT loan_id FROM trans WHERE trans_id = (SELECT trans_id FROM order WHERE order_id = (SELECT order_id FROM client WHERE client_id = (SELECT client_id FROM card WHERE card_id = (SELECT card_id FROM account WHERE account_id = (SELECT account_id FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 98832))))))))));\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM client WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Prague');\t----- bird -----\tfinancial",
    "115": "SELECT district_id, COUNT(DISTINCT client_id) AS male_clients, SUM(amount) AS total_amount FROM client WHERE gender = 'M' AND district_id IN (SELECT district_id FROM district WHERE A3 = 'South Bohemia' AND A4 > 100000) GROUP BY district_id;\t----- bird -----\tfinancial",
    "116": "SELECT (SELECT SUM(amount) FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE loan_id = 1)) / (SELECT SUM(amount) FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE loan_id = 2)) * 100 AS increase_rate FROM loan WHERE loan_id = 1;\t----- bird -----\tfinancial",
    "117": "SELECT SUM(amount) / SUM(amount & 'A') * 100 AS percentage FROM loan WHERE status = 'A';\t----- bird -----\tfinancial",
    "118": "SELECT SUM(amount) / SUM(amount) * 100 AS percentage FROM loan WHERE amount < 100000 AND status = 'C';\t----- bird -----\tfinancial",
    "119": "SELECT account_id, district_name, district_region FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A2 = 'POPLATEK PO OBRATU');\t----- bird -----\tfinancial",
    "120": "SELECT DISTINCT a.account_id, a.frequency FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id = 'Prachatice';\t----- bird -----\tfinancial",
    "122": "SELECT district, region FROM loan WHERE loan_id = 4990;\t----- bird -----\tfinancial",
    "123": "SELECT account_id, district, region FROM loan WHERE amount > 300000;\t----- bird -----\tfinancial",
    "124": "SELECT loan_id, district, AVG(salary) AS average_salary FROM loan WHERE duration = 60;\t----- bird -----\tfinancial",
    "125": "[SQL] SELECT district, state, (A13 - A12) / A12 * 100 AS unemployment_increment FROM district WHERE A12 > 0 AND A13 > 0 AND A12 IS NOT NULL AND A13 IS NOT NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!= NULL AND A12!= 0 AND A13!= 0 AND A12!= NULL AND A13!=\t----- bird -----\tfinancial",
    "126": "SELECT AVG(balance) AS avg_balance FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin' AND YEAR(date) = 1993);\t----- bird -----\tfinancial",
    "127": "SELECT DISTINCT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "128": "SELECT district_id, COUNT(*) AS female_count FROM client WHERE gender = 'F' GROUP BY district_id ORDER BY female_count DESC LIMIT 9;\t----- bird -----\tfinancial",
    "129": "SELECT district_id, SUM(amount) AS total_withdrawals FROM trans WHERE type = 'VYDAJ' AND date LIKE '1996-01%' GROUP BY district_id ORDER BY total_withdrawals DESC LIMIT 10;\t----- bird -----\tfinancial",
    "130": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'South Bohemia');\t----- bird -----\tfinancial",
    "131": "SELECT district_id, SUM(amount) AS total_active_loan FROM loan WHERE status = 'C' AND duration > 0 GROUP BY district_id ORDER BY total_active_loan DESC LIMIT 1;\t----- bird -----\tfinancial",
    "132": "SELECT AVG(amount) AS average_loan_amount FROM loan WHERE gender = 'M';\t----- bird -----\tfinancial",
    "133": "SELECT district_id, A13 FROM district WHERE A13 = (SELECT MAX(A13) FROM district);\t----- bird -----\tfinancial",
    "134": "SELECT MAX(district_id) AS max_district_id FROM account WHERE year = 1996;\t----- bird -----\tfinancial",
    "135": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK MESICNE' AND balance < 0;\t----- bird -----\tfinancial",
    "136": "SELECT COUNT(*) FROM loan WHERE loan_id IN (SELECT loan_id FROM loan WHERE account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE' AND date BETWEEN '1995-01-01' AND '1997-12-31' AND amount >= 250000 AND status = 'APPROVED')) AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE' AND date BETWEEN '1995-01-01' AND '1997-12-31');\t----- bird -----\tfinancial",
    "137": "SELECT COUNT(*) FROM account WHERE status = 'C' AND district_id = 1;\t----- bird -----\tfinancial",
    "138": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE A15 = (SELECT MAX(A15) FROM district WHERE A15 > 0));\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) FROM card WHERE type = 'OWNER';\t----- bird -----\tfinancial",
    "140": "SELECT COUNT(*) FROM account WHERE district_id = 'Pisek';\t----- bird -----\tfinancial",
    "141": "SELECT district_id, SUM(amount) AS total_amount FROM trans WHERE account_id = 1 AND date = '1997-01-01' AND amount > 10000 GROUP BY district_id;\t----- bird -----\tfinancial",
    "142": "SELECT DISTINCT account_id FROM trans WHERE operation = 'household payment' AND bank = 'SIPO' AND account = 12345;\t----- bird -----\tfinancial",
    "143": "SELECT DISTINCT account_id FROM account WHERE type = 'gold' AND card_id IS NOT NULL;\t----- bird -----\tfinancial",
    "144": "SELECT AVG(amount) AS average_amount FROM trans WHERE operation = 'VYBER KARTOU' AND account_id IN (SELECT account_id FROM account WHERE YEAR(date) = 2021);\t----- bird -----\tfinancial",
    "145": "SELECT AVG(amount) AS avg_amount FROM trans WHERE operation = 'VYBER KARTOU' AND account_id = (SELECT account_id FROM trans WHERE operation = 'VYBER KARTOU' AND date = '1998-01-01') AND amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date = '1998-01-01');\t----- bird -----\tfinancial",
    "146": "SELECT DISTINCT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN card d ON a.account_id = d.account_id WHERE c.gender = 'F' AND d.type = 'credit_card' AND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = a.account_id);\t----- bird -----\tfinancial",
    "147": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM district WHERE A3 = 'South Bohemia');\t----- bird -----\tfinancial",
    "148": "[SQL] SELECT * FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Tabor' AND A10 > 0.5 AND A11 > 0.5 AND A12 > 0.5 AND A13 > 0.5 AND A14 > 0.5 AND A15 > 0.5 AND A16 > 0.5 AND A17 > 0.5 AND A18 > 0.5 AND A19 > 0.5 AND A20 > 0.5 AND A21 > 0.5 AND A22 > 0.5 AND A23 > 0.5 AND A24 > 0.5 AND A25 > 0.5 AND A26 > 0.5 AND A27 > 0.5 AND A28 > 0.5 AND A29 > 0.5 AND A30 > 0.5 AND A31 > 0.5 AND A32 > 0.5 AND A33 > 0.5 AND A34 > 0.5 AND A35 > 0.5 AND A36 > 0.5 AND A37 > 0.5 AND A38 > 0.5 AND A39 > 0.5 AND A40 > 0.5 AND A41 > 0.5 AND A42 > 0.5 AND A43 > 0.5 AND A44 > 0.5 AND A45 > 0.5 AND A46 > 0.5 AND A47 > 0.5 AND A48 > 0.5 AND A49 > 0.5 AND A50 > 0.5 AND A51 > 0.5 AND A52 > 0.5 AND A53 > 0.5 AND A54 > 0.5 AND A55 > 0.5 AND A56 > 0.5 AND A57 > 0.5 AND A58 > 0.5 AND A59 > 0.5 AND A60 > 0.5 AND A61 > 0.5 AND A62 > 0.5 AND A63 > 0.5 AND A64 > 0.5 AND A65 > 0.5 AND A66 > 0.5 AND A67 > 0.5 AND A68 > 0.5 AND A69 > 0.5 AND A70 > 0.5 AND A71 > 0.5 AND A72 > 0.5 AND A73 > 0.5 AND A74 > 0.5 AND A75 > 0.5 AND A76 > 0.5 AND A77 > 0.5 AND A78 > 0.5 AND A79 > 0.5 AND A80 > 0.5 AND A81 > 0.5 AND A82 > 0.5 AND A83 > 0.5 AND A84 > 0.5 AND A85 > 0.5 AND A86 > 0.5 AND A87 > 0.5 AND A88 > 0.5 AND A89 > 0.5 AND A90 > 0.5 AND A91 > 0.5 AND A92 > 0.5 AND A93 > 0.5 AND A94 > 0.5 AND A95 > 0.5 AND A96 > 0.5 AND A97 > 0.5 AND A98 > 0.5 AND A99 > 0.5 AND A100 > 0.5 AND A101 > 0.5 AND A102 > 0.5 AND A103 > 0.5 AND A104 > 0.5 AND A105 > 0.5 AND A106 > 0.5 AND A107 > 0.5 AND A108 > 0.5 AND A109 > 0.5 AND A110 > 0.5 AND A111 > 0.5 AND A112 > 0.5 AND A113 > 0.5 AND A114 > 0.5 AND A115 > 0.5 AND A116 > 0.5 AND A117 > 0.5 AND A118\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT account_type FROM account WHERE account_type = 'OWNER' AND district_id IN ( SELECT district_id FROM district WHERE A11 > 8000 AND A11 <= 9000 );\t----- bird -----\tfinancial",
    "150": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A3 = 'North Bohemia');\t----- bird -----\tfinancial",
    "151": "SELECT DISTINCT district_id FROM account WHERE frequency = 'VYDAJ';\t----- bird -----\tfinancial",
    "152": "SELECT AVG(crimes) AS avg_crimes FROM district WHERE A15 > 4000 AND district_id IN (SELECT district_id FROM account WHERE year(date) >= 1997);\t----- bird -----\tfinancial",
    "153": "SELECT COUNT(*) FROM card WHERE type = 'classic' AND account_id IN (SELECT account_id FROM loan WHERE status = 'approved');\t----- bird -----\tfinancial",
    "154": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = 'Hl.m. Praha';\t----- bird -----\tfinancial",
    "155": "SELECT (count(type = 'gold' and issued date < 1998) / count(all cards)) * 100 AS percent_gold_issued_before_1998 FROM card;\t----- bird -----\tfinancial",
    "156": "SELECT account_id, MAX(amount) AS max_loan_amount FROM loan GROUP BY account_id;\t----- bird -----\tfinancial",
    "157": "SELECT SUM(committed_crimes) FROM district WHERE district_id = (SELECT district_id FROM account WHERE account_id = 532);\t----- bird -----\tfinancial",
    "158": "SELECT district_id FROM account WHERE account_id = 33333;\t----- bird -----\tfinancial",
    "159": "SELECT * FROM trans WHERE operation = 'VYBER' AND account_id = 3356;\t----- bird -----\tfinancial",
    "160": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK TYDNE' AND loan_id IS NOT NULL AND amount < 200000;\t----- bird -----\tfinancial",
    "161": "SELECT type FROM card WHERE client_id = 13539;\t----- bird -----\tfinancial",
    "162": "SELECT district_id FROM client WHERE client_id = 3541;\t----- bird -----\tfinancial",
    "163": "SELECT district_id, COUNT(*) AS num_accounts FROM account WHERE status = 'A' GROUP BY district_id ORDER BY num_accounts DESC LIMIT 1;\t----- bird -----\tfinancial",
    "164": "SELECT * FROM order WHERE order_id = 32423;\t----- bird -----\tfinancial",
    "165": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM account WHERE district_id = 5);\t----- bird -----\tfinancial",
    "166": "SELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik');\t----- bird -----\tfinancial",
    "167": "SELECT DISTINCT client_id FROM client WHERE client_id IN (SELECT client_id FROM card WHERE type = 'Junior Credit Card' AND issued > '1996-01-01');\t----- bird -----\tfinancial",
    "168": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND district_id IN (SELECT district_id FROM district WHERE A11 > 10000);\t----- bird -----\tfinancial",
    "169": "SELECT SUM(amount) AS total_amount FROM trans WHERE account_id = (SELECT account_id FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'A2' AND A3 = 'A3' AND A4 = 'A4' AND A5 = 'A5' AND A6 = 'A6' AND A7 = 'A7' AND A8 = 1 AND A9 = 1 AND A10 = 1 AND A11 = 1 AND A12 = 1 AND A13 = 1 AND A14 = 1 AND A15 = 1 AND A16 = 1));\t----- bird -----\tfinancial",
    "170": "SELECT SUM(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date > '1995-01-01';\t----- bird -----\tfinancial",
    "171": "SELECT SUM(total_crimes) AS total_crimes FROM trans WHERE account_id = 1 AND date = '1996-01-01';\t----- bird -----\tfinancial",
    "172": "SELECT COUNT(*) FROM account WHERE account_id BETWEEN 1 AND 10;\t----- bird -----\tfinancial",
    "173": "SELECT * FROM trans WHERE account_id = 3 AND type = 'account_statement' AND date = (SELECT MAX(date) FROM trans WHERE account_id = 3 AND type = 'account_statement');\t----- bird -----\tfinancial",
    "174": "SELECT birth_date FROM client WHERE client_id = 130;\t----- bird -----\tfinancial",
    "175": "SELECT COUNT(*) FROM account WHERE frequency = 'POPLATEK PO OBRATU' AND EXISTS (SELECT 1 FROM disp WHERE account_id = account_id);\t----- bird -----\tfinancial",
    "176": "SELECT SUM(amount) AS total_debt FROM trans WHERE account_id = 992;\t----- bird -----\tfinancial",
    "177": "SELECT SUM(trans.amount) AS total_amount FROM trans WHERE trans.account_id = (SELECT account_id FROM disp WHERE client_id = 4 AND disp_id = 851);\t----- bird -----\tfinancial",
    "178": "SELECT type FROM card WHERE client_id = 9;\t----- bird -----\tfinancial",
    "179": "SELECT SUM(amount) FROM trans WHERE account_id = 617 AND date = '1998-01-01';\t----- bird -----\tfinancial",
    "180": "SELECT client_id FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district_id = (SELECT district_id FROM district WHERE A2 = 'East Bohemia');\t----- bird -----\tfinancial",
    "181": "SELECT c.client_id, c.gender, c.birth_date, c.district_id, a.account_id, a.district_id, l.loan_id, l.account_id, l.amount, l.duration, l.payments, l.status FROM client c JOIN account a ON c.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3;\t----- bird -----\tfinancial",
    "182": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND account_id IN (SELECT account_id FROM trans WHERE operation = 'payment' AND amount > 4000);\t----- bird -----\tfinancial",
    "183": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND date > '1996-01-01';\t----- bird -----\tfinancial",
    "184": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND type = 'Junior Credit Card';\t----- bird -----\tfinancial",
    "185": "SELECT COUNT(*) AS female_clients FROM client WHERE gender = 'F' AND district_id = (SELECT district_id FROM account WHERE district_id = (SELECT district_id FROM account WHERE district_id = 'Prague'));\t----- bird -----\tfinancial",
    "186": "SELECT COUNT(*) * 100.0 / COUNT(DISTINCT gender) AS percentage_male_clients FROM client WHERE gender = 'M' AND status = 'active';\t----- bird -----\tfinancial",
    "187": "SELECT COUNT(*) FROM client WHERE gender = 'Owner' AND district_id = (SELECT district_id FROM account WHERE frequency = 'POPLATEK TYDNE');\t----- bird -----\tfinancial",
    "188": "SELECT a.account_id, a.district_id, a.frequency, a.date, c.client_id, c.gender, c.birth_date, d.district_id, d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16, l.loan_id, l.account_id, l.date, l.amount, l.duration, l.payments, l.status, o.order_id, o.account_id, o.bank_to, o.account_to, o.amount, o.k_symbol, t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM account a JOIN card c ON a.district_id = c.disp_id JOIN client d ON a.district_id = d.district_id JOIN loan l ON a.account_id = l.account_id JOIN order o ON a.account_id = o.account_id JOIN trans t ON a.account_id = t.account_id WHERE a.date < '1997-01-01' AND l.date < '1997-01-01' AND l.duration > 24 AND l.status = 'approved' AND l.amount = (SELECT MIN(amount) FROM loan WHERE account_id = a.account_id AND date < '1997-01-01') AND d.A8 > 0 AND d.A9 > 0 AND d.A10 > 0 AND d.A11 > 0 AND d.A12 > 0 AND d.A13 > 0 AND d.A14 > 0 AND d.A15 > 0 AND d.A16 > 0\t----- bird -----\tfinancial",
    "189": "SELECT account_id FROM account WHERE gender = 'F' AND birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F');\t----- bird -----\tfinancial",
    "190": "SELECT COUNT(*) FROM client WHERE birth_date = '1920-01-01' AND district_id = (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "191": "SELECT COUNT(*) FROM loan WHERE duration = 24 AND frequency = 'POPLATEK TYDNE' AND status = 'PRE-PAYMENT' AND account_id IN (SELECT account_id FROM trans WHERE type = 'POPULATION' AND operation = 'POPULATION' AND balance > 0);\t----- bird -----\tfinancial",
    "192": "SELECT AVG(amount) AS average_amount FROM loan WHERE status = 'C' AND (SELECT COUNT(*) FROM order WHERE order_id = loan.order_id) > 0;\t----- bird -----\tfinancial",
    "193": "SELECT DISTINCT client_id FROM client WHERE gender ='male' AND birth_date >= '1980-01-01' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'A2' AND A3 = 'A3' AND A4 = 'A4' AND A5 = 'A5' AND A6 = 'A6' AND A7 = 'A7' AND A8 = 1 AND A9 = 1 AND A10 = 1 AND A11 = 1 AND A12 = 1 AND A13 = 1 AND A14 = 1 AND A15 = 1 AND A16 = 1);\t----- bird -----\tfinancial",
    "194": "SELECT c.client_id, c.birth_date, d.district_id FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender ='male' AND c.birth_date > '1980-01-01' AND c.district_id IN (SELECT district_id FROM account WHERE frequency = 'high-level' AND disp.type = 'OWNER');\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "196": "SELECT COUNT(*) FROM atom WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "197": "SELECT AVG(element = 'o') AS average_oxygen_atoms FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "198": "SELECT AVG(CASE WHEN label = '+' AND bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonded FROM connected;\t----- bird -----\ttoxicology",
    "199": "SELECT COUNT(*) FROM connected WHERE atom_id = 'atom_id' AND atom_id2 = 'atom_id' AND bond_type = 'non-carcinogenic' AND element = 'na';\t----- bird -----\ttoxicology",
    "200": "SELECT * FROM molecule WHERE label = '+' AND EXISTS (SELECT 1 FROM connected WHERE atom_id = 'atom_id' AND bond_type = '#');\t----- bird -----\ttoxicology",
    "201": "SELECT AVG(element = 'c') AS carbon_percentage FROM connected WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "202": "SELECT COUNT(*) FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "203": "SELECT COUNT(*) FROM atom WHERE element!= 'br';\t----- bird -----\ttoxicology",
    "204": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND element = '+');\t----- bird -----\ttoxicology",
    "205": "SELECT \"molecule_id\" FROM \"molecule\" WHERE \"molecule_id\" IN (SELECT \"molecule_id\" FROM \"connected\" WHERE \"atom_id\" = 'C' AND \"atom_id2\" = 'C');\t----- bird -----\ttoxicology",
    "206": "SELECT element FROM atom WHERE molecule_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "207": "SELECT element FROM atom WHERE bond_type = '=';\t----- bird -----\ttoxicology",
    "208": "SELECT label FROM atoms WHERE element = 'h' GROUP BY label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM bond WHERE element = 'cl';\t----- bird -----\ttoxicology",
    "210": "SELECT a.atom_id, b.atom_id2, c.bond_id FROM connected c JOIN atom a ON c.atom_id = a.atom_id JOIN atom b ON c.atom_id2 = b.atom_id WHERE c.bond_id ='single type bond' AND a.molecule_id ='molecule_id' AND b.molecule_id ='molecule_id';\t----- bird -----\ttoxicology",
    "211": "SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' AND c.bond_id IS NOT NULL;\t----- bird -----\ttoxicology",
    "212": "SELECT MIN(COUNT(element)) AS least_numerous_element FROM atom WHERE element = '-';\t----- bird -----\ttoxicology",
    "213": "SELECT bond_type FROM bond WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20' OR atom_id2 = 'TR004_8' AND atom_id = 'TR004_20';\t----- bird -----\ttoxicology",
    "214": "SELECT label FROM molecule WHERE atom_id NOT IN (SELECT atom_id FROM connected WHERE bond_type = 'Sn');\t----- bird -----\ttoxicology",
    "215": "SELECT COUNT(DISTINCT a.atom_id) AS iodine_count, COUNT(DISTINCT a.atom_id) AS sulfur_count FROM atom a JOIN bond b ON a.atom_id = b.atom_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "216": "SELECT a.atom_id, a.molecule_id, a.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "217": "SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR181';\t----- bird -----\ttoxicology",
    "218": "SELECT AVG(percentage) AS avg_percentage FROM connected WHERE label = '+' AND element!= 'f';\t----- bird -----\ttoxicology",
    "219": "SELECT AVG(percent) AS avg_percent FROM connected WHERE label = '+' AND bond_type = '#';\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC;\t----- bird -----\ttoxicology",
    "221": "SELECT a.atom_id, a.element FROM atom a, connected c WHERE c.atom_id = 'TR001' AND c.atom_id2 = 'TR001_2_6' AND c.bond_id = 'TR001_2_6';\t----- bird -----\ttoxicology",
    "222": "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS carcinogenic_count, SUM(CASE WHEN label = '-' THEN 1 ELSE 0 END) AS non_carcinogenic_count, SUM(CASE WHEN label = '+' AND label = '-' THEN 0 ELSE 1 END) AS difference FROM molecule\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id FROM connected WHERE bond_id = 'TR000_2_5';\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "225": "SELECT label FROM molecule WHERE EXISTS (SELECT 1 FROM connected WHERE atom_id = 'C' AND atom_id2 = 'N' AND bond_type ='= ');\t----- bird -----\ttoxicology",
    "226": "SELECT AVG(percentage) AS average_percentage FROM connected WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "227": "SELECT AVG(percent) AS average_percent FROM (SELECT SUM(label = '+') AS sum_positive, COUNT(molecule_id) AS total_molecules FROM connected GROUP BY molecule_id) AS positive_molecules;\t----- bird -----\ttoxicology",
    "228": "SELECT AVG(percent) AS average_percent FROM connected WHERE atom_id = 'TR206' AND element = 'h';\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM connected WHERE atom_id = 'TR000' AND bond_id IS NOT NULL;\t----- bird -----\ttoxicology",
    "230": "SELECT label FROM molecule WHERE molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "231": "SELECT bond_type, COUNT(*) AS bond_count FROM connected GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "232": "SELECT molecule_id FROM atom WHERE element = '-' AND bond_type = '-' AND molecule_id IN (SELECT atom_id FROM connected GROUP BY atom_id HAVING COUNT(*) = 2) AND molecule_id NOT IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "233": "SELECT bond_type FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology",
    "234": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR009_12' AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009');\t----- bird -----\ttoxicology",
    "235": "SELECT COUNT(*) FROM molecule WHERE label = '+' AND element = 'br';\t----- bird -----\ttoxicology",
    "236": "SELECT bond_type FROM connected WHERE atom_id = 'TR001_6_9' AND bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "237": "SELECT label FROM molecule WHERE atom_id = 'TR001_10';\t----- bird -----\ttoxicology",
    "238": "SELECT COUNT(*) FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "239": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19';\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "241": "SELECT COUNT(*) FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "242": "SELECT * FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE atom_id BETWEEN '21' AND '25') AND label = '+' AND molecule_id IN (SELECT molecule_id FROM molecule);\t----- bird -----\ttoxicology",
    "243": "SELECT b.bond_id, b.molecule_id, b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "244": "[SQL] SELECT label FROM molecule WHERE id = (SELECT molecule_id FROM connected WHERE atom_id = (SELECT atom_id FROM connected WHERE atom_id2 = (SELECT atom_id FROM connected WHERE bond_id = (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom\t----- bird -----\ttoxicology",
    "245": "SELECT AVG(connected.bond_id) AS average_bonds FROM connected, atom, bond WHERE atom.element = 'i' AND connected.atom_id = atom.atom_id AND connected.atom_id2 = atom.atom_id AND connected.bond_id = bond.bond_id;\t----- bird -----\ttoxicology",
    "246": "SELECT bond_type, bond_id FROM connected WHERE atom_id = '45';\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE NOT EXISTS (SELECT 1 FROM connected WHERE atom_id = element);\t----- bird -----\ttoxicology",
    "248": "SELECT atom_id FROM atom WHERE molecule_id = 'TR041' AND element = '#';\t----- bird -----\ttoxicology",
    "249": "SELECT DISTINCT element FROM atom;\t----- bird -----\ttoxicology",
    "250": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected GROUP BY molecule_id HAVING COUNT(DISTINCT bond_type) = 2);\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "252": "SELECT a.atom_id FROM atom a JOIN bond b ON a.atom_id = b.atom_id2 JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE b.bond_type ='single' AND c.atom_id = 'Pb' AND c.atom_id2 = 'Pb';\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT element FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "254": "SELECT AVG(popularity) AS avg_popularity FROM prof;\t----- bird -----\ttoxicology",
    "255": "SELECT AVG(proportion) AS avg_proportion FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "256": "SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) AS total_carbon, SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_hydrogen FROM atom JOIN bond ON atom.atom_id = bond.atom_id JOIN connected ON atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id GROUP BY molecule_id;\t----- bird -----\ttoxicology",
    "257": "SELECT atom_id2 FROM connected WHERE atom_id ='s' AND bond_type ='single';\t----- bird -----\ttoxicology",
    "258": "SELECT bond_type FROM connected WHERE atom_id = 'Sn' AND atom_id2 = 'Sn';\t----- bird -----\ttoxicology",
    "259": "SELECT COUNT(DISTINCT element) FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "260": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'p' OR element = 'br') AND bond_type = '#';\t----- bird -----\ttoxicology",
    "261": "SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON c.atom_id = m.atom_id JOIN molecule m2 ON c.atom_id2 = m2.atom_id WHERE m.label = '+' AND m2.label = '+' AND m.molecule_id = m2.molecule_id;\t----- bird -----\ttoxicology",
    "262": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE bond_type = '-');\t----- bird -----\ttoxicology",
    "263": "SELECT AVG(percent) AS average_percentage FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN (TR000, TR001, TR002);\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-';\t----- bird -----\ttoxicology",
    "266": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR000' AND atom_id2 = 'TR000' AND bond_id = 'TR000';\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM connected WHERE atom_id IN (SELECT molecule_id FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR050');\t----- bird -----\ttoxicology",
    "268": "SELECT element FROM connected WHERE bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "269": "SELECT COUNT(*) FROM connected WHERE atom_id = 'i' AND bond_id IS NOT NULL;\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM molecule WHERE element = 'ca' AND label = '+';\t----- bird -----\ttoxicology",
    "271": "SELECT * FROM connected WHERE atom_id = 'TR001_1_8' AND (element = 'cl' OR element = 'c');\t----- bird -----\ttoxicology",
    "272": "SELECT molecule_id FROM molecule WHERE label = '-' AND element = 'c';\t----- bird -----\ttoxicology",
    "273": "SELECT SUM(percentage) AS percentage FROM connected WHERE label = '+' AND element = 'cl';\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR001';\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM molecule WHERE label = 'double bond';\t----- bird -----\ttoxicology",
    "276": "SELECT atom_id FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "277": "SELECT element FROM atom WHERE molecule_id = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "278": "SELECT COUNT(*) FROM connected WHERE bond_type = '-' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "279": "SELECT label FROM bond WHERE bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "280": "SELECT * FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "281": "SELECT COUNT(*) FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+'));\t----- bird -----\ttoxicology",
    "282": "SELECT ratio FROM connected WHERE atom_id = 'TR006' AND element = 'h';\t----- bird -----\ttoxicology",
    "283": "SELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM connected WHERE atom_id = 'Ca' );\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM connected WHERE atom_id = 'C' AND atom_id2 = 'C';\t----- bird -----\ttoxicology",
    "285": "SELECT element FROM atom WHERE molecule_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "286": "SELECT COUNT(*) FROM connected WHERE bond_type = '#';\t----- bird -----\ttoxicology",
    "287": "SELECT AVG(percentage) AS average_percentage FROM connected WHERE molecule_id = 'TR047' AND bond_type ='= ';\t----- bird -----\ttoxicology",
    "288": "SELECT label FROM molecule WHERE atom_id = 'TR001_1';\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "290": "SELECT element FROM atom WHERE molecule_id = 'TR151';\t----- bird -----\ttoxicology",
    "291": "SELECT COUNT(*) FROM connected WHERE bond_type = 'carcinogenic';\t----- bird -----\ttoxicology",
    "292": "SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id WHERE a.molecule_id LIKE 'TR%' AND a.element = 'c' AND b.bond_type ='single'\t----- bird -----\ttoxicology",
    "293": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE label = '+');\t----- bird -----\ttoxicology",
    "294": "SELECT b.bond_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON c.atom_id = m.molecule_id WHERE m.label = '+' AND b.bond_type ='= ';\t----- bird -----\ttoxicology",
    "295": "SELECT COUNT(*) FROM connected WHERE atom_id = 'hydrogen' AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "296": "SELECT \"molecule_id\" FROM \"connected\" WHERE \"atom_id\" = 'TR000_1' AND \"atom_id2\" = 'TR000_1' AND \"bond_id\" = 'TR000_1_2';\t----- bird -----\ttoxicology",
    "297": "SELECT * FROM atom WHERE element = 'c' AND NOT EXISTS (SELECT 1 FROM connected WHERE atom_id = atom_id AND atom_id2 = atom_id);\t----- bird -----\ttoxicology",
    "298": "SELECT AVG(percentage) AS average_percentage FROM connected WHERE element = 'h' AND label = '+';\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124';\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM atom WHERE molecule_id = 'TR186';\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM connected WHERE atom_id = 'TR007_4_19' AND atom_id2 = 'TR007_4_19';\t----- bird -----\ttoxicology",
    "302": "SELECT element FROM atom WHERE atom_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(*) FROM connected WHERE bond_type ='='AND molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "304": "SELECT \"molecule_id\", \"element\" FROM \"atom\" WHERE \"molecule_id\" IN (SELECT \"molecule_id\" FROM \"molecule\" WHERE \"label\" = '+');\t----- bird -----\ttoxicology",
    "305": "SELECT b.bond_id, a1.atom_id, a2.atom_id2, b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "306": "SELECT m.label, GROUP_CONCAT(DISTINCT a.element) AS elements FROM molecule m JOIN connected c ON m.molecule_id = c.atom_id1 JOIN atom a ON c.atom_id2 = a.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "307": "SELECT element FROM atom WHERE atom_id = 'TR000_2_3' AND bond_id = 'TR000_2_3';\t----- bird -----\ttoxicology",
    "308": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'cl');\t----- bird -----\ttoxicology",
    "309": "SELECT a.atom_id, COUNT(b.bond_type) AS bond_types FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.molecule_id = 'TR346' GROUP BY a.atom_id;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(*) FROM connected WHERE bond_type ='='AND label = '+';\t----- bird -----\ttoxicology",
    "311": "SELECT COUNT(*) FROM molecule WHERE element!='s' AND bond_type!='= ';\t----- bird -----\ttoxicology",
    "312": "SELECT label FROM connected WHERE atom_id = 'TR001_2_4' AND bond_id = 'TR001_2_4';\t----- bird -----\ttoxicology",
    "313": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR001';\t----- bird -----\ttoxicology",
    "314": "SELECT COUNT(*) FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "315": "SELECT label FROM molecule WHERE element = 'cl' AND EXISTS (SELECT 1 FROM connected WHERE atom_id = 'atom_id' AND atom_id2 = 'atom_id2' AND bond_id = 'bond_id');\t----- bird -----\ttoxicology",
    "316": "SELECT * FROM \"atom\" WHERE \"atom_id\" = 'c' AND \"molecule_id\" IN (SELECT \"molecule_id\" FROM \"molecule\" WHERE \"label\" = '-');\t----- bird -----\ttoxicology",
    "317": "SELECT AVG(percentage) AS average_percentage FROM (SELECT SUM(label = '+' and element = 'cl') AS sum_positive_chlorine, COUNT(molecule_id) AS total_molecules FROM connected WHERE element = 'cl' GROUP BY atom_id) AS subquery;\t----- bird -----\ttoxicology",
    "318": "SELECT \"molecule_id\" FROM \"connected\" WHERE \"atom_id\" = 'TR001_1' AND \"atom_id2\" = 'TR001_7' AND \"bond_id\" = 'TR001_1_7';\t----- bird -----\ttoxicology",
    "319": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR001_3_4' AND bond_type ='single';\t----- bird -----\ttoxicology",
    "320": "SELECT bond_type FROM connected WHERE atom_id = 'TR000_1' AND atom_id2 = 'TR000_2';\t----- bird -----\ttoxicology",
    "321": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_4');\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1';\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000';\t----- bird -----\ttoxicology",
    "324": "SELECT AVG(percentage) AS average_percentage FROM connected WHERE bond_type = '-';\t----- bird -----\ttoxicology",
    "325": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'n' AND label = '+');\t----- bird -----\ttoxicology",
    "326": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id = 'S' AND bond_type ='= ');\t----- bird -----\ttoxicology",
    "327": "SELECT label, COUNT(DISTINCT molecule_id) AS count_of_molecules FROM molecule WHERE label = '-' AND COUNT(molecule_id) > 5 GROUP BY label;\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR024' AND bond_type = '=';\t----- bird -----\ttoxicology",
    "329": "SELECT molecule_id, COUNT(atom.molecule_id) AS num_atoms FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.molecule_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY molecule_id ORDER BY num_atoms DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "330": "SELECT AVG(percentage) AS average_percentage FROM molecule WHERE label = '+' AND bond_type = '#';\t----- bird -----\ttoxicology",
    "331": "SELECT COUNT(*) FROM molecule WHERE label = '+';\t----- bird -----\ttoxicology",
    "332": "SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR004' AND 'TR010') AND bond_type = '-';\t----- bird -----\ttoxicology",
    "333": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR008' AND bond_type = 'C-C';\t----- bird -----\ttoxicology",
    "334": "SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-');\t----- bird -----\ttoxicology",
    "335": "SELECT COUNT(*) FROM connected WHERE bond_type ='='AND element = 'o';\t----- bird -----\ttoxicology",
    "336": "SELECT COUNT(*) FROM molecule WHERE label = '-' AND bond_type = '#';\t----- bird -----\ttoxicology",
    "337": "SELECT e.element, b.bond_type FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id1 AND b.bond_id = c.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR002';\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom WHERE element = 'c' AND bond_type ='= ';\t----- bird -----\ttoxicology",
    "339": "SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+');\t----- bird -----\ttoxicology",
    "340": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND rarity = 'Foil';\t----- bird -----\tcard_games",
    "341": "SELECT * FROM cards WHERE borderColor IS NULL AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "342": "SELECT name, MAX(faceConvertedManaCost) AS max_face_converted_mana_cost FROM cards WHERE faceConvertedManaCost > MAX(faceConvertedManaCost) GROUP BY name;\t----- bird -----\tcard_games",
    "343": "SELECT DISTINCT c.uuid, c.name, c.popularity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON c.uuid = st.uuid WHERE s.code = '2015' AND l.status = 'EDHRec < 100' AND c.popularity < 100 ORDER BY c.popularity DESC;\t----- bird -----\tcard_games",
    "344": "SELECT * FROM cards WHERE rarity ='mythic' AND status = 'Banned' AND format = 'gladiator';\t----- bird -----\tcard_games",
    "345": "SELECT legalities.status FROM legalities WHERE legalities.uuid = (SELECT cards.uuid FROM cards WHERE cards.type = 'Artifact' AND cards.side IS NULL AND cards.format = 'vintage');\t----- bird -----\tcard_games",
    "346": "[SQL] SELECT cards.id, cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.power = '*' AND cards.format = 'commander' AND legalities.status = 'Legal' AND foreign_data.language = 'en_US' AND cards.availability = 'R' AND cards.borderColor = 'Black' AND cards.cardKingdomFoilIdt----- bird -----\tcard_games",
    "347": "[SQL] SELECT c.id, c.artist, c.asciiName, c.availability, c.borderColor, c.cardKingdomFoilId, c.cardKingdomId, c.colorIdentity, c.colorIndicator, c.colors, c.convertedManaCost, c.duelDeck, c.edhrecRank, c.faceConvertedManaCost, c.faceName, c.flavorName, c.flavorText, c.frameEffects, c.frameVersion, c.hand, c.hasAlternativeDeckLimit, c.hasContentWarning, c.hasFoil, c.hasNonFoil, c.isAlternative, c.isFullArt, c.isOnlineOnly, c.isOversized, c.isPromo, c.isReprint, c.isReserved, c.isStarter, c.isStorySpotlight, c.isTextless, c.isTimeshifted, c.keywords, c.layout, c.leadershipSkills, c.life, c.loyalty, c.manaCost, c.mcmId, c.mcmMetaId, c.mtgArenaId, c.mtgjsonV4Id, c.mtgoFoilId, c.mtgoId, c.multiverseId, c.name, c.number, c.originalReleaseDate, c.originalText, c.originalType, c.otherFaceIds, c.power, c.printings, c.promoTypes, c.purchaseUrls, c.rarity, c.scryfallId, c.scryfallIllustrationId, c.scryfallOracleId, c.setCode, c.side, c.subtypes, c.supertypes, c.tcgplayerProductId, c.text, c.toughness, c.type, c.types, c.uuid, c.variations, c.watermark, f.flavorText, f.language, f.multiverseid, f.name, f.text, f.type, f.uuid, r.text AS ruling, l.status AS legality FROM cards c JOIN foreign_data f ON c.uuid = f.uuid JOIN legalities l ON c.uuid = l.uuid JOIN rulings r ON c.uuid = r.uuid WHERE f.flavorText LIKE '%Stephen Daniel%' AND l.status = '1' AND r.text IS NOT NULL AND c.isFullArt = 1 AND c.isOnlineOnly = 0 AND c.isTextless = 0 AND c.isTimeshifted = 0 AND c.isStorySpotlight = 0 AND c.isReserved = 0 AND c.isStarter = 0 AND c.isPromo = 0 AND c.isReprint = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly = 0 AND c.isNonFoilOnly = 0 AND c.isOnlineOnly = 0 AND c.isPartialPreview = 0 AND c.isForeignOnly =\t----- bird -----\tcard_games",
    "348": "SELECT * FROM rulings WHERE text LIKE '%Sublime Epiphany%' AND setCode = '74s';\t----- bird -----\tcard_games",
    "349": "SELECT c.name, c.artist, c.isPromo FROM cards c JOIN ( SELECT setCode, COUNT(*) as popularity FROM rulings GROUP BY setCode ORDER BY popularity DESC LIMIT 1 ) r ON c.uuid = r.setCode WHERE c.isPromo = 1;\t----- bird -----\tcard_games",
    "350": "SELECT language, translation FROM set_translations WHERE setCode = 'annul' AND number = '29';\t----- bird -----\tcard_games",
    "351": "SELECT DISTINCT c.uuid, c.name, c.flavorText, c.language FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON c.uuid = st.setCode WHERE l.status = 'Japanese' AND st.language = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT SUM(id) / (SELECT COUNT(id) FROM foreign_data WHERE language = 'Chinese Simplified') * 100 AS percentage FROM cards WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "353": "SELECT s.code, SUM(t.totalSetSize) AS total_cards FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Italian' GROUP BY s.code;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(DISTINCT type) FROM foreign_data WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM foreign_data WHERE name = 'Angel of Mercy';\t----- bird -----\tcard_games",
    "356": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "357": "SELECT promoTypes FROM foreign_data WHERE name = 'Duress';\t----- bird -----\tcard_games",
    "358": "SELECT asciiName FROM cards WHERE id = (SELECT id FROM foreign_data WHERE language = 'English' AND name = 'Ancestor''s Chosen');\t----- bird -----\tcard_games",
    "359": "SELECT type FROM cards WHERE name = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT language FROM foreign_data WHERE uuid IN (SELECT setCode FROM sets WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM legalities WHERE status ='restricted' AND isTextless = 0;\t----- bird -----\tcard_games",
    "362": "SELECT rulings.text FROM rulings WHERE rulings.uuid = (SELECT cards.uuid FROM cards WHERE cards.name = 'Condemn');\t----- bird -----\tcard_games",
    "363": "SELECT COUNT(*) FROM legalities WHERE status ='restricted' AND isStarter = 1;\t----- bird -----\tcard_games",
    "364": "SELECT legality FROM legalities WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Cloudchaser Eagle');\t----- bird -----\tcard_games",
    "365": "SELECT name FROM cards WHERE id = (SELECT id FROM foreign_data WHERE language = 'English' AND name = 'Benalish Knight');\t----- bird -----\tcard_games",
    "366": "SELECT rulings.text FROM rulings WHERE rulings.uuid = (SELECT cards.uuid FROM cards WHERE cards.name = 'Benalish Knight');\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM foreign_data WHERE name = 'Phyrexian';\t----- bird -----\tcard_games",
    "368": "SELECT percentage FROM (SELECT COUNT(*) AS count FROM cards WHERE borderColor = 'borderless') AS borderless_count, (SELECT COUNT(*) AS count FROM cards) AS total_count, (SELECT COUNT(*) AS count FROM cards WHERE borderColor = 'borderless') / (SELECT COUNT(*) AS count FROM cards) * 100 AS percentage;\t----- bird -----\tcard_games",
    "369": "SELECT COUNT(*) FROM foreign_data WHERE language = 'German' AND isReprint = 1;\t----- bird -----\tcard_games",
    "370": "SELECT COUNT(*) FROM foreign_data WHERE language = 'Russian' AND setCode IN (SELECT code FROM sets WHERE isForeignOnly = 1);\t----- bird -----\tcard_games",
    "371": "SELECT AVG(percentage) AS average_percentage FROM (SELECT 100.0 * (COUNT(*) / COUNT(DISTINCT language)) AS percentage FROM foreign_data WHERE language = 'French' AND isStorySpotlight = 1) AS subquery;\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(*) FROM cards WHERE toughness = 99;\t----- bird -----\tcard_games",
    "373": "SELECT * FROM cards WHERE artist = 'Aaron Boyd';\t----- bird -----\tcard_games",
    "374": "SELECT COUNT(*) FROM foreign_data WHERE flavorText = 'available on mtgo' AND language = 'English' AND setCode ='mtgo';\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0;\t----- bird -----\tcard_games",
    "376": "SELECT * FROM cards WHERE keywords LIKE '%flying%' AND type = 'Creature';\t----- bird -----\tcard_games",
    "377": "SELECT COUNT(*) FROM cards WHERE type = 'Summon - Angel' AND subtype!= 'Angel';\t----- bird -----\tcard_games",
    "378": "[SQL] SELECT DISTINCT cards.id FROM cards JOIN foreign_data ON cards.id = foreign_data.uuid JOIN legalities ON cards.id = legalities.uuid JOIN sets ON cards.id = sets.uuid JOIN set_translations ON cards.id = set_translations.setCode WHERE foreign_data.language = 'English' AND legalities.format = 'Foil' AND legalities.status = 'Incredibly powerful' AND sets.code = 'Foil' AND set_translations.language = 'English' AND cards.availability = 'Foil' AND cards.faceConvertedManaCost > 0 AND cards.faceName = 'Incredibly powerful' AND cards.flavorName = 'Incredibly powerful' AND cards.flavorText = 'Incredibly powerful' AND cards.hand = 'Incredibly powerful' AND cards.hasAlternativeDeckLimit = 0 AND cards.hasContentWarning = 0 AND cards.hasFoil = 1 AND cards.hasNonFoil = 0 AND cards.isAlternative = 0 AND cards.isFullArt = 0 AND cards.isOnlineOnly = 0 AND cards.isOversized = 0 AND cards.isPromo = 0 AND cards.isReprint = 0 AND cards.isReserved = 0 AND cards.isStarter = 0 AND cards.isStorySpotlight = 0 AND cards.isTextless = 0 AND cards.isTimeshifted = 0 AND cards.keywords = 'Incredibly powerful' AND cards.layout = 'Incredibly powerful' AND cards.leadershipSkills = 'Incredibly powerful' AND cards.life = 'Incredibly powerful' AND cards.loyalty = 'Incredibly powerful' AND cards.manaCost = 'Incredibly powerful' AND cards.mcmId = 'Incredibly powerful' AND cards.mcmMetaId = 'Incredibly powerful' AND cards.mtgArenaId = 'Incredibly powerful' AND cards.mtgjsonV4Id = 'Incredibly powerful' AND cards.mtgoFoilId = 'Incredibly powerful' AND cards.mtgoId = 'Incredibly powerful' AND cards.multiverseId = 'Incredibly powerful' AND cards.name = 'Incredibly powerful' AND cards.number = 'Incredibly powerful' AND cards.originalReleaseDate = 'Incredibly powerful' AND cards.originalText = 'Incredibly powerful' AND cards.originalType = 'Incredibly powerful' AND cards.otherFaceIds = 'Incredibly powerful' AND cards.power = 'Incredibly powerful' AND cards.printings = 'Incredibly powerful' AND cards.promoTypes = 'Incredibly powerful' AND cards.purchaseUrls = 'Incredibly powerful' AND cards.rarity = 'Incredibly powerful' AND cards.scryfallId = 'Incredibly powerful' AND cards.scryfallIllustrationId = 'Incredibly powerful' AND cards.scryfallOracleId = 'Incredibly powerful' AND cards.setCode = 'Foil' AND cards.side = 'Incredibly powerful' AND cards.subtypes = 'Incredibly powerful' AND cards.supertypes = 'Incredibly powerful' AND cards.tcgplayerProductId = 'Incredibly powerful' AND cards.text = 'Incredibly powerful' AND cards.toughness = 'Incredibly powerful' AND cards.type = 'Incredibly powerful' AND cards.types = 'Incredibly powerful' AND cards.uuid = 'Incredibly powerful' AND cards.variations = 'Incredibly powerful' AND cards.watermark = 'Incredibly powerful' AND legalities.format = 'Foil' AND legalities.status = 'Incredibly powerful' AND sets.code = 'Foil' AND set_translations.language = 'English' AND cards.availability = 'Foil' AND cards.faceConvertedManaCost > 0 AND cards.faceName = 'Incredibly powerful' AND cards.flavorName = 'Incredibly powerful' AND cards.flavorText = 'Incredibly powerful' AND cards.hand = 'Incredibly powerful' AND cards.hasAlternativeDeckLimit = 0 AND cards.hasContentWarning = 0 AND cards.hasFoil = 1 AND cards.\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE name = 'Duel Deck A';\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015';\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT * FROM cards WHERE availability = 'paper' AND language = 'Japanese';\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM foreign_data WHERE rulings.uuid = foreign_data.uuid AND rulings.status = 'Banned' AND rulings.borderColor = 'white';\t----- bird -----\tcard_games",
    "384": "SELECT DISTINCT c.uuid, f.language FROM cards c JOIN foreign_data f ON c.uuid = f.uuid WHERE c.format = 'legacy' AND f.language IS NOT NULL;\t----- bird -----\tcard_games",
    "385": "SELECT ruling FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality');\t----- bird -----\tcard_games",
    "386": "SELECT COUNT(*) AS total_cards, legality_status FROM cards WHERE frameVersion = 'future';\t----- bird -----\tcard_games",
    "387": "SELECT DISTINCT c.name, c.colorIdentity FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid WHERE l.format = 'OGW' AND l.status = 'Legal'\t----- bird -----\tcard_games",
    "388": "SELECT DISTINCT foreign_data.language, foreign_data.flavorText FROM foreign_data JOIN set_translations ON foreign_data.uuid = set_translations.setCode WHERE set_translations.setCode = '10E' AND foreign_data.uuid IN (SELECT DISTINCT cards.uuid FROM cards WHERE cards.convertedManaCost = 5);\t----- bird -----\tcard_games",
    "389": "SELECT c.name, r.date FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.originalType = 'Creature - Elf' GROUP BY c.name, r.date ORDER BY c.name, r.date DESC;\t----- bird -----\tcard_games",
    "390": "SELECT DISTINCT color FROM cards WHERE id BETWEEN 1 AND 20;\t----- bird -----\tcard_games",
    "391": "SELECT * FROM cards WHERE originalType = 'Artifact' AND colors = 'B' AND language IN (SELECT language FROM foreign_data);\t----- bird -----\tcard_games",
    "392": "SELECT name, ruling_date FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE rarity = 'uncommon' ORDER BY ruling_date ASC;\t----- bird -----\tcard_games",
    "393": "[SQL] SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%John Avon%' AND (isFoilOnly = 0 OR isNonFoilOnly = 0) AND (power = 0 OR power IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (isPowerful = 0 OR isPowerful IS NULL) AND (isPowerfulFoil = 0 OR isPowerfulFoil IS NULL) AND (\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(*) FROM cards WHERE (borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL) AND (power IS NOT NULL AND power > 0);\t----- bird -----\tcard_games",
    "395": "SELECT COUNT(*) FROM foreign_data WHERE flavorText = 'UDON' AND availability ='mtgo' AND hand = -1;\t----- bird -----\tcard_games",
    "396": "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1;\t----- bird -----\tcard_games",
    "397": "SELECT convertedManaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND (availability ='mtgo,paper' OR availability ='mtgo');\t----- bird -----\tcard_games",
    "398": "SELECT SUM(convertedManaCost) AS total_converted_mana_cost FROM cards WHERE artist = 'Rob Alexander';\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT flavorText FROM foreign_data WHERE language = 'English' AND type = 'Creature';\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT sets.code FROM foreign_data WHERE language = 'Spanish' AND sets.code = foreign_data.language;\t----- bird -----\tcard_games",
    "401": "SELECT SUM(CASE WHEN frameEffects = 'legendary' AND isOnlineOnly = 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM cards WHERE frameEffects = 'legendary';\t----- bird -----\tcard_games",
    "402": "SELECT COUNT(id) AS count, isStorylight, isTextless FROM cards WHERE isStorylight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "403": "SELECT name, percentage FROM (SELECT name, COUNT(*) AS id, language FROM foreign_data GROUP BY name, language) AS foreign_data_grouped, (SELECT COUNT(*) FROM foreign_data WHERE language = 'Spanish') AS spanish_count, (SELECT COUNT(*) FROM foreign_data) AS total_count, (SELECT COUNT(*) FROM foreign_data WHERE language = 'Spanish') / (SELECT COUNT(*) FROM foreign_data) AS spanish_percentage FROM foreign_data_grouped WHERE language = 'Spanish' GROUP BY name ORDER BY spanish_percentage DESC;\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT language FROM foreign_data WHERE uuid IN (SELECT setCode FROM sets WHERE baseSetSize = 309);\t----- bird -----\tcard_games",
    "405": "SELECT COUNT(*) FROM foreign_data WHERE language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "406": "SELECT * FROM cards WHERE type = 'Creature' AND status = 'legal';\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT type FROM cards WHERE language = 'German';\t----- bird -----\tcard_games",
    "408": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%triggered ability%' AND text IS NULL;\t----- bird -----\tcard_games",
    "409": "[SQL] SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%This is a triggered mana ability.%' AND language = 'premodern' AND isFullArt = 0 AND isOnlineOnly = 0 AND isPartialPreview = 0 AND isForeignOnly = 0 AND isNonFoilOnly = 0 AND isOversized = 0 AND isStorySpotlight = 0 AND isTextless = 0 AND isTimeshifted = 0 AND isPromo = 0 AND isReserved = 0 AND isStarter = 0 AND isReprint = 0 AND isAlternative = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND isOnlineOnly = 0 AND is\t----- bird -----\tcard_games",
    "410": "SELECT DISTINCT cards.id FROM cards JOIN foreign_data ON cards.id = foreign_data.uuid JOIN legalities ON cards.id = legalities.uuid JOIN sets ON cards.id = sets.uuid JOIN set_translations ON cards.id = set_translations.setCode JOIN rulings ON cards.id = rulings.uuid WHERE foreign_data.language = 'English' AND legalities.format = 'Pauper' AND sets.isPaper = 1 AND rulings.date = '2022-01-01' AND foreign_data.name = 'Erica Yang' AND cards.availability = 'paper';\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE asciiName = 'Das perfekte Gegenmittel zu einer dichten Formation';\t----- bird -----\tcard_games",
    "412": "SELECT name FROM cards WHERE artist = 'Matthew D. Wilson' AND type = 'Creature' AND layout = 'normal' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "413": "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND date = '2007-02-01';\t----- bird -----\tcard_games",
    "414": "SELECT language FROM set_translations WHERE setCode = 'RAVNICA';\t----- bird -----\tcard_games",
    "415": "SELECT COUNT(hasContentWarning = 0) * 100 / COUNT(ID) AS percentage FROM cards WHERE format = 'commander' AND Status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT percentage FROM (SELECT COUNT(*) AS count_cards_without_power, COUNT(*) AS count_french_cards FROM cards WHERE power IS NULL OR power = '*' GROUP BY language) AS subquery WHERE count_cards_without_power > 0 AND language = 'French';\t----- bird -----\tcard_games",
    "417": "SELECT COUNT(*) / COUNT(DISTINCT language) * 100 AS percentage FROM foreign_data WHERE language = 'Japanese' AND type = 'expansion';\t----- bird -----\tcard_games",
    "418": "SELECT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE artist = 'Daren Bader');\t----- bird -----\tcard_games",
    "419": "SELECT COUNT(*) FROM cards WHERE color = 'colorless' AND borderColor = 'borderless' AND edhrecRank > 12000;\t----- bird -----\tcard_games",
    "420": "SELECT COUNT(*) FROM foreign_data WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;\t----- bird -----\tcard_games",
    "421": "SELECT DISTINCT c.name, c.uuid FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.uuid = s.uuid JOIN set_translations st ON s.code = st.setCode WHERE l.status = 'promotional' AND l.format = 'arena league' AND c.power IS NULL OR c.power = '*' ORDER BY c.name ASC LIMIT 3;\t----- bird -----\tcard_games",
    "422": "SELECT foreign_data.language FROM foreign_data WHERE foreign_data.uuid = (SELECT cards.uuid FROM cards WHERE cards.multiverse = 149934);\t----- bird -----\tcard_games",
    "423": "SELECT DISTINCT t1.id, t1.name, t1.popularity FROM ( SELECT t2.id, t2.name, t2.popularity, t2.cardKingdomFoilId, t2.cardKingdomId FROM cards AS t2 WHERE t2.cardKingdomFoilId IS NOT NULL AND t2.cardKingdomId IS NOT NULL ORDER BY t2.cardKingdomFoilId ASC ) AS t1 WHERE t1.popularity = ( SELECT MAX(t3.popularity) FROM ( SELECT t4.id, t4.name, t4.popularity, t4.cardKingdomFoilId, t4.cardKingdomId FROM cards AS t4 WHERE t4.cardKingdomFoilId IS NOT NULL AND t4.cardKingdomId IS NOT NULL ORDER BY t4.cardKingdomFoilId ASC ) AS t3 ) LIMIT 3;\t----- bird -----\tcard_games",
    "424": "SELECT COUNT(Textless = 1 and layout = 'normal') / COUNT(Textless) * 100 AS proportion FROM cards WHERE isTextless = 1;\t----- bird -----\tcard_games",
    "425": "[SQL] SELECT DISTINCT c.id FROM cards c JOIN foreign_data fd ON c.id = fd.uuid JOIN legalities l ON c.id = l.uuid JOIN sets s ON c.id = s.uuid JOIN set_translations st ON c.id = st.setCode WHERE c.subtypes LIKE '%Angel%' AND c.subtypes LIKE '%Wizard%' AND c.faceIds IS NULL AND s.isForeignOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0 AND s.isNonFoilOnly = 0 AND s.isFoilOnly = 0 AND s.isPartialPreview = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0\t----- bird -----\tcard_games",
    "426": "SELECT DISTINCT sets.name FROM sets JOIN foreign_data ON sets.code = foreign_data.code JOIN legalities ON sets.code = legalities.code WHERE sets.code NOT IN ( SELECT sets.code FROM sets JOIN foreign_data ON sets.code = foreign_data.code JOIN legalities ON sets.code = legalities.code WHERE legalities.status = 'legal' ) ORDER BY sets.name;\t----- bird -----\tcard_games",
    "427": "SELECT language FROM foreign_data WHERE setCode = 'ARC';\t----- bird -----\tcard_games",
    "428": "SELECT name, translation FROM foreign_data WHERE id = 5;\t----- bird -----\tcard_games",
    "429": "SELECT language, type FROM sets WHERE code = '206';\t----- bird -----\tcard_games",
    "430": "SELECT s.id, s.name FROM sets s JOIN set_translations t ON s.code = t.setCode WHERE t.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name;\t----- bird -----\tcard_games",
    "431": "SELECT sets.code FROM sets WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND sets.language = 'Japanese';\t----- bird -----\tcard_games",
    "432": "SELECT MAX(baseSetSize) AS max_set_size FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Russian';\t----- bird -----\tcard_games",
    "433": "SELECT COUNT(isOnlineOnly = 1) * 100 / COUNT(isOnlineOnly) AS percentage FROM foreign_data WHERE language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "434": "SELECT COUNT(*) FROM sets WHERE setCode NOT IN (SELECT setCode FROM sets WHERE mtgoCode IS NOT NULL OR mtgoCode = '');\t----- bird -----\tcard_games",
    "435": "SELECT DISTINCT cards.id FROM cards JOIN foreign_data ON cards.id = foreign_data.uuid JOIN legalities ON cards.id = legalities.uuid WHERE foreign_data.language = 'English' AND legalities.status = 'Legal' AND cards.borderColor = 'black';\t----- bird -----\tcard_games",
    "436": "SELECT id FROM cards WHERE frameEffects = 'extendedart';\t----- bird -----\tcard_games",
    "437": "SELECT * FROM foreign_data WHERE flavorText = 'full artwork' AND language = 'English' AND multiverseid = (SELECT id FROM cards WHERE uuid = (SELECT id FROM foreign_data WHERE flavorText = 'full artwork' AND language = 'English' AND multiverseid = (SELECT id FROM cards WHERE uuid = 'card_uuid')));\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174';\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL';\t----- bird -----\tcard_games",
    "440": "SELECT language FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar');\t----- bird -----\tcard_games",
    "441": "SELECT sets.code FROM sets WHERE sets.releaseDate = '07/13/2007';\t----- bird -----\tcard_games",
    "442": "SELECT sets.baseSetSize, sets.code FROM sets WHERE sets.block = 'Masques' AND sets.block = 'Mirage';\t----- bird -----\tcard_games",
    "443": "SELECT id, name, setCode, totalSetSize, type FROM sets WHERE type = 'expansion';\t----- bird -----\tcard_games",
    "444": "SELECT name FROM cards WHERE flavorText = 'Boros Watermark';\t----- bird -----\tcard_games",
    "445": "SELECT flavorText, language FROM foreign_data WHERE uuid = ( SELECT uuid FROM cards WHERE colorpie_watermark = true );\t----- bird -----\tcard_games",
    "446": "SELECT AVG(convertedManaCost) AS average_converted_mana_cost FROM cards WHERE name = 'Abyssal Horror';\t----- bird -----\tcard_games",
    "447": "SELECT * FROM sets WHERE type = 'expansion' AND card_type = 'commander';\t----- bird -----\tcard_games",
    "448": "SELECT name FROM cards WHERE flavorText = 'Abzan';\t----- bird -----\tcard_games",
    "449": "SELECT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE colorIdentity = 'Azorius');\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL);\t----- bird -----\tcard_games",
    "451": "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '3';\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0;\t----- bird -----\tcard_games",
    "453": "SELECT MAX(converted_mana_cost) AS max_converted_mana_cost FROM cards WHERE name = 'Ancestor's Chosen';\t----- bird -----\tcard_games",
    "454": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL;\t----- bird -----\tcard_games",
    "455": "SELECT DISTINCT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON cards.uuid = set_translations.uuid WHERE legalities.status = 'isPromo' AND foreign_data.language = 'English' AND set_translations.setCode = 'SetCode' AND cards.isPromo = 1 AND cards.faceIds IS NOT NULL;\t----- bird -----\tcard_games",
    "456": "SELECT DISTINCT type FROM cards WHERE name = 'Molimo, Maro-Sorcerer';\t----- bird -----\tcard_games",
    "457": "SELECT * FROM foreign_data WHERE language = 'English' AND multiverseid = (SELECT id FROM cards WHERE uuid = '00000000-0000-0000-0000-000000000000');\t----- bird -----\tcard_games",
    "458": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%black%' AND language = 'English' AND multiverseid IN (SELECT id FROM cards WHERE availability LIKE '%arena,mtgo%');\t----- bird -----\tcard_games",
    "459": "SELECT name, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM foreign_data WHERE flavorText = 'Battra, Dark Destroyer';\t----- bird -----\tcard_games",
    "461": "SELECT name, convertedManaCost FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3;\t----- bird -----\tcard_games",
    "462": "SELECT s.name FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN foreign_data f ON s.code = f.uuid WHERE t.language = 'Italian' AND f.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "463": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%Angel of Mercy%' AND language = 'English';\t----- bird -----\tcard_games",
    "464": "SELECT name FROM cards WHERE setCode = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "465": "SELECT * FROM foreign_data WHERE flavorText LIKE '%Ancestor''s Chosen%' AND language = 'Korean';\t----- bird -----\tcard_games",
    "466": "SELECT COUNT(*) FROM cards WHERE artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "467": "SELECT COUNT(*) FROM sets WHERE code = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "468": "SELECT translation FROM foreign_data WHERE uuid = (SELECT sets.code FROM sets WHERE sets.name = 'Eighth Edition');\t----- bird -----\tcard_games",
    "469": "SELECT * FROM foreign_data WHERE flavorText = 'Angel of Mercy' AND language = 'English' AND multiverseid = (SELECT id FROM cards WHERE name = 'Angel of Mercy');\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE code = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "471": "SELECT set_translations.translation AS expansion_type FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.code = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games",
    "472": "SELECT COUNT(*) FROM foreign_data WHERE language = 'Italian' AND translation IS NOT NULL AND setCode IN (SELECT code FROM sets WHERE block = 'Ice Age');\t----- bird -----\tcard_games",
    "473": "SELECT * FROM foreign_data WHERE flavorText = 'Adarkar Valkyrie' AND language = 'English' AND multiverseid = (SELECT id FROM cards WHERE name = 'Adarkar Valkyrie');\t----- bird -----\tcard_games",
    "474": "SELECT COUNT(*) FROM foreign_data WHERE language = 'Italian' AND translation IS NOT NULL AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "475": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%Coldsnap%' AND borderColor = 'black';\t----- bird -----\tcard_games",
    "476": "SELECT name, convertedManaCost FROM cards WHERE setCode = 'Coldsnap' ORDER BY convertedManaCost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "477": "SELECT DISTINCT artist FROM foreign_data WHERE name = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "478": "SELECT name FROM cards WHERE id = 4 AND setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "479": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND T1.power = '*' OR T1.power IS NULL;\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT flavorText FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen');\t----- bird -----\tcard_games",
    "482": "SELECT name FROM cards WHERE language = 'German' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "483": "SELECT * FROM foreign_data WHERE language = 'Italian' AND setCode = 'Coldsnap' AND type = 'Ruling' AND uuid = (SELECT uuid FROM cards WHERE name = 'Coldsnap');\t----- bird -----\tcard_games",
    "484": "SELECT name, MAX(convertedManaCost) AS max_converted_mana_cost FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE language = 'Italian' GROUP BY name ORDER BY max_converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "485": "SELECT rulings.date FROM rulings WHERE rulings.uuid = (SELECT uuid FROM cards WHERE name = 'Reminisce');\t----- bird -----\tcard_games",
    "486": "SELECT SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) / SUM(1) * 100 AS percentage FROM cards WHERE setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "487": "SELECT SUM(incredibly powerful) / SUM(name = 'Coldsnap') * 100 AS percentage_incredibly_powerful FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "488": "SELECT id FROM sets WHERE releaseDate = '2017-07-14';\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';\t----- bird -----\tcard_games",
    "490": "SELECT sets.code FROM sets WHERE sets.code = 'SS2';\t----- bird -----\tcard_games",
    "491": "SELECT name FROM sets WHERE releaseDate = '2017/6/9';\t----- bird -----\tcard_games",
    "492": "SELECT name FROM sets WHERE code = 'From the Vault: Lore';\t----- bird -----\tcard_games",
    "493": "SELECT setCode FROM sets WHERE name = 'Commander 2014 Oversized';\t----- bird -----\tcard_games",
    "494": "[SQL] SELECT DISTINCT cards.uuid, cards.artist, cards.asciiName, cards.availability, cards.borderColor, cards.cardKingdomFoilId, cards.cardKingdomId, cards.colorIdentity, cards.colorIndicator, cards.colors, cards.convertedManaCost, cards.duelDeck, cards.edhrecRank, cards.faceConvertedManaCost, cards.faceName, cards.flavorName, cards.flavorText, cards.frameEffects, cards.frameVersion, cards.hand, cards.hasAlternativeDeckLimit, cards.hasContentWarning, cards.hasFoil, cards.hasNonFoil, cards.isAlternative, cards.isFullArt, cards.isOnlineOnly, cards.isOversized, cards.isPromo, cards.isReprint, cards.isReserved, cards.isStarter, cards.isStorySpotlight, cards.isTextless, cards.isTimeshifted, cards.keywords, cards.layout, cards.leadershipSkills, cards.life, cards.loyalty, cards.manaCost, cards.mcmId, cards.mcmMetaId, cards.mtgArenaId, cards.mtgjsonV4Id, cards.mtgoFoilId, cards.mtgoId, cards.multiverseId, cards.name, cards.number, cards.originalReleaseDate, cards.originalText, cards.originalType, cards.otherFaceIds, cards.power, cards.printings, cards.promoTypes, cards.purchaseUrls, cards.rarity, cards.scryfallId, cards.scryfallIllustrationId, cards.scryfallOracleId, cards.setCode, cards.side, cards.subtypes, cards.supertypes, cards.tcgplayerProductId, cards.text, cards.toughness, cards.type, cards.types, cards.uuid, cards.variations, cards.watermark FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON cards.uuid = set_translations.uuid WHERE foreign_data.flavorText LIKE '%Jim Pavelec%' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status = 'legal' AND sets.code = 'NAME_1' AND set_translations.language = 'NAME_1' AND legalities.status =\t----- bird -----\tcard_games",
    "495": "SELECT releaseDate FROM sets WHERE code = 'Evacuation';\t----- bird -----\tcard_games",
    "496": "SELECT COUNT(*) FROM sets WHERE code = 'Rinascita di Alara';\t----- bird -----\tcard_games",
    "497": "SELECT set_translations.translation AS expansion_type FROM set_translations WHERE set_translations.setCode = 'Huiti\u00e8me \u00e9dition' AND set_translations.language = 'fr';\t----- bird -----\tcard_games",
    "498": "SELECT DISTINCT foreign_data.name FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid JOIN sets ON cards.set_code = sets.code JOIN set_translations ON sets.code = set_translations.set_code WHERE set_translations.language = 'French' AND cards.name = 'Tendo Ice Bridge';\t----- bird -----\tcard_games",
    "499": "SELECT COUNT(*) FROM foreign_data WHERE language = 'English' AND text LIKE '%Tenth Edition%';\t----- bird -----\tcard_games",
    "500": "SELECT s.name AS set_name FROM sets s JOIN set_translations t ON s.code = t.setCode JOIN foreign_data f ON s.code = f.uuid WHERE f.language = 'Japanese' AND f.name = 'Fellwar Stone';\t----- bird -----\tcard_games",
    "501": "SELECT name, converted_mana_cost FROM cards WHERE set_code = 'Journey into Nyx Hero's Path' ORDER BY converted_mana_cost DESC LIMIT 1;\t----- bird -----\tcard_games",
    "502": "SELECT release_date FROM sets WHERE code = 'Ola de fr\u00edo';\t----- bird -----\tcard_games",
    "503": "[SQL] SELECT sets.code FROM sets WHERE sets.name = 'Samite Pilgrim' AND sets.isForeignOnly = 0 AND sets.isOnlineOnly = 0 AND sets.isPartialPreview = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.isOnlineOnly =\t----- bird -----\tcard_games",
    "504": "SELECT COUNT(*) FROM cards WHERE setCode = 'World Championship Decks 2004' AND convertedManaCost = 3;\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM foreign_data WHERE language = 'Chinese Simplified' AND name = 'Mirrodin';\t----- bird -----\tcard_games",
    "506": "SELECT SUM(isNonFoilOnly = 1) / SUM(language = 'Japanese') * 100 AS percentage_non_foil_japanese FROM foreign_data WHERE language = 'Japanese' AND isNonFoilOnly = 1;\t----- bird -----\tcard_games",
    "507": "SELECT SUM(isOnlineOnly = 1) / SUM(language = 'Portuguese (Brazil)') * 100 AS percentage FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON cards.uuid = set_translations.uuid WHERE foreign_data.language = 'Portuguese (Brazil)' AND legalities.status = 'only available online' AND sets.isOnlineOnly = 1;\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1 AND availability IN ('Printing', 'Printing (Foil)', 'Printing (Non-Foil)');\t----- bird -----\tcard_games",
    "509": "SELECT id, baseSetSize FROM sets WHERE baseSetSize = (SELECT MAX(baseSetSize) FROM sets);\t----- bird -----\tcard_games",
    "510": "SELECT MAX(converted_mana_cost) AS max_converted_mana_cost FROM cards WHERE artist IS NOT NULL AND illustrator IS NOT NULL AND is_alternative IS NOT NULL AND is_full_art IS NOT NULL AND is_online_only IS NOT NULL AND is_timeshifted IS NOT NULL AND is_textless IS NOT NULL AND is_reprint IS NOT NULL AND is_reserved IS NOT NULL AND is_starter IS NOT NULL AND is_story_spotlight IS NOT NULL AND is_textless IS NOT NULL AND is_timeshifted IS NOT NULL AND keywords IS NOT NULL AND layout IS NOT NULL AND leadership_skills IS NOT NULL AND life IS NOT NULL AND loyalty IS NOT NULL AND mana_cost IS NOT NULL AND mcm_id IS NOT NULL AND mcm_meta_id IS NOT NULL AND mtgo_foil_id IS NOT NULL AND mtgo_id IS NOT NULL AND multiverse_id IS NOT NULL AND name IS NOT NULL AND number IS NOT NULL AND original_release_date IS NOT NULL AND original_text IS NOT NULL AND original_type IS NOT NULL AND other_face_ids IS NOT NULL AND power IS NOT NULL AND printings IS NOT NULL AND promo_types IS NOT NULL AND purchase_urls IS NOT NULL AND rarity IS NOT NULL AND scryfall_id IS NOT NULL AND scryfall_illustration_id IS NOT NULL AND scryfall_oracle_id IS NOT NULL AND set_code IS NOT NULL AND side IS NOT NULL AND subtypes IS NOT NULL AND supertypes IS NOT NULL AND tcgplayer_product_id IS NOT NULL AND text IS NOT NULL AND toughness IS NOT NULL AND type IS NOT NULL AND types IS NOT NULL AND uuid IS NOT NULL AND variations IS NOT NULL AND watermark IS NOT NULL AND artist = 'Artist Name' AND illustrator = 'Illustrator Name' AND converted_mana_cost > 0;\t----- bird -----\tcard_games",
    "511": "SELECT MAX(frameEffects) AS most_common_frame_effects FROM foreign_data WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "512": "SELECT COUNT(*) FROM foreign_data WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a';\t----- bird -----\tcard_games",
    "513": "SELECT id FROM sets WHERE expansion_type = 'commander' AND total_set_size = (SELECT MAX(total_set_size) FROM sets WHERE expansion_type = 'commander');\t----- bird -----\tcard_games",
    "514": "SELECT c.id, c.name, c.convertedManaCost FROM cards c WHERE c.format = 'duel' ORDER BY c.convertedManaCost DESC LIMIT 10;\t----- bird -----\tcard_games",
    "515": "SELECT MIN(originalReleaseDate) AS oldest_release_date, MAX(rarity) AS rarity, MAX(format) AS legal_play_formats FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE rarity ='mythic' AND status = 'legal' AND format IN ( SELECT format FROM legalities WHERE status = 'legal' ) GROUP BY rarity, format;\t----- bird -----\tcard_games",
    "516": "SELECT COUNT(*) FROM foreign_data WHERE artist = 'Volkan Ba\u00c7\u00b5a' AND language = 'French';\t----- bird -----\tcard_games",
    "517": "SELECT COUNT(*) FROM foreign_data WHERE flavorText LIKE '%rare enchantment Abundance%' AND status = 'Legal';\t----- bird -----\tcard_games",
    "518": "SELECT play_format, name FROM cards WHERE status = 'Banned' GROUP BY play_format ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcard_games",
    "519": "SELECT language FROM set_translations WHERE setCode = 'Battlebond';\t----- bird -----\tcard_games",
    "520": "SELECT DISTINCT artist FROM cards WHERE artist IN ( SELECT DISTINCT artist FROM cards GROUP BY artist HAVING COUNT(*) = ( SELECT MIN(COUNT(*)) FROM cards GROUP BY artist ) );\t----- bird -----\tcard_games",
    "521": "SELECT * FROM cards WHERE frameStyle = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND hasContentWarning = 1 AND status IN ('status');\t----- bird -----\tcard_games",
    "522": "SELECT DISTINCT cards.name, legalities.status, sets.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned' AND sets.name = 'Play Format'\t----- bird -----\tcard_games",
    "523": "SELECT AVG(sets.baseSetSize) AS average_sets FROM sets JOIN foreign_data ON sets.code = foreign_data.code JOIN legalities ON sets.code = legalities.uuid WHERE sets.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY sets.code;\t----- bird -----\tcard_games",
    "524": "SELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena';\t----- bird -----\tcard_games",
    "525": "SELECT uuid FROM cards WHERE format = 'oldschool' AND (status = 'banned' OR status ='restricted');\t----- bird -----\tcard_games",
    "526": "SELECT COUNT(*) FROM foreign_data WHERE language = 'English' AND name = 'Matthew D. Wilson' AND type = 'card' AND setCode = 'Matthew D. Wilson' AND availability = 'paper';\t----- bird -----\tcard_games",
    "527": "SELECT rulings.text, rulings.date FROM rulings WHERE rulings.uuid = (SELECT uuid FROM cards WHERE artist = 'Kev Walker' ORDER BY date DESC LIMIT 1);\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT cards.name FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.uuid = sets.uuid WHERE sets.name = 'Hour of Devastation'\t----- bird -----\tcard_games",
    "529": "SELECT DISTINCT sets.name FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN foreign_data ON foreign_data.uuid = sets.uuid WHERE set_translations.language = 'Korean' AND NOT EXISTS (SELECT 1 FROM set_translations WHERE set_translations.language = 'Japanese' AND set_translations.setCode = sets.code) AND NOT EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.language = 'Japanese' AND foreign_data.uuid = sets.uuid);\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT f.frameStyle, c.name, c.artist FROM foreign_data f JOIN cards c ON f.uuid = c.uuid WHERE f.language = 'English' AND c.artist = 'Allen Williams'; SELECT DISTINCT c.uuid FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'Banned';\t----- bird -----\tcard_games",
    "531": "SELECT MAX(Reputation) AS max_reputation FROM users;\t----- bird -----\tcodebase_community",
    "532": "SELECT u.DisplayName FROM users u WHERE YEAR(u.CreationDate) = 2011;\t----- bird -----\tcodebase_community",
    "533": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "534": "[SQL] SELECT u.DisplayName AS max_display_name FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments cc ON ph.PostId = cc.PostId JOIN comments ccc ON ph.PostId = ccc.PostId JOIN comments cccc ON ph.PostId = cccc.PostId JOIN comments ccccc ON ph.PostId = ccccc.PostId JOIN comments cccccc ON ph.PostId = cccccc.PostId JOIN comments cccccccc ON ph.PostId = cccccccc.PostId JOIN comments ccccccccc ON ph.PostId = ccccccccc.PostId JOIN comments cccccccccc ON ph.PostId = cccccccccc.PostId JOIN comments cccccccccccc ON ph.PostId = cccccccccccc.PostId JOIN comments ccccccccccccc ON ph.PostId = ccccccccccccc.PostId JOIN comments cccccccccccccc ON ph.PostId = cccccccccccccc.PostId JOIN comments cccccccccccccccc ON ph.PostId = cccccccccccccccc.PostId JOIN comments ccccccccccccccccc ON ph.PostId = ccccccccccccccccc.PostId JOIN comments cccccccccccccccccc ON ph.PostId = cccccccccccccccccc.PostId JOIN comments cccccccccccccccccccc ON ph.PostId = cccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccc\t----- bird -----\tcodebase_community",
    "535": "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1;\t----- bird -----\tcodebase_community",
    "536": "SELECT COUNT(*) FROM users WHERE views > 10 AND creation_date > '2013-01-01';\t----- bird -----\tcodebase_community",
    "537": "SELECT COUNT(*) FROM posts WHERE owner_id = (SELECT id FROM users WHERE display_name = 'csgillespie');\t----- bird -----\tcodebase_community",
    "538": "SELECT posts.Title FROM posts WHERE posts.OwnerUserId = (SELECT UserId FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "539": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Eliciting priors from experts'));\t----- bird -----\tcodebase_community",
    "540": "SELECT p.PostId, p.Title, p.ViewCount, p.OwnerUserId, p.CreationDate, u.DisplayName AS user_name FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "541": "SELECT u.DisplayName AS most_valuable_user, p.Title AS most_valuable_post FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts)\t----- bird -----\tcodebase_community",
    "542": "SELECT SUM(CommentCount) AS total_comments FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "543": "SELECT MAX(AnswerCount) AS max_answers FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "544": "SELECT UserDisplayName FROM users WHERE Id = (SELECT LastEditorUserId FROM postHistory WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation'));\t----- bird -----\tcodebase_community",
    "545": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "546": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "547": "SELECT COUNT(*) FROM posts WHERE posts.PostTypeId = 1 AND posts.OwnerUserId IN (SELECT UserId FROM users WHERE Age > 65 AND Score > 19);\t----- bird -----\tcodebase_community",
    "548": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Eliciting priors from experts'));\t----- bird -----\tcodebase_community",
    "549": "SELECT t.TagName, p.Body FROM tags t JOIN posts p ON t.Id = p.Id WHERE t.TagName = 'bayesian' AND p.PostTypeId = 1;\t----- bird -----\tcodebase_community",
    "550": "SELECT tags.TagName, posts.Body FROM posts JOIN tags ON posts.Id = tags.PostId JOIN postHistory ON posts.Id = postHistory.PostId JOIN comments ON postHistory.PostId = comments.PostId JOIN users ON posts.OwnerUserId = users.Id WHERE postHistory.PostHistoryTypeId = 1 AND comments.Score > 0 AND users.Reputation > 1000 AND users.CreationDate > '2022-01-01' AND tags.Count > 1000 AND tags.ExcerptPostId = posts.Id GROUP BY tags.TagName ORDER BY tags.Count DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "551": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "552": "SELECT b.Name, b.Date FROM badges b WHERE b.UserId = (SELECT UserId FROM comments c WHERE c.PostId = (SELECT Id FROM posts WHERE Title = 'Question'));\t----- bird -----\tcodebase_community",
    "553": "SELECT COUNT(*) FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie' AND CreationDate >= '2011-01-01' AND CreationDate <= '2011-12-31');\t----- bird -----\tcodebase_community",
    "554": "SELECT u.DisplayName AS display_name FROM users u JOIN (SELECT UserId, COUNT(*) AS popularity FROM badges GROUP BY UserId ORDER BY popularity DESC LIMIT 1) AS b ON u.Id = b.UserId;\t----- bird -----\tcodebase_community",
    "555": "SELECT AVG(Score) AS average_score FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "556": "SELECT AVG(views) AS average_views FROM users WHERE views > 200;\t----- bird -----\tcodebase_community",
    "557": "SELECT COUNT(*) / (SELECT COUNT(*) FROM users WHERE Age > 65) * 100 AS percentage FROM posts WHERE Score > 5 AND OwnerUserId IN (SELECT Id FROM users WHERE Age > 65);\t----- bird -----\tcodebase_community",
    "558": "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "559": "SELECT MAX(popularity) AS max_popularity FROM prof;\t----- bird -----\tcodebase_community",
    "560": "SELECT COUNT(*) FROM badges WHERE Name = 'Revival';\t----- bird -----\tcodebase_community",
    "561": "SELECT TOP 1 p.PostId, p.Score, p.Text, p.CreationDate, p.UserId, p.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE c.Score = (SELECT MAX(c2.Score) FROM comments c2 WHERE c2.PostId = p.Id) AND u.Id = (SELECT MAX(u2.Id) FROM users u2 WHERE u2.Id = p.OwnerUserId)\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(*) FROM comments WHERE post_id = (SELECT id FROM posts WHERE view_count = 1910);\t----- bird -----\tcodebase_community",
    "563": "SELECT COUNT(*) FROM comments WHERE UserId = 3025 AND CreationDate = '2014/4/23 20:29:39.0' AND PostId = (SELECT Id FROM posts WHERE OwnerUserId = 3025);\t----- bird -----\tcodebase_community",
    "564": "SELECT text FROM comments WHERE postId = (SELECT Id FROM posts WHERE Id = 107829);\t----- bird -----\tcodebase_community",
    "565": "[SQL] SELECT * FROM comments WHERE UserId = 23853 AND CreationDate = '2013-07-12 09:08:18.0' AND PostId = (SELECT Id FROM posts WHERE OwnerUserId = 23853 AND ClosedDate IS NULL) AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 500 AND DownVotes = 0 AND ProfileImageUrl = 'https://example.com/profile.jpg') AND UserId = (SELECT Id FROM users WHERE AccountId = 23853 AND Age = 23 AND Views = 1000 AND UpVotes = 50\t----- bird -----\tcodebase_community",
    "566": "SELECT MAX(reputation) AS max_reputation FROM users WHERE id = '65041';\t----- bird -----\tcodebase_community",
    "567": "SELECT COUNT(*) FROM posts WHERE owner_display_name = 'Tiago Pasqualini';\t----- bird -----\tcodebase_community",
    "568": "SELECT u.DisplayName FROM users u WHERE u.Id = (SELECT UserId FROM votes WHERE PostId = (SELECT Id FROM posts WHERE Id = 6347));\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM comments WHERE postId = (SELECT Id FROM posts WHERE Title = 'data visualization');\t----- bird -----\tcodebase_community",
    "570": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'DatEpicCoderGuyWhoPrograms');\t----- bird -----\tcodebase_community",
    "571": "SELECT COUNT(DISTINCT post.Id) AS num_posts, COUNT(votes.Id) AS num_votes FROM posts AS post INNER JOIN votes AS votes ON post.Id = votes.PostId WHERE post.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "572": "SELECT COUNT(*) FROM views WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17 AND UserId = (SELECT UserId FROM users WHERE DisplayName = 'John Doe');\t----- bird -----\tcodebase_community",
    "574": "SELECT * FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'SilentGhost');\t----- bird -----\tcodebase_community",
    "576": "SELECT u.DisplayName FROM users u JOIN comments c ON u.Id = c.UserId WHERE c.Text = 'thank you user93';\t----- bird -----\tcodebase_community",
    "577": "SELECT c.Text FROM comments c WHERE c.UserId = (SELECT UserId FROM users WHERE DisplayName = 'A Lion');\t----- bird -----\tcodebase_community",
    "578": "SELECT u.DisplayName, u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT * FROM comments WHERE post_title = 'How does gentle boosting differ from AdaBoost?';\t----- bird -----\tcodebase_community",
    "580": "SELECT u.DisplayName, u.Reputation FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId = ( SELECT Id FROM posts WHERE PostTypeId = 1 AND Score > 0 AND CreationDate > DATE('now', '-1 year') ) GROUP BY u.DisplayName, u.Reputation HAVING COUNT(v.PostId) >= 10 ORDER BY u.Reputation DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "581": "SELECT DisplayName FROM users WHERE Id = (SELECT UserId FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data'));\t----- bird -----\tcodebase_community",
    "582": "SELECT p.Title FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Vebjorn Ljosa' AND ph.CreationDate = (SELECT MAX(ph.CreationDate) FROM postHistory ph2 WHERE ph2.PostId = p.Id);\t----- bird -----\tcodebase_community",
    "583": "SELECT SUM(score) AS total_score, website_url FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Yevgeny' AND posts.LastEditorUserId = users.Id;\t----- bird -----\tcodebase_community",
    "584": "SELECT * FROM comments WHERE post_title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "585": "SELECT SUM(bounty_amount) AS total_bounty_amount FROM posts WHERE title = 'about data';\t----- bird -----\tcodebase_community",
    "586": "SELECT u.DisplayName, u.Reputation, u.CreationDate, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.AccountId, u.Age, u.ProfileImageUrl FROM users u JOIN votes v ON u.AccountId = v.UserId WHERE v.PostId = (SELECT Id FROM posts WHERE Title = 'variance') AND v.VoteTypeId = 1 AND v.CreationDate = (SELECT MAX(CreationDate) FROM votes WHERE PostId = (SELECT Id FROM posts WHERE Title = 'variance'));\t----- bird -----\tcodebase_community",
    "587": "SELECT p.Title, c.Text AS Comment, AVG(p.ViewCount) AS AverageViewCount FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN tags t ON p.PostTypeId = t.PostTypeId WHERE t.TagName = 'humor' GROUP BY p.Title, c.Text ORDER BY AverageViewCount DESC;\t----- bird -----\tcodebase_community",
    "588": "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community",
    "589": "SELECT MAX(Reputation) AS max_reputation FROM users;\t----- bird -----\tcodebase_community",
    "590": "SELECT MIN(Views) AS lowest_views FROM users;\t----- bird -----\tcodebase_community",
    "591": "SELECT COUNT(*) FROM users WHERE EXISTS (SELECT 1 FROM votes WHERE votes.PostId = users.Id AND votes.VoteTypeId = 1 AND votes.CreationDate >= '2011-01-01' AND votes.CreationDate <= '2011-12-31');\t----- bird -----\tcodebase_community",
    "592": "SELECT COUNT(*) FROM users WHERE COUNT(tags.Id) > 5;\t----- bird -----\tcodebase_community",
    "593": "SELECT COUNT(*) FROM users WHERE Location = 'New York' AND Badge IN ('Supporter', 'Teachers');\t----- bird -----\tcodebase_community",
    "594": "SELECT u.DisplayName, u.Reputation FROM users u WHERE u.Id = (SELECT UserId FROM comments c WHERE c.PostId = 1);\t----- bird -----\tcodebase_community",
    "595": "SELECT u.Id, u.DisplayName, COUNT(ph.PostId) AS post_count FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE p.PostTypeId = 1 AND p.Score >= 1 AND p.ViewCount >= 1000 GROUP BY u.Id, u.DisplayName HAVING COUNT(ph.PostId) = 1 ORDER BY post_count DESC;\t----- bird -----\tcodebase_community",
    "596": "SELECT u.UserId, u.DisplayName, COUNT(c.Id) AS CommentCount FROM comments c JOIN users u ON c.UserId = u.Id GROUP BY u.UserId, u.DisplayName ORDER BY CommentCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "597": "SELECT COUNT(*) FROM users WHERE Location = 'India' AND BadgeName = 'Teacher';\t----- bird -----\tcodebase_community",
    "598": "SELECT COUNT(Name) AS total_students, SUM(CASE WHEN Year(Date) = 2010 THEN 1 ELSE 0 END) AS 2010_students, SUM(CASE WHEN Year(Date) = 2011 THEN 1 ELSE 0 END) AS 2011_students, (SUM(CASE WHEN Year(Date) = 2010 THEN 1 ELSE 0 END) - SUM(CASE WHEN Year(Date) = 2011 THEN 1 ELSE 0 END)) / (SUM(CASE WHEN Year(Date) = 2010 THEN 1 ELSE 0 END) + SUM(CASE WHEN Year(Date) = 2011 THEN 1 ELSE 0 END)) * 100 AS percentage_difference FROM badges WHERE Name = 'Student' AND Year(Date) IN (2010, 2011) GROUP BY Name;\t----- bird -----\tcodebase_community",
    "599": "SELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS unique_users FROM postHistory AS ph JOIN comments AS c ON ph.PostId = c.PostId WHERE ph.PostId = 3720 GROUP BY ph.PostHistoryTypeId;\t----- bird -----\tcodebase_community",
    "600": "SELECT p.PostId, p.PostTypeId, p.Score, p.ViewCount, p.Body, p.OwnerUserId, p.LasActivityDate, p.Title, p.Tags, p.AnswerCount, p.CommentCount, p.FavoriteCount, p.LastEditorUserId, p.LastEditDate, p.CommunityOwnedDate, p.ParentId, p.ClosedDate, p.OwnerDisplayName, p.LastEditorDisplayName FROM posts p JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN users u ON p.OwnerUserId = u.Id WHERE ph.PostId = 61217;\t----- bird -----\tcodebase_community",
    "601": "[SQL] SELECT p.PostTypeId, p.Score, p.PostHistoryTypeId, p.PostId, p.CreationDate, p.UserId, p.UserDisplayName, p.PostLinks.RelatedPostId, p.PostLinks.LinkTypeId, p.Tags.TagName, p.Tags.Count, p.Posts.OwnerUserId, p.Posts.CreaionDate, p.Posts.Score, p.Posts.ViewCount, p.Posts.Body, p.Posts.OwnerDisplayName, p.Posts.LastEditorUserId, p.Posts.LastEditDate, p.Posts.CommunityOwnedDate, p.Posts.ParentId, p.Posts.ClosedDate, p.Posts.AnswerCount, p.Posts.CommentCount, p.Posts.FavoriteCount, p.Posts.LastEditorDisplayName, p.Posts.LastAccessDate, p.Posts.WebsiteUrl, p.Posts.Location, p.Posts.AboutMe, p.Posts.Views, p.Posts.UpVotes, p.Posts.DownVotes, u.Id AS UserId, u.Reputation, u.CreationDate, u.DisplayName, u.LastAccessDate, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, v.Id AS VoteTypeId, v.CreationDate, v.UserId, v.BountyAmount, v.PostId, v.PostTypeId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate, v.UserId, v.VoteTypeId, v.CreationDate,\t----- bird -----\tcodebase_community",
    "602": "SELECT p.Id, u.Id AS user_id FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 60;\t----- bird -----\tcodebase_community",
    "603": "SELECT SUM(favorited_count) FROM users WHERE id = 686 AND YEAR(creation_date) = 2011;\t----- bird -----\tcodebase_community",
    "604": "SELECT AVG(up_votes) AS average_up_votes, AVG(age) AS average_age FROM users WHERE id IN ( SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(*) > 10 );\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(*) FROM users WHERE user_id IN (SELECT user_id FROM votes WHERE vote_type_id = (SELECT id FROM vote_types WHERE name = 'Announcer'));\t----- bird -----\tcodebase_community",
    "606": "SELECT b.Name FROM badges b JOIN comments c ON b.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.CreationDate = '2010-07-19 19:39:08.0' AND u.CreationDate = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE score > 60;\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47.0';\t----- bird -----\tcodebase_community",
    "609": "SELECT COUNT(*) FROM posts WHERE score = 10;\t----- bird -----\tcodebase_community",
    "610": "SELECT MAX(Reputation) AS max_reputation FROM users;\t----- bird -----\tcodebase_community",
    "611": "[SQL] SELECT u.Reputation AS reputation FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments cc ON ph.PostId = cc.PostId JOIN comments ccc ON ph.PostId = ccc.PostId JOIN comments cccc ON ph.PostId = cccc.PostId JOIN comments ccccc ON ph.PostId = ccccc.PostId JOIN comments cccccc ON ph.PostId = cccccc.PostId JOIN comments cccccccc ON ph.PostId = cccccccc.PostId JOIN comments ccccccccc ON ph.PostId = ccccccccc.PostId JOIN comments cccccccccc ON ph.PostId = cccccccccc.PostId JOIN comments cccccccccccc ON ph.PostId = cccccccccccc.PostId JOIN comments ccccccccccccc ON ph.PostId = ccccccccccccc.PostId JOIN comments cccccccccccccc ON ph.PostId = cccccccccccccc.PostId JOIN comments cccccccccccccccc ON ph.PostId = cccccccccccccccc.PostId JOIN comments ccccccccccccccccc ON ph.PostId = ccccccccccccccccc.PostId JOIN comments cccccccccccccccccc ON ph.PostId = cccccccccccccccccc.PostId JOIN comments cccccccccccccccccccc ON ph.PostId = cccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccc\t----- bird -----\tcodebase_community",
    "612": "SELECT Name FROM badges WHERE UserId = (SELECT UserId FROM users WHERE DisplayName = 'Pierre');\t----- bird -----\tcodebase_community",
    "613": "SELECT p.CreationDate, p.PostTypeId, p.Score, p.ViewCount, p.Body, p.OwnerUserId, p.LasActivityDate, p.Title, p.Tags, p.AnswerCount, p.CommentCount, p.FavoriteCount, p.LastEditorUserId, p.LastEditDate, p.CommunityOwnedDate, p.ParentId, p.ClosedDate, p.OwnerDisplayName, p.LastEditorDisplayName FROM posts p WHERE p.OwnerDisplayName = 'Rochester, NY' AND p.OwnerUserId = (SELECT UserId FROM users WHERE DisplayName = 'Rochester, NY');\t----- bird -----\tcodebase_community",
    "614": "SELECT COUNT(DISTINCT UserId) AS total_teachers, COUNT(DISTINCT UserId) * 100.0 / COUNT(DISTINCT UserId) AS percentage FROM comments WHERE UserId IN (SELECT UserId FROM posts WHERE PostTypeId = 1 AND Score > 0 AND CreationDate > '2022-01-01') AND UserId IN (SELECT UserId FROM users WHERE DisplayName = 'Teacher');\t----- bird -----\tcodebase_community",
    "615": "SELECT COUNT(*) / (SELECT COUNT(*) FROM users WHERE Age BETWEEN 13 AND 18) * 100 AS percentage FROM users WHERE Badge = 'Organizer';\t----- bird -----\tcodebase_community",
    "616": "To find the comment's rating score of the post created on 7/19/2010 7:19:56 PM, we need to join the \"comments\" table with the \"posts\" table using the \"PostId\" column. Then, we need to filter the results to only include comments that were created on or after 7/19/2010 7:19:56 PM. Finally, we need to calculate the rating score by summing up the \"Score\" column of the filtered comments. Here's the SQL statement to achieve this: ```sql SELECT SUM(comments.Score) AS rating_score FROM comments JOIN posts ON comments.PostId = posts.Id WHERE posts.CreationDate >= '2010-07-19 19:19:56.0'; ``` This statement will return the sum of the \"Score\" column of all comments that were created on or after 7/19/2010 7:19:56 PM.\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33.0';\t----- bird -----\tcodebase_community",
    "618": "SELECT u.Age, u.DisplayName FROM users u WHERE u.Location = 'Vienna, Austria' AND EXISTS (SELECT 1 FROM votes v WHERE v.PostId = u.Id AND v.VoteTypeId = 1);\t----- bird -----\tcodebase_community",
    "619": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UserId IN (SELECT UserId FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE PostTypeId = 1 AND Score = 1));\t----- bird -----\tcodebase_community",
    "620": "SELECT COUNT(*) FROM users WHERE users.Id = (SELECT UserId FROM comments WHERE comments.PostId = (SELECT Id FROM posts WHERE posts.PostTypeId = 1 AND posts.CreationDate = '2010-07-19 19:39:08.0' AND posts.Score = 1));\t----- bird -----\tcodebase_community",
    "621": "SELECT UserId, Name, Date FROM badges WHERE Reputation = (SELECT MIN(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "622": "SELECT b.Name FROM badges AS b WHERE b.UserId = (SELECT UserId FROM comments WHERE Score = 1 AND Text = 'Sharpie');\t----- bird -----\tcodebase_community",
    "623": "SELECT COUNT(*) FROM users WHERE Age > 65 AND UserId IN (SELECT UserId FROM badges WHERE Name = 'Supporter');\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30;\t----- bird -----\tcodebase_community",
    "625": "SELECT COUNT(*) FROM users WHERE Location = 'New York';\t----- bird -----\tcodebase_community",
    "626": "SELECT COUNT(*) FROM votes WHERE CreationDate >= '2010-01-01' AND CreationDate <= '2010-12-31';\t----- bird -----\tcodebase_community",
    "627": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "628": "SELECT u.DisplayName, MAX(u.Views) AS max_views FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%') WHERE p.PostTypeId = 1 AND p.ClosedDate IS NULL GROUP BY u.DisplayName ORDER BY max_views DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "629": "SELECT COUNT(Id where YEAR(CreationDate) = 2010) / COUNT(Id where YEAR(CreationDate) = 2011) FROM votes;\t----- bird -----\tcodebase_community",
    "630": "SELECT tags.TagName FROM tags WHERE tags.TagName = 'John Salvatier';\t----- bird -----\tcodebase_community",
    "631": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo');\t----- bird -----\tcodebase_community",
    "632": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Harlan');\t----- bird -----\tcodebase_community",
    "633": "SELECT p.Id, p.PostTypeId, p.AcceptedAnswerId, p.CreaionDate, p.Score, p.ViewCount, p.Body, p.OwnerUserId, p.LasActivityDate, p.Title, p.Tags, p.AnswerCount, p.CommentCount, p.FavoriteCount, p.LastEditorUserId, p.LastEditDate, p.CommunityOwnedDate, p.ParentId, p.ClosedDate, p.OwnerDisplayName, p.LastEditorDisplayName, u.Id, u.Reputation, u.CreationDate, u.DisplayName, u.LastAccessDate, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.AccountId, u.Age, u.ProfileImageUrl, v.Id, v.PostId, v.VoteTypeId, v.CreationDate, v.UserId, v.BountyAmount FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id INNER JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName ='slashnick' AND p.PostTypeId = 2 AND p.AcceptedAnswerId IS NULL AND p.CreaionDate > '2022-01-01' AND p.Score > 0 AND p.ViewCount > 0 AND p.Body IS NOT NULL AND p.OwnerUserId IS NOT NULL AND p.LasActivityDate IS NOT NULL AND p.Title IS NOT NULL AND p.Tags IS NOT NULL AND p.AnswerCount > 0 AND p.CommentCount > 0 AND p.FavoriteCount > 0 AND p.LastEditorUserId IS NOT NULL AND p.LastEditDate IS NOT NULL AND p.CommunityOwnedDate IS NOT NULL AND p.ParentId IS NOT NULL AND p.ClosedDate IS NOT NULL AND p.OwnerDisplayName IS NOT NULL AND p.LastEditorDisplayName IS NOT NULL AND v.Id IS NOT NULL AND v.PostId IS NOT NULL AND v.VoteTypeId IS NOT NULL AND v.CreationDate IS NOT NULL AND v.UserId IS NOT NULL AND v.BountyAmount IS NOT NULL GROUP BY p.Id, p.PostTypeId, p.AcceptedAnswerId, p.CreaionDate, p.Score, p.ViewCount, p.Body, p.OwnerUserId, p.LasActivityDate, p.Title, p.Tags, p.AnswerCount, p.CommentCount, p.FavoriteCount, p.LastEditorUserId, p.LastEditDate, p.CommunityOwnedDate, p.ParentId, p.ClosedDate, p.OwnerDisplayName, p.LastEditorDisplayName, u.Id, u.Reputation, u.CreationDate, u.DisplayName, u.LastAccessDate, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.AccountId, u.Age, u.ProfileImageUrl, v.Id, v.PostId, v.VoteTypeId, v.CreationDate, v.UserId, v.BountyAmount HAVING MAX(p.AnswerCount) = (SELECT MAX(p2.AnswerCount) FROM posts p2 WHERE p2.OwnerUserId = u.Id AND p2.PostTypeId = 2 AND p2.AcceptedAnswerId IS NULL AND p2.CreaionDate > '2022-01-01' AND p2.Score > 0 AND p2.ViewCount > 0 AND p2.Body IS NOT NULL AND p2.OwnerUserId IS NOT NULL AND p2.LasActivityDate IS NOT NULL AND p2.Title IS NOT NULL AND p2.Tags IS NOT NULL AND p2.AnswerCount > 0 AND p2.CommentCount > 0 AND p2.FavoriteCount > 0 AND p2.LastEditorUserId IS NOT NULL AND p2.LastEditDate IS NOT NULL AND p2.CommunityOwnedDate IS NOT NULL AND p2.ParentId IS NOT NULL AND p2.ClosedDate IS NOT NULL AND p2.OwnerDisplayName IS NOT NULL AND p2.LastEditorDisplayName IS NOT NULL AND v.Id IS NOT NULL AND v.PostId IS NOT NULL AND v.VoteTypeId IS NOT NULL AND v.CreationDate IS NOT NULL AND v.UserId IS NOT NULL AND v.BountyAmount IS NOT NULL)\t----- bird -----\tcodebase_community",
    "634": "SELECT MAX(popularity) AS max_popularity FROM prof WHERE DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder';\t----- bird -----\tcodebase_community",
    "635": "SELECT COUNT(*) FROM posts WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Matt Parker');\t----- bird -----\tcodebase_community",
    "636": "SELECT COUNT(*) FROM comments WHERE UserId = (SELECT UserId FROM users WHERE DisplayName = 'Neil McGuigan' AND Reputation > 60) AND Score < 60;\t----- bird -----\tcodebase_community",
    "637": "SELECT t.TagName, COUNT(*) AS count FROM tags t JOIN posts p ON t.ExcerptPostId = p.Id WHERE p.OwnerDisplayName = 'Mark Meckes' AND p.CommentCount = 0 GROUP BY t.TagName HAVING COUNT(*) > 1;\t----- bird -----\tcodebase_community",
    "638": "[SQL] SELECT DISTINCT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments cc ON ph.PostId = cc.PostId JOIN comments ccc ON ph.PostId = ccc.PostId JOIN comments cccc ON ph.PostId = cccc.PostId JOIN comments ccccc ON ph.PostId = ccccc.PostId JOIN comments cccccc ON ph.PostId = cccccc.PostId JOIN comments cccccccc ON ph.PostId = cccccccc.PostId JOIN comments ccccccccc ON ph.PostId = ccccccccc.PostId JOIN comments cccccccccc ON ph.PostId = cccccccccc.PostId JOIN comments cccccccccccc ON ph.PostId = cccccccccccc.PostId JOIN comments ccccccccccccc ON ph.PostId = ccccccccccccc.PostId JOIN comments cccccccccccccc ON ph.PostId = cccccccccccccc.PostId JOIN comments cccccccccccccccc ON ph.PostId = cccccccccccccccc.PostId JOIN comments ccccccccccccccccc ON ph.PostId = ccccccccccccccccc.PostId JOIN comments cccccccccccccccccc ON ph.PostId = cccccccccccccccccc.PostId JOIN comments cccccccccccccccccccc ON ph.PostId = cccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId =\t----- bird -----\tcodebase_community",
    "639": "SELECT COUNT(PostId) as total_posts, COUNT(PostId WHERE DisplayName = 'Community') as community_posts, COUNT(PostId WHERE TagName = 'r') as r_posts, (COUNT(PostId WHERE DisplayName = 'Community') / COUNT(PostId)) * 100 as community_percentage, (COUNT(PostId WHERE TagName = 'r') / COUNT(PostId)) * 100 as r_percentage FROM posts;\t----- bird -----\tcodebase_community",
    "640": "SELECT SUM(ViewCount) AS view_count_mornington, SUM(ViewCount) AS view_count_amos FROM posts WHERE DisplayName = 'Mornington' AND DisplayName = 'Amos';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(*) FROM users WHERE YEAR(CreationDate) = 2014 AND UserId IN (SELECT UserId FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE PostTypeId = 1 AND CreationDate >= '2014-01-01' AND CreationDate <= '2014-12-31'));\t----- bird -----\tcodebase_community",
    "642": "SELECT COUNT(*) FROM posts WHERE CreationDate >= '2010-07-21 00:00:00' AND CreationDate <= '2012-07-21 23:59:59';\t----- bird -----\tcodebase_community",
    "643": "SELECT u.DisplayName, u.Age FROM users u JOIN ( SELECT UserId, MAX(Views) AS max_views FROM posts GROUP BY UserId ) p ON u.Id = p.UserId WHERE p.max_views = ( SELECT MAX(Views) FROM ( SELECT UserId, MAX(Views) AS max_views FROM posts GROUP BY UserId ) p2 )\t----- bird -----\tcodebase_community",
    "644": "SELECT CreationDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';\t----- bird -----\tcodebase_community",
    "645": "SELECT COUNT(*) FROM comments WHERE UserId = 13 AND Score < 60;\t----- bird -----\tcodebase_community",
    "646": "SELECT p.PostId, p.Title, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60 GROUP BY p.PostId, p.Title, u.DisplayName ORDER BY max_popularity DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "647": "SELECT * FROM users WHERE location = 'North Pole' AND YEAR(creation_date) = 2011;\t----- bird -----\tcodebase_community",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments ca ON ph.PostId = ca.PostId WHERE p.FavoriteCount > 150 GROUP BY u.DisplayName, u.WebsiteUrl HAVING COUNT(DISTINCT c.PostId) > 0 AND COUNT(DISTINCT ca.PostId) > 0 ORDER BY u.DisplayName;\t----- bird -----\tcodebase_community",
    "649": "SELECT COUNT(DISTINCT(post_history_type_id)) AS post_history_count, MAX(creation_date) AS last_edit_date FROM post_history WHERE post_id = (SELECT id FROM posts WHERE title = 'What is the best introductory Bayesian statistics textbook?');\t----- bird -----\tcodebase_community",
    "650": "SELECT users.DisplayName, users.LastAccessDate, users.Location FROM users JOIN posts ON users.Id = posts.OwnerUserId JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.PostTypeId = 1 AND posts.PostHistoryTypeId = 1 AND postHistory.CreationDate >= '2022-01-01' AND postHistory.CreationDate <= '2022-12-31' AND postHistory.PostId = posts.Id AND postHistory.UserId = users.Id AND postHistory.Comment = 'outliers' GROUP BY users.DisplayName, users.LastAccessDate, users.Location ORDER BY users.DisplayName, users.LastAccessDate, users.Location;\t----- bird -----\tcodebase_community",
    "651": "SELECT MAX(popularity) AS max_popularity FROM prof;\t----- bird -----\tcodebase_community",
    "652": "SELECT p.Id, b.Name FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN comments c ON p.Id = c.PostId JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON p.Id = pl.PostId JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%') JOIN votes v ON p.Id = v.PostId JOIN badges b ON p.Id = b.Id WHERE u.DisplayName = 'Samuel' AND YEAR(p.CreationDate) = 2013;\t----- bird -----\tcodebase_community",
    "653": "SELECT p.OwnerDisplayName AS most_popular_post_owner_display_name FROM posts p JOIN ( SELECT post_id, MAX(view_count) AS max_view_count FROM post_history GROUP BY post_id ) max_views ON p.id = max_views.post_id JOIN post_history ph ON p.id = ph.post_id WHERE ph.creation_date = ( SELECT MAX(creation_date) FROM post_history WHERE post_id = p.id )\t----- bird -----\tcodebase_community",
    "654": "SELECT DisplayName, Location FROM users WHERE OwnerUserId = (SELECT UserId FROM posts WHERE PostTypeId = 1 AND TagName = 'hypothesis-testing');\t----- bird -----\tcodebase_community",
    "655": "SELECT t1.title, t2.link_type_id FROM posts AS t1 JOIN post_history AS t2 ON t1.id = t2.post_id JOIN comments AS t3 ON t1.id = t3.post_id JOIN users AS t4 ON t1.owner_userid = t4.id JOIN votes AS t5 ON t1.id = t5.post_id WHERE t1.title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT p.Name, p.Date, u.DisplayName AS parent_display_name FROM badges p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE p.Id = (SELECT MAX(p.Id) FROM badges p WHERE p.Date = (SELECT MAX(p.Date) FROM badges p)) GROUP BY p.Id, u.Id ORDER BY p.Date DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "657": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%') WHERE v.VoteTypeId = 8 GROUP BY u.DisplayName, u.WebsiteUrl ORDER BY u.Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "658": "SELECT TOP 5 posts.Title, posts.ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId WHERE users.Reputation > 1000 GROUP BY posts.Title, posts.ViewCount ORDER BY posts.ViewCount DESC;\t----- bird -----\tcodebase_community",
    "659": "SELECT COUNT(*) FROM tags WHERE COUNT(*) BETWEEN 5000 AND 7000;\t----- bird -----\tcodebase_community",
    "660": "SELECT u.Id AS owner_user_id FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments ca ON ph.PostId = ca.PostId WHERE ph.Score = (SELECT MAX(Score) FROM comments) AND c.Score = (SELECT MAX(Score) FROM comments) AND ca.Score = (SELECT MAX(Score) FROM comments) AND p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts) AND p.Score = (SELECT MAX(Score) FROM posts) AND p.ViewCount = (SELECT MAX(ViewCount) FROM posts) AND p.CommentCount = (SELECT MAX(CommentCount) FROM posts) AND p.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts) AND p.LastEditorUserId = (SELECT MAX(LastEditorUserId) FROM posts) AND p.LastEditDate = (SELECT MAX(LastEditDate) FROM posts) AND p.CommunityOwnedDate = (SELECT MAX(CommunityOwnedDate) FROM posts) AND p.ParentId = (SELECT MAX(ParentId) FROM posts) AND p.ClosedDate = (SELECT MAX(ClosedDate) FROM posts) AND p.OwnerDisplayName = (SELECT MAX(OwnerDisplayName) FROM posts) AND p.LastEditorDisplayName = (SELECT MAX(LastEditorDisplayName) FROM posts) AND p.Tags.TagName ='most-valuable-post' AND p.PostTypeId = 1;\t----- bird -----\tcodebase_community",
    "661": "SELECT MAX(Reputation) AS max_popularity FROM users WHERE Age = (SELECT MAX(Age) FROM users);\t----- bird -----\tcodebase_community",
    "662": "SELECT COUNT(*) FROM posts WHERE CreationDate = '2011-01-01' AND Votes.VoteTypeId = 1 AND Votes.UserId = users.Id AND posts.PostTypeId = 1 AND posts.OwnerUserId = users.Id AND posts.AcceptedAnswerId IS NULL AND posts.Score >= 50;\t----- bird -----\tcodebase_community",
    "663": "SELECT MIN(Age) AS youngest_age FROM users;\t----- bird -----\tcodebase_community",
    "664": "SELECT SUM(score) FROM posts WHERE CreationDate = '2010-07-19';\t----- bird -----\tcodebase_community",
    "665": "SELECT AVG(COUNT(Id where YEAR(CreationDate) = 2010 and AnswerCount < = 2)) AS average_monthly_links FROM postHistory WHERE PostId IN (SELECT Id FROM posts WHERE AnswerCount < = 2) GROUP BY MONTH(CreationDate);\t----- bird -----\tcodebase_community",
    "666": "[SQL] SELECT p.Id, p.PostTypeId, p.AcceptedAnswerId, p.CreaionDate, p.Score, p.ViewCount, p.Body, p.OwnerUserId, p.LasActivityDate, p.Title, p.Tags, p.AnswerCount, p.CommentCount, p.FavoriteCount, p.LastEditorUserId, p.LastEditDate, p.CommunityOwnedDate, p.ParentId, p.ClosedDate, p.OwnerDisplayName, p.LastEditorDisplayName, u.Id AS userId, u.Reputation, u.CreationDate, u.DisplayName, u.LastAccessDate, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.AccountId, u.Age, u.ProfileImageUrl, v.Id AS voteId, v.PostId, v.VoteTypeId, v.CreationDate, v.UserId, v.BountyAmount FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id INNER JOIN votes v ON p.Id = v.PostId WHERE p.OwnerUserId = 1465 AND p.PostTypeId = 1 AND p.AcceptedAnswerId IS NULL AND p.CreaionDate = (SELECT MAX(p2.CreaionDate) FROM posts p2 WHERE p2.OwnerUserId = 1465 AND p2.PostTypeId = 1 AND p2.AcceptedAnswerId IS NULL) AND p.Score >= 10 AND p.ViewCount >= 100 AND p.Body LIKE '%important%' AND p.OwnerUserId IN (SELECT UserId FROM comments WHERE PostId = 1465 AND Score >= 10 AND CreationDate >= (SELECT MAX(CreationDate) FROM comments WHERE PostId = 1465 AND Score >= 10 AND CreationDate >= (SELECT MAX(CreationDate) FROM comments WHERE PostId = 1465 AND Score >= 10 AND CreationDate >= (SELECT MAX(CreationDate) FROM comments WHERE PostId = 1465 AND Score >= 10 AND CreationDate >= (SELECT MAX(CreationDate) FROM comments WHERE PostId = 1465 AND Score >= 10)))) AND p.OwnerUserId IN (SELECT UserId FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465)))) AND p.OwnerUserId IN (SELECT UserId FROM postLinks WHERE PostId = 1465 AND RelatedPostId = 1465 AND LinkTypeId = 1 AND CreationDate >= (SELECT MAX(CreationDate) FROM postLinks WHERE PostId = 1465 AND RelatedPostId = 1465 AND LinkTypeId = 1 AND CreationDate >= (SELECT MAX(CreationDate) FROM postLinks WHERE PostId = 1465 AND RelatedPostId = 1465 AND LinkTypeId = 1 AND CreationDate >= (SELECT MAX(CreationDate) FROM postLinks WHERE PostId = 1465 AND RelatedPostId = 1465 AND LinkTypeId = 1)))) AND p.OwnerUserId IN (SELECT UserId FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465)))) AND p.OwnerUserId IN (SELECT UserId FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465)))) AND p.OwnerUserId IN (SELECT UserId FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE PostId = 1465 AND CreationDate >= (SELECT MAX(CreationDate) FROM postHistory WHERE Post\t----- bird -----\tcodebase_community",
    "667": "[SQL] SELECT p.PostId, p.CreationDate, p.Score, p.Text, p.UserId, u.DisplayName, u.Age, u.WebsiteUrl, u.Location, u.AboutMe, u.Views, u.UpVotes, u.DownVotes, u.AccountId, u.Age, u.ProfileImageUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.PostTypeId = 1 AND p.Score > 10 AND p.CreationDate > '2022-01-01' AND p.Score < 50 AND p.OwnerUserId IN (SELECT UserId FROM comments WHERE PostId = p.PostId AND Score > 0) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 1 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postLinks WHERE RelatedPostId = p.PostId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 2 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 3 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 4 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 5 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 6 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 7 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 8 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 9 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 10 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 11 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 12 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 13 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 14 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 15 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 16 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 17 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 18 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 19 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 20 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 21 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 22 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 23 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 24 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 25 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 26 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 27 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 28 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT PostId FROM postHistory WHERE PostHistoryTypeId = 29 AND UserId = p.OwnerUserId) AND p.PostId IN (SELECT\t----- bird -----\tcodebase_community",
    "668": "SELECT u.DisplayName AS display_name FROM users u JOIN ( SELECT UserId, MAX(popularity) AS max_popularity FROM ( SELECT UserId, COUNT(Name) AS popularity FROM badges GROUP BY UserId ) AS subquery GROUP BY UserId ) AS subquery2 ON u.Id = subquery2.UserId WHERE subquery2.max_popularity = ( SELECT MAX(popularity) AS max_popularity FROM ( SELECT UserId, COUNT(Name) AS popularity FROM badges GROUP BY UserId ) AS subquery GROUP BY UserId )\t----- bird -----\tcodebase_community",
    "669": "SELECT MAX(CreationDate) AS first_vote_date FROM votes WHERE UserId = (SELECT MIN(UserId) FROM votes WHERE PostId = (SELECT MIN(PostId) FROM posts WHERE DisplayName = 'chl'));\t----- bird -----\tcodebase_community",
    "670": "SELECT MIN(Age) AS youngest_age FROM users;\t----- bird -----\tcodebase_community",
    "671": "[SQL] SELECT u.DisplayName AS display_name FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id JOIN postHistory ph ON p.Id = ph.PostId JOIN comments c ON ph.PostId = c.PostId JOIN comments cc ON ph.PostId = cc.PostId JOIN comments ccc ON ph.PostId = ccc.PostId JOIN comments cccc ON ph.PostId = cccc.PostId JOIN comments ccccc ON ph.PostId = ccccc.PostId JOIN comments cccccc ON ph.PostId = cccccc.PostId JOIN comments cccccccc ON ph.PostId = cccccccc.PostId JOIN comments ccccccccc ON ph.PostId = ccccccccc.PostId JOIN comments cccccccccc ON ph.PostId = cccccccccc.PostId JOIN comments cccccccccccc ON ph.PostId = cccccccccccc.PostId JOIN comments ccccccccccccc ON ph.PostId = ccccccccccccc.PostId JOIN comments cccccccccccccc ON ph.PostId = cccccccccccccc.PostId JOIN comments cccccccccccccccc ON ph.PostId = cccccccccccccccc.PostId JOIN comments ccccccccccccccccc ON ph.PostId = ccccccccccccccccc.PostId JOIN comments cccccccccccccccccc ON ph.PostId = cccccccccccccccccc.PostId JOIN comments cccccccccccccccccccc ON ph.PostId = cccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = ccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments cccccccccccccccccccccccccccccccccccccccccccccccc ON ph.PostId = cccccccccccccccccccccccccccccccccccccccccccccccc.PostId JOIN comments ccccccccccccc\t----- bird -----\tcodebase_community",
    "672": "SELECT COUNT(*) FROM users WHERE Location = 'United Kingdom' AND FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "673": "SELECT AVG(PostId) AS average_posts_voted, MAX(Age) AS oldest_user_age FROM votes GROUP BY UserId;\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE reputation > 2000 AND views > 1000;\t----- bird -----\tcodebase_community",
    "676": "SELECT display_name FROM users WHERE age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community",
    "677": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Jay Stevens' AND CreationDate = YEAR(CreationDate) = 2010);\t----- bird -----\tcodebase_community",
    "678": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN votes v ON p.Id = v.PostId WHERE u.DisplayName = 'Harvey Motulsky' GROUP BY p.Id, p.Title ORDER BY p.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "679": "SELECT p.Id, p.Title FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN comments c ON p.Id = c.PostId JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON p.Id = pl.PostId JOIN tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%') JOIN votes v ON p.Id = v.PostId WHERE u.Reputation > 10000 AND c.Score > 0 AND ph.CreationDate > '2022-01-01' AND ph.CreationDate < '2022-12-31' AND pl.RelatedPostId > 0 AND pl.RelatedPostId < 10000 AND t.Count > 100 AND v.VoteTypeId = 1 AND v.CreationDate > '2022-01-01' AND v.CreationDate < '2022-12-31' GROUP BY p.Id, p.Title ORDER BY p.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "680": "SELECT AVG(Score) AS average_score FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Stephen Turner');\t----- bird -----\tcodebase_community",
    "681": "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE YEAR(ph.CreationDate) = 2011 GROUP BY u.DisplayName HAVING COUNT(p.Id) > 20000;\t----- bird -----\tcodebase_community",
    "682": "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE YEAR(p.CreationDate) = 2010 GROUP BY p.OwnerUserId ORDER BY MAX(p.FavoriteCount) DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "683": "SELECT PERCENTILE(percentage) OVER(PARTITION BY YEAR(CreationDate) ORDER BY Reputation DESC) AS percentage FROM (SELECT COUNT(Id) AS count, YEAR(CreationDate) AS year, Reputation AS reputation FROM posts WHERE Reputation > 1000 GROUP BY YEAR(CreationDate), Reputation) AS subquery;\t----- bird -----\tcodebase_community",
    "684": "SELECT AVG(Age) as average_age FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community",
    "685": "SELECT COUNT(*) AS total_views, DisplayName AS user_name FROM posts WHERE Text = 'Computer Game Datasets' AND OwnerUserId = (SELECT MAX(UserId) FROM votes WHERE PostId = (SELECT MAX(Id) FROM posts WHERE Text = 'Computer Game Datasets'));\t----- bird -----\tcodebase_community",
    "686": "SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts);\t----- bird -----\tcodebase_community",
    "687": "SELECT COUNT(*) FROM comments WHERE post_id = (SELECT MAX(post_id) FROM posts);\t----- bird -----\tcodebase_community",
    "688": "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;\t----- bird -----\tcodebase_community",
    "689": "SELECT u.DisplayName, u.Location FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN postHistory ph ON p.Id = ph.PostId WHERE p.Id = 183 AND ph.CreationDate = (SELECT MAX(ph2.CreationDate) FROM postHistory ph2 WHERE ph2.PostId = p.Id) AND ph.UserId = u.Id;\t----- bird -----\tcodebase_community",
    "690": "SELECT MAX(Date) AS latest_badge_date FROM badges WHERE Name = 'Emmett';\t----- bird -----\tcodebase_community",
    "691": "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;\t----- bird -----\tcodebase_community",
    "692": "[SQL] SELECT MAX(stats_badges.Date) - stats_badges.CreationDate AS time_to_badge FROM users AS u JOIN votes AS v ON u.Id = v.UserId JOIN posts AS p ON v.PostId = p.Id JOIN comments AS c ON p.Id = c.PostId JOIN postHistory AS ph ON p.Id = ph.PostId JOIN postLinks AS pl ON p.Id = pl.PostId JOIN tags AS t ON p.Id = t.PostId JOIN badges AS b ON p.Id = b.Id WHERE u.DisplayName = 'Zolomon' AND b.Id = p.Id AND v.VoteTypeId = 1 AND c.UserId = v.UserId AND ph.PostId = p.Id AND pl.PostId = p.Id AND t.PostId = p.Id AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1 AND b.PostTypeId = 1\t----- bird -----\tcodebase_community",
    "693": "SELECT COUNT(DISTINCT p.Id) AS num_posts, COUNT(DISTINCT c.Id) AS num_comments FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.OwnerUserId = (SELECT MAX(CreationDate) FROM users);\t----- bird -----\tcodebase_community",
    "694": "SELECT * FROM comments WHERE post_id = ( SELECT id FROM posts WHERE title = 'Analysing wind data with R' AND display_name = 'John Doe' ) ORDER BY creation_date DESC LIMIT 10;\t----- bird -----\tcodebase_community",
    "695": "SELECT COUNT(*) FROM users WHERE user_id IN (SELECT user_id FROM votes WHERE vote_type_id = (SELECT id FROM vote_types WHERE name = 'Citizen Patrol'));\t----- bird -----\tcodebase_community",
    "696": "SELECT COUNT(*) FROM posts WHERE tags LIKE '%careers%';\t----- bird -----\tcodebase_community",
    "697": "SELECT SUM(reputation) AS total_reputation, SUM(views) AS total_views FROM users WHERE DisplayName = 'Jarrod Dixon';\t----- bird -----\tcodebase_community",
    "698": "SELECT COUNT(*) FROM comments WHERE post_id = (SELECT id FROM posts WHERE title = 'Clustering 1D data');\t----- bird -----\tcodebase_community",
    "699": "SELECT MAX(CreationDate) AS max_creation_date FROM users WHERE DisplayName = 'IrishStat';\t----- bird -----\tcodebase_community",
    "700": "SELECT COUNT(*) FROM posts WHERE BountyAmount > 30;\t----- bird -----\tcodebase_community",
    "701": "SELECT MAX(Score) AS max_score FROM posts WHERE Score > 50 AND MAX(Reputation) > 10000;\t----- bird -----\tcodebase_community",
    "702": "SELECT COUNT(*) FROM posts WHERE score < 20;\t----- bird -----\tcodebase_community",
    "703": "SELECT COUNT(*) FROM tags WHERE tag_id < 15 AND COUNT(*) <= 20;\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample';\t----- bird -----\tcodebase_community",
    "705": "SELECT u.Reputation, u.UpVotes FROM users u JOIN votes v ON u.Id = v.UserId WHERE v.PostId = ( SELECT Id FROM comments WHERE Text = 'fine, you win :)' );\t----- bird -----\tcodebase_community",
    "706": "SELECT MAX(popularity) AS max_popularity FROM prof;\t----- bird -----\tcodebase_community",
    "707": "SELECT MAX(Score) AS max_score FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE Views BETWEEN 100 AND 150);\t----- bird -----\tcodebase_community",
    "708": "SELECT users.DisplayName, users.Age, users.CreationDate, users.WebsiteUrl, users.Location, users.AboutMe, users.Views, users.UpVotes, users.DownVotes, users.AccountId, users.Age, users.ProfileImageUrl FROM users JOIN comments ON users.Id = comments.UserId JOIN posts ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'webiste' AND posts.PostTypeId = 1 AND comments.Score > 0 AND comments.CreationDate > '2022-01-01' ORDER BY users.CreationDate DESC;\t----- bird -----\tcodebase_community",
    "709": "SELECT COUNT(*) FROM comments WHERE score = 0 AND view_count < 5;\t----- bird -----\tcodebase_community",
    "710": "[SQL] SELECT COUNT(*) FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id = (SELECT id FROM comments WHERE score = 0 AND post_history_type_id = 1 AND post_id = (SELECT id FROM posts WHERE id\t----- bird -----\tcodebase_community",
    "711": "SELECT COUNT(*) AS total_users_age_40 FROM users WHERE age = 40;\t----- bird -----\tcodebase_community",
    "712": "SELECT p.PostId, c.CommentId, c.Score, c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.Title = 'Group differences on a five point Likert item';\t----- bird -----\tcodebase_community",
    "713": "SELECT COUNT(*) FROM votes WHERE UserId = (SELECT UserId FROM comments WHERE Text = 'R is also lazy evaluated.');\t----- bird -----\tcodebase_community",
    "714": "SELECT c.Text FROM comments c JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky';\t----- bird -----\tcodebase_community",
    "715": "SELECT u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 1 AND 5 AND u.DownVotes = 0;\t----- bird -----\tcodebase_community",
    "716": "SELECT COUNT(UserId where UpVotes = 0 and Score BETWEEN 5 and 10))*100, (COUNT(UserId where Score BETWEEN 5 and 10)) FROM comments WHERE Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "717": "SELECT power_name FROM superpower WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "718": "SELECT COUNT(*) FROM superhero WHERE hero_power.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "719": "SELECT COUNT(*) FROM superhero WHERE superpower_name = 'Super Strength' AND height_cm > 200;\t----- bird -----\tsuperhero",
    "720": "SELECT full_name FROM superhero WHERE COUNT(DISTINCT hero_power.power_id) > 15;\t----- bird -----\tsuperhero",
    "721": "SELECT COUNT(*) FROM superhero WHERE hero_attribute.attribute_value = 1 AND hero_attribute.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'Blue Eyes');\t----- bird -----\tsuperhero",
    "722": "SELECT colour FROM superhero WHERE superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero",
    "723": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue');\t----- bird -----\tsuperhero",
    "724": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Female');\t----- bird -----\tsuperhero",
    "725": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "726": "SELECT superhero_name, MAX(height_cm) AS tallest_hero FROM superhero WHERE publisher_name = 'Marvel Comics' GROUP BY superhero_name ORDER BY tallest_hero DESC;\t----- bird -----\tsuperhero",
    "727": "SELECT \"publisher_name\" FROM \"superhero\" WHERE \"superhero_name\" = 'Sauron';\t----- bird -----\tsuperhero",
    "728": "SELECT superhero.full_name, COUNT(hero_attribute.attribute_id) AS popularity FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eye_colour' AND superhero.publisher_name = 'Marvel Comics' GROUP BY superhero.full_name ORDER BY popularity DESC;\t----- bird -----\tsuperhero",
    "729": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "730": "SELECT * FROM superhero WHERE publisher_name = 'Marvel Comics' AND power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "731": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "732": "SELECT publisher_name FROM superhero WHERE MIN(attribute_value) = (SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = (SELECT MIN(id) FROM superhero));\t----- bird -----\tsuperhero",
    "733": "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold');\t----- bird -----\tsuperhero",
    "734": "SELECT publisher_name FROM superhero WHERE superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero",
    "735": "SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "736": "SELECT MIN(attribute_value) AS dumbest_superhero FROM hero_attribute WHERE attribute_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "737": "SELECT race_name FROM superhero WHERE superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "738": "SELECT superhero_name FROM superhero WHERE attribute_name = 'Durability' AND attribute_value < 50;\t----- bird -----\tsuperhero",
    "739": "SELECT superhero_name FROM superhero WHERE hero_power.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Female');\t----- bird -----\tsuperhero",
    "741": "SELECT superhero_name, COUNT(superhero_name) AS num_powers FROM superhero GROUP BY superhero_name ORDER BY num_powers DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "742": "SELECT COUNT(*) FROM superhero WHERE race = 'Vampire';\t----- bird -----\tsuperhero",
    "743": "SELECT COUNT(*) AS total_superheroes, SUM(CASE WHEN alignment = 'Bad' THEN 1 ELSE 0 END) AS bad_superheroes, SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_superheroes FROM superhero;\t----- bird -----\tsuperhero",
    "744": "SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics') AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "746": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero;\t----- bird -----\tsuperhero",
    "747": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "748": "SELECT eye_colour FROM superhero WHERE id = 75;\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superpower WHERE superpower.power_name = 'Deathlok';\t----- bird -----\tsuperhero",
    "750": "SELECT AVG(weight_kg) AS average_weight FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Female');\t----- bird -----\tsuperhero",
    "751": "SELECT superpower.power_name FROM superpower WHERE superpower.power_name IN (SELECT hero_power.power_name FROM hero_power WHERE hero_power.hero_id IN (SELECT hero_id FROM superhero WHERE superhero.gender_id = 1));\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race = 'Alien';\t----- bird -----\tsuperhero",
    "753": "SELECT full_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND colour = 'No Colour';\t----- bird -----\tsuperhero",
    "754": "SELECT superpower_name FROM superpower WHERE id = (SELECT power_id FROM hero_power WHERE hero_id = 56);\t----- bird -----\tsuperhero",
    "755": "SELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God');\t----- bird -----\tsuperhero",
    "756": "SELECT COUNT(*) FROM superhero WHERE alignment_id = Bad;\t----- bird -----\tsuperhero",
    "757": "SELECT race_name FROM superhero WHERE weight_kg = 169 AND hero_id = (SELECT id FROM superhero WHERE full_name = 'Superhero Name' AND gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Male'));\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour FROM superhero WHERE superhero.height_cm = 185 AND superhero.race = 'human';\t----- bird -----\tsuperhero",
    "759": "SELECT MAX(weight_kg) AS max_weight FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender' AND attribute_value ='male');\t----- bird -----\tsuperhero",
    "760": "SELECT SUM(CASE WHEN height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "761": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Male') AND weight_kg > (SELECT AVG(weight_kg) FROM superhero)\t----- bird -----\tsuperhero",
    "762": "SELECT MAX(COUNT(power_name)) AS max_power_count FROM hero_power GROUP BY power_name;\t----- bird -----\tsuperhero",
    "763": "SELECT attribute_value FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Abomination');\t----- bird -----\tsuperhero",
    "764": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN hero ON hero_power.hero_id = hero.id WHERE hero.id = 1;\t----- bird -----\tsuperhero",
    "765": "SELECT COUNT(*) FROM superhero WHERE power_name ='stealth';\t----- bird -----\tsuperhero",
    "766": "SELECT full_name FROM superhero WHERE id = (SELECT hero_id FROM hero_attribute WHERE attribute_name ='strength' AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name ='strength'));\t----- bird -----\tsuperhero",
    "767": "SELECT AVG(superhero.id) AS average_id FROM superhero WHERE skin_colour_id = 1;\t----- bird -----\tsuperhero",
    "768": "SELECT COUNT(*) FROM superhero WHERE publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "769": "SELECT s.superhero_name, MAX(h.attribute_value) AS max_durability FROM superhero s JOIN hero_attribute h ON s.id = h.hero_id JOIN attribute a ON h.attribute_id = a.id WHERE a.attribute_name = 'durability' AND h.publisher_name = 'Dark Horse Comics' GROUP BY s.superhero_name;\t----- bird -----\tsuperhero",
    "770": "SELECT eye_colour FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Abraham Sapien');\t----- bird -----\tsuperhero",
    "771": "SELECT superhero_name FROM superhero WHERE hero_power.power_name = 'Flight';\t----- bird -----\tsuperhero",
    "772": "SELECT hero_attribute.attribute_value, hero.eye_colour_id, hero.hair_colour_id, hero.skin_colour_id, hero.race_id, hero.publisher_id, hero.alignment_id, hero.height_cm, hero.weight_kg FROM superhero AS hero JOIN hero_attribute AS hero_attribute ON hero.id = hero_attribute.hero_id JOIN attribute AS attribute ON hero_attribute.attribute_id = attribute.id JOIN colour AS eye_colour ON hero_attribute.attribute_value = eye_colour.id JOIN colour AS hair_colour ON hero_attribute.attribute_value = hair_colour.id JOIN colour AS skin_colour ON hero_attribute.attribute_value = skin_colour.id JOIN race AS race ON hero.race_id = race.id JOIN publisher AS publisher ON hero.publisher_id = publisher.id JOIN alignment AS alignment ON hero.alignment_id = alignment.id WHERE hero.gender_id = 1 AND hero.publisher_name = 'Dark Horse Comics' AND hero.height_cm > 160 AND hero.weight_kg > 60;\t----- bird -----\tsuperhero",
    "773": "SELECT s.superhero_name, s.publisher_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id WHERE a.attribute_name = 'eyes' AND a.attribute_name = 'hair' AND a.attribute_name ='skin' AND ha.attribute_value = (SELECT attribute_value FROM attribute WHERE attribute_name = 'eyes') AND ha.attribute_value = (SELECT attribute_value FROM attribute WHERE attribute_name = 'hair') AND ha.attribute_value = (SELECT attribute_value FROM attribute WHERE attribute_name ='skin') AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel');\t----- bird -----\tsuperhero",
    "774": "SELECT full_name FROM superhero WHERE superhero_name = 'A-Bomb';\t----- bird -----\tsuperhero",
    "775": "SELECT PERCENTAGE FROM superhero WHERE gender = 'Female' AND colour = 'Blue';\t----- bird -----\tsuperhero",
    "776": "SELECT full_name, race FROM superhero WHERE superhero_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "777": "SELECT gender_name FROM alignment WHERE id = (SELECT gender_id FROM superhero WHERE superhero_name = 'Agent 13');\t----- bird -----\tsuperhero",
    "778": "SELECT full_name FROM superhero WHERE power_name = 'Adaptation';\t----- bird -----\tsuperhero",
    "779": "SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "780": "SELECT power_name FROM superpower WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Hunter Zolomon');\t----- bird -----\tsuperhero",
    "781": "[SQL] SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superpower ON hero_attribute.attribute_id = superpower.id JOIN hero_power ON hero_power.hero_id = hero_attribute.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero_attribute ON hero_attribute.hero_id = hero_power.hero_id JOIN hero\t----- bird -----\tsuperhero",
    "782": "SELECT superhero_name FROM superhero WHERE hero_attribute.attribute_value = 1 AND hero_attribute.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'eye_colour' AND colour.colour = 'Black') AND hero_attribute.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'hair_colour' AND colour.colour = 'Black');\t----- bird -----\tsuperhero",
    "783": "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN hero_power ON hero_attribute.attribute_id = hero_power.power_id WHERE superhero.full_name = 'Superman' AND hero_power.power_name = 'Superman' GROUP BY hero_attribute.attribute_value ORDER BY hero_attribute.attribute_value DESC LIMIT 1;\t----- bird -----\tsuperhero",
    "784": "SELECT full_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender' AND attribute_value = 'Vampire');\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');\t----- bird -----\tsuperhero",
    "786": "SELECT COUNT(*) FROM superhero WHERE MAX(attribute_value) = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "787": "SELECT race_id, alignment_id FROM superhero WHERE superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero",
    "788": "SELECT PERCENT(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')) FROM superhero;\t----- bird -----\tsuperhero",
    "789": "SELECT AVG(weight_kg) FROM superhero WHERE race = 'Alien';\t----- bird -----\tsuperhero",
    "790": "SELECT SUM(weight_kg) AS weight_difference FROM superhero WHERE full_name = 'Emil Blonsky' - SUM(weight_kg) AS weight_difference FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "791": "SELECT superhero_name, AVG(height_cm) AS average_height FROM superhero GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "792": "SELECT power_name FROM superpower WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Abomination');\t----- bird -----\tsuperhero",
    "793": "SELECT COUNT(*) FROM superhero WHERE race_id = 21 AND gender_id = 1;\t----- bird -----\tsuperhero",
    "794": "SELECT superhero_name FROM superhero WHERE attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero",
    "796": "SELECT attribute_name, attribute_value FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = '3-D Man');\t----- bird -----\tsuperhero",
    "797": "SELECT superhero_name FROM superhero WHERE hero_attribute.attribute_value = 1 AND hero_attribute.attribute_id = (SELECT attribute_id FROM attribute WHERE attribute_name = 'Blue Eyes');\t----- bird -----\tsuperhero",
    "798": "SELECT publisher_name FROM superhero WHERE superhero_name = 'Hawkman';\t----- bird -----\tsuperhero",
    "799": "SELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL;\t----- bird -----\tsuperhero",
    "800": "SELECT SUM(superhero_name WHERE color = 'Blue') / COUNT(superhero_name) * 100.0 AS blue_eyes_percentage FROM superhero;\t----- bird -----\tsuperhero",
    "801": "SELECT ratio FROM (SELECT SUM(gender_id = 1) AS male_superheroes, SUM(gender_id = 2) AS female_superheroes FROM superhero WHERE gender_id = 1) AS male_superheroes_table, (SELECT SUM(gender_id = 1) AS male_superheroes, SUM(gender_id = 2) AS female_superheroes FROM superhero WHERE gender_id = 2) AS female_superheroes_table WHERE male_superheroes_table.male_superheroes + female_superheroes_table.female_superheroes IS NOT NULL;\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender' AND attribute_value ='male');\t----- bird -----\tsuperhero",
    "803": "SELECT hero_power.power_id FROM hero_power WHERE hero_power.power_name = 'cryokinesis';\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294;\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "806": "SELECT eye_colour FROM superhero WHERE full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN hero_attribute ON hero_power.hero_id = hero_attribute.hero_id INNER JOIN superhero ON hero_attribute.attribute_id = superhero.id WHERE superhero.full_name = 'Helen Parr' AND hero_attribute.attribute_value = 1;\t----- bird -----\tsuperhero",
    "808": "SELECT race_id FROM superhero WHERE height_cm = 188 AND weight_kg = 108 AND gender_id = (SELECT id FROM alignment WHERE gender_name ='male');\t----- bird -----\tsuperhero",
    "809": "SELECT publisher_name FROM superhero WHERE id = 38;\t----- bird -----\tsuperhero",
    "810": "SELECT race_id, race_name FROM superhero WHERE MAX(attribute_value) = (SELECT MAX(attribute_value) FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE full_name = 'Superhero Name'));\t----- bird -----\tsuperhero",
    "811": "SELECT superhero_name, full_name, gender_name, eye_colour_name, hair_colour_name, skin_colour_name, race_name, publisher_name, alignment_name, height_cm, weight_kg, power_name FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON attribute.colour_id = colour.id JOIN gender ON hero_attribute.gender_id = gender.id JOIN race ON hero_attribute.race_id = race.id JOIN publisher ON hero_attribute.publisher_id = publisher.id JOIN alignment ON hero_attribute.alignment_id = alignment.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero_name = 'Atom IV';\t----- bird -----\tsuperhero",
    "812": "SELECT full_name FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE colour.colour = 'Blue');\t----- bird -----\tsuperhero",
    "813": "SELECT AVG(attribute_value) AS average_attribute_value FROM superhero WHERE gender_id = 3;\t----- bird -----\tsuperhero",
    "814": "SELECT skin_colour FROM superhero WHERE attribute_value = 100;\t----- bird -----\tsuperhero",
    "815": "SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND alignment_id = 1;\t----- bird -----\tsuperhero",
    "816": "SELECT superhero_name FROM superhero WHERE attribute_value BETWEEN 75 AND 80;\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero WHERE superhero.gender_id = (SELECT id FROM alignment WHERE colour.colour = 'blue' AND hair_colour_id = (SELECT id FROM alignment WHERE colour.colour = 'blue'));\t----- bird -----\tsuperhero",
    "818": "SELECT COUNT(*) AS percentage FROM superhero WHERE alignment.id = 2 AND gender.id = 2;\t----- bird -----\tsuperhero",
    "819": "SELECT SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) AS blue_eyes, SUM(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) AS no_eye_colour, SUM(CASE WHEN weight_kg = 0 THEN 1 ELSE 0 END) AS missing_weight FROM superhero WHERE weight_kg = 0 OR T1.weight_kg = NULL GROUP BY superhero_name;\t----- bird -----\tsuperhero",
    "820": "SELECT attribute_value FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Hulk');\t----- bird -----\tsuperhero",
    "821": "SELECT power_name FROM superpower WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Ajax');\t----- bird -----\tsuperhero",
    "822": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE colour.colour = 'Green' AND skin_colour_id = (SELECT id FROM alignment WHERE alignment = 'Bad'));\t----- bird -----\tsuperhero",
    "823": "SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'Gender' AND attribute_value = 'Female') AND publisher_id = (SELECT id FROM alignment WHERE attribute_name = 'Publisher' AND attribute_value = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "824": "SELECT superhero_name FROM superhero WHERE hero_power.power_name = 'Wind Control';\t----- bird -----\tsuperhero",
    "825": "SELECT gender_name FROM superhero WHERE superhero_name = 'Phoenix Force' AND hero_power_id = (SELECT power_id FROM superpower WHERE power_name = 'Phoenix Force');\t----- bird -----\tsuperhero",
    "826": "SELECT MAX(weight_kg) AS heaviest_weight FROM superhero WHERE publisher_name = 'DC Comics';\t----- bird -----\tsuperhero",
    "827": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE race <> 'Human' AND publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "828": "SELECT superhero_name, MAX(popularity) AS max_popularity FROM superhero WHERE superhero_name = 'Superman' AND popularity > 50;\t----- bird -----\tsuperhero",
    "829": "SELECT SUM(publisher_name = 'DC Comics') AS dc_superheroes, SUM(publisher_name = 'Marvel Comics') AS marvel_superheroes, SUM(publisher_name = 'DC Comics') - SUM(publisher_name = 'Marvel Comics') AS difference FROM superhero;\t----- bird -----\tsuperhero",
    "830": "[SQL] SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name = (SELECT attribute_name FROM attribute WHERE attribute_name =\t----- bird -----\tsuperhero",
    "831": "SELECT colour.colour FROM superhero WHERE superhero.superhero_name = 'Abomination' AND hero_attribute.attribute_id = (SELECT id FROM alignment WHERE alignment.attribute_name = 'eye_colour');\t----- bird -----\tsuperhero",
    "832": "SELECT superhero_name, MAX(height_cm) AS tallest_superhero_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name ='male');\t----- bird -----\tsuperhero",
    "833": "SELECT full_name FROM superhero WHERE superhero_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "834": "SELECT SUM(percentage) AS percentage FROM (SELECT SUM(gender = 'Female' WHERE publisher_name = 'George Lucas') AS percentage FROM superhero WHERE publisher_name = 'George Lucas') AS subquery;\t----- bird -----\tsuperhero",
    "835": "SELECT SUM(CASE WHEN alignment = 'Good' THEN 1 ELSE 0 END) / COUNT(DISTINCT publisher_name) * 100.0 AS percentage FROM superhero WHERE publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "836": "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM superhero WHERE attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute WHERE hero_id = (SELECT id FROM superhero WHERE full_name = 'Superhero Name'));\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero",
    "839": "SELECT full_name FROM superhero WHERE weight_kg < 100 AND eye_colour_id = (SELECT id FROM alignment WHERE attribute_name = 'brown');\t----- bird -----\tsuperhero",
    "840": "SELECT attribute_value FROM superhero WHERE superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "841": "SELECT weight, race FROM superhero WHERE id = 40;\t----- bird -----\tsuperhero",
    "842": "SELECT AVG(height_cm) AS average_height FROM superhero WHERE gender_id = (SELECT id FROM alignment WHERE attribute_name = 'gender' AND attribute_value = 'neutral');\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superhero WHERE power_name = 'Intelligence';\t----- bird -----\tsuperhero",
    "844": "SELECT eye_colour FROM superhero WHERE superhero_name = 'Blackwulf';\t----- bird -----\tsuperhero",
    "845": "SELECT s.power_name, AVG(s.height_cm) AS avg_height FROM superhero s WHERE s.height_cm > MULTIPLY(AVG(s.height_cm), 0.8) GROUP BY s.power_name;\t----- bird -----\tsuperhero",
    "846": "SELECT driverRef FROM drivers WHERE driverId IN (SELECT driverId FROM qualifying WHERE raceId = 20 AND q1 IS NOT NULL AND q1 NOT IN (SELECT MAX(q1) FROM qualifying WHERE raceId = 20));\t----- bird -----\tformula_1",
    "847": "SELECT d.forename, d.surname, r.name, r.date, r.time, r.url, r.lat, r.lng, r.alt, r.url, c.name, c.nationality, c.url, cr.points, cr.position, cr.positionText, cr.wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructors c ON r.constructorId = c.constructorId JOIN constructorResults cr ON r.raceId = cr.raceId AND c.constructorId = cr.constructorId WHERE r.year = 19 AND r.round = 2 AND r.circuitId = 19 ORDER BY cr.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT r.year FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE c.location = 'Shanghai';\t----- bird -----\tformula_1",
    "849": "SELECT * FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya');\t----- bird -----\tformula_1",
    "850": "SELECT name FROM circuits WHERE country = 'Germany';\t----- bird -----\tformula_1",
    "851": "SELECT circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt, circuits.url FROM circuits JOIN constructors ON circuits.circuitId = constructors.circuitId JOIN drivers ON drivers.driverId = constructors.constructorId WHERE constructors.constructorRef = 'Renault' GROUP BY circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt, circuits.url ORDER BY circuits.circuitId DESC;\t----- bird -----\tformula_1",
    "852": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN (SELECT circuitId FROM circuits WHERE country IN ('Asia', 'Europe'));\t----- bird -----\tformula_1",
    "853": "SELECT races.name FROM races WHERE races.circuitId = (SELECT circuits.circuitId FROM circuits WHERE circuits.country = 'Spain');\t----- bird -----\tformula_1",
    "854": "SELECT circuits.lat, circuits.lng FROM circuits WHERE circuits.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "855": "SELECT * FROM races WHERE circuitId = 'SEPANG';\t----- bird -----\tformula_1",
    "856": "SELECT races.name, races.date FROM races WHERE races.circuitId = (SELECT circuits.circuitId FROM circuits WHERE circuits.location = 'Sepang International Circuit');\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "858": "SELECT name FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorResults WHERE raceId = (SELECT raceId FROM races WHERE year = 2022 AND round = 1));\t----- bird -----\tformula_1",
    "859": "SELECT * FROM results WHERE raceId = 354 AND driverId = 1 AND constructorId = 1 AND number = 1 AND grid = 1 AND position = 1 AND positionText = '1st' AND positionOrder = 1 AND points = 1 AND laps = 1 AND time = '1:23.456' AND milliseconds = 123 AND fastestLap = 1 AND rank = 1 AND fastestLapTime = '1:23.456' AND fastestLapSpeed = '250 km/h' AND statusId = 1;\t----- bird -----\tformula_1",
    "860": "SELECT d.forename, d.surname, d.nationality FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Qualifying Race No. 355' AND lt.position = 1 AND lt.time LIKE '%0:01:40%' AND d.driverId = (SELECT MAX(d2.driverId) FROM drivers d2 WHERE d2.driverId = d.driverId);\t----- bird -----\tformula_1",
    "861": "SELECT d.driverId, d.forename, d.surname, r.name, r.date, r.time, r.url, r.points, r.position, r.positionText, r.wins FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.name = 'qualifying race No.903' AND r.date = '2023-01-01' AND r.time LIKE '0:01:54%' AND r.statusId = (SELECT statusId FROM status WHERE status = 'finished');\t----- bird -----\tformula_1",
    "862": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Bahrain Grand Prix') AND time IS NOT NULL AND driverId NOT IN (SELECT driverId FROM lapTimes);\t----- bird -----\tformula_1",
    "863": "SELECT * FROM races WHERE year = (SELECT year FROM seasons WHERE year = 2022);\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(*) FROM races WHERE date = '2015-11-29';\t----- bird -----\tformula_1",
    "865": "SELECT drivers.forename, drivers.surname, drivers.dob, drivers.nationality FROM drivers WHERE drivers.raceId = 592 AND drivers.dob IS NOT NULL;\t----- bird -----\tformula_1",
    "866": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Race 161' AND lt.time LIKE 'M:SS%' AND lt.milliseconds = 0 GROUP BY d.driverId ORDER BY d.forename, d.surname LIMIT 1;\t----- bird -----\tformula_1",
    "867": "SELECT d.forename, d.surname, c.name, r.name, r.date, r.time, r.url, rr.points, rr.status, rs.position, rs.positionText, rs.wins FROM drivers d JOIN constructors c ON d.constructorId = c.constructorId JOIN races r ON r.raceId = d.driverId JOIN constructorResults rr ON rr.constructorId = c.constructorId AND rr.raceId = r.raceId JOIN constructorStandings rs ON rs.constructorId = c.constructorId AND rs.raceId = r.raceId WHERE rr.points = (SELECT MAX(points) FROM constructorResults WHERE constructorId = c.constructorId AND raceId = r.raceId) AND rs.position = 1 ORDER BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "868": "SELECT location.lat, location.lng FROM circuits WHERE circuits.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "869": "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId JOIN drivers d ON cr.driverId = d.driverId WHERE r.raceId = 9 AND d.driverId = (SELECT MAX(d.driverId) FROM drivers d WHERE d.driverId IN (SELECT cr.driverId FROM constructorResults cr WHERE cr.raceId = 9)) AND c.constructorId = (SELECT c.constructorId FROM constructors c WHERE c.constructorId IN (SELECT cr.constructorId FROM constructorResults cr WHERE cr.raceId = 9))\t----- bird -----\tformula_1",
    "870": "SELECT * FROM results WHERE raceId = 345 AND driverId = 10 AND statusId = 1;\t----- bird -----\tformula_1",
    "871": "SELECT name FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = 2022 AND round = 1));\t----- bird -----\tformula_1",
    "872": "SELECT abbrev_code FROM drivers WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = 45 AND q3 LIKE 'M:SS%');\t----- bird -----\tformula_1",
    "873": "SELECT MAX(time) AS max_time FROM lapTimes WHERE raceId = 743 AND driverId = 1;\t----- bird -----\tformula_1",
    "874": "SELECT * FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006);\t----- bird -----\tformula_1",
    "875": "SELECT * FROM races WHERE year = (SELECT year FROM seasons WHERE year = 2022);\t----- bird -----\tformula_1",
    "876": "SELECT COUNT(*) FROM races WHERE year = 2015 AND date = '2015-11-29' AND statusId = 1;\t----- bird -----\tformula_1",
    "877": "SELECT d.forename, d.surname, d.dob, d.nationality, d.url FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.raceId = 872 AND d.driverId IN ( SELECT driverId FROM results WHERE raceId = 872 GROUP BY driverId HAVING MAX(position) = 1 ) ORDER BY d.dob ASC;\t----- bird -----\tformula_1",
    "878": "[SQL] SELECT d.forename, d.surname, r.name, r.date, r.time, r.url, r.lat, r.lng, r.alt, r.country, r.url, c.name, c.nationality, c.url, rr.name, rr.date, rr.time, rr.url, rr.lat, rr.lng, rr.alt, rr.country, rr.url, cr.name, cr.nationality, cr.url, rr.points, rr.position, rr.positionText, rr.wins, rr.driverId, rr.constructorId, rr.laps, rr.time, rr.milliseconds, rr.fastestLap, rr.rank, rr.fastestLapTime, rr.fastestLapSpeed, rr.statusId FROM drivers d JOIN races rr ON d.driverId = rr.driverId JOIN constructors cr ON rr.constructorId = cr.constructorId JOIN races rr2 ON rr.raceId = rr2.raceId JOIN constructorResults cr2 ON rr2.raceId = cr2.raceId JOIN constructorStandings cs ON cr2.constructorId = cs.constructorId JOIN driverStandings ds ON rr2.driverId = ds.driverId JOIN lapTimes lt ON rr2.driverId = lt.driverId JOIN pitStops ps ON rr2.driverId = ps.driverId JOIN qualifying q ON rr2.driverId = q.driverId JOIN status s ON rr2.driverId = s.driverId WHERE rr.name = 'Race No. 348' AND rr.date = '2023-05-01' AND rr.time = '12:00:00' AND rr.lat = 40.7128 AND rr.lng = -74.0060 AND rr.alt = 10 AND rr.country = 'USA' AND rr.url = 'https://www.formula1.com/en/races/race-no-348.html' AND cr.name = 'Mercedes' AND cr.nationality = 'Germany' AND cr.url = 'https://www.mercedes-benz.com/' AND cr2.points = '1' AND cr2.position = '1' AND cr2.positionText = '1st' AND cr2.wins = '1' AND cr2.driverId = d.driverId AND cr2.constructorId = cr.constructorId AND rr.points = '1' AND rr.position = '1' AND rr.positionText = '1st' AND rr.wins = '1' AND rr.driverId = d.driverId AND rr.constructorId = cr.constructorId AND rr.laps = '1' AND rr.time = '1:25:00' AND rr.milliseconds = 123456 AND rr.fastestLap = '1' AND rr.rank = '1' AND rr.fastestLapTime = '1:25:00' AND rr.fastestLapSpeed = '250 km/h' AND rr.statusId = '1' AND d.forename = 'NAME_1' AND d.surname = 'NAME_2' AND rr.driverId = d.driverId AND rr.constructorId = cr.constructorId AND rr.laps = '1' AND rr.time = '1:25:00' AND rr.milliseconds = 123456 AND rr.fastestLap = '1' AND rr.rank = '1' AND rr.fastestLapTime = '1:25:00' AND rr.fastestLapSpeed = '250 km/h' AND rr.statusId = '1' AND d.forename = 'NAME_1' AND d.surname = 'NAME_2' AND rr.driverId = d.driverId AND rr.constructorId = cr.constructorId AND rr.laps = '1' AND rr.time = '1:25:00' AND rr.milliseconds = 123456 AND rr.fastestLap = '1' AND rr.rank = '1' AND rr.fastestLapTime = '1:25:00' AND rr.fastestLapSpeed = '250 km/h' AND rr.statusId = '1' AND d.forename = 'NAME_1' AND d.surname = 'NAME_2' AND rr.driverId = d.driverId AND rr.constructorId = cr.constructorId AND rr.laps = '1' AND rr\t----- bird -----\tformula_1",
    "879": "SELECT nationality FROM drivers WHERE id = (SELECT driverId FROM results WHERE raceId = (SELECT id FROM races WHERE year = (SELECT year FROM seasons WHERE url = 'https://www.formula1.com/en/season.html')));\t----- bird -----\tformula_1",
    "880": "SELECT MAX(fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) * 100 / fastestLapSpeed(raceId = 853) AS percent_faster FROM results WHERE driverId = 853 AND raceId = 853;\t----- bird -----\tformula_1",
    "881": "SELECT COUNT(driverid) / COUNT(driverid) * 100 AS percentage FROM results WHERE raceId = 19830716;\t----- bird -----\tformula_1",
    "882": "SELECT MIN(year) AS first_singapore_grand_prix FROM races WHERE name = 'Singapore Grand Prix';\t----- bird -----\tformula_1",
    "883": "SELECT * FROM races WHERE year = (SELECT MAX(year) FROM races);\t----- bird -----\tformula_1",
    "884": "SELECT * FROM races WHERE year = (SELECT MIN(year) FROM races) AND month = (SELECT MIN(month) FROM races);\t----- bird -----\tformula_1",
    "885": "SELECT MAX(round) AS last_round FROM races WHERE year = 1999;\t----- bird -----\tformula_1",
    "886": "SELECT MAX(round) AS max_round FROM races;\t----- bird -----\tformula_1",
    "887": "SELECT r.name FROM races r WHERE r.year = 2017 AND NOT EXISTS (SELECT 1 FROM races r2 WHERE r2.year = 2000 AND r2.circuitId = r.circuitId);\t----- bird -----\tformula_1",
    "888": "SELECT name FROM circuits WHERE country = 'Germany' AND location = 'N\u00fcrburgring';\t----- bird -----\tformula_1",
    "889": "SELECT MAX(year) AS max_year FROM races WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "890": "SELECT COUNT(*) FROM races WHERE circuitId = 'Silverstone Circuit' AND country = 'United Kindom';\t----- bird -----\tformula_1",
    "891": "[SQL] SELECT d.forename, d.surname, r.name, r.date, r.time, r.url, r.lat, r.lng, r.alt, r.country, r.url, c.name, c.nationality, c.url, rr.name, rr.date, rr.time, rr.url, rr.lat, rr.lng, rr.alt, rr.country, rr.url, cr.name, cr.nationality, cr.url, rr.points, rr.position, rr.positionText, rr.wins, cr.points, cr.position, cr.positionText, cr.wins, rr.driverId, rr.constructorId, rr.laps, rr.time, rr.milliseconds, rr.fastestLap, rr.rank, rr.fastestLapTime, rr.fastestLapSpeed, rr.statusId FROM drivers d JOIN races rr ON d.driverId = rr.driverId JOIN constructors cr ON rr.constructorId = cr.constructorId JOIN lapTimes lt ON rr.driverId = lt.driverId AND rr.lap = lt.lap JOIN pitStops ps ON rr.driverId = ps.driverId AND rr.lap = ps.lap JOIN qualifying q ON rr.driverId = q.driverId AND rr.constructorId = q.constructorId JOIN results rr2 ON rr.driverId = rr2.driverId AND rr.constructorId = rr2.constructorId WHERE rr.name = 'Singapore Grand Prix' AND rr.date = '2010-10-31' AND rr.time = '17:00:00' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.8583 AND rr.alt = 10 AND rr.country = 'Singapore' AND rr.url = 'https://www.f1-live.org/race/2010-singapore-grand-prix' AND rr.lat = 1.3578 AND rr.lng = 103.858\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename ||'' || drivers.surname AS full_name FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE results.points = (SELECT MAX(points) FROM results) AND races.year = (SELECT MAX(year) FROM races);\t----- bird -----\tformula_1",
    "893": "SELECT d.forename, d.surname, SUM(r.points) AS total_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId AND d.constructorId = cr.constructorId WHERE r.year = 2017 AND r.round = 1 AND r.circuitId = 1 GROUP BY d.driverId ORDER BY total_points DESC LIMIT 3;\t----- bird -----\tformula_1",
    "894": "[SQL] SELECT r.name, r.url, r.date, r.time, r.url, c.name, c.url, c.nationality, c.url, d.forename, d.surname, d.dob, d.nationality, d.url, rr.name, rr.url, rr.date, rr.time, rr.url, rr.circuitId, rr.lat, rr.lng, rr.alt, rr.url, rr.round, rr.circuitRef, rr.name, rr.location, rr.country, rr.lat, rr.lng, rr.alt, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr.url, rr\t----- bird -----\tformula_1",
    "895": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' AND country = 'United Kingdom');\t----- bird -----\tformula_1",
    "896": "SELECT COUNT(raceId) WHERE surname = 'Hamilton' AND position > 1 AND year >= 2010;\t----- bird -----\tformula_1",
    "897": "SELECT d.forename, d.surname, MAX(r.points) AS max_points FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON r.raceId = cr.raceId AND d.constructorId = cr.constructorId GROUP BY d.forename, d.surname HAVING MAX(r.points) > 0 ORDER BY max_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT drivers.forename, drivers.surname, drivers.dob, drivers.nationality, drivers.url FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN constructorResults ON races.raceId = constructorResults.raceId AND drivers.driverId = constructorResults.constructorId JOIN constructorStandings ON races.raceId = constructorStandings.raceId AND drivers.driverId = constructorStandings.constructorId JOIN status ON constructorResults.status = status.statusId WHERE drivers.nationality = 'Japanese' AND status.status = 'Active' ORDER BY drivers.dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt, circuits.url FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1990 AND 2000 GROUP BY circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt, circuits.url HAVING COUNT(DISTINCT races.raceId) = 4;\t----- bird -----\tformula_1",
    "900": "SELECT circuits.circuitRef, circuits.name, circuits.location, races.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND YEAR(races.date) = 2006;\t----- bird -----\tformula_1",
    "901": "SELECT races.name, circuits.location FROM races JOIN races_circuits ON races.raceId = races_circuits.raceId JOIN circuits ON races_circuits.circuitId = circuits.circuitId WHERE MONTH(races.date) = 9 AND YEAR(races.date) = 2005;\t----- bird -----\tformula_1",
    "902": "SELECT r.name, r.url, r.date, r.time, r.url, c.name, c.url, d.forename, d.surname, d.dob, d.nationality, d.url, cr.points, cr.position, cr.positionText, cr.wins FROM races r JOIN constructors c ON r.circuitId = c.circuitId JOIN drivers d ON r.driverId = d.driverId JOIN constructorResults cr ON r.raceId = cr.raceId AND c.constructorId = cr.constructorId WHERE r.year = 2022 AND r.round = 1 AND r.circuitId = 1 AND r.date = '2022-01-01' AND r.time = '10:00:00' AND r.url = 'https://www.f1.com/race/2022-british-grand-prix' AND c.constructorRef = 'Mercedes' AND d.driverRef = 'Lewis Hamilton' AND cr.points > 10 AND cr.position < 20;\t----- bird -----\tformula_1",
    "903": "SELECT MAX(points) AS max_points FROM results WHERE raceId = (SELECT raceId FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit'));\t----- bird -----\tformula_1",
    "904": "[SQL] SELECT r.name, r.year, r.round, r.circuitId, r.url, c.name AS circuit_name, c.location, c.country, c.lat, c.lng, c.alt, c.url AS circuit_url, d.forename, d.surname, d.dob, d.nationality, d.url AS driver_url, rr.name AS race_name, rr.date, rr.time, rr.url, rr.round, rr.circuitId, rr.url AS race_url, rr.status, rr.points, rr.position, rr.positionText, rr.wins, rr.driverId, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id, rr.driverId AS driver_id\t----- bird -----\tformula_1",
    "905": "SELECT AVG(points) AS average_points FROM results WHERE year = 2000 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine');\t----- bird -----\tformula_1",
    "906": "SELECT r.name, r.year, r.round, c.name AS circuit, d.forename, d.surname, d.dob, d.nationality, d.url, r.date, r.time, r.url, cr.points, cr.position, cr.positionText, cr.wins FROM races r JOIN circuits c ON r.circuitId = c.circuitId JOIN drivers d ON r.driverId = d.driverId JOIN constructorResults cr ON r.raceId = cr.raceId AND cr.constructorId = d.constructorId JOIN constructorStandings cs ON r.raceId = cs.raceId AND cs.constructorId = cr.constructorId JOIN driverStandings ds ON r.raceId = ds.raceId AND ds.driverId = cr.driverId WHERE r.year = (SELECT min(r2.year) FROM races r2) AND d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY r.year DESC, r.round DESC;\t----- bird -----\tformula_1",
    "907": "SELECT races.name, races.url, seasons.year, countries.name FROM races JOIN seasons ON races.year = seasons.year JOIN countries ON races.country = countries.name WHERE races.year = 2017 ORDER BY races.date;\t----- bird -----\tformula_1",
    "908": "SELECT r.name, r.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.laps = (SELECT MAX(r2.laps) FROM races r2) ORDER BY r.year DESC;\t----- bird -----\tformula_1",
    "909": "SELECT COUNT(races where country = 'Germany' and name = 'European Grand Prix') AS total_german_races, COUNT(races where name = 'European Grand Prix') AS total_races FROM races;\t----- bird -----\tformula_1",
    "910": "SELECT location.lat, location.lng FROM circuits WHERE circuits.name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE max(lat) = (SELECT max(lat) FROM circuits);\t----- bird -----\tformula_1",
    "912": "SELECT circuits.circuitRef FROM circuits WHERE circuits.name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "913": "SELECT name, country, alt FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits);\t----- bird -----\tformula_1",
    "914": "SELECT COUNT(*) FROM drivers WHERE code IS NULL;\t----- bird -----\tformula_1",
    "915": "SELECT name FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers);\t----- bird -----\tformula_1",
    "916": "SELECT DISTINCT drivers.forename, drivers.surname FROM drivers WHERE drivers.nationality = 'italian';\t----- bird -----\tformula_1",
    "917": "SELECT * FROM drivers WHERE forename = 'Anthony';\t----- bird -----\tformula_1",
    "918": "SELECT name FROM drivers WHERE driverRef = 'Lewis Hamilton';\t----- bird -----\tformula_1",
    "919": "SELECT name FROM circuits WHERE location = 'Spain';\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT year FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit');\t----- bird -----\tformula_1",
    "921": "SELECT * FROM races WHERE circuitId = 1;\t----- bird -----\tformula_1",
    "922": "SELECT MAX(time) AS max_time FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE name = 'Abu Dhabi Circuit');\t----- bird -----\tformula_1",
    "923": "SELECT COUNT(*) FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Italy');\t----- bird -----\tformula_1",
    "924": "SELECT r.name, r.date FROM races r WHERE r.circuitId = 1;\t----- bird -----\tformula_1",
    "925": "SELECT * FROM circuits WHERE country = 'Spain' AND year = 2009;\t----- bird -----\tformula_1",
    "926": "SELECT MAX(fastestLapTime) AS max_fastestLapTime FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "927": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races r2 ON r.raceId = r2.raceId WHERE r2.year = (SELECT MAX(r3.year) FROM races r3) AND r.position = 1 AND r.statusId = (SELECT statusId FROM status WHERE status = 'Fastest Lap');\t----- bird -----\tformula_1",
    "928": "SELECT reference_name FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Canadian Grand Prix' AND year = 2007);\t----- bird -----\tformula_1",
    "929": "SELECT r.name, r.url, d.forename, d.surname, d.dob, d.nationality, d.url FROM races r JOIN drivers d ON r.driverId = d.driverId WHERE r.name = 'Formula 1' AND d.forename = 'Lewis' AND d.surname = 'Hamilton';\t----- bird -----\tformula_1",
    "930": "SELECT r.name AS race_name, d.forename AS driver_forename, d.surname AS driver_surname, r.date AS race_date, r.time AS race_time, r.url AS race_url, d.number AS driver_number, d.position AS driver_position, d.position_text AS driver_position_text, d.wins AS driver_wins, r.laps AS race_laps, r.time AS race_time, r.milliseconds AS race_milliseconds, r.fastest_lap AS race_fastest_lap, r.rank AS race_rank, r.fastest_lap_time AS race_fastest_lap_time, r.fastest_lap_speed AS race_fastest_lap_speed, s.status AS race_status FROM races r JOIN drivers d ON r.driverId = d.driverId JOIN status s ON r.statusId = s.statusId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.date = '2022-09-18' AND r.time = '12:00:00' AND r.url = 'https://www.formula1.com/en/races/2022/09/18/race.html' AND r.laps = 50 AND r.time = '1:30:00' AND r.milliseconds = 1000 AND r.fastest_lap = 1 AND r.rank = 1 AND r.fastest_lap_time = '1:30:00' AND r.fastest_lap_speed = '250 km/h'\t----- bird -----\tformula_1",
    "931": "SELECT MAX(fastestLapSpeed) AS max_fastestLapSpeed FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "932": "SELECT * FROM races WHERE year = (SELECT MAX(year) FROM races);\t----- bird -----\tformula_1",
    "933": "SELECT positionOrder FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Chinese Grand Prix') AND driverId = (SELECT id FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "934": "SELECT d.forename, d.surname FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN constructorResults cr ON d.driverId = cr.driverId JOIN constructors c ON cr.constructorId = c.constructorId WHERE r.year = 1989 AND r.round = 1 AND r.circuitId = 4 AND cr.points = 1 AND c.name = 'McLaren' AND d.forename = 'Ayrton' AND d.surname = 'Senna';\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) FROM results WHERE raceId = 2008 AND driverId IN (SELECT driverId FROM lapTimes WHERE lap = 1 AND time IS NOT NULL);\t----- bird -----\tformula_1",
    "936": "SELECT MAX(laps) AS max_laps FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis');\t----- bird -----\tformula_1",
    "937": "SELECT MAX(points) AS max_points FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE driverId = (SELECT MAX(driverId) FROM results WHERE statusId = (SELECT MAX(statusId) FROM status WHERE status = 'Winner')));\t----- bird -----\tformula_1",
    "938": "SELECT * FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE statusId = (SELECT MAX(statusId) FROM status WHERE status = 'Champion'));\t----- bird -----\tformula_1",
    "939": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND raceId = 2008 AND round = 1 AND circuitId = 1;\t----- bird -----\tformula_1",
    "940": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE statusId = 1);\t----- bird -----\tformula_1",
    "941": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis');\t----- bird -----\tformula_1",
    "942": "SELECT AVG(fastestLapTime) AS avg_fastest_lap_time FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis');\t----- bird -----\tformula_1",
    "943": "SELECT COUNT(DISTINCT raceID) AS total_races, COUNT(DISTINCT raceID WHERE time IS NOT NULL) AS races_completed FROM results WHERE raceID = (SELECT raceID FROM races WHERE year = 2008 AND round = 1 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Australian Grand Prix'));\t----- bird -----\tformula_1",
    "944": "SELECT (incremental time - champion time) / last_driver time * 100 AS percentage_faster FROM results WHERE raceId = 2008 AND driverId = 1 AND constructorId = 1;\t----- bird -----\tformula_1",
    "945": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne';\t----- bird -----\tformula_1",
    "946": "SELECT location, country FROM circuits WHERE country = 'USA';\t----- bird -----\tformula_1",
    "947": "SELECT COUNT(*) FROM drivers WHERE country = 'United Kingdom' AND year > 1980;\t----- bird -----\tformula_1",
    "948": "SELECT MAX(points) AS max_points FROM constructors WHERE nationality = 'British';\t----- bird -----\tformula_1",
    "949": "SELECT c.name, SUM(r.points) AS total_points FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON r.raceId = cr.raceId WHERE r.year = 2022 GROUP BY c.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "950": "SELECT c.name FROM constructors c WHERE c.points = 0 AND c.constructorId = (SELECT constructorId FROM constructorResults WHERE raceId = 291);\t----- bird -----\tformula_1",
    "951": "SELECT COUNT(*) FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Japanese') AND raceId IN (SELECT raceId FROM races WHERE COUNT(raceId) = 2) AND points = 0;\t----- bird -----\tformula_1",
    "952": "SELECT DISTINCT constructorId FROM results WHERE position = 1;\t----- bird -----\tformula_1",
    "953": "SELECT COUNT(*) FROM results WHERE driverId IN (SELECT driverId FROM drivers WHERE nationality = 'French');\t----- bird -----\tformula_1",
    "954": "SELECT COUNT(DISTINCT DriverID) AS race_completion_percentage FROM results WHERE year BETWEEN 2007 AND 2009 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "955": "SELECT year, AVG(time) AS average_time FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Champion') AND year < 1975 GROUP BY year;\t----- bird -----\tformula_1",
    "956": "SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races r2 ON r.raceId = r2.raceId WHERE r2.year > 1975 AND r2.round = 1 AND r2.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Circuit X') AND r.position = 2 AND d.dob > '1975-01-01';\t----- bird -----\tformula_1",
    "957": "SELECT COUNT(*) FROM drivers WHERE country = 'Italy' AND statusId = 1;\t----- bird -----\tformula_1",
    "958": "SELECT d.forename, d.surname FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'Formula 1' AND lt.position = (SELECT MAX(position) FROM lapTimes WHERE raceId = r.raceId)\t----- bird -----\tformula_1",
    "959": "SELECT MAX(fastestLap) AS max_fastest_lap FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE year = 2009);\t----- bird -----\tformula_1",
    "960": "SELECT AVG(fastestLapSpeed) AS average_fastest_lap_speed FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Spanish Grand Prix');\t----- bird -----\tformula_1",
    "961": "SELECT MIN(milliseconds) AS shortest_actual_finishing_time FROM results WHERE milliseconds IS NOT NULL AND raceId = (SELECT MIN(raceId) FROM races);\t----- bird -----\tformula_1",
    "962": "SELECT COUNT(driverId) / (SELECT COUNT(driverId) FROM drivers WHERE year(dob) < 1985 AND laps > 50) * 100 AS percentage FROM drivers WHERE year(dob) < 1985 AND laps > 50;\t----- bird -----\tformula_1",
    "963": "SELECT COUNT(*) FROM drivers WHERE country = 'France' AND lap_time < 02:00.00;\t----- bird -----\tformula_1",
    "964": "SELECT * FROM drivers WHERE nationality = 'America';\t----- bird -----\tformula_1",
    "965": "SELECT races.raceId FROM races WHERE races.year = 2009;\t----- bird -----\tformula_1",
    "966": "SELECT COUNT(*) FROM drivers WHERE driverId IN (SELECT driverId FROM lapTimes WHERE raceId = 18);\t----- bird -----\tformula_1",
    "967": "SELECT d.driverId, d.forename, d.surname, c.name, c.nationality FROM drivers d JOIN constructorResults cr ON d.driverId = cr.driverId JOIN constructors c ON cr.constructorId = c.constructorId WHERE d.forename = 'Max' AND d.surname = 'Verstappen' AND d.dob = '1997-05-30' ORDER BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "968": "SELECT name FROM drivers WHERE driverRef = 'Robert Kubica';\t----- bird -----\tformula_1",
    "969": "SELECT COUNT(*) FROM drivers WHERE country = 'United Kingdom' AND year = 1980;\t----- bird -----\tformula_1",
    "970": "SELECT d.forename, d.surname, r.name, r.date, r.time, r.url, r.status, c.name, c.nationality, c.url, q.q1, q.q2, q.q3, q.number, q.position, q.grid, q.positionText, q.positionOrder, q.points, q.laps, q.time, q.milliseconds, q.fastestLap, q.rank, q.fastestLapTime, q.fastestLapSpeed, s.statusId FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN status s ON q.statusId = s.statusId WHERE d.forename LIKE 'A%' AND d.surname LIKE 'B%' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' AND r.year = 2022 AND q.year = 2022 AND s.status = 'Active' AND r.circuitId = 1 AND r.round = 1 AND r.lat >= 40 AND r.lng >= -10 AND r.lat <= 60 AND r.lng <= 10 ORDER BY r.time ASC LIMIT 3;\t----- bird -----\tformula_1",
    "971": "SELECT forename, surname FROM drivers WHERE nationality = 'German' AND dob = (SELECT MIN(year(dob)) FROM drivers WHERE nationality = 'German');\t----- bird -----\tformula_1",
    "972": "SELECT d.driverId, d.code FROM drivers d JOIN lapTimes l ON d.driverId = l.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON l.raceId = r.raceId WHERE r.year = 1971 AND l.position = 1 AND q.q1 = 'q1' AND q.q2 = 'q2' AND q.q3 = 'q3' GROUP BY d.driverId, d.code HAVING MAX(l.milliseconds) = (SELECT MAX(l.milliseconds) FROM lapTimes l WHERE l.raceId = r.raceId AND l.driverId = d.driverId);\t----- bird -----\tformula_1",
    "973": "SELECT d.forename, d.surname, r.name, r.date, r.time, r.url, r.status, c.name, c.nationality, c.url, q.q1, q.q2, q.q3, q.number, q.position, q.grid, q.positionText, q.positionOrder, q.points, q.laps, q.time, q.milliseconds, q.fastestLap, q.rank, q.fastestLapTime, q.fastestLapSpeed, s.statusId FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN qualifying q ON d.driverId = q.driverId JOIN constructors c ON q.constructorId = c.constructorId JOIN status s ON q.statusId = s.statusId WHERE d.forename = 'NAME_1' AND d.surname = 'NAME_2' AND d.dob < 1982 AND r.year = 2022 AND q.number = 1 AND q.position = 1 AND q.grid = 1 AND q.positionText = '1st' AND q.positionOrder = 1 AND q.points = 1 AND q.laps = 1 AND q.time = '1:23.456' AND q.milliseconds = 123 AND q.fastestLap = 1 AND q.rank = 1 AND q.fastestLapTime = '1:23.456' AND q.fastestLapSpeed = '100' AND s.status = 'Winner';\t----- bird -----\tformula_1",
    "974": "SELECT MAX(fastestLapTime) AS max_fastestLapTime FROM results WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "975": "SELECT MAX(laps) AS max_laps FROM results WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "976": "[SQL] SELECT d.driverId, d.forename, d.surname, r.name, r.date, r.time, r.url, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt, r.country, r.lat, r.lng, r.alt,\t----- bird -----\tformula_1",
    "977": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2;\t----- bird -----\tformula_1",
    "978": "SELECT COUNT(*) FROM races WHERE circuitId = (SELECT circuitId FROM circuits WHERE country = 'Austria');\t----- bird -----\tformula_1",
    "979": "SELECT MAX(finishers) AS max_finishers FROM races;\t----- bird -----\tformula_1",
    "980": "SELECT d.forename, d.surname, d.dob, c.nationality FROM drivers d JOIN constructorResults cr ON d.driverId = cr.driverId JOIN constructors c ON cr.constructorId = c.constructorId WHERE cr.raceId = 23 AND cr.points > 1 AND cr.status = 'Q2' GROUP BY d.driverId, d.forename, d.surname, d.dob, c.nationality HAVING COUNT(cr.raceId) > 1;\t----- bird -----\tformula_1",
    "981": "SELECT MIN(races.date) AS first_qualifying_race_date, races.name AS first_qualifying_race_name, races.time AS first_qualifying_race_time FROM races JOIN qualifying ON races.raceId = qualifying.raceId JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.dob = (SELECT MIN(drivers.dob) FROM drivers) AND qualifying.number = 1;\t----- bird -----\tformula_1",
    "982": "SELECT COUNT(*) FROM drivers WHERE nationality = 'American' AND status = 'Puncture';\t----- bird -----\tformula_1",
    "983": "SELECT * FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Winner');\t----- bird -----\tformula_1",
    "984": "SELECT c.name, SUM(r.points) AS total_points FROM constructors c JOIN races r ON c.constructorId = r.constructorId JOIN results r ON r.driverId = d.driverId AND r.constructorId = c.constructorId GROUP BY c.name ORDER BY total_points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "985": "SELECT MAX(laps) AS slowest_lap FROM laptimes WHERE raceId = (SELECT raceId FROM races WHERE name = 'French Grand Prix');\t----- bird -----\tformula_1",
    "986": "SELECT MAX(milliseconds) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "987": "SELECT AVG(fastestLapTime) AS avg_fastest_lap_time FROM results WHERE raceId = 2006 AND driverId IN (SELECT driverId FROM drivers WHERE position < 11);\t----- bird -----\tformula_1",
    "988": "SELECT d.forename, d.surname, d.dob, d.nationality, d.url FROM drivers d JOIN qualifying q ON d.driverId = q.driverId JOIN races r ON q.raceId = r.raceId WHERE r.year BETWEEN 2000 AND 2010 AND d.nationality = 'German' GROUP BY d.forename, d.surname, d.dob, d.nationality, d.url HAVING MIN(AVG(pitStops.duration)) = ( SELECT MIN(AVG(pitStops.duration)) FROM ( SELECT d.forename, d.surname, d.dob, d.nationality, d.url, SUM(pitStops.duration) AS total_duration, COUNT(pitStops.stop) AS num_stops FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId JOIN races r ON ps.raceId = r.raceId WHERE r.year BETWEEN 2000 AND 2010 AND d.nationality = 'German' GROUP BY d.forename, d.surname, d.dob, d.nationality, d.url HAVING COUNT(pitStops.stop) >= 2 ) AS subquery ) ORDER BY max_popularity DESC LIMIT 3;\t----- bird -----\tformula_1",
    "989": "SELECT * FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Canadian Grand Prix' AND year = 2008);\t----- bird -----\tformula_1",
    "990": "SELECT c.constructorRef, c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = '2009 Singapore Grand Prix' GROUP BY c.constructorId ORDER BY max(cr.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "991": "SELECT d.forename ||'' || d.surname AS full_name, d.dob FROM drivers d WHERE d.nationality = 'Austrian' AND d.dob BETWEEN '1981-01-01' AND '1991-12-31';\t----- bird -----\tformula_1",
    "992": "SELECT full_name, wiki_link, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC;\t----- bird -----\tformula_1",
    "993": "SELECT name, country, lat, lng, alt FROM circuits WHERE circuitRef = 'Hungaroring';\t----- bird -----\tformula_1",
    "994": "SELECT c.name, c.nationality FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "995": "SELECT AVG(points) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Turkish Grand Prix' AND year = 2022);\t----- bird -----\tformula_1",
    "996": "SELECT COUNT(*) FROM races WHERE year BETWEEN 2000 AND 2010;\t----- bird -----\tformula_1",
    "997": "SELECT citizenship, COUNT(*) AS popularity FROM drivers GROUP BY citizenship ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tformula_1",
    "998": "SELECT MAX(points) AS max_points FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'NAME_1' AND surname = 'NAME_2');\t----- bird -----\tformula_1",
    "999": "[SQL] SELECT r.name, r.lat, r.lng, r.alt, r.url, r.country, r.location, r.circuitRef, r.name, r.url, c.name, c.nationality, c.url, d.forename, d.surname, d.dob, d.nationality, d.url, rr.name, rr.date, rr.time, rr.url, rr.round, rr.circuitId, rr.url, rr.status, rr.points, rr.position, rr.positionText, rr.wins, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.driverId, rr.\t----- bird -----\tformula_1",
    "1000": "SELECT r.name, r.location, r.country, r.lat, r.lng, r.alt, r.url FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.date = (SELECT MAX(r2.date) FROM races r2) ORDER BY r.date DESC;\t----- bird -----\tformula_1",
    "1001": "SELECT d.forename ||'' || d.surname AS full_name FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId JOIN races r ON lt.raceId = r.raceId JOIN qualifying q ON d.driverId = q.driverId WHERE r.circuitId = 'Marina Bay Street Circuit' AND r.year = 2008 AND q.number = 3 AND q.position = 1 AND q.statusId = (SELECT statusId FROM status WHERE status = '1st');\t----- bird -----\tformula_1",
    "1002": "SELECT d.forename ||'' || d.surname AS full_name, d.nationality, r.name AS race_name FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) AND r.year = (SELECT MIN(year) FROM races);\t----- bird -----\tformula_1",
    "1003": "SELECT MAX(accidents) AS max_accidents FROM results WHERE raceId = (SELECT id FROM races WHERE name = 'Canadian Grand Prix');\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS wins FROM drivers d JOIN races r ON d.driverId = r.driverId JOIN results r ON r.driverId = d.driverId AND r.resultId = r.resultId WHERE r.year = (SELECT MIN(r2.year) FROM races r2) GROUP BY d.forename, d.surname HAVING wins > 0 ORDER BY wins DESC LIMIT 1;\t----- bird -----\tformula_1",
    "1005": "SELECT MAX(duration) AS longest_pit_stop FROM pitstops WHERE driverId = (SELECT MAX(driverId) FROM qualifying WHERE raceId = (SELECT MAX(raceId) FROM races));\t----- bird -----\tformula_1",
    "1006": "SELECT MAX(milliseconds) AS fastest_lap_time FROM lapTimes WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "1007": "SELECT MAX(duration) AS longest_time FROM pitStops WHERE driverId = (SELECT MAX(driverId) FROM qualifying WHERE raceId = (SELECT MAX(raceId) FROM races));\t----- bird -----\tformula_1",
    "1008": "SELECT lap FROM lapTimes WHERE raceId = (SELECT id FROM races WHERE name = '2011 Australian Grand Prix' AND year = 2011) AND driverId = (SELECT id FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');\t----- bird -----\tformula_1",
    "1009": "SELECT MAX(pitStopDuration) AS max_pit_stop_duration FROM pitStops WHERE raceId = (SELECT MAX(raceId) FROM races WHERE year = 2011);\t----- bird -----\tformula_1",
    "1010": "SELECT MAX(laps) AS max_laps FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis');\t----- bird -----\tformula_1",
    "1011": "SELECT d.forename ||'' || d.surname AS full_name FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races r2 ON r.raceId = r2.raceId WHERE r2.round = 16 AND r2.year = 2023 AND r2.circuitId = 1 AND r.position = 1 AND r.time = (SELECT MIN(time) FROM lapTimes WHERE raceId = r.raceId) GROUP BY d.driverId ORDER BY max(r.time) DESC LIMIT 20;\t----- bird -----\tformula_1",
    "1012": "SELECT MAX(position) AS max_position FROM results WHERE raceId = (SELECT MAX(raceId) FROM results WHERE driverId = (SELECT MAX(driverId) FROM results));\t----- bird -----\tformula_1",
    "1013": "SELECT MAX(laps) AS max_laps FROM lap WHERE raceId = (SELECT MAX(raceId) FROM races);\t----- bird -----\tformula_1",
    "1014": "SELECT * FROM lap WHERE circuitId = (SELECT circuitId FROM circuits WHERE country = 'Italy');\t----- bird -----\tformula_1",
    "1015": "SELECT * FROM races WHERE name = 'Austrian Grand Prix Circuit' AND lap = (SELECT MAX(lap) FROM lapTimes WHERE raceId = (SELECT MAX(raceId) FROM races));\t----- bird -----\tformula_1",
    "1016": "SELECT MAX(pit_stop_duration) AS max_pit_stop_duration FROM pit_stops WHERE race_id = (SELECT id FROM races WHERE name = 'Austrian Grand Prix Circuit');\t----- bird -----\tformula_1",
    "1017": "SELECT circuits.location, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN constructorResults ON races.raceId = constructorResults.raceId AND circuits.circuitId = constructorResults.circuitId JOIN constructorStandings ON races.raceId = constructorStandings.raceId AND circuits.circuitId = constructorStandings.circuitId JOIN drivers ON constructorStandings.constructorId = drivers.constructorId WHERE constructorResults.points = 1 AND constructorResults.status = '1' AND constructorResults.lap = 1 AND constructorResults.time = '1:29.488' GROUP BY circuits.location, circuits.lat, circuits.lng HAVING MAX(constructorResults.points) = 1 AND MAX(constructorResults.status) = '1' AND MAX(constructorResults.lap) = 1 AND MAX(constructorResults.time) = '1:29.488' ORDER BY circuits.location, circuits.lat, circuits.lng;\t----- bird -----\tformula_1",
    "1018": "SELECT AVG(milliseconds) AS average_time FROM lapTimes WHERE driverId = (SELECT driverId FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE url = 'https://www.formula1.com/en')));\t----- bird -----\tformula_1",
    "1019": "SELECT AVG(milliseconds) AS average_lap_time FROM lapTimes WHERE raceId IN (SELECT raceId FROM races WHERE country = 'Italy');\t----- bird -----\tformula_1",
    "1020": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1022": "[SQL] SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes, player_attributes.date, player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.player_fifa_api_id, player_attributes.player_name, player_attributes.\t----- bird -----\teuropean_football_2",
    "1023": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes WHERE attribute = 'crossing';\t----- bird -----\teuropean_football_2",
    "1025": "SELECT country_name, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match WHERE season = '2015/2016' GROUP BY country_name ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1026": "SELECT country_id, COUNT(*) AS num_matches_lost FROM Match WHERE season = '2015/2016' AND (home_team_goal - away_team_goal) < 0 GROUP BY country_id ORDER BY num_matches_lost DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name, MAX(penalties) AS max_penalties FROM Player WHERE penalties = (SELECT MAX(penalties) FROM Player);\t----- bird -----\teuropean_football_2",
    "1028": "SELECT Team.team_long_name FROM Team JOIN Match ON Team.team_api_id = Match.home_team_api_id JOIN Match ON Team.team_api_id = Match.away_team_api_id JOIN Team_Attributes ON Match.home_team_api_id = Team_Attributes.team_api_id JOIN Team_Attributes ON Match.away_team_api_id = Team_Attributes.team_api_id JOIN League ON Team.team_api_id = League.team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2010' AND Match.stage = 1 AND Match.date LIKE '2010%' AND Match.home_team_goal > Match.away_team_goal GROUP BY Team.team_long_name ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1029": "SELECT t1.team_long_name, t1.team_api_id, t1.buildUpPlaySpeed, t1.buildUpPlaySpeedClass, t1.buildUpPlayDribbling, t1.buildUpPlayDribblingClass, t1.buildUpPlayPassing, t1.buildUpPlayPassingClass, t1.buildUpPlayPositioningClass, t1.chanceCreationPassing, t1.chanceCreationPassingClass, t1.chanceCreationCrossing, t1.chanceCreationCrossingClass, t1.chanceCreationShooting, t1.chanceCreationShootingClass, t1.chanceCreationPositioningClass, t1.defencePressure, t1.defencePressureClass, t1.defenceAggression, t1.defenceAggressionClass, t1.defenceTeamWidth, t1.defenceTeamWidthClass, t1.defenceDefenderLineClass FROM Team_Attributes t1 JOIN Team t2 ON t1.team_api_id = t2.team_api_id JOIN League l1 ON t2.country_id = l1.country_id JOIN Country c1 ON l1.country_id = c1.id WHERE t1.buildUpPlaySpeed = (SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes) ORDER BY t1.buildUpPlaySpeed DESC;\t----- bird -----\teuropean_football_2",
    "1030": "SELECT country_id, SUM(match_api_id) AS total_matches FROM Match WHERE season = '2015/2016' AND stage = 1 GROUP BY country_id ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1031": "SELECT COUNT(*) AS count FROM Player_Attributes WHERE overall_rating > 97 AND date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "1032": "SELECT country_id, COUNT(league_id) AS total_matches FROM League GROUP BY country_id ORDER BY total_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "1033": "SELECT AVG(height) AS average_height FROM Player_Attributes WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1996-01-01 00:00:00';\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE date = '2010');\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name FROM Team WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL);\t----- bird -----\teuropean_football_2",
    "1037": "SELECT COUNT(player_fifa_api_id) AS total_players, SUM(preferred_foot = 'left') AS left_foot_players, SUM(YEAR(birthday) BETWEEN '1987' AND '1992') AS born_between_1987_and_1992 FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1038": "SELECT country_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match GROUP BY country_id ORDER BY total_goals DESC LIMIT 5;\t----- bird -----\teuropean_football_2",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_api_id = 12345;\t----- bird -----\teuropean_football_2",
    "1040": "SELECT Player.player_name, AVG(heading_accuracy) AS average_heading_accuracy FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.height > 180 GROUP BY Player.player_name ORDER BY average_heading_accuracy DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1041": "SELECT team_long_name FROM Team WHERE team_api_id IN (SELECT team_api_id FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00') AND chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team WHERE team_api_id IN (SELECT team_api_id FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00')) ORDER BY chanceCreationPassing DESC;\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM League JOIN Match ON Match.league_id = League.id JOIN Team_Attributes ON Team_Attributes.team_api_id = Team.team_api_id WHERE Match.season = '2009/2010' AND Match.stage = 1 AND Match.date LIKE '%2009/2010%' AND Match.home_team_goal > Match.away_team_goal GROUP BY League.name HAVING MAX(Match.home_team_goal) > MAX(Match.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';\t----- bird -----\teuropean_football_2",
    "1044": "SELECT * FROM Player WHERE substr(birthday,1,7) = '197010';\t----- bird -----\teuropean_football_2",
    "1045": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Franco Zennaro');\t----- bird -----\teuropean_football_2",
    "1046": "SELECT buildUpPlayPositioningClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'ADO Den Haag');\t----- bird -----\teuropean_football_2",
    "1047": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Francois Affolter');\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas' AND strftime('%Y', date) = '2011');\t----- bird -----\teuropean_football_2",
    "1049": "SELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Scotland Premier League');\t----- bird -----\teuropean_football_2",
    "1050": "[SQL] SELECT player_attributes.player_api_id, player_attributes.preferred_foot, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes, player, team_attributes, team, match WHERE player.player_api_id = player_attributes.player_api_id AND player.player_fifa_api_id = player_attributes.player_fifa_api_id AND team.team_api_id = player_attributes.team_api_id AND team.team_fifa_api_id = player_attributes.team_fifa_api_id AND match.home_team_api_id = player_attributes.team_api_id AND match.away_team_api_id = player_attributes.team_api_id AND match.date = '2023-01-01' AND match.stage = 1 AND match.season = '2022-2023' AND match.country_id = team.country_id AND match.league_id = team.league_id AND match.home_team_goal = 1 AND match.away_team_goal = 0 AND match.home_player_X1 = 1 AND match.home_player_X2 = 2 AND match.home_player_X3 = 3 AND match.home_player_X4 = 4 AND match.home_player_X5 = 5 AND match.home_player_X6 = 6 AND match.home_player_X7 = 7 AND match.home_player_X8 = 8 AND match.home_player_X9 = 9 AND match.home_player_X10 = 10 AND match.home_player_X11 = 11 AND match.away_player_X1 = 1 AND match.away_player_X2 = 2 AND match.away_player_X3 = 3 AND match.away_player_X4 = 4 AND match.away_player_X5 = 5 AND match.away_player_X6 = 6 AND match.away_player_X7 = 7 AND match.away_player_X8 = 8 AND match.away_player_X9 = 9 AND match.away_player_X10 = 10 AND match.away_player_X11 = 11 AND match.home_player_Y1 = 1 AND match.home_player_Y2 = 2 AND match.home_player_Y3 = 3 AND match.home_player_Y4 = 4 AND match.home_player_Y5 = 5 AND match.home_player_Y6 = 6 AND match.home_player_Y7 = 7 AND match.home_player_Y8 = 8 AND match.home_player_Y9 = 9 AND match.home_player_Y10 = 10 AND match.home_player_Y11 = 11 AND match.away_player_Y1 = 1 AND match.away_player_Y2 = 2 AND match.away_player_Y3 = 3 AND match.away_player_Y4 = 4 AND match.away_player_Y5 = 5 AND match.away_player\t----- bird -----\teuropean_football_2",
    "1051": "SELECT MAX(overall_rating) AS max_potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'NAME_1');\t----- bird -----\teuropean_football_2",
    "1052": "SELECT COUNT(*) FROM Player_Attributes WHERE weight < 130 AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1053": "SELECT team_short_name FROM Team WHERE chance_creation_passing_class = 'Risky';\t----- bird -----\teuropean_football_2",
    "1054": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'David Wilson');\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League WHERE League.country_id = (SELECT id FROM Country WHERE Country.name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1057": "SELECT AVG(home_team_goal) AS average_home_team_goal FROM Match WHERE name = 'Poland' AND season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "1058": "SELECT MAX(AVG(finishing)) AS max_finishing_rate FROM Player_Attributes WHERE id IN (SELECT MAX(id) FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes));\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180;\t----- bird -----\teuropean_football_2",
    "1060": "SELECT COUNT(*) FROM Player_Attributes WHERE strftime('%Y', birthday) = '1990';\t----- bird -----\teuropean_football_2",
    "1061": "SELECT COUNT(*) FROM Player_Attributes WHERE player_name = 'Adam' AND weight > 170;\t----- bird -----\teuropean_football_2",
    "1062": "SELECT player_name FROM Player WHERE overall_rating > 80 AND strftime('%Y', date) BETWEEN '2008' AND '2010';\t----- bird -----\teuropean_football_2",
    "1063": "SELECT MAX(overall_rating) AS max_popularity FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1064": "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "1065": "SELECT team_long_name FROM Team WHERE team_attributes.buildUpPlaySpeedClass = 'Fast';\t----- bird -----\teuropean_football_2",
    "1066": "SELECT passing_class FROM Team_Attributes WHERE team_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'CLB');\t----- bird -----\teuropean_football_2",
    "1067": "SELECT team_short_name FROM Team WHERE buildUpPlayPassing > 70;\t----- bird -----\teuropean_football_2",
    "1068": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', date) >= '2010' AND strftime('%Y', date) <= '2015' AND height > 170;\t----- bird -----\teuropean_football_2",
    "1069": "SELECT MIN(height) AS shortest_height FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Player Name');\t----- bird -----\teuropean_football_2",
    "1070": "SELECT League.name FROM League WHERE League.name = 'Italy Serie A';\t----- bird -----\teuropean_football_2",
    "1071": "SELECT team_short_name FROM Team_Attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2",
    "1072": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');\t----- bird -----\teuropean_football_2",
    "1073": "SELECT COUNT(*) FROM Match WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2",
    "1074": "SELECT team_short_name FROM Team WHERE home_team_goal = 10;\t----- bird -----\teuropean_football_2",
    "1075": "SELECT * FROM Player_Attributes WHERE balance = (SELECT MAX(balance) FROM Player_Attributes) AND potential = 61;\t----- bird -----\teuropean_football_2",
    "1076": "SELECT AVG(ball_control) AS avg_ball_control_abdou_diallo, AVG(ball_control) AS avg_ball_control_aaron_appindangoye FROM Player_Attributes WHERE player_name = 'Abdou Diallo' AND player_name = 'Aaron Appindangoye';\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_api_id = (SELECT team_api_id FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'GEN')));\t----- bird -----\teuropean_football_2",
    "1078": "SELECT id FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon');\t----- bird -----\teuropean_football_2",
    "1079": "SELECT MAX(height) AS tallest_player FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1080": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "1081": "SELECT League.name FROM League WHERE League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT * FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Germany');\t----- bird -----\teuropean_football_2",
    "1083": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1084": "SELECT COUNT(*) FROM Player_Attributes WHERE strftime('%Y', birthday)<'1986' AND defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "1085": "SELECT MAX(crossing) AS max_crossing FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE player_name = 'Alexis');\t----- bird -----\teuropean_football_2",
    "1086": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk');\t----- bird -----\teuropean_football_2",
    "1087": "SELECT COUNT(*) FROM Player_Attributes WHERE height > 180 AND volley > 70;\t----- bird -----\teuropean_football_2",
    "1088": "SELECT p.player_name FROM Player p JOIN Team_Attributes ta ON p.player_api_id = ta.team_api_id JOIN Match m ON ta.team_api_id = m.team_api_id WHERE m.stage = 1 AND m.date >= '2022-01-01' AND m.date <= '2022-12-31' AND p.volley_score > 70 AND p.dribbling_score > 70;\t----- bird -----\teuropean_football_2",
    "1089": "SELECT COUNT(*) FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium');\t----- bird -----\teuropean_football_2",
    "1090": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Oldest Player');\t----- bird -----\teuropean_football_2",
    "1091": "SELECT COUNT(*) FROM Match WHERE League.name = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = 'April, 2009';\t----- bird -----\teuropean_football_2",
    "1092": "SELECT country_name FROM League WHERE season = '2008/2009' AND id = (SELECT MAX(league_id) FROM League WHERE season = '2008/2009');\t----- bird -----\teuropean_football_2",
    "1093": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE strftime('%Y', birthday) < '1986';\t----- bird -----\teuropean_football_2",
    "1094": "SELECT (MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100)) AS percentage FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk';\t----- bird -----\teuropean_football_2",
    "1095": "SELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'Heart of Midlothian');\t----- bird -----\teuropean_football_2",
    "1096": "SELECT AVG(T1.overall_rating) AS average_overall_rating FROM Player_Attributes AS T1 WHERE T1.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "1097": "SELECT SUM(crossing) AS total_crossing_score FROM Match WHERE T2.player_name = 'Aaron Lennox';\t----- bird -----\teuropean_football_2",
    "1098": "SELECT MAX(chanceCreationPassing) AS max_chance_creation_passing, chanceCreationPassingClass FROM Team_Attributes WHERE team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "1099": "SELECT player_attributes.player_name, player_attributes.preferred_foot FROM player_attributes WHERE player_attributes.player_api_id = (SELECT player_attributes.player_api_id FROM player_attributes WHERE player_attributes.player_name = 'Abdou Diallo');\t----- bird -----\teuropean_football_2",
    "1100": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes WHERE player_name = 'Dorlan Pabon';\t----- bird -----\teuropean_football_2",
    "1101": "SELECT AVG(away_team_goal) AS average_goals FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy') AND team_long_name = 'Parma';\t----- bird -----\teuropean_football_2",
    "1102": "SELECT player_name FROM Player WHERE overall_rating = 77 AND date LIKE '2016-06-23' AND birthday = (SELECT MAX(birthday) FROM Player);\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%');\t----- bird -----\teuropean_football_2",
    "1104": "SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini' AND date = '2010-08-30 00:00:00');\t----- bird -----\teuropean_football_2",
    "1105": "SELECT overall_rating FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore' AND date LIKE '2015-05-01%');\t----- bird -----\teuropean_football_2",
    "1106": "SELECT \"defensive_work_rate\" FROM \"Player_Attributes\" WHERE \"player_fifa_api_id\" = (SELECT \"player_api_id\" FROM \"Player\" WHERE \"player_name\" = 'Kevin Berigaud' AND \"birthday\" = '2013-02-22 00:00:00');\t----- bird -----\teuropean_football_2",
    "1107": "SELECT MAX(crossing) AS max_crossing FROM Player_Attributes WHERE player_name = 'Kevin Constant';\t----- bird -----\teuropean_football_2",
    "1108": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_long_name = 'Willem II');\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'LEI');\t----- bird -----\teuropean_football_2",
    "1110": "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient' AND date LIKE '2010-02-22%');\t----- bird -----\teuropean_football_2",
    "1111": "SELECT chance_creation_passing_class FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'PEC Zwolle' AND date = '2013-09-20 00:00:00');\t----- bird -----\teuropean_football_2",
    "1112": "SELECT buildUpPlayCrossingClass FROM Team_Attributes WHERE team_api_id = (SELECT home_player_1 FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Hull City') AND season = '2010-02-22' AND stage = 1 AND date = '2010-02-22 00:00:00');\t----- bird -----\teuropean_football_2",
    "1113": "SELECT defence_aggression_class FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96');\t----- bird -----\teuropean_football_2",
    "1114": "SELECT AVG(overall_rating) AS average_overall_rating FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "1115": "[SQL] SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT (SELECT\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes));\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1118": "SELECT p.player_name FROM Player p WHERE p.age > 34 AND p.birthday < CURRENT_TIMESTAMP - INTERVAL '35 years';\t----- bird -----\teuropean_football_2",
    "1119": "SELECT COUNT(*) FROM Match WHERE home_player_name = 'Aaron Lennon';\t----- bird -----\teuropean_football_2",
    "1120": "SELECT SUM(away_team_goal) FROM Match WHERE home_player_name = 'Daan Smith' OR away_player_name = 'Filipe Ferreira';\t----- bird -----\teuropean_football_2",
    "1121": "SELECT SUM(home_team_goal) FROM Match WHERE home_player_X1 BETWEEN 30 AND 30 AND home_player_X2 BETWEEN 30 AND 30 AND home_player_X3 BETWEEN 30 AND 30 AND home_player_X4 BETWEEN 30 AND 30 AND home_player_X5 BETWEEN 30 AND 30 AND home_player_X6 BETWEEN 30 AND 30 AND home_player_X7 BETWEEN 30 AND 30 AND home_player_X8 BETWEEN 30 AND 30 AND home_player_X9 BETWEEN 30 AND 30 AND home_player_X10 BETWEEN 30 AND 30 AND home_player_X11 BETWEEN 30 AND 30 AND home_player_Y1 BETWEEN 30 AND 30 AND home_player_Y2 BETWEEN 30 AND 30 AND home_player_Y3 BETWEEN 30 AND 30 AND home_player_Y4 BETWEEN 30 AND 30 AND home_player_Y5 BETWEEN 30 AND 30 AND home_player_Y6 BETWEEN 30 AND 30 AND home_player_Y7 BETWEEN 30 AND 30 AND home_player_Y8 BETWEEN 30 AND 30 AND home_player_Y9 BETWEEN 30 AND 30 AND home_player_Y10 BETWEEN 30 AND 30 AND home_player_Y11 BETWEEN 30 AND 30 AND home_player_1 BETWEEN 30 AND 30 AND home_player_2 BETWEEN 30 AND 30 AND home_player_3 BETWEEN 30 AND 30 AND home_player_4 BETWEEN 30 AND 30 AND home_player_5 BETWEEN 30 AND 30 AND home_player_6 BETWEEN 30 AND 30 AND home_player_7 BETWEEN 30 AND 30 AND home_player_8 BETWEEN 30 AND 30 AND home_player_9 BETWEEN 30 AND 30 AND home_player_10 BETWEEN 30 AND 30 AND home_player_11 BETWEEN 30 AND 30 AND away_player_1 BETWEEN 30 AND 30 AND away_player_2 BETWEEN 30 AND 30 AND away_player_3 BETWEEN 30 AND 30 AND away_player_4 BETWEEN 30 AND 30 AND away_player_5 BETWEEN 30 AND 30 AND away_player_6 BETWEEN 30 AND 30 AND away_player_7 BETWEEN 30 AND 30 AND away_player_8 BETWEEN 30 AND 30 AND away_player_9 BETWEEN 30 AND 30 AND away_player_10 BETWEEN 30 AND 30 AND away_player_11 BETWEEN 30 AND 30 AND goal = 'home_team_goal';\t----- bird -----\teuropean_football_2",
    "1122": "SELECT MAX(overall_rating) AS max_overall_rating FROM Player_Attributes;\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_api_id, player_name, MAX(overall_rating) AS max_overall_rating FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) GROUP BY player_api_id;\t----- bird -----\teuropean_football_2",
    "1124": "SELECT p1.player_name, p1.attacking_work_rate FROM Player_Attributes p1 JOIN Player p2 ON p1.player_api_id = p2.player_api_id JOIN Team_Attributes ta ON p2.team_api_id = ta.team_api_id JOIN Match m ON p2.team_api_id = m.team_api_id WHERE ta.buildUpPlaySpeedClass = 'high' AND m.stage = 1 AND p1.attacking_work_rate = 'high' AND p2.attacking_work_rate = 'high' AND p2.player_api_id = p1.player_api_id GROUP BY p1.player_name, p1.attacking_work_rate HAVING COUNT(p2.player_api_id) > 1 ORDER BY COUNT(p2.player_api_id) DESC LIMIT 10;\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_name FROM Player WHERE finishing = 1 AND eldest = 1;\t----- bird -----\teuropean_football_2",
    "1126": "SELECT player_name FROM Player WHERE player_fifa_api_id IN (SELECT player_api_id FROM Team_Attributes WHERE team_fifa_api_id IN (SELECT team_api_id FROM League WHERE country_id IN (SELECT id FROM Country WHERE name = 'Belgium')));\t----- bird -----\teuropean_football_2",
    "1127": "SELECT Player.player_name, Country.name FROM Player JOIN Team_Attributes ON Player.team_api_id = Team_Attributes.team_api_id JOIN League ON Team_Attributes.team_fifa_api_id = League.team_fifa_api_id JOIN Country ON League.country_id = Country.id WHERE Team_Attributes.buildUpPlayPositioningClass = 'Vision' AND Team_Attributes.buildUpPlayPositioningClass >= 90 GROUP BY Player.player_name, Country.name HAVING COUNT(DISTINCT Team_Attributes.team_fifa_api_id) > 0;\t----- bird -----\teuropean_football_2",
    "1128": "SELECT MAX(AVG(weight)) AS max_average_weight FROM Player_Attributes WHERE country_id = (SELECT id FROM Country WHERE name = 'Country Name');\t----- bird -----\teuropean_football_2",
    "1129": "SELECT team_long_name FROM Team WHERE team_attributes.buildUpPlaySpeedClass = 'Slow';\t----- bird -----\teuropean_football_2",
    "1130": "SELECT team_short_name FROM Team WHERE team_api_id IN (SELECT team_api_id FROM Team_Attributes WHERE team_fifa_api_id IN (SELECT team_fifa_api_id FROM League WHERE country_id IN (SELECT id FROM Country WHERE name = 'England'))) AND chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "1131": "SELECT AVG(height) AS average_heights FROM Player WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name;\t----- bird -----\teuropean_football_2",
    "1133": "SELECT COUNT(*) FROM Player_Attributes WHERE player_fifa_api_id IN (SELECT player_api_id FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990');\t----- bird -----\teuropean_football_2",
    "1134": "SELECT jumping - jumping FROM Player_Attributes WHERE id = 6 AND id = 23;\t----- bird -----\teuropean_football_2",
    "1135": "SELECT id FROM Player_Attributes WHERE overall_rating = (SELECT MIN(overall_rating) FROM Player_Attributes) AND preferred_foot = 'right' AND date = (SELECT MIN(date) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MIN(overall_rating) FROM Player_Attributes)));\t----- bird -----\teuropean_football_2",
    "1136": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes WHERE preferred_foot = 'left') AND attacking_work_rate = (SELECT MAX(attacking_work_rate) FROM Player_Attributes WHERE preferred_foot = 'left');\t----- bird -----\teuropean_football_2",
    "1137": "SELECT COUNT(*) FROM Player_Attributes WHERE strength > 80 AND stamina > 80;\t----- bird -----\teuropean_football_2",
    "1138": "SELECT country_name FROM Country WHERE id = (SELECT id FROM League WHERE country_id = (SELECT id FROM Team WHERE team_api_id = (SELECT team_api_id FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'Poland Ekstraklasa'))));\t----- bird -----\teuropean_football_2",
    "1139": "[SQL] SELECT * FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Belgium') AND League.name = 'Belgium Jupiler League' AND date = '2008-09-24' AND home_team_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team_Attributes WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id = (SELECT id FROM Team WHERE team_api_id = (SELECT id FROM Team WHERE team_fifa_api_id =\t----- bird -----\teuropean_football_2",
    "1140": "SELECT overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes FROM Player_Attributes WHERE player_name = 'Alexis Blin';\t----- bird -----\teuropean_football_2",
    "1141": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "1142": "SELECT COUNT(*) FROM League WHERE country_id = (SELECT id FROM Country WHERE name = 'Italy');\t----- bird -----\teuropean_football_2",
    "1143": "SELECT MAX(home_team_goal) AS max_home_team_goal FROM Match WHERE country_id = (SELECT id FROM Country WHERE name = 'Netherlands');\t----- bird -----\teuropean_football_2",
    "1144": "SELECT MAX(overall_rating) AS max_overall_rating, MAX(potential) AS max_potential, MAX(preferred_foot) AS max_preferred_foot, MAX(attacking_work_rate) AS max_attacking_work_rate, MAX(defensive_work_rate) AS max_defensive_work_rate, MAX(crossing) AS max_crossing, MAX(finishing) AS max_finishing, MAX(heading_accuracy) AS max_heading_accuracy, MAX(short_passing) AS max_short_passing, MAX(volleys) AS max_volleys, MAX(dribbling) AS max_dribbling, MAX(curve) AS max_curve, MAX(free_kick_accuracy) AS max_free_kick_accuracy, MAX(long_passing) AS max_long_passing, MAX(ball_control) AS max_ball_control, MAX(acceleration) AS max_acceleration, MAX(sprint_speed) AS max_sprint_speed, MAX(agility) AS max_agility, MAX(reactions) AS max_reactions, MAX(balance) AS max_balance, MAX(shot_power) AS max_shot_power, MAX(jumping) AS max_jumping, MAX(stamina) AS max_stamina, MAX(strength) AS max_strength, MAX(long_shots) AS max_long_shots, MAX(aggression) AS max_aggression, MAX(interceptions) AS max_interceptions, MAX(positioning) AS max_positioning, MAX(vision) AS max_vision, MAX(penalties) AS max_penalties, MAX(marking) AS max_marking, MAX(standing_tackle) AS max_standing_tackle, MAX(sliding_tackle) AS max_sliding_tackle, MAX(gk_diving) AS max_gk_diving, MAX(gk_handling) AS max_gk_handling, MAX(gk_kicking) AS max_gk_kicking, MAX(gk_positioning) AS max_gk_positioning, MAX(gk_reflexes) AS max_gk_reflexes FROM Player_Attributes WHERE weight = (SELECT MAX(weight) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(id) AS games_count FROM League JOIN Team ON League.id = Team.league_id JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id JOIN Match ON Team.team_api_id = Match.team_api_id GROUP BY League.name ORDER BY games_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1146": "SELECT team_long_name FROM Team WHERE team_api_id = (SELECT MAX(away_team_api_id) FROM Match WHERE home_team_api_id = (SELECT MAX(home_team_api_id) FROM Match));\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "1148": "SELECT PERCENTILE(0.5) WITHIN GROUP (ORDER BY overall_rating) AS median_overall_rating FROM Player_Attributes WHERE height < 180 AND overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "1149": "SELECT COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) AS male_inpatient, COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) AS male_outpatient, (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN 1 ELSE 0 END) / COUNT(ID) WHERE SEX = 'M' AND Admission = '+') * 100 AS male_inpatient_percentage, (COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN 1 ELSE 0 END) / COUNT(ID) WHERE SEX = 'M' AND Admission = '-') * 100 AS male_outpatient_percentage FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT COUNT(ID) * 100.0 / (SELECT COUNT(ID) FROM Examination WHERE year(Birthday) > '1930' AND SEX = 'F') AS percentage FROM Patient WHERE SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT COUNT(*) FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Female' AND Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND Admission = '+');\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT COUNT(ID) WHERE Diagnosis = 'SLE' AND Admission = '+' AS inpatient_count, COUNT(ID) WHERE Diagnosis = 'SLE' AND Admission = '-' AS outpatient_count FROM Examination;\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT Diagnosis FROM Patient WHERE ID = 30609; SELECT * FROM Laboratory WHERE ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT Patient.SEX, Patient.Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109;\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient WHERE Patient.ID IN (SELECT Examination.ID FROM Examination WHERE Examination.aCL IgG > '500');\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT ID, age FROM Patient WHERE Diagnosis = 'positive degree of coagulation' AND age = (SELECT year(current_timestamp) - year(Birthday) FROM Patient WHERE ID = Patient.ID);\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT Patient.ID, Patient.SEX, Diagnosis.disease FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratorium ON Examination.ID = Laboratorium.ID WHERE Examination.Thrombosis = 2 AND Diagnosis.disease IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT * FROM Patient WHERE Birthday = '1937' AND T-CHO > 250;\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT ID, SEX, DIAGNOSIS FROM Patient WHERE ALB < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT COUNT(*) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND TP < '6.0' OR TP > '8.5') * 100 FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F');\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT AVG(aCL IgG) AS average_aCL_IgG FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Female' AND SUBTRACT(year(current_timestamp), year(Birthday)) >= '50');\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Description = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT MIN(age) AS youngest_age FROM Patient WHERE First Date = (SELECT MIN(First Date) FROM Patient);\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND ID IN (SELECT ID FROM Examination WHERE Examination Date = '1997-01-01' AND Thrombosis = 1);\t----- bird -----\tthrombosis_prediction",
    "1165": "[SQL] SELECT MAX(age_gap) AS max_age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(age_gap) AS age_gap FROM (SELECT MAX(\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT symptoms, diagnosis FROM Examination WHERE ID = (SELECT MIN(ID) FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Male' AND Birthday = (SELECT MIN(Birthday) FROM Patient)));\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT AVG(COUNT(ID)) AS average_patients_per_month FROM Examination WHERE Examination Date BETWEEN '1998-01-01' AND '1998-12-31' AND SEX = 'M' AND YEAR(Examination Date) = 1998;\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT MAX(Laboratory.Date) AS max_date, (year(Birthday) - year(First Date)) AS age_at_admission FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.Diagnosis = 'SJS' AND Examination.ID = (SELECT ID FROM Examination WHERE max(Examination.ID) ORDER BY Examination.ID DESC LIMIT 1);\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT COUNT(CASE WHEN SEX = 'M' AND UA <= '8.0' THEN 1 ELSE NULL END) AS male_count, COUNT(CASE WHEN SEX = 'F' AND UA <= '6.5' THEN 1 ELSE NULL END) AS female_count, male_count / female_count AS ratio FROM Examination WHERE UA <= '8.0' AND SEX = 'M' OR UA <= '6.5' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT COUNT(*) FROM Patient WHERE NOT EXISTS (SELECT 1 FROM Examination WHERE Examination.ID = Patient.ID AND Examination.Examination Date <= DATE('now', '-1 year'));\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT COUNT(*) FROM Patient WHERE Birthday < 18 AND Examination Date BETWEEN '1990' AND '1993';\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND T-BIL >= 2.0;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis, COUNT(*) AS popularity FROM Examination WHERE Examination Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT AVG(SUBTRACT('1999', year(Birthday))) AS average_age FROM Examination WHERE Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction",
    "1175": "[SQL] SELECT MAX(HGB) AS max_hemoglobin, Diagnosis FROM Examination WHERE ID IN (SELECT ID FROM Laboratories WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Exam\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT aCL_IgG FROM Examination WHERE ID = 3605340 AND Examination_Date = '1996-12-02';\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT COUNT(*) FROM Examination WHERE ID = 2927464 AND Examination Date = '1995-9-4' AND aCL IgG = 'N' AND aCL IgM = 'N' AND ANA = 'N' AND ANA Pattern = 'N' AND aCL IgA = 'N' AND Diagnosis = 'N' AND KCT = 'N' AND RVVT = 'N' AND LAC = 'N' AND Symptoms = 'N' AND Thrombosis = 'N';\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE ID = (SELECT MIN(ID) FROM Examination WHERE Diagnosis = 'AORTITIS');\t----- bird -----\tthrombosis_prediction",
    "1179": "[SQL] SELECT aCL_IgM FROM Laboratories WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Examination Date = '1992-06-12' AND aCL IgG = 9);\t----- bird -----\tthrombosis_prediction",
    "1181": "[SQL] SELECT SUBTRACT(year(test date), year(Birthday)) AS age FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT COUNT(*) FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE First Date = '1991-06-13' AND Diagnosis = 'SJS');\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT diagnosis FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Examination Date = '1997-01-27' AND Diagnosis = 'SLE');\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT symptoms FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE Examination Date = '1993-09-27' AND ID = (SELECT ID FROM Examination WHERE Birthday = '1959-03-01'));\t----- bird -----\tthrombosis_prediction",
    "1185": "[SQL] SELECT SUM(T-CHO) AS total_cholesterol_november, SUM(T-CHO) AS total_cholesterol_december FROM Laboratories WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-02-18' AND DIAGNOSIS ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND SYMPTOMS ='male' AND THROMBOSIS = 0) AND ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE SEX ='male' AND BIRTHDAY = '1959-02-18' AND DESCRIPTION ='male' AND FIRST_DATE = '1959-02-18' AND ADMISSION = '1959-0\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'Behcet' AND Examination.Description BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Examination Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4);\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT ID FROM Patient WHERE SEX = 'F' AND YEAR(Birthday) = 1964 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA = 'S' AND AVG(`aCL IgM`) * 1.2 > AVG(`aCL IgM`);\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT COUNT(*) FROM Examination WHERE U-PRO > 0 AND U-PRO < 30 AND UA < = 6.5;\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' AND Diagnosis = 'BEHCET';\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p WHERE p.Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT COUNT(*) FROM Examination WHERE ANA Pattern!= 'P' AND SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31';\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT SEX FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'PSS');\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT AVG(ALB) AS average_blood_albumin_level FROM Examination WHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT MAX(Symptoms) AS most_common_sign FROM Examination WHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT MAX(Examination.Examination Date) AS first_documented_date, Diagnosis AS disease FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 48473;\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT COUNT(*) FROM Examination WHERE Examination.ID IN (SELECT ID FROM Patient WHERE YEAR(Examination.Examination Date) = '1997' AND tp < 8.5);\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT DIVIDE(SUM(CASE WHEN DIAGNOSIS LIKE '%ITP%' THEN 1 ELSE 0 END), SUM(CASE WHEN DIAGNOSIS LIKE '%SLE%' THEN 1 ELSE 0 END)) * 100 FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'Female');\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT COUNT(*) / COUNT(SEX = 'F') * 100 AS percentage FROM Examination WHERE YEAR(Birthday) = 1980 AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND Examination Date BETWEEN '1995' AND '1997' AND Diagnosis = 'Behcet' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND WBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT DATEDIFF(`Examination Date`, `First Date`) AS time_difference FROM Examination WHERE ID = 821298;\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN (SELECT UA FROM Laboratories WHERE ID = 57266) > 8.0 AND (SELECT SEX FROM Patients WHERE ID = 57266) = 'M' THEN 'Yes' ELSE 'No' END AS uric_acid_within_normal_range FROM Examination WHERE ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT * FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = 48473 AND Diagnosis = 'AST glutamic oxaloacetic transaminase (GOT) index is above the normal range');\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG < 60 AND Examination.Examination Date = '1994-01-01';\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT ID FROM Patient WHERE SEX = 'M' AND GPT > 60;\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT Diagnosis FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG > 60 AND aCL IgM > 60 AND ANA > 100 AND ANA Pattern = 'Anti-nuclear' AND aCL IgA > 100 AND Diagnosis = 'Lupus' AND KCT = 'Positive' AND RVVT = 'Positive' AND LAC = 'Positive' AND Symptoms = 'Fatigue, joint pain, and rash' AND Thrombosis = 1) ORDER BY Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT AVG(LDH) AS average_LDH FROM Examination WHERE LDH < 500;\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT ID, age FROM Patient WHERE LDH BETWEEN 100 AND 300 AND age = SUBTRACT(year(current_timestamp), year(Birthday));\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT * FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG < 300 AND Admission = '+');\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT ID FROM Patient WHERE Birthday = '1982-04-01';\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT ID, SEX, BIRTHDAY FROM Patient WHERE TP < 6.0;\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT DISTINCT SUBTRACT(aCL_IgG, 8.5) AS deviation_aCL_IgG, SUBTRACT(aCL_IgM, 8.5) AS deviation_aCL_IgM, SUBTRACT(ANA, 8.5) AS deviation_ANA, SUBTRACT(aCL_IgA, 8.5) AS deviation_aCL_IgA, SUBTRACT(Diagnosis, 8.5) AS deviation_Diagnosis, SUBTRACT(KCT, 8.5) AS deviation_KCT, SUBTRACT(RVVT, 8.5) AS deviation_RVVT, SUBTRACT(LAC, 8.5) AS deviation_LAC, SUBTRACT(Symptoms, 8.5) AS deviation_Symptoms, SUBTRACT(Thrombosis, 8.5) AS deviation_Thrombosis FROM Examination WHERE SEX = 'F' AND aCL_IgG > 8.5 AND aCL_IgM > 8.5 AND ANA > 8.5 AND aCL_IgA > 8.5 AND Diagnosis > 8.5 AND KCT > 8.5 AND RVVT > 8.5 AND LAC > 8.5 AND Symptoms > 8.5 AND Thrombosis > 8.5;\t----- bird -----\tthrombosis_prediction",
    "1216": "[SQL] SELECT * FROM Patient WHERE SEX = 'M' AND Albumin NOT IN (SELECT Albumin FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT * FROM Patient WHERE Birthday = '1982' AND ALB BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND UA > 6.5;\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT AVG(UA) AS average_UA_index FROM Examination WHERE UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT ID, SEX, BIRTHDAY FROM Patient WHERE UN BETWEEN 28 AND 30;\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Diagnosis = 'RA' AND Examination.KCT = 'UN' AND Examination.RVVT = 'UN' AND Examination.LAC = 'UN' AND Examination.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND CRE > 1.5;\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT ID, SEX, BIRTHDAY FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE T-BIL = (SELECT MAX(T-BIL) FROM Examination));\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT Patient.ID, Patient.SEX, Patient.Description, Laboratory.Date, Laboratory.T-BIL FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.T-BIL > 2.0 AND Laboratory.ID IN (SELECT GROUP_CONCAT(DISTINCT ID) FROM Laboratory GROUP BY ID) GROUP BY Patient.ID, Patient.SEX, Patient.Description, Laboratory.Date, Laboratory.T-BIL;\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT ID, T-CHO FROM Examination WHERE T-CHO = (SELECT MAX(T-CHO) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT AVG(age) AS average_age FROM patient WHERE sex = 'M' AND T-CHO > 250;\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT Patient.ID, Patient.Description, Laboratorium.TG_index, Laboratorium.Diagnosis FROM Patient INNER JOIN Laboratorium ON Patient.ID = Laboratorium.ID WHERE Laboratorium.TG_index > 100;\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT COUNT(*) FROM Patient WHERE TG > 200 AND SUBTRACT(year(current_timestamp), year(Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG < 250 AND aCL IgM < 250 AND ANA < 250 AND ANA Pattern = 'Anti-nuclear antibody' AND aCL IgA < 250 AND Diagnosis = 'Normal' AND KCT = 'Normal' AND RVVT = 'Normal' AND LAC = 'Normal' AND Symptoms = 'No symptoms' AND Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND BIRTHDAY BETWEEN '1936' AND '1956' AND CPK > 250;\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT ID, SEX, age FROM Patient WHERE GLU > 180 AND T-CHO < 250;\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT Patient.ID, Examination.GLU FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Date = '1991-01-01' AND Examination.GLU < 180;\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG < 0.0 OR Examination.aCL IgM < 0.0 OR Examination.ANA < 0.0 OR Examination.ANA Pattern = 'Anti-nuclear antibody' OR Examination.aCL IgA < 0.0 OR Examination.Diagnosis = 'Abnormal white blood cell count' GROUP BY Patient.SEX ORDER BY Patient.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT ID, SUBTRACT(year(current_timestamp), year(Birthday)) AS age FROM Examination WHERE RBC < 3.5 AND Diagnosis = 'lower red blood cell';\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT * FROM Patient WHERE SEX = 'F' AND SUBTRACT(year(current_timestamp), year(Birthday)) > = 50 AND RBC < = 3.5 OR RBC > = 6.0 AND Admission = '+' OR Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT ID, SEX FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT ID, SEX FROM Patient WHERE Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY BIRTHDAY ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT ID, age FROM Patient WHERE ID IN (SELECT ID FROM Examination GROUP BY ID HAVING COUNT(*) > 2 AND HCT > 52);\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'abnormal platelet level' AND PLT < 100;\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT * FROM Patient WHERE YEAR(Examination.Examination Date) = 1984 AND SUBTRACT(year(current_timestamp), year(Birthday)) < 50 AND PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT SUM(CASE WHEN SEX = 'F' AND PT > = 14 THEN 1 ELSE 0 END) / SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) * 100 AS percentage FROM Examination WHERE SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND SEX = 'F' AND PT > = 14;\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT p.ID, p.SEX, p.Birthday, p.Description, p.First Date, p.Admission, p.Diagnosis FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Examination Date > '1992-12-31' AND e.aCL IgG < 10 AND e.aCL IgM < 10 AND e.ANA < 10 AND e.ANA Pattern = 'AG' AND e.aCL IgA < 10 AND e.Diagnosis = 'Normal' AND e.KCT = 'Normal' AND e.RVVT = 'Normal' AND e.LAC = 'Normal' AND e.Symptoms = 'Normal' AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT COUNT(*) FROM Examination WHERE Examination Date > '1997-01-01' AND APTT < 45;\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT COUNT(*) FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG > 40 AND aCL IgM > 40 AND ANA > 10 AND ANA Pattern = 'Anti-nuclear' AND aCL IgA > 10 AND Diagnosis = 'Systemic Lupus Erythematosus' AND KCT = 'Positive' AND RVVT = 'Positive' AND LAC = 'Positive' AND Thrombosis = 0)\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND WBC > 3.5 AND WBC < 9.0 AND FG < 150 OR FG > 450;\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday > '1980-01-01' AND FG BETWEEN 150 AND 450;\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Diagnosis FROM Examination WHERE U-PRO > 30;\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT ID FROM Patient WHERE Diagnosis = 'SLE' AND U-PRO BETWEEN 0 AND 30;\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT COUNT(*) FROM Examination WHERE aCL IgG > 2000 AND Diagnosis = 'Ig G higher than normal';\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT COUNT(*) FROM Patient WHERE IGG > 900 AND IGG < 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE IGA = (SELECT MAX(IGA) FROM Examination WHERE IGA BETWEEN 80 AND 500));\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT COUNT(*) FROM Patient WHERE IGA > 80 AND IGA < 500 AND YEAR(First Date) >= 1990;\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgM <= 40 OR aCL IgM >= 400);\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT COUNT(*) FROM Patient WHERE Description IS NULL AND CRP = '+';\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT COUNT(*) FROM Patient WHERE Examination.ID IN (SELECT ID FROM Examination WHERE aCL IgG > 100 AND aCL IgM > 100 AND ANA > 100 AND ANA Pattern = 'Anti-nuclear antibody' AND aCL IgA > 100 AND Diagnosis = 'Lupus' AND KCT = 'Positive' AND RVVT = 'Positive' AND LAC = 'Positive' AND Symptoms = 'Fatigue, joint pain, and rash' AND Thrombosis = 1) AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70;\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'RA' AND Rhuematoid Factor = 'normal' AND KCT = '+';\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Diagnosis FROM Patient WHERE YEAR(Birthday) > 1985 AND RA IN ('-', '+-');\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE RF < 20 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) > 60;\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT COUNT(*) FROM Patient WHERE RF < 20 AND Thrombosis = '0';\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT COUNT(*) FROM Examination WHERE aCL IgG > 35 AND ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT ID FROM Examination WHERE Hematoclit NOT IN (SELECT MAX(Hematoclit) FROM Examination) AND aCL IgA = (SELECT MAX(aCL IgA) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'Blood Clots in veins' AND C4 > 10;\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT COUNT(*) FROM Patient WHERE Laboratories.RNP = '-' AND Laboratories.ID = Examination.ID AND Examination.Diagnosis = 'normal' AND Examination.ID = Patient.ID AND Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'Abnormal anti-ribonuclear protein level' ORDER BY Birthday LIMIT 1));\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT COUNT(*) FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX ='male' AND Birthday > '1980-01-01' AND Description ='male' AND First Date > '1980-01-01' AND Admission ='male' AND Diagnosis ='male') AND aCL IgG > 100 AND aCL IgM > 100 AND ANA > 100 AND ANA Pattern = 'positive' AND aCL IgA > 100 AND Diagnosis ='male' AND KCT ='male' AND RVVT ='male' AND LAC ='male' AND Symptoms ='male' AND Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG > 0 AND aCL IgM > 0 AND aCL IgA > 0 AND Diagnosis = 'anti-SM' ORDER BY Birthday LIMIT 3);\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination Date > '1997-01-01' AND SC170 IN ('negative', '0');\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT COUNT(*) FROM Patient WHERE Sex = 'F' AND Symptoms IS NULL AND anti-scl70 = 'normal';\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'Female' AND Patient.Birthday < '1999-12-31' AND Patient.Description = 'Normal anti-SSA' AND Patient.Admission = 'Yes' AND Patient.Diagnosis = 'Normal anti-SSA';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT ID FROM Patient WHERE ID IN (SELECT MIN(ID) FROM Examination WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG > 0 AND aCL IgM > 0 AND ANA NOT IN ('negative', '0')));\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT COUNT(DISTINCT Patient.ID) FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT = 0 AND Laboratory.GPT = 0 AND Laboratory.LDH = 0 AND Laboratory.ALP = 0 AND Laboratory.TP = 0 AND Laboratory.ALB = 0 AND Laboratory.UA = 0 AND Laboratory.UN = 0 AND Laboratory.CRE = 0 AND Laboratory.T-BIL = 0 AND Laboratory.T-CHO = 0 AND Laboratory.TG = 0 AND Laboratory.CPK = 0 AND Laboratory.GLU = 0 AND Laboratory.WBC = 0 AND Laboratory.RBC = 0 AND Laboratory.HGB = 0 AND Laboratory.HCT = 0 AND Laboratory.PLT = 0 AND Laboratory.PT = 0 AND Laboratory.APTT = 0 AND Laboratory.FG = 0 AND Laboratory.PIC = 0 AND Laboratory.TAT = 0 AND Laboratory.TAT2 = 0 AND Laboratory.U-PRO = 0 AND Laboratory.IGG = 0 AND Laboratory.IGA = 0 AND Laboratory.IGM = 0 AND Laboratory.CRP = 'negative' AND Laboratory.RA = 'negative' AND Laboratory.RF = 'negative' AND Laboratory.C3 = 0 AND Laboratory.C4 = 0 AND Laboratory.RNP = 'negative' AND Laboratory.SM = 'negative' AND Laboratory.SC170 = 'negative' AND Laboratory.SSA = 'negative' AND Laboratory.SSB = 'negative' AND Laboratory.CENTROMEA = 'negative' AND Laboratory.DNA = 'negative' AND Laboratory.DNA-II = 0 AND Patient.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT COUNT(DISTINCT CASE WHEN anti_ssb = 'normal' AND symptoms IS NOT NULL THEN 1 ELSE NULL END) AS count_with_symptoms FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE anti_ssb = 'normal' AND symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT COUNT(*) FROM Patient WHERE Sex = 'M' AND CENTROMEA IN('-', '+-') AND SSB IN('-', '+-') AND ID IN (SELECT ID FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1276": "[SQL] SELECT DISTINCT Diagnosis FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE ID IN (SELECT ID FROM Laborator\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG = 0 AND Description IS NULL);\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT COUNT(*) FROM Examination WHERE IGG BETWEEN 900 AND 2000 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT MIN(Birthday) AS youngest_birthday FROM Examination WHERE aCL IgG > 60 AND aCL IgM > 60 AND ANA > 0 AND ANA Pattern = 'Anti-nuclear antibody' AND aCL IgA > 0 AND Diagnosis = 'Autoimmune hepatitis' AND KCT = 'Positive' AND RVVT = 'Positive' AND LAC = 'Positive' AND Thrombosis > 0;\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT P.ID, P.SEX, P.Birthday, L.GPT, L.Date FROM Patient P INNER JOIN Examination E ON P.ID = E.ID INNER JOIN Laboratory L ON E.ID = L.ID WHERE E.Diagnosis = 'Normal' AND L.GPT = (SELECT MAX(GPT) FROM Laboratory WHERE ID = E.ID) GROUP BY P.ID, P.SEX, P.Birthday, L.GPT, L.Date ORDER BY P.Birthday DESC, L.GPT DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT COUNT(*) FROM Patient WHERE GOT < 60 AND SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT MAX(First Date) AS max_first_date FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG = (SELECT MAX(aCL IgG) FROM Examination));\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT MAX(First Date) AS latest_date FROM Patient WHERE ID = (SELECT MAX(ID) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(*) FROM Examination WHERE aCL IgG > 300 AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT COUNT(*) FROM Patient WHERE Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Diagnosis FROM Examination WHERE aCL IgG < 10 AND aCL IgM < 10 AND ANA < 10 AND aCL IgA < 10 AND Diagnosis = 'Diagnosis' AND KCT = 'KCT' AND RVVT = 'RVVT' AND LAC = 'LAC' AND Symptoms = 'Symptoms' AND Thrombosis = 1;\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT COUNT(*) FROM Examination WHERE Diagnosis = 'SJS' AND TP > 6.0 AND TP < 8.5;\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT MAX(ALB) AS max_albumin FROM Examination WHERE ID IN (SELECT ID FROM Laboratories WHERE ID IN (SELECT ID FROM Examination));\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT MAX(aCL IgG) AS max_aCL_IgG FROM Examination WHERE ID IN (SELECT ID FROM Patient WHERE SEX = 'F' AND MAX(UA) > 6.50);\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT MAX(aCL_IgG) AS max_aCL_IgG FROM Examination WHERE Examination_Date = (SELECT MAX(Examination_Date) FROM Examination WHERE Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT ID FROM Patient WHERE CRE < 1.5 AND MAX(aCL IgA) = (SELECT MAX(aCL IgA) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT COUNT(*) FROM Examination WHERE T-BIL > 2.0 AND ANA Pattern LIKE '%P';\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT MAX(aCL IgG) AS max_aCL_IgG FROM Examination WHERE Examination Date = (SELECT MAX(Examination Date) FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT COUNT(*) FROM Examination WHERE aCL IgG > 250 AND KCT = '-' AND Diagnosis = 'T-CHO > 250';\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT COUNT(*) FROM Examination WHERE T-CHO < 250 AND ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG < 200 AND Symptoms IS NOT NULL);\t----- bird -----\tthrombosis_prediction",
    "1300": "[SQL] SELECT Diagnosis FROM Examination WHERE TG = (SELECT MAX(TG) FROM Laboratories WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Patient WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT ID FROM Examination WHERE ID = (SELECT\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT ID FROM Patient WHERE Thrombosis = 0 AND CPK < 250;\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(*) FROM Examination WHERE aCL IgG < 250 AND aCL IgM < 250 AND ANA < 250 AND ANA Pattern = 'pattern1' AND aCL IgA < 250 AND Diagnosis = 'diagnosis1' AND KCT = '+' AND RVVT = '+' AND LAC = '+' AND Symptoms ='symptoms1' AND Thrombosis = 1;\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT Birthday FROM Patient WHERE ID = (SELECT MIN(ID) FROM Examination WHERE ID IN (SELECT ID FROM Laboratory WHERE T-BIL > 180));\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG < 10 AND aCL IgM < 10 AND ANA < 10 AND ANA Pattern = 'Anti-nuclear antibody' AND aCL IgA < 10 AND Diagnosis = 'Normal blood glucose' AND KCT = 'Normal' AND RVVT = 'Normal' AND LAC = 'Normal' AND Thrombosis = 0);\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT COUNT(*) FROM Patient WHERE WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT ID FROM Patient WHERE RBC < 3.5 OR RBC > 6.0 AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE aCL IgG > 100 AND aCL IgM > 100 AND ANA > 100 AND ANA Pattern = 'Anti-nuclear' AND aCL IgA > 100 AND Diagnosis = 'Systemic Lupus Erythematosus' AND KCT = 'Positive' AND RVVT = 'Positive' AND LAC = 'Positive' AND Symptoms = 'Positive' AND Thrombosis = 1);\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT PLT FROM Examination WHERE PLT > 100 AND PLT < 400 AND Diagnosis = 'MCTD';\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT AVG(PT) AS average_prothrombin_time FROM Examination WHERE SEX = 'M' AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT COUNT(*) FROM Patient WHERE Thrombosis = 2 OR Thrombosis = 1 AND PT < 14;\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM member WHERE member_id = 'Angela Sanders';\t----- bird -----\tstudent_club",
    "1313": "SELECT COUNT(*) FROM student_club WHERE major_id = (SELECT major_id FROM major WHERE college = 'College of Engineering');\t----- bird -----\tstudent_club",
    "1314": "SELECT first_name, last_name FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE type = 'zip' AND city = 'New York' AND county = 'New York' AND state = 'NY' AND short_state = 'NY');\t----- bird -----\tstudent_club",
    "1315": "SELECT COUNT(*) FROM attendance WHERE link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1316": "SELECT DISTINCT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1317": "SELECT COUNT(*) FROM member WHERE link_to_event = 'Women\\'s Soccer' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1318": "SELECT event_name, COUNT(link_to_event) AS attendance FROM event GROUP BY event_name ORDER BY attendance DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1319": "SELECT zip_code FROM zip_code WHERE short_state = 'CA';\t----- bird -----\tstudent_club",
    "1320": "SELECT event_name FROM attendance WHERE link_to_member = 'Maya Mclean';\t----- bird -----\tstudent_club",
    "1321": "SELECT COUNT(*) FROM attendance WHERE link_to_member = 'Sacha Harrison' AND YEAR(event_date) = 2019 AND event_status = 'Student_Club';\t----- bird -----\tstudent_club",
    "1322": "SELECT COUNT(*) FROM attendance WHERE event_id IN (SELECT event_id FROM event WHERE type = 'Meeting' AND COUNT(event_id) > 10);\t----- bird -----\tstudent_club",
    "1323": "SELECT event_name FROM event WHERE COUNT(attendance.link_to_event) > 20 AND event_type!= 'fundraiser';\t----- bird -----\tstudent_club",
    "1324": "SELECT AVG(attendance) AS average_attendance FROM attendance WHERE event_date >= '2020-01-01' AND event_date <= '2020-12-31' AND type = 'Meeting';\t----- bird -----\tstudent_club",
    "1325": "SELECT MAX(cost) AS most_expensive_item FROM expense WHERE expense_description = 'item in support of club events';\t----- bird -----\tstudent_club",
    "1326": "SELECT COUNT(*) FROM member WHERE major_id = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1327": "SELECT m.first_name, m.last_name FROM member m WHERE m.zip = (SELECT z.zip_code FROM zip_code z WHERE z.type = 'zip' AND z.city = 'New York' AND z.county = 'New York' AND z.state = 'NY' AND z.short_state = 'NY');\t----- bird -----\tstudent_club",
    "1328": "SELECT first_name, last_name FROM member WHERE major_id = 'Law and Constitutional Studies';\t----- bird -----\tstudent_club",
    "1329": "SELECT zip_code FROM zip_code WHERE city = 'Sherri Ramsey';\t----- bird -----\tstudent_club",
    "1330": "SELECT major_name FROM major WHERE major_id = (SELECT major_id FROM member WHERE member_id = (SELECT member_id FROM attendance WHERE link_to_event = 'event_id'));\t----- bird -----\tstudent_club",
    "1331": "SELECT SUM(amount) FROM income WHERE source = 'funds received';\t----- bird -----\tstudent_club",
    "1332": "SELECT SUM(spent) FROM expense WHERE category = 'Food' AND event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM zip_code WHERE zip_code.zip = (SELECT zip FROM member WHERE member.position = 'President');\t----- bird -----\tstudent_club",
    "1334": "SELECT full_name FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE state = 'Illinois');\t----- bird -----\tstudent_club",
    "1335": "SELECT SUM(spent) FROM expense WHERE category = 'Advertisement' AND event_name = 'September Meeting';\t----- bird -----\tstudent_club",
    "1336": "SELECT major_name FROM major WHERE department = (SELECT department FROM major WHERE major_id = (SELECT major_id FROM major WHERE member_id = (SELECT member_id FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE type = 'zip' AND city = 'New York' AND county = 'New York' AND state = 'NY' AND short_state = 'NY'))));\t----- bird -----\tstudent_club",
    "1337": "SELECT SUM(amount) FROM budget WHERE category = 'October Speaker';\t----- bird -----\tstudent_club",
    "1338": "SELECT * FROM expense WHERE expense_date = '2019-10-08' AND approved = 'True' AND link_to_event = 'October Meeting';\t----- bird -----\tstudent_club",
    "1339": "SELECT SUM(cost) FROM expense WHERE link_to_member = 'Elijah Allen' AND month(expense_date) = 9 OR month(expense_date) = 10;\t----- bird -----\tstudent_club",
    "1340": "SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM event WHERE YEAR(event_date) = 2019 AND link_to_event = 'event_id_1' UNION ALL SELECT SUM(spent) AS total_spent_2019, SUM(spent) AS total_spent_2020 FROM event WHERE YEAR(event_date) = 2020 AND link_to_event = 'event_id_2';\t----- bird -----\tstudent_club",
    "1341": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';\t----- bird -----\tstudent_club",
    "1342": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-09-04' AND link_to_budget = 'budget_id';\t----- bird -----\tstudent_club",
    "1343": "SELECT MAX(remaining) AS max_remaining FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM attendance WHERE link_to_event = '2019/9/14';\t----- bird -----\tstudent_club",
    "1345": "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE member_id = 'Carlo Jacobs';\t----- bird -----\tstudent_club",
    "1347": "SELECT zip_code FROM zip_code WHERE city = 'Adela O'Gallagher';\t----- bird -----\tstudent_club",
    "1348": "SELECT COUNT(*) FROM budget WHERE event_name = 'November Meeting' AND spent > remaining;\t----- bird -----\tstudent_club",
    "1349": "SELECT SUM(amount) FROM budget WHERE category = 'September Speaker';\t----- bird -----\tstudent_club",
    "1350": "SELECT event_status FROM event WHERE event_name = 'Post Cards, Posters' AND event_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM member WHERE member_id = 'Brent Thomason';\t----- bird -----\tstudent_club",
    "1352": "SELECT COUNT(*) FROM member WHERE major_id = 'Business' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1353": "SELECT zip_code.type FROM zip_code WHERE zip_code.type = 'Christof Nielson';\t----- bird -----\tstudent_club",
    "1354": "SELECT major_name FROM major WHERE major_name = 'Vice President';\t----- bird -----\tstudent_club",
    "1355": "SELECT zip_code.state FROM zip_code WHERE zip_code.zip = (SELECT zip FROM member WHERE member.member_id = (SELECT link_to_member FROM expense WHERE expense.expense_id = (SELECT expense_id FROM expense WHERE expense.link_to_member = (SELECT link_to_member FROM expense WHERE expense.expense_description = 'Sacha Harrison'))));\t----- bird -----\tstudent_club",
    "1356": "SELECT major_name FROM major WHERE department = 'Computer Science' AND college = 'University of California, Berkeley';\t----- bird -----\tstudent_club",
    "1357": "SELECT date_received FROM income WHERE source = 'Dues' AND member_id = (SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton');\t----- bird -----\tstudent_club",
    "1358": "SELECT first_name, last_name FROM member WHERE received_date = (SELECT MIN(received_date) FROM member WHERE source = 'Dues');\t----- bird -----\tstudent_club",
    "1359": "SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND spent > (SELECT SUM(amount) FROM budget WHERE category = 'Advertisement' AND event_name = 'October Meeting');\t----- bird -----\tstudent_club",
    "1360": "SELECT (SUM(amount) WHERE category = 'Parking' AND event_name = 'November Speaker') / (SELECT COUNT(*) FROM event WHERE event_name = 'November Speaker') * 100\t----- bird -----\tstudent_club",
    "1361": "SELECT SUM(cost) AS total_cost_of_pizzas FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "1362": "SELECT COUNT(*) FROM zip_code WHERE type = 'city' AND city = 'Orange County';\t----- bird -----\tstudent_club",
    "1363": "SELECT DISTINCT department FROM major WHERE college = 'College of Humanities and Social Sciences';\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code FROM zip_code WHERE city = 'Amy Firth';\t----- bird -----\tstudent_club",
    "1365": "[SQL] SELECT expense_description, MIN(remaining) AS lowest_remaining FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense_id FROM expense WHERE expense_id IN (SELECT expense\t----- bird -----\tstudent_club",
    "1366": "SELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, m.link_to_major, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_name = 'October Meeting' AND a.status = 'attended';\t----- bird -----\tstudent_club",
    "1367": "SELECT college, COUNT(*) AS popularity FROM member GROUP BY college ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1368": "SELECT first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1369": "SELECT MAX(amount) AS max_budget_amount FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'Event Name');\t----- bird -----\tstudent_club",
    "1370": "SELECT * FROM expense WHERE link_to_member = 'Vice President';\t----- bird -----\tstudent_club",
    "1371": "SELECT COUNT(*) FROM attendance WHERE link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1372": "SELECT date_received FROM income WHERE member_id = 'Casey Mason';\t----- bird -----\tstudent_club",
    "1373": "SELECT COUNT(*) FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE state = 'Maryland');\t----- bird -----\tstudent_club",
    "1374": "SELECT COUNT(*) FROM attendance WHERE link_to_member = '954-555-6240';\t----- bird -----\tstudent_club",
    "1375": "SELECT m.first_name, m.last_name FROM member m WHERE m.zip = (SELECT z.zip_code FROM zip_code z WHERE z.type = 'zip' AND z.city = 'School of Applied Sciences, Technology and Education' AND z.county = 'Department' AND z.state = 'of' AND z.short_state = 'App');\t----- bird -----\tstudent_club",
    "1376": "SELECT event_name, MAX(spent/amount) AS spend_to_budget_ratio FROM event WHERE status = 'Closed' GROUP BY event_name ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1377": "SELECT COUNT(*) FROM member WHERE position = 'President';\t----- bird -----\tstudent_club",
    "1378": "SELECT MAX(spent) AS max_budget_spend FROM budget WHERE event_id = (SELECT event_id FROM event WHERE event_name = 'Event Name');\t----- bird -----\tstudent_club",
    "1379": "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020;\t----- bird -----\tstudent_club",
    "1380": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1381": "SELECT first_name, last_name FROM member WHERE COUNT(link_to_event) > 7;\t----- bird -----\tstudent_club",
    "1382": "SELECT * FROM member WHERE major_id = (SELECT major_id FROM major WHERE major_name = 'Interior Design') AND event_name = 'Community Theater';\t----- bird -----\tstudent_club",
    "1383": "SELECT * FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = 'Georgetown' AND state = 'South Carolina');\t----- bird -----\tstudent_club",
    "1384": "SELECT SUM(income.amount) AS total_income FROM income WHERE income.link_to_member = 'Grant Gilmour';\t----- bird -----\tstudent_club",
    "1385": "SELECT first_name, last_name FROM member WHERE income.amount > 40;\t----- bird -----\tstudent_club",
    "1386": "SELECT SUM(cost) AS total_expense FROM expense WHERE event_status = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1387": "SELECT member_id FROM member WHERE member_id = (SELECT link_to_member FROM expense WHERE expense_id = (SELECT expense_id FROM expense WHERE expense_description = 'Yearly Kickoff'));\t----- bird -----\tstudent_club",
    "1388": "SELECT m.first_name, m.last_name, i.source, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.amount = (SELECT MAX(i.amount) FROM income)\t----- bird -----\tstudent_club",
    "1389": "SELECT MIN(cost) AS lowest_cost FROM expense WHERE link_to_budget = 'budget_id';\t----- bird -----\tstudent_club",
    "1390": "SELECT SUM(cost) AS total_cost FROM event WHERE event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "1391": "SELECT SUM(major_name = 'Finance') / SUM(major_name = 'Physics') AS ratio FROM member;\t----- bird -----\tstudent_club",
    "1392": "SELECT source, SUM(amount) AS total_amount FROM expense WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, email FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1394": "SELECT COUNT(*) FROM member WHERE major_id IN (SELECT major_id FROM major WHERE major_name = 'Physics Teaching');\t----- bird -----\tstudent_club",
    "1395": "SELECT COUNT(*) FROM attendance WHERE link_to_event = 'Community Theater' AND YEAR(event_date) = 2019;\t----- bird -----\tstudent_club",
    "1396": "SELECT COUNT(*) FROM attendance WHERE link_to_member = 'Luisa Guidi';\t----- bird -----\tstudent_club",
    "1397": "SELECT AVG(SUM(spent) / COUNT(spent)) AS avg_food_spend FROM budget WHERE category = 'Food' AND event_status = 'Closed';\t----- bird -----\tstudent_club",
    "1398": "SELECT MAX(spent) AS max_spent FROM budget WHERE category = 'Advertisement';\t----- bird -----\tstudent_club",
    "1399": "SELECT * FROM attendance WHERE link_to_event = 'Women\\'s Soccer';\t----- bird -----\tstudent_club",
    "1400": "SELECT SUM(type = 'Community Service') / COUNT(event_id) * 100 FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31';\t----- bird -----\tstudent_club",
    "1401": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Posters' AND event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size, COUNT(*) AS popularity FROM member GROUP BY t_shirt_size ORDER BY popularity DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1403": "SELECT event_name, MAX(spent) AS max_spent FROM budget WHERE event_id IN (SELECT event_id FROM event WHERE status = 'Closed') GROUP BY event_id;\t----- bird -----\tstudent_club",
    "1404": "SELECT SUM(cost) AS total_value FROM expense WHERE expense_date = 'October Meeting' AND approved = 'approved';\t----- bird -----\tstudent_club",
    "1405": "SELECT SUM(amount) AS amount_budgeted FROM budget WHERE category = 'April Speaker';\t----- bird -----\tstudent_club",
    "1406": "SELECT MAX(spent) AS max_budget FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id, SUM(spent) AS total_spent FROM budget WHERE category = 'Advertising' GROUP BY budget_id ORDER BY total_spent DESC LIMIT 3;\t----- bird -----\tstudent_club",
    "1408": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking';\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1410": "SELECT m.first_name, SUM(e.cost) AS total_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE m.member_id ='rec4BLdZHS2Blfp4v' GROUP BY m.first_name;\t----- bird -----\tstudent_club",
    "1411": "SELECT expense_description FROM expense WHERE member_id = 'Sacha Harrison';\t----- bird -----\tstudent_club",
    "1412": "SELECT expense_description FROM expense WHERE expense_description LIKE '%X-Large%' AND member_id IN (SELECT member_id FROM member WHERE t_shirt_size = 'X-Large');\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member WHERE cost < 50;\t----- bird -----\tstudent_club",
    "1414": "SELECT major_name FROM member WHERE member_id = 'Phillip Cullen';\t----- bird -----\tstudent_club",
    "1415": "SELECT first_name, last_name FROM member WHERE link_to_major = 'Business';\t----- bird -----\tstudent_club",
    "1416": "SELECT COUNT(*) FROM member WHERE major_name = 'Business' AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1417": "SELECT event_name FROM event WHERE status = 'active' AND remaining_budget > 30;\t----- bird -----\tstudent_club",
    "1418": "SELECT event_name FROM event WHERE event_date = '2022-01-01';\t----- bird -----\tstudent_club",
    "1419": "SELECT category FROM event WHERE event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club",
    "1420": "SELECT major_name FROM member WHERE position = 'Vice President';\t----- bird -----\tstudent_club",
    "1421": "SELECT COUNT(member_id) AS total_members, SUM(position = 'Member' and major_name = 'Business') AS business_members FROM member GROUP BY zip;\t----- bird -----\tstudent_club",
    "1422": "SELECT event_name FROM event WHERE event_date = 'MU 215';\t----- bird -----\tstudent_club",
    "1423": "SELECT COUNT(*) FROM income WHERE amount = 50;\t----- bird -----\tstudent_club",
    "1424": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1425": "SELECT COUNT(*) FROM major WHERE department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "1426": "SELECT m.last_name, m.major_name, m.department, m.college FROM member m JOIN major mm ON m.link_to_major = mm.major_id WHERE mm.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "1427": "SELECT b.category FROM event e JOIN major m ON e.type = 'Guest Speaker' AND m.major_id = e.link_to_major JOIN zip_code z ON e.location = z.zip_code WHERE e.event_date = '2023-01-01' AND z.zip = 68505;\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member WHERE member.zip = (SELECT zip_code.zip_code FROM zip_code WHERE zip_code.type = 'zip' AND zip_code.city = 'Electrical and Computer Engineering Department' AND zip_code.county = 'Members enrolled');\t----- bird -----\tstudent_club",
    "1429": "SELECT event_name FROM event WHERE event_date = '2023-03-15' AND type = 'Social' AND location = '900 E. Washington St.';\t----- bird -----\tstudent_club",
    "1430": "SELECT first_name, position FROM member WHERE member_id IN (SELECT link_to_member FROM expense WHERE expense_description = 'Pizza' AND expense_date = '2019-09-10');\t----- bird -----\tstudent_club",
    "1431": "SELECT m.last_name FROM member m WHERE m.member_id IN (SELECT e.link_to_member FROM event e WHERE e.event_name = 'Women''s Soccer' AND e.event_date = '2023-03-15');\t----- bird -----\tstudent_club",
    "1432": "SELECT AVG(amount) AS average_amount FROM income WHERE source = 'Student_Club' AND amount > 50 AND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "1433": "SELECT zip_code FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE type = 'PO Box' AND state = 'Puerto Rico';\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name, event_date, type, notes, location, status FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "1436": "SELECT * FROM attendance WHERE spent > 50 AND event_status = 'paid';\t----- bird -----\tstudent_club",
    "1437": "[SQL] SELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone, m.zip, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event, i.date_received, i.amount, i.source, i.notes, i.link_to_member, e.event_id, e.event_name, e.event_date, e.type, e.notes, e.location, e.status, a.link_to_event, a.link_to_member, b.budget_id, b.category, b.spent, b.remaining, b.amount, b.event_status, b.link_to_event\t----- bird -----\tstudent_club",
    "1438": "SELECT * FROM member WHERE first_name = 'Katy' AND link_to_major ='rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club",
    "1439": "SELECT phone FROM member WHERE college = 'College of Agriculture and Applied Sciences' AND major_name = 'Business';\t----- bird -----\tstudent_club",
    "1440": "SELECT email FROM member WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND cost > 20;\t----- bird -----\tstudent_club",
    "1441": "SELECT COUNT(*) FROM member WHERE link_to_major = 'education';\t----- bird -----\tstudent_club",
    "1442": "SELECT AVG(percentage) AS average_percentage FROM (SELECT COUNT(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS over_budget, COUNT(event_id) AS total_events FROM attendance GROUP BY event_id) AS subquery;\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_id, SUM(cost) AS total_cost FROM expense WHERE cost > 50 GROUP BY expense_id HAVING SUM(cost) > 50;\t----- bird -----\tstudent_club",
    "1445": "SELECT full_name FROM member WHERE t_shirt_size = 'X-Large';\t----- bird -----\tstudent_club",
    "1446": "SELECT AVG(zip_code) AS avg_zip_code FROM zip_code WHERE type = 'PO Box';\t----- bird -----\tstudent_club",
    "1447": "SELECT e.event_name, e.location FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.remaining > 0 AND e.event_id NOT IN ( SELECT e2.event_id FROM event e2 JOIN budget b2 ON e2.event_id = b2.link_to_event WHERE b2.remaining = 0 );\t----- bird -----\tstudent_club",
    "1448": "SELECT event_name, event_date FROM event WHERE type = 'Pizza' AND cost > 50 AND cost < 100;\t----- bird -----\tstudent_club",
    "1449": "SELECT m.first_name, m.last_name, m.major_name FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id WHERE e.cost > 100 GROUP BY m.first_name, m.last_name, m.major_name HAVING MAX(e.cost) > 100;\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.state, zip_code.short_state FROM zip_code JOIN attendance ON zip_code.zip_code = attendance.zip JOIN event ON event.event_date = attendance.event_date WHERE event.type = 'fundraiser' AND event.status = 'completed' GROUP BY zip_code.city, zip_code.state, zip_code.short_state HAVING COUNT(*) > 40;\t----- bird -----\tstudent_club",
    "1451": "SELECT member_id, SUM(cost) AS total_cost FROM expense WHERE COUNT(event_id) > 1 GROUP BY member_id ORDER BY total_cost DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1452": "SELECT AVG(cost) AS average_amount_paid FROM expense WHERE link_to_member NOT IN (SELECT member_id FROM member WHERE position = 'Member');\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM event WHERE cost < (SELECT AVG(cost) FROM budget WHERE category = 'Parking');\t----- bird -----\tstudent_club",
    "1454": "SELECT SUM(cost) / COUNT(event_id) * 100 AS percentage FROM expense WHERE event_status = 'Meeting';\t----- bird -----\tstudent_club",
    "1455": "SELECT MAX(cost) AS max_cost FROM expense WHERE expense_description = 'Water, chips, cookies';\t----- bird -----\tstudent_club",
    "1456": "SELECT m.first_name, m.last_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id WHERE b.event_status ='spent' GROUP BY m.member_id ORDER BY total_spent DESC LIMIT 5;\t----- bird -----\tstudent_club",
    "1457": "SELECT m.first_name, m.phone FROM member m WHERE m.zip = (SELECT zip FROM zip_code WHERE type = 'zip' AND city = 'New York' AND county = 'New York' AND state = 'NY' AND short_state = 'NY') AND m.position = 'President' AND m.t_shirt_size = 'L' AND m.phone LIKE '%123%' AND m.phone LIKE '%456%' AND m.phone LIKE '%789%';\t----- bird -----\tstudent_club",
    "1458": "SELECT SUM(state = 'New Jersey') / COUNT(position = 'Member') AS new_jersey_percentage, SUM(state = 'Vermont') / COUNT(position = 'Member') AS vermont_percentage FROM member;\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major WHERE major_id = (SELECT major_id FROM member WHERE member_id = (SELECT member_id FROM attendance WHERE link_to_event = 'event_id'));\t----- bird -----\tstudent_club",
    "1460": "SELECT m.first_name, m.last_name, i.amount FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN income i ON e.link_to_budget = i.link_to_budget WHERE e.expense_description = 'Water, Veggie tray, supplies' GROUP BY m.first_name, m.last_name ORDER BY m.first_name, m.last_name LIMIT 1;\t----- bird -----\tstudent_club",
    "1461": "SELECT m.last_name, m.phone FROM member m WHERE m.link_to_major = 'Elementary Education';\t----- bird -----\tstudent_club",
    "1462": "SELECT category FROM budget WHERE event_id = 'January Speaker';\t----- bird -----\tstudent_club",
    "1463": "SELECT event_name FROM event WHERE type = 'Food';\t----- bird -----\tstudent_club",
    "1464": "SELECT member_id, first_name, last_name, amount FROM member WHERE date_received = '2019-09-09' AND amount IS NOT NULL;\t----- bird -----\tstudent_club",
    "1465": "SELECT category FROM budget WHERE expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "1466": "SELECT first_name, last_name, college FROM member WHERE position = 'Secretary';\t----- bird -----\tstudent_club",
    "1467": "SELECT e.event_name, SUM(b.spent) AS total_spent FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE b.category = 'Speaker Gifts' GROUP BY e.event_id;\t----- bird -----\tstudent_club",
    "1468": "SELECT zip_code FROM zip_code WHERE city = 'Garrett Gerke';\t----- bird -----\tstudent_club",
    "1469": "SELECT first_name, last_name, position FROM member WHERE zip = 28092 AND link_to_major ='major_id';\t----- bird -----\tstudent_club",
    "1470": "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS ratio_of_eur_to_czk FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT CustomerID, Segment, Currency FROM customers WHERE Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT AVG(Consumption) AS average_monthly_consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'SME' AND Year(Date) = 2013);\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT c.CustomerID, SUM(t.Amount) AS total_amount, COUNT(t.TransactionID) AS transaction_count FROM customers c JOIN gasstations gs ON c.CustomerID = gs.CustomerID JOIN transactions_1k t ON c.CustomerID = t.CustomerID AND gs.GasStationID = t.GasStationID WHERE c.Segment = 'CZK' AND t.Date BETWEEN '20110101' AND '20111231' GROUP BY c.CustomerID ORDER BY total_amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT COUNT(*) FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM transactions_1k WHERE Year = 2012 AND Consumption < 30000);\t----- bird -----\tdebit_card_specializing",
    "1476": "[SQL] SELECT SUM(amount) AS total_amount FROM transactions_1k WHERE yearmonth.CustomerID = transactions_1k.CustomerID AND yearmonth.Date BETWEEN '201201' AND '201212' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '201201%' AND yearmonth.Date NOT LIKE '201212%' AND yearmonth.Date NOT LIKE '\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT MAX(Consumption) AS max_consumption FROM yearmonth WHERE Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment, MAX(Consumption) AS max_consumption FROM yearmonth GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT MAX(Consumption) AS max_consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'Czech Republic');\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT MAX(Consumption) AS max_consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'SME' AND YEAR(Date) = 2013);\t----- bird -----\tdebit_card_specializing",
    "1481": "WITH -- Calculate the annual average consumption of customers with the least amount of consumption paid in CZK for 2013 annual_average_consumption AS ( SELECT c.CustomerID, AVG(t.Amount) AS annual_average_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE YEAR(t.Date) = 2013 AND c.Segment = 'SME' GROUP BY c.CustomerID ), -- Calculate the annual average consumption of customers with the least amount of consumption paid in CZK for 2013 for LAM lam_annual_average_consumption AS ( SELECT c.CustomerID, AVG(t.Amount) AS annual_average_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE YEAR(t.Date) = 2013 AND c.Segment = 'LAM' GROUP BY c.CustomerID ), -- Calculate the annual average consumption of customers with the least amount of consumption paid in CZK for 2013 for KAM kam_annual_average_consumption AS ( SELECT c.CustomerID, AVG(t.Amount) AS annual_average_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE YEAR(t.Date) = 2013 AND c.Segment = 'KAM' GROUP BY c.CustomerID ), -- Calculate the difference in annual average consumption between SME and LAM sme_lam_difference AS ( SELECT annual_average_consumption.CustomerID, annual_average_consumption.annual_average_consumption, lam_annual_average_consumption.annual_average_consumption FROM annual_average_consumption JOIN lam_annual_average_consumption ON annual_average_consumption.CustomerID = lam_annual_average_consumption.CustomerID ), -- Calculate the difference in annual average consumption between LAM and KAM lam_kam_difference AS ( SELECT annual_average_consumption.CustomerID, annual_average_consumption.annual_average_consumption, kam_annual_average_consumption.annual_average_consumption FROM annual_average_consumption JOIN kam_annual_average_consumption ON annual_average_consumption.CustomerID = kam_annual_average_consumption.CustomerID ), -- Calculate the difference in annual average consumption between KAM and SME kam_sme_difference AS ( SELECT annual_average_consumption.CustomerID, annual_average_consumption.annual_average_consumption, sme_annual_average_consumption.annual_average_consumption FROM annual_average_consumption JOIN sme_annual_average_consumption ON annual_average_consumption.CustomerID = sme_annual_average_consumption.CustomerID ) -- Calculate the final difference in annual average consumption final_difference AS ( SELECT MAX(sme_lam_difference.annual_average_consumption - lam_kam_difference.annual_average_consumption) AS sme_lam_difference, MAX(lam_kam_difference.annual_average_consumption - kam_sme_difference.annual_average_consumption) AS lam_kam_difference, MAX(kam_sme_difference.annual_average_consumption - sme_lam_difference.annual_average_consumption) AS kam_sme_difference FROM sme_lam_difference JOIN lam_kam_difference ON sme_lam_difference.CustomerID = lam_kam_difference.CustomerID JOIN kam_sme_difference ON lam_kam_difference.CustomerID = kam_sme_difference.CustomerID ) SELECT sme_lam_difference, lam_kam_difference, kam_sme_difference FROM final_difference;\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment, (SUM(CASE WHEN YearMonth.Date >= '2012-01-01' AND YearMonth.Date <= '2013-01-01' THEN Amount ELSE 0 END) - SUM(CASE WHEN YearMonth.Date >= '2013-01-01' AND YearMonth.Date <= '2012-01-01' THEN Amount ELSE 0 END)) / SUM(Amount) AS percentage_increase FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE transactions_1k.Date >= '2012-01-01' AND transactions_1k.Date <= '2013-01-01' GROUP BY Segment ORDER BY percentage_increase DESC;\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT SUM(amount) FROM transactions_1k WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT COUNT(*) FROM gasstations WHERE Segment = 'discount' AND Country IN ('CZE', 'SVK');\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT SUM(consumption) AS total_consumption FROM yearmonth WHERE CustomerID = 7 AND date = '201304';\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) AS CZK_pay, SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS EUR_pay FROM transactions_1k WHERE Currency IN ('CZK', 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT c.CustomerID, c.Segment, c.Currency, MAX(t1k.Amount) AS max_amount FROM customers c JOIN gasstations gs ON c.Segment = gs.Segment JOIN transactions_1k t1k ON c.CustomerID = t1k.CustomerID AND gs.GasStationID = t1k.GasStationID WHERE c.Currency = 'Euro' AND t1k.Date = '201310' GROUP BY c.CustomerID, c.Segment, c.Currency ORDER BY max_amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT c.CustomerID, SUM(t.Amount) AS total_consumption FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN gasstations gs ON t.GasStationID = gs.GasStationID JOIN products p ON t.ProductID = p.ProductID WHERE t.Date >= '2022-01-01' AND t.Date <= '2022-12-31' GROUP BY c.CustomerID ORDER BY total_consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT SUM(transactions_1k.Amount) AS total_consumption FROM transactions_1k WHERE transactions_1k.Date = '201305' AND transactions_1k.CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'KAM');\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT COUNT(*) FROM transactions_1k WHERE Amount > 46.73 AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM');\t----- bird -----\tdebit_card_specializing",
    "1491": "WITH gas_stations_by_country AS ( SELECT g.Country, COUNT(*) AS num_gas_stations FROM gasstations g GROUP BY g.Country ), value_for_money_gas_stations AS ( SELECT g.Country, COUNT(*) AS num_value_for_money_gas_stations FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID JOIN products p ON t.ProductID = p.ProductID JOIN yearmonth y ON t.Date = y.Date WHERE t.Amount > 100 AND p.Price > 100 AND y.Consumption > 100 GROUP BY g.Country ), total_value_for_money_gas_stations AS ( SELECT g.Country, SUM(num_value_for_money_gas_stations) AS total_num_value_for_money_gas_stations FROM gas_stations_by_country g JOIN value_for_money_gas_stations vfm ON g.Country = vfm.Country GROUP BY g.Country ) SELECT t.Country, t.total_num_value_for_money_gas_stations FROM total_value_for_money_gas_stations t ORDER BY t.total_num_value_for_money_gas_stations DESC;\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT AVG(percentage_of_kam_pays_in_euros) AS average_percentage_of_kam_pays_in_euros FROM (SELECT (SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) / SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END)) * 100 AS percentage_of_kam_pays_in_euros FROM transactions_1k GROUP BY CustomerID) AS subquery;\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT COUNT(*) FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '20120201') AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT COUNT(*) / (SELECT COUNT(*) FROM gasstations WHERE Country = 'Slovakia') * 100 AS percentage_premium FROM gasstations WHERE Segment = 'premium';\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT MAX(Consumption) AS max_popularity FROM yearmonth WHERE date = '201309';\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT Segment, MAX(Amount) AS max_amount FROM transactions_1k WHERE Date = '201309' GROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT MAX(Consumption) AS max_consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '201206' AND Amount = (SELECT MAX(Amount) FROM transactions_1k WHERE Date = '201206'));\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT MAX(Consumption) AS max_consumption FROM yearmonth WHERE Date LIKE '2012-01-01%';\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT MAX(consumption) AS max_consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Amount > 1000 AND Currency = 'EUR');\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT products.Description FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' AND yearmonth.Consumption IS NOT NULL;\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT gasstations.Country FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.Date = yearmonth.Date WHERE transactions_1k.Date = '201306' AND transactions_1k.CustomerID = yearmonth.CustomerID;\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT gasstations.ChainID, gasstations.Country, products.Description, transactions_1k.Amount, transactions_1k.Price FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Amount > 100 AND transactions_1k.Price > 100 AND transactions_1k.Date >= '2022-01-01' AND transactions_1k.Date <= '2022-12-31' GROUP BY gasstations.ChainID, gasstations.Country, products.Description HAVING MAX(transactions_1k.Amount) > 100 AND MAX(transactions_1k.Price) > 100;\t----- bird -----\tdebit_card_specializing",
    "1503": "[SQL] SELECT products.Description FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '2023-01-01' AND transactions_1k.Time = '12:00:00' AND transactions_1k.Amount = 100 AND transactions_1k.Price = 100 AND transactions_1k.GasStationID = 1 AND transactions_1k.CardID = 1 AND transactions_1k.CustomerID = 1 AND transactions_1k.ProductID = 1 AND transactions_1k.Date = '202\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT AVG(price) AS avg_price FROM transactions_1k WHERE YEAR(date) = 2012 AND MONTH(date) = 1;\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT COUNT(*) FROM transactions_1k WHERE Currency = 'EUR' AND YearMonth.Consumption > 1000 AND YearMonth.CustomerID IN (SELECT CustomerID FROM customers);\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT products.Description FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' GROUP BY products.Description;\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT MAX(Date) AS max_date FROM transactions_1k WHERE GasStationID = 11;\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT COUNT(*) FROM transactions_1k WHERE Country = 'CZE' AND Price > 1000;\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT COUNT(*) FROM transactions_1k WHERE Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT AVG(price) AS average_price FROM transactions_1k WHERE Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT AVG(price) AS average_price FROM transactions_1k WHERE currency = 'EUR' AND customer_id IN (SELECT customer_id FROM yearmonth WHERE date = '2022-01-01');\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT MAX(amount) AS max_amount FROM transactions_1k WHERE date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT gasstations.Country, transactions_1k.Date, transactions_1k.Amount FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE transactions_1k.Date = '2012-08-25' AND transactions_1k.Amount > 0 GROUP BY gasstations.Country, transactions_1k.Date ORDER BY gasstations.Country, transactions_1k.Date DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT \"Segment\" FROM \"customers\" WHERE \"CustomerID\" = (SELECT MAX(\"CustomerID\") FROM \"transactions_1k\" WHERE \"Date\" = '2012/8/24' AND \"Time\" = '16:25:00');\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT Segment FROM customers WHERE Date = '2012-08-23' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT SUM(amount) FROM transactions_1k WHERE amount > 0 AND currency = 'CZK' AND time < '13:00:00' AND date = '2012-08-26';\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = (SELECT MIN(CustomerID) FROM transactions_1k);\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT Country FROM gasstations WHERE ChainID = (SELECT ChainID FROM gasstations WHERE Country = (SELECT Country FROM customers WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012/8/24 12:42:00')));\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT ProductID FROM transactions_1k WHERE Date = '2012/8/23 21:20:00' AND Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT SUM(amount) AS total_expenses FROM transactions_1k WHERE CustomerID = (SELECT CustomerID FROM yearmonth WHERE Date = '2012-08-24');\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'CZE');\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT MAX(Amount) AS max_amount FROM transactions_1k WHERE Date = '201306' AND Currency = 'USD';\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT \"Segment\" FROM \"customers\" WHERE \"CustomerID\" = 667467;\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT MAX(amount) AS max_amount FROM transactions_1k WHERE date = '2012-08-24' AND customer_id = (SELECT customer_id FROM yearmonth WHERE date = '2012-08-24');\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT COUNT(*) / (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') * 100 AS percentage FROM transactions_1k WHERE Date = '2012-08-25' AND Currency = 'EUR';\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (consumption_2013 - consumption_2012) / consumption_2012 AS decrease_rate FROM yearmonth WHERE CustomerID = 123456 AND Date = '2012/8/25';\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT gasstation.ChainID, SUM(transactions_1k.Amount) AS total_revenue FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID GROUP BY gasstations.ChainID ORDER BY total_revenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT AVG(premium_percentage) AS average_premium_percentage FROM (SELECT 100.0 * COUNT(*) / SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS premium_percentage FROM transactions_1k WHERE Country = 'SVK' AND Segment = 'premium') AS subquery;\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT SUM(amount) FROM transactions_1k WHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT products.Description, SUM(transactions_1k.Amount) AS total_sales FROM products JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY total_sales DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT TOP 1 CustomerID, MAX(Amount) AS max_amount, Currency FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID GROUP BY CustomerID, Currency ORDER BY max_amount DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT c.Country, MAX(t1.Amount) AS max_amount FROM transactions_1k t1 JOIN gasstations gs ON t1.GasStationID = gs.GasStationID JOIN products p ON t1.ProductID = p.ProductID JOIN customers c ON t1.CustomerID = c.CustomerID WHERE p.ProductID = 2 AND gs.Segment = 'Expensive' AND c.Segment = 'Expensive' GROUP BY c.Country;\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT c.CustomerID, SUM(t.Amount) AS total_amount, SUM(t.Amount * p.Price) AS total_revenue FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID JOIN products p ON t.ProductID = p.ProductID WHERE t.Date = '201208' AND t.Amount > 29 GROUP BY c.CustomerID;\t----- bird -----\tdebit_card_specializing"
}